udg_IGRAET = nil ---@type force
udg_PreD_Dop = 0 ---@type number integer
udg_PreD_Osn = 0 ---@type number integer
udg_BaZa_PrEd = 0 ---@type number integer
udg_TEXT = nil ---@type texttag
udg_player_hero = {} ---@type unit
udg_Multiboard = nil ---@type multiboard
udg_KripsLill = nil ---@type unit
udg_Time_second = 0 ---@type number integer
udg_Time_minuts = 0 ---@type number integer
udg_Time_hours = 0 ---@type number integer
udg_Liver = nil ---@type force
udg_SkillLevel = 0 ---@type number integer
udg_Les_Luna = {} ---@type weathereffect
udg_Dammy_Portal = {} ---@type unit
udg_Timer_Nomera_Volni = nil ---@type timer
udg_Wave_Unit_tape = {} ---@type number[] integer
udg_number_of_otriad_mobs = 0 ---@type number integer
udg_Nomer_samoi_volni = 0 ---@type number integer
udg_Igraet_Igrok = {} ---@type boolean[]
udg_Duel_Igrok = {} ---@type force
udg_herounit = {} ---@type unit
udg_Hero_Duel_Raund = 0 ---@type number integer
udg_hero_Duel_Unit = {} ---@type unit
udg_Shield_Marshal_Cater = nil ---@type unit
udg_DrenorBugaiRage = 0 ---@type number integer
udg_Gnev_Caster = nil ---@type unit
udg_GrorTar = nil ---@type unit
udg_Weave = {} ---@type unit
udg_Weave_group = nil ---@type group
udg_Weave_point = {} ---@type location
udg_Items_massive = {} ---@type number[] integer
udg_Integer_item = 0 ---@type number integer
udg_Timer_Check_Forkreep_system = nil ---@type timer
udg_Integer_kreeps_system_check = 0 ---@type number integer
udg_hash = nil ---@type hashtable
udg_Heroes_Types = {} ---@type number[] integer
udg_Random_Hero_Count = 0 ---@type number integer
udg_Total_Heroes_Count = 0 ---@type number integer
udg_Heroes_Random_Data = {} ---@type number[] integer
udg_Hero_Random_Local = 0 ---@type number integer
udg_Gruppa_Igrokov_Vibor_Heroev = nil ---@type force
udg_RealAngelPovorotLocalEitiArena = 0 ---@type number real
udg_IntegerEitiAbilityPassiveSkill = 0 ---@type number integer
udg_EEETTTIII = nil ---@type unit
udg_Timer_Eiti_Areni = nil ---@type timer
udg_Gruppa_HeroUnitov_Geroev = nil ---@type group
udg_Integer_Kolvo_Giznei_EtitArena = {} ---@type number[] integer
udg_OtriadPortalUnitsEitiArena = nil ---@type group
udg_BossFightWeather = nil ---@type weathereffect
udg_Unit_FilterMostNearUnit = nil ---@type unit
udg_DamageGroup = nil ---@type group
udg_spirits_of_water = {} ---@type number[] integer
udg_preloader = nil ---@type unit
udg_Integer_spirits_of_water = 0 ---@type number integer
udg_HandleBoard = nil ---@type leaderboard
udg_DrenorBugaiRageTimer = nil ---@type timer
udg_GrogTarRageTimer = nil ---@type timer
udg_GroupRandomUnitFromGroup = nil ---@type group
udg_Dialog_Select_Difficult = nil ---@type dialog
udg_Dialog_Button_Select_Difficult = {} ---@type button
udg_Difficult_Level = 0 ---@type number integer
udg_TimerMobsAttackBase = nil ---@type timer
udg_Players_Enemy_Group = nil ---@type force
udg_count = 0 ---@type number integer
udg_Timer_Dialog_Select = nil ---@type timer
udg_SimError = nil ---@type sound
udg_strCounter = "" ---@type string
udg_ColorString = {} ---@type string
udg_selectedunittest = nil ---@type unit
udg_Reks = 0 ---@type number integer
udg_Temp_Real = {} ---@type number[] real
udg_Temp_Player = {} ---@type player
udg_Peski = 0 ---@type number integer
udg_Temp_Unit = nil ---@type unit
udg_Temp_Integer = {} ---@type number[] integer
udg_bb = 0 ---@type number integer
udg_Players_Ally_Group = nil ---@type force
udg_CountPlayers = 0 ---@type number integer
udg_PlayerNumberInMB = {} ---@type number[] integer
udg_MultiBoard = nil ---@type multiboard
udg_MutliBoardHeroIcon = {} ---@type string
udg_CountPlayersInTeam1 = 0 ---@type number integer
udg_PlayerGroup = nil ---@type force
udg_MultiBoard_Player_Kills_Count = {} ---@type number[] integer
udg_MultiBoard_Player_Deaths_Count = {} ---@type number[] integer
udg_MultiBoard_Player_Assist_Count = {} ---@type number[] integer
udg_Hero_Respawn_Time = {} ---@type number[] integer
udg_Potion_Effect = {} ---@type string
udg_Potion_Type = {} ---@type string
udg_Potion_Heal_Amount = {} ---@type number[] integer
udg_Potion_Size = {} ---@type number[] real
udg_BossFightWeather2 = nil ---@type weathereffect
udg_TimerDialog_Nomera_Volni = nil ---@type timerdialog
udg_Integer_Item_Recipe_Level = 0 ---@type number integer
udg_Show_Item_Link_Text = false ---@type boolean
udg_ttt = nil ---@type timer
udg_ShopSelectedForPlayer = {} ---@type unit
udg_ShopEffectSelectedForPlayer = {} ---@type effect
udg_Weather = {} ---@type weathereffect
udg_DummyHeroPick = {} ---@type unit
udg_IsMinimapPingGuardsAttacked = false ---@type boolean
udg_CountGuardsExorcist = 0 ---@type number integer
udg_IsGameEnd = false ---@type boolean
udg_PortalCastersMagi = nil ---@type group
udg_BaseVisionFogModifier = {} ---@type fogmodifier
udg_InitMapTimer = nil ---@type timer
udg_HintsTimerPlayer = {} ---@type timer
udg_Drenor_Bull_Hint_Player_Group = nil ---@type force
udg_Hero_Player_Color_String = {} ---@type string
udg_Game_Sound = {} ---@type sound
udg_Player_Taken_Damage_Current = {} ---@type number[] real
udg_Player_Taken_Damage_All = {} ---@type number[] real
udg_Player_Received_Damage_Current = {} ---@type number[] real
udg_System_ShowAbil_And_Items_Hint = {} ---@type boolean[]
udg_TimerShowAndFlushAllPlayerDmg = nil ---@type timer
udg_Boolean_Player_Fast_Purchase = {} ---@type boolean[]
udg_Temp_Location = {} ---@type location
udg_Boolean_Is_Rain = false ---@type boolean
udg_Timer_Lightning_Strike_Weather = nil ---@type timer
udg_Integer_Creep_On_Line_Spawn = {} ---@type number[] integer
udg_Group_Pickeds_Refrence_Panel = {} ---@type group
udg_Time_Before_Creeps_Spawn = 0 ---@type number real
udg_Count_Players_Fast_Wave_Start = 0 ---@type number integer
udg_Is_Player_Fast_Wave_Start = {} ---@type boolean[]
udg_Is_Fast_Wave_Start_On_Off = false ---@type boolean
udg_Count_Item_Tips_Message = {} ---@type number[] integer
udg_Rune_On_Base_Dummy = {} ---@type unit
udg_Rune_On_Base_Dummy_X = {} ---@type number[] real
udg_Rune_On_Base_Dummy_Y = {} ---@type number[] real
udg_Rune_On_Base_Effect = {} ---@type effect
udg_Rune_On_Base_Effect_String = {} ---@type string
udg_Timer_Hint_About_Fast_Start = nil ---@type timer
udg_Bonus_Gold_ChestGold = {} ---@type number[] integer
udg_Wave_Progress_for_MultiBoard = 0 ---@type number integer
udg_Is_Eiti_Arena_Already_Go = false ---@type boolean
udg_Fire_Boss_Turn_On = false ---@type boolean
udg_Temp_Group = {} ---@type group
udg_TempPoint = nil ---@type location
udg_Is_Rune_On_Position = {} ---@type boolean[]
udg_Rune_Position_X = {} ---@type number[] integer
udg_Rune_Position_Y = {} ---@type number[] integer
udg_Timer_Arrow_Pointer_Guide = nil ---@type timer
udg_Arrow_Pointer_Guide_X = {} ---@type number[] integer
udg_Arrow_Pointer_Guide_Y = {} ---@type number[] integer
udg_Arrow_Pointer_Guide_Angle = {} ---@type number[] integer
udg_Arrow_Pointer_Guide_Unit = {} ---@type unit
udg_Arrow_Pointer_Guide_Effect = {} ---@type effect
udg_Arrow_Pointer_Guide_Count = 0 ---@type number integer
udg_EnergyWallX = {} ---@type number[] integer
udg_EnergyWallY = {} ---@type number[] integer
udg_EnergyWallAngle = {} ---@type number[] integer
udg_EnergyWallCount = {} ---@type number[] integer
udg_EnergyWallUnit = {} ---@type unit
udg_EnergyWallBlock = {} ---@type destructable
udg_BeornDenHouse = {} ---@type unit
udg_BeornBoss = nil ---@type unit
udg_Ishod_S_Beornami = 0 ---@type number integer
udg_BeornBossFightEnd = false ---@type boolean
udg_IsBeronsFightWin = false ---@type boolean
udg_Marshal = nil ---@type unit
udg_gdamageallnew = nil ---@type group
udg_Hero_Randomed = nil ---@type unit
udg_Is_Player_Got_Randomed = {} ---@type boolean[]
gg_rct_Miners_Arena = nil ---@type rect
gg_rct_Duel_left = nil ---@type rect
gg_rct_Portal_1_down_left_Start = nil ---@type rect
gg_rct_Base = nil ---@type rect
gg_rct_Portal_baza = nil ---@type rect
gg_rct_Les_2 = nil ---@type rect
gg_rct_Les_1 = nil ---@type rect
gg_rct_Pogoda_v_bolote = nil ---@type rect
gg_rct_cast_magi = nil ---@type rect
gg_rct_Event_Bonus_Etei_arena_1 = nil ---@type rect
gg_rct_Portal_3_up_Start = nil ---@type rect
gg_rct_Portal_2_down_right_Start = nil ---@type rect
gg_rct_Oblstb_Tavern = nil ---@type rect
gg_rct_Hero_Arena = nil ---@type rect
gg_rct_les_3 = nil ---@type rect
gg_rct_Respawn_Heroes = nil ---@type rect
gg_rct_Oblast_Teleporta_Arena_Bot = nil ---@type rect
gg_rct_Oblast_Teleporta_Arena_Top = nil ---@type rect
gg_rct_6 = nil ---@type rect
gg_rct_BaseDopVision = nil ---@type rect
gg_rct_Center_Vision = nil ---@type rect
gg_rct_Portal_Attack_Dummy_Left = nil ---@type rect
gg_rct_Portal_Attack_Dummy_Right = nil ---@type rect
gg_rct_Portal_Attack_Dummy_Top = nil ---@type rect
gg_rct_Duel_right = nil ---@type rect
gg_rct_PlayableAreaVisionDeBag = nil ---@type rect
gg_rct_MinusVision1 = nil ---@type rect
gg_rct_Les1_Dop1 = nil ---@type rect
gg_rct_Les1_Dop2 = nil ---@type rect
gg_rct_Beorn_Boss_Area = nil ---@type rect
gg_rct_Beorn_Boss_Area2 = nil ---@type rect
gg_cam_Kamera_na_taverni = nil ---@type camerasetup
gg_cam_Kamera_glavnoi_bazi = nil ---@type camerasetup
gg_cam_Camera_Eiti_Arena = nil ---@type camerasetup
gg_cam_Camera_Eiti_Arena_Top_Portal = nil ---@type camerasetup
gg_cam_Camera_Eiti_Arena_Bot_Portal = nil ---@type camerasetup
gg_cam_Camera_miners_arena = nil ---@type camerasetup
gg_cam_Camera_BossFightStart = nil ---@type camerasetup
gg_cam_Camera_Duel_Arena = nil ---@type camerasetup
gg_cam_Kamera_cast_magi = nil ---@type camerasetup
gg_cam_Camera_Beorn_Den1 = nil ---@type camerasetup
gg_cam_Camera_Beorn_Den2 = nil ---@type camerasetup
gg_cam_Camera_Beorn_Den3 = nil ---@type camerasetup
gg_cam_Camera_Beorn_Den4 = nil ---@type camerasetup
gg_cam_Camera_Beorn_Den5 = nil ---@type camerasetup
gg_cam_Camera_Beorn_Den6 = nil ---@type camerasetup
gg_snd_HeroFirelordYesAttack1 = nil ---@type sound
gg_snd_HeroFirelordYesAttack2 = nil ---@type sound
gg_snd_HeroFirelordYesAttack3 = nil ---@type sound
gg_snd_HeroFirelordWarcry1 = nil ---@type sound
gg_snd_HeroLichReady1 = nil ---@type sound
gg_snd_HeroLichYesAttack1 = nil ---@type sound
gg_snd_HeroLichYesAttack2 = nil ---@type sound
gg_snd_HeroLichYesAttack3 = nil ---@type sound
gg_snd_DeathSound1 = nil ---@type sound
gg_snd_KnightNoGold1 = nil ---@type sound
gg_snd_KnightInventoryFull1 = nil ---@type sound
gg_snd_HeroStep1 = nil ---@type sound
gg_snd_HeroStep2 = nil ---@type sound
gg_snd_HeroStep3 = nil ---@type sound
gg_snd_HeroStep4 = nil ---@type sound
gg_snd_HuntressYesAttack4 = nil ---@type sound
gg_snd_WardenAttackEffort1 = nil ---@type sound
gg_snd_AlchemistChemicalBurst1 = nil ---@type sound
gg_snd_AlchemistMorph1 = nil ---@type sound
gg_snd_HeroAlchemistYesAttack1 = nil ---@type sound
gg_trg_Animation_test_____________________u = nil ---@type trigger
gg_trg_Players_Start_Script = nil ---@type trigger
gg_trg_InitMap = nil ---@type trigger
gg_trg_InitMapStage2 = nil ---@type trigger
gg_trg_System_Spells_Load = nil ---@type trigger
gg_trg_Items_Preload = nil ---@type trigger
gg_trg_Igrok_Massiv_Save = nil ---@type trigger
gg_trg_Load_Vsiakoe = nil ---@type trigger
gg_trg_Igrok_Massiv_Liver = nil ---@type trigger
gg_trg_Messager = nil ---@type trigger
gg_trg_Create_TExttags_about_Shops = nil ---@type trigger
gg_trg_InitHashtable = nil ---@type trigger
gg_trg_Save_Sounds = nil ---@type trigger
gg_trg_HandleCounter = nil ---@type trigger
gg_trg_Set_Chlenix = nil ---@type trigger
gg_trg_Set_Energy_Walls = nil ---@type trigger
gg_trg_Test_System_Anvar = nil ---@type trigger
gg_trg_test_eiti_arena = nil ---@type trigger
gg_trg_Nachalo_Eiti_aren = nil ---@type trigger
gg_trg_HeroDeadonEitiArena = nil ---@type trigger
gg_trg__PortalCheckTop = nil ---@type trigger
gg_trg__PortalCheckBot = nil ---@type trigger
gg_trg_Eiti_Dead = nil ---@type trigger
gg_trg_LinkItemsInit = nil ---@type trigger
gg_trg_ItemPickedUp = nil ---@type trigger
gg_trg_ChargesConnecting = nil ---@type trigger
gg_trg_Remove_Dammi_Items = nil ---@type trigger
gg_trg_Save_Items_Cost = nil ---@type trigger
gg_trg_Ice_Boss = nil ---@type trigger
gg_trg_Ice_Wall = nil ---@type trigger
gg_trg_Ice_Storm = nil ---@type trigger
gg_trg_Ice_Rain = nil ---@type trigger
gg_trg_Cold_Punishment = nil ---@type trigger
gg_trg_Ice_Restoration = nil ---@type trigger
gg_trg_Turn_on_Fire_Bossfight = nil ---@type trigger
gg_trg_test_fire_boss = nil ---@type trigger
gg_trg_BossStart = nil ---@type trigger
gg_trg_FlameSpells = nil ---@type trigger
gg_trg_Fire_Circle = nil ---@type trigger
gg_trg_Fire_Meteor = nil ---@type trigger
gg_trg_Upgrade_Summons = nil ---@type trigger
gg_trg_____________________________________007 = nil ---@type trigger
gg_trg_UseBeornSpells = nil ---@type trigger
gg_trg_Start_Beorn_Den = nil ---@type trigger
gg_trg_Beorn_Push = nil ---@type trigger
gg_trg_Beorn_Stomp = nil ---@type trigger
gg_trg_HeroUnitGameSave = nil ---@type trigger
gg_trg_INIT = nil ---@type trigger
gg_trg_Pick_Hero_Upgrade = nil ---@type trigger
gg_trg_Pick_Hero = nil ---@type trigger
gg_trg_Hero_Dead = nil ---@type trigger
gg_trg_asd = nil ---@type trigger
gg_trg_Start_Duel = nil ---@type trigger
gg_trg_Hero_Death_On_Duel = nil ---@type trigger
gg_trg_Test_plus_wwave_number = nil ---@type trigger
gg_trg_Timer_Check = nil ---@type trigger
gg_trg_go_mochiytb_portal = nil ---@type trigger
gg_trg_Start_game = nil ---@type trigger
gg_trg_StartWave = nil ---@type trigger
gg_trg_MobsAttackBase = nil ---@type trigger
gg_trg_TeleportStuckedCreeps = nil ---@type trigger
gg_trg_vhodit_v_zony = nil ---@type trigger
gg_trg_Add_Gold_System_Receiving_Gold_for_Creeps = nil ---@type trigger
gg_trg_Init_System_Receiving_Gold_for_Creeps = nil ---@type trigger
gg_trg_Init_System_Receiving_Experience_for_Creeps = nil ---@type trigger
gg_trg_Add_Experience_System_Receiving_Experience_for_Creeps = nil ---@type trigger
gg_trg_Test_Potion_System = nil ---@type trigger
gg_trg_Init_Potion_System = nil ---@type trigger
gg_trg_Mob_Dead_Create_Potion = nil ---@type trigger
gg_trg_Check_Potion_Picked_Up = nil ---@type trigger
gg_trg_InitSystem = nil ---@type trigger
gg_trg_EnterUnit = nil ---@type trigger
gg_trg_AddDamage = nil ---@type trigger
gg_trg_TimeTalisman = nil ---@type trigger
gg_trg_Take_Paladin_Armor = nil ---@type trigger
gg_trg_Take_Archimagus_Staff = nil ---@type trigger
gg_trg_Lost_Charged_Staff_of_Lightning = nil ---@type trigger
gg_trg_Blood_Bow = nil ---@type trigger
gg_trg_Balance_Ring = nil ---@type trigger
gg_trg_Armageddon_Staff = nil ---@type trigger
gg_trg_Sargeras_Crown = nil ---@type trigger
gg_trg_Lost_Sargeras_Crown = nil ---@type trigger
gg_trg_Take_Sargeras_Crown = nil ---@type trigger
gg_trg_Lost_Archimagus_Armor = nil ---@type trigger
gg_trg_Take_Archimagus_Armor = nil ---@type trigger
gg_trg_Sorcerers_Talisman_Cast = nil ---@type trigger
gg_trg_Sorcerers_Talisman = nil ---@type trigger
gg_trg_Sorcerers_Talisman_Dead_Unit = nil ---@type trigger
gg_trg_Orc_Banner = nil ---@type trigger
gg_trg_Devil_Axe = nil ---@type trigger
gg_trg_Devil_Axe_Kill_Unit = nil ---@type trigger
gg_trg_Tokugawas_Katan_Kill_Unit = nil ---@type trigger
gg_trg_Tokugawas_Katan = nil ---@type trigger
gg_trg_Kings_Armor = nil ---@type trigger
gg_trg_Steel_Bib = nil ---@type trigger
gg_trg_Archimagus_Staff = nil ---@type trigger
gg_trg_Isidors_Scepter = nil ---@type trigger
gg_trg_Detached_Shield_Use = nil ---@type trigger
gg_trg_Cuirass_of_Invulnerable_Use2 = nil ---@type trigger
gg_trg_Cuirass_of_Invulnerable_Use = nil ---@type trigger
gg_trg_Detached_Shield_and_Cuirass_of_Invulnerable_Issue_Order = nil ---@type trigger
gg_trg_Lost_Cuirass_of_Invulnerable = nil ---@type trigger
gg_trg_Take_Cuirass_of_Invulnerable = nil ---@type trigger
gg_trg_Fire_Staff = nil ---@type trigger
gg_trg_Demon_Axe = nil ---@type trigger
gg_trg_Demon_Axe_Kill_Unit = nil ---@type trigger
gg_trg_Boots_Rescue = nil ---@type trigger
gg_trg_Astral_Staff = nil ---@type trigger
gg_trg_Healer_Staff = nil ---@type trigger
gg_trg_Magic_Amulet = nil ---@type trigger
gg_trg_Blood_Dagger = nil ---@type trigger
gg_trg_Agility_Blade = nil ---@type trigger
gg_trg_Bone_Staff_Set_Summon_Ability_Level = nil ---@type trigger
gg_trg_Novice_Amulet = nil ---@type trigger
gg_trg_Glove_of_Andromat = nil ---@type trigger
gg_trg_Glove_of_Midas = nil ---@type trigger
gg_trg_Ring_illusionist = nil ---@type trigger
gg_trg_Armor_Skill = nil ---@type trigger
gg_trg_Steel_gauntlets = nil ---@type trigger
gg_trg_Dagger_Cruelty = nil ---@type trigger
gg_trg_Heroes_more_attacked_priority_when_guards = nil ---@type trigger
gg_trg_Player_Fast_Purchase_System = nil ---@type trigger
gg_trg_Show_hint_abount_hints = nil ---@type trigger
gg_trg_Show_Hint_Abount_Items = nil ---@type trigger
gg_trg_Hint_About_Random = nil ---@type trigger
gg_trg_Show_hint_abount_reference_panel = nil ---@type trigger
gg_trg_Show_Ability_Learn = nil ---@type trigger
gg_trg_System_Personal_Items_Buy_Item = nil ---@type trigger
gg_trg_System_Personal_Items_Pick_Up_Item = nil ---@type trigger
gg_trg_no_attack = nil ---@type trigger
gg_trg_Select_Refrence_Panel = nil ---@type trigger
gg_trg_ShopAnimation = nil ---@type trigger
gg_trg_ShopStopAnimation = nil ---@type trigger
gg_trg_RedMarkToUnit = nil ---@type trigger
gg_trg_UnSelectedDummyRedMark = nil ---@type trigger
gg_trg_SpecEffect_on_Casters = nil ---@type trigger
gg_trg_PortalSpecEffects = nil ---@type trigger
gg_trg_Gates_Start_Animation = nil ---@type trigger
gg_trg_PlayerEnterGameCommand = nil ---@type trigger
gg_trg_PlayerUseSpellGameCommand = nil ---@type trigger
gg_trg_GuardsExorcistDead = nil ---@type trigger
gg_trg_PauseUnitWhenDefeat = nil ---@type trigger
gg_trg_PauseUnitWhenWin = nil ---@type trigger
gg_trg_GameEndWin = nil ---@type trigger
gg_trg_Respawn_trees_Init = nil ---@type trigger
gg_trg_Respawn_trees = nil ---@type trigger
gg_trg_Day_Weather = nil ---@type trigger
gg_trg_Sky_Morning = nil ---@type trigger
gg_trg_Sky_Day = nil ---@type trigger
gg_trg_Night_Weather = nil ---@type trigger
gg_trg_Sky_Evening = nil ---@type trigger
gg_trg_Sky_Night = nil ---@type trigger
gg_trg_Lightnings_Weather_Effect_Rainy = nil ---@type trigger
gg_trg_Periodic_Rune_Creation = nil ---@type trigger
gg_trg_Rune_PickedUp = nil ---@type trigger
gg_trg_Initialization_MultiBoard = nil ---@type trigger
gg_trg_Hero_MultiBoard_LvlUp = nil ---@type trigger
gg_trg_Time_Check_and_Player_Gold_for_MultiBoard = nil ---@type trigger
gg_trg_Reincarnation_Skeletons = nil ---@type trigger
gg_trg_BossSkeletRaise = nil ---@type trigger
gg_trg_BossSkeletSkillActiv = nil ---@type trigger
gg_trg_Fire_Arrow = nil ---@type trigger
gg_trg_Use_UnholyFrenzy_and_Fire_Arrow = nil ---@type trigger
gg_trg_Use_UnholyFrenzy_and_Fire_Arrow_____________________u = nil ---@type trigger
gg_trg_Create_Tombstone = nil ---@type trigger
gg_trg_ZombieExploadDeath = nil ---@type trigger
gg_trg_Damned_Soul = nil ---@type trigger
gg_trg_Use_PowerofHorror_and_Curse_and_Slam_and_Dumned_Soul = nil ---@type trigger
gg_trg_Throw_Meat = nil ---@type trigger
gg_trg_Earth_Clap = nil ---@type trigger
gg_trg_Use_PowerofHorror_and_Curse_and_Slam_____________________u = nil ---@type trigger
gg_trg_Ghoul_Jump = nil ---@type trigger
gg_trg_BurrowStrike = nil ---@type trigger
gg_trg_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump = nil ---@type trigger
gg_trg_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul______________________u = nil ---@type trigger
gg_trg_BeetleCorpseBurrowCast = nil ---@type trigger
gg_trg_BeetleCorpseBurrow = nil ---@type trigger
gg_trg_Cocoon_Creation = nil ---@type trigger
gg_trg_Poisonous_Spittle_Cast = nil ---@type trigger
gg_trg_Holes_Of_Grave_Diggers_Debug_Kill = nil ---@type trigger
gg_trg_Holes_Of_Grave_Diggers_Cast = nil ---@type trigger
gg_trg_Nerub_Spider = nil ---@type trigger
gg_trg_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger = nil ---@type trigger
gg_trg_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Old = nil ---@type trigger
gg_trg_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDa_____________________u = nil ---@type trigger
gg_trg_Damned_Ents_Reincarnation = nil ---@type trigger
gg_trg_Rage_of_Decay = nil ---@type trigger
gg_trg_Use_ThrowStone_and_TurnIntoEnt = nil ---@type trigger
gg_trg_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay = nil ---@type trigger
gg_trg_Troll_Dead_Remove_Bugs = nil ---@type trigger
gg_trg_Boss_Troll_Entangle_Throw = nil ---@type trigger
gg_trg_Use_Berserk_and_BerserkBoss = nil ---@type trigger
gg_trg_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle = nil ---@type trigger
gg_trg_Aspect_of_Magic_Protection = nil ---@type trigger
gg_trg_Remove_Effects_From_Bosses = nil ---@type trigger
gg_trg_Metka_Dreneev = nil ---@type trigger
gg_trg_Fast_Attack = nil ---@type trigger
gg_trg_Bash_Attack = nil ---@type trigger
gg_trg_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack = nil ---@type trigger
gg_trg_Magic_Fire = nil ---@type trigger
gg_trg_Blink_Strike = nil ---@type trigger
gg_trg_Damned_Skull = nil ---@type trigger
gg_trg_Weakness_of_Emptiness = nil ---@type trigger
gg_trg_Essence_of_Emptiness = nil ---@type trigger
gg_trg_Piercing_Strike = nil ---@type trigger
gg_trg_Victim_Search = nil ---@type trigger
gg_trg_Black_Hole = nil ---@type trigger
gg_trg_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar = nil ---@type trigger
gg_trg_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH = nil ---@type trigger
gg_trg_Weakness = nil ---@type trigger
gg_trg_Pain_Sphere = nil ---@type trigger
gg_trg_Astral_Dispersal = nil ---@type trigger
gg_trg_Infernal_Ram = nil ---@type trigger
gg_trg_Fiery_Blow = nil ---@type trigger
gg_trg_Bloody_Jump = nil ---@type trigger
gg_trg_Blood_Absorption = nil ---@type trigger
gg_trg_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u = nil ---@type trigger
gg_trg_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4 = nil ---@type trigger
gg_trg_Hatred_of_fire = nil ---@type trigger
gg_trg_set_fire = nil ---@type trigger
gg_trg_set_fire_2 = nil ---@type trigger
gg_trg_the_creation_of_the_image = nil ---@type trigger
gg_trg_fiery_explosions = nil ---@type trigger
gg_trg_Breathoffire = nil ---@type trigger
gg_trg_Wall_of_Fire = nil ---@type trigger
gg_trg_Fire_Explosions = nil ---@type trigger
gg_trg_BossStomp = nil ---@type trigger
gg_trg_Mark_of_Fire = nil ---@type trigger
gg_trg_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire = nil ---@type trigger
gg_trg_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp = nil ---@type trigger
gg_trg_Power_of_Skeletons = nil ---@type trigger
gg_trg_Water_Elemental_Load = nil ---@type trigger
gg_trg_Init_kreeps = nil ---@type trigger
gg_trg_spirits_of_water_dead = nil ---@type trigger
gg_trg_Skill_Gertva = nil ---@type trigger
gg_trg_Opening_Streams = nil ---@type trigger
gg_trg_Water_Explosion = nil ---@type trigger
gg_trg_Tsunami = nil ---@type trigger
gg_trg_Guardsman_Load = nil ---@type trigger
gg_trg_Protective_Stand_Switch = nil ---@type trigger
gg_trg_Learn_Fighting_Skills = nil ---@type trigger
gg_trg_Ram_Board = nil ---@type trigger
gg_trg_Warcry = nil ---@type trigger
gg_trg_____________________________________001 = nil ---@type trigger
gg_trg_____________________________________001______________________2 = nil ---@type trigger
gg_trg_Drenor_Bull_Show_Rage_____________________u = nil ---@type trigger
gg_trg_Drenor_Bull_Load = nil ---@type trigger
gg_trg_Drenor_Bull_Show_Hint = nil ---@type trigger
gg_trg_Drenor_Bull_Show_Rage = nil ---@type trigger
gg_trg_Axe_Throw = nil ---@type trigger
gg_trg_Violent_Roar = nil ---@type trigger
gg_trg_upgrade_Berserk = nil ---@type trigger
gg_trg_Learn_Spell_Rage = nil ---@type trigger
gg_trg_GrogTarDead = nil ---@type trigger
gg_trg_attack_hero_Rage = nil ---@type trigger
gg_trg_kill_hero_Rage = nil ---@type trigger
gg_trg_Sniatie_Rage = nil ---@type trigger
gg_trg_Timer_Rage = nil ---@type trigger
gg_trg_Illusionist_Load = nil ---@type trigger
gg_trg_Reflection = nil ---@type trigger
gg_trg_Illusory_Attack = nil ---@type trigger
gg_trg_Summon_Illusions_with_Reflection = nil ---@type trigger
gg_trg_Illusions_with_Phantoms_Dead = nil ---@type trigger
gg_trg_BladeMaster_Load = nil ---@type trigger
gg_trg_Dissection = nil ---@type trigger
gg_trg_Whirlwind = nil ---@type trigger
gg_trg_Imboweling = nil ---@type trigger
gg_trg_Master_of_Lightnings_Load = nil ---@type trigger
gg_trg_Thundercloud = nil ---@type trigger
gg_trg_Power_of_Lightnings = nil ---@type trigger
gg_trg_Electric_Field = nil ---@type trigger
gg_trg_Storm = nil ---@type trigger
gg_trg_Respawnlol = nil ---@type trigger
gg_trg_Ranger_Load = nil ---@type trigger
gg_trg_MultiShotSwitch = nil ---@type trigger
gg_trg_Learn_Release_of_Arrows = nil ---@type trigger
gg_trg_Release_of_Arrows = nil ---@type trigger
gg_trg_Dexterity_of_the_Ranger = nil ---@type trigger
gg_trg_Healer_Load = nil ---@type trigger
gg_trg_Good_Healing = nil ---@type trigger
gg_trg_Spiritual_Communication = nil ---@type trigger
gg_trg_Curing_Light = nil ---@type trigger
gg_trg_Guardian_Angel = nil ---@type trigger
gg_trg_Paladin_Load = nil ---@type trigger
gg_trg_Spiral_of_Light = nil ---@type trigger
gg_trg_Keeper_Seal = nil ---@type trigger
gg_trg_Light_Hammer = nil ---@type trigger
gg_trg_God_Hand = nil ---@type trigger
gg_trg_Stone_Guard_Load = nil ---@type trigger
gg_trg_Boulder_Throw = nil ---@type trigger
gg_trg_Earth_Shiver = nil ---@type trigger
gg_trg_Learn_Stone_Armor = nil ---@type trigger
gg_trg_Rock_Strike = nil ---@type trigger
gg_trg_Archdruid_Load = nil ---@type trigger
gg_trg_Energy_of_Nature = nil ---@type trigger
gg_trg_Life_Chain = nil ---@type trigger
gg_trg_Ent_Creation = nil ---@type trigger
gg_trg_Nature_Wrath = nil ---@type trigger
gg_trg_Falling_Star = nil ---@type trigger
gg_trg_Moon_Chackram = nil ---@type trigger
gg_trg_Moon_Wind = nil ---@type trigger
gg_trg_Night_Heart = nil ---@type trigger
gg_trg_MoonWarrior_Load = nil ---@type trigger
gg_trg_Ancient_Communication = nil ---@type trigger
gg_trg_Learn_Power_of_Ancestors = nil ---@type trigger
gg_trg_Switch_Power_of_Ancestors = nil ---@type trigger
gg_trg_Earth_Split = nil ---@type trigger
gg_trg_Ancient_Help = nil ---@type trigger
gg_trg_SpiritBreaker_Load = nil ---@type trigger
gg_trg_Power_of_Ancestors_Switch = nil ---@type trigger
gg_trg_Dash = nil ---@type trigger
gg_trg_Dagger_Throw = nil ---@type trigger
gg_trg_Kara_Justice = nil ---@type trigger
gg_trg_Warden_Load = nil ---@type trigger
gg_trg_Strength_Fist = nil ---@type trigger
gg_trg_Fighting_Impact = nil ---@type trigger
gg_trg_Learn_Marshal_Armor = nil ---@type trigger
gg_trg_Illusive_Army = nil ---@type trigger
gg_trg_Marshal_Load = nil ---@type trigger
gg_trg_Chain_Lightning = nil ---@type trigger
gg_trg_Magic_Trap = nil ---@type trigger
gg_trg_Remove_Lightning_Form_Dead_Units = nil ---@type trigger
gg_trg_EnergyWave = nil ---@type trigger
gg_trg_Magic_Epicenter = nil ---@type trigger
gg_trg_Load_ArchMage = nil ---@type trigger
gg_trg_Toxic_Field = nil ---@type trigger
gg_trg_Poison_Bomb = nil ---@type trigger
gg_trg_Learn_Ogre_Rage = nil ---@type trigger
gg_trg_Potion_of_Growth = nil ---@type trigger
gg_trg_Load_Alchemist = nil ---@type trigger
gg_trg_Case_Shot = nil ---@type trigger
gg_trg_Learn_Fire_Position = nil ---@type trigger
gg_trg_Dwarf_Cannon = nil ---@type trigger
gg_trg_Load_Sniper = nil ---@type trigger
gg_trg_InitSkills_damage = nil ---@type trigger
gg_trg_Vhodit_v_zony_damage = nil ---@type trigger
gg_trg_Passive_Skill_Storm_bolt = nil ---@type trigger
gg_trg_The_power_of_the_rider = nil ---@type trigger
gg_trg_Collision_flight = nil ---@type trigger
gg_trg_Thunderous_Storm = nil ---@type trigger
gg_trg_Hero_Dead______________________4 = nil ---@type trigger
gg_trg_Hero_Dead______________________3 = nil ---@type trigger
gg_trg_Hero_Dead______________________2 = nil ---@type trigger
gg_trg_Hero_Dead_____________________u = nil ---@type trigger
gg_unit_o003_0028 = nil ---@type unit
gg_unit_o003_0027 = nil ---@type unit
gg_unit_n00Y_0102 = nil ---@type unit
gg_unit_h01K_0100 = nil ---@type unit
gg_unit_e002_0106 = nil ---@type unit
gg_unit_e002_0108 = nil ---@type unit
gg_unit_n00Y_0101 = nil ---@type unit
gg_unit_h01K_0109 = nil ---@type unit


function InitGlobals()
	local i = 0 ---@type number integer
	udg_IGRAET = CreateForce()
	udg_Multiboard = CreateMultiboard()
	udg_Liver = CreateForce()
	udg_Timer_Nomera_Volni = CreateTimer()
	i = 0
	while(true) do
		if ((i > 1)) then break end
		udg_Igraet_Igrok[i] = false
		udg_Duel_Igrok[i] = CreateForce()
		udg_Heroes_Random_Data[i] = 0
		udg_Integer_Kolvo_Giznei_EtitArena[i] = 0
		udg_ColorString[i] = ""
		udg_Temp_Real[i] = 0
		udg_Temp_Integer[i] = 0
		udg_PlayerNumberInMB[i] = 0
		udg_MutliBoardHeroIcon[i] = ""
		udg_MultiBoard_Player_Kills_Count[i] = 0
		udg_MultiBoard_Player_Deaths_Count[i] = 0
		udg_MultiBoard_Player_Assist_Count[i] = 0
		udg_Hero_Respawn_Time[i] = 0
		udg_Potion_Effect[i] = ""
		udg_Potion_Type[i] = ""
		udg_Potion_Heal_Amount[i] = 0
		udg_Potion_Size[i] = 0
		udg_HintsTimerPlayer[i] = CreateTimer()
		udg_Hero_Player_Color_String[i] = ""
		udg_Player_Taken_Damage_Current[i] = 0
		udg_Player_Taken_Damage_All[i] = 0
		udg_Player_Received_Damage_Current[i] = 0
		udg_System_ShowAbil_And_Items_Hint[i] = true
		udg_Boolean_Player_Fast_Purchase[i] = false
		udg_Integer_Creep_On_Line_Spawn[i] = 0
		udg_Group_Pickeds_Refrence_Panel[i] = CreateGroup()
		udg_Is_Player_Fast_Wave_Start[i] = false
		udg_Count_Item_Tips_Message[i] = 0
		udg_Rune_On_Base_Dummy_X[i] = 0
		udg_Rune_On_Base_Dummy_Y[i] = 0
		udg_Rune_On_Base_Effect_String[i] = ""
		udg_Bonus_Gold_ChestGold[i] = 0
		udg_Temp_Group[i] = CreateGroup()
		udg_Is_Rune_On_Position[i] = false
		udg_Rune_Position_X[i] = 0
		udg_Rune_Position_Y[i] = 0
		udg_Arrow_Pointer_Guide_X[i] = 0
		udg_Arrow_Pointer_Guide_Y[i] = 0
		udg_Arrow_Pointer_Guide_Angle[i] = 0
		udg_EnergyWallX[i] = 0
		udg_EnergyWallY[i] = 0
		udg_EnergyWallAngle[i] = 0
		udg_EnergyWallCount[i] = 0
		udg_Is_Player_Got_Randomed[i] = false
		i = i + 1
	end
	udg_Weave_group = CreateGroup()
	udg_Timer_Check_Forkreep_system = CreateTimer()
	udg_Gruppa_Igrokov_Vibor_Heroev = CreateForce()
	udg_Timer_Eiti_Areni = CreateTimer()
	udg_Gruppa_HeroUnitov_Geroev = CreateGroup()
	udg_OtriadPortalUnitsEitiArena = CreateGroup()
	udg_DamageGroup = CreateGroup()
	udg_DrenorBugaiRageTimer = CreateTimer()
	udg_GrogTarRageTimer = CreateTimer()
	udg_GroupRandomUnitFromGroup = CreateGroup()
	udg_Dialog_Select_Difficult = DialogCreate()
	udg_TimerMobsAttackBase = CreateTimer()
	udg_Players_Enemy_Group = CreateForce()
	udg_Timer_Dialog_Select = CreateTimer()
	udg_Players_Ally_Group = CreateForce()
	udg_MultiBoard = CreateMultiboard()
	udg_PlayerGroup = CreateForce()
	udg_ttt = CreateTimer()
	udg_PortalCastersMagi = CreateGroup()
	udg_InitMapTimer = CreateTimer()
	udg_Drenor_Bull_Hint_Player_Group = CreateForce()
	udg_TimerShowAndFlushAllPlayerDmg = CreateTimer()
	udg_Timer_Lightning_Strike_Weather = CreateTimer()
	udg_Timer_Hint_About_Fast_Start = CreateTimer()
	udg_Timer_Arrow_Pointer_Guide = CreateTimer()
	udg_gdamageallnew = CreateGroup()
end

function InitSounds()
	gg_snd_HeroFirelordYesAttack1 = CreateSound("Units\\Creeps\\HeroFlameLord\\HeroFirelordYesAttack1.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroFirelordYesAttack1, "HeroFireLordYesAttack")
	SetSoundDuration(gg_snd_HeroFirelordYesAttack1, $984)
	gg_snd_HeroFirelordYesAttack2 = CreateSound("Units\\Creeps\\HeroFlameLord\\HeroFirelordYesAttack2.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroFirelordYesAttack2, "HeroFireLordYesAttack")
	SetSoundDuration(gg_snd_HeroFirelordYesAttack2, $DAF)
	gg_snd_HeroFirelordYesAttack3 = CreateSound("Units\\Creeps\\HeroFlameLord\\HeroFirelordYesAttack3.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroFirelordYesAttack3, "HeroFireLordYesAttack")
	SetSoundDuration(gg_snd_HeroFirelordYesAttack3, $AD1)
	gg_snd_HeroFirelordWarcry1 = CreateSound("Units\\Creeps\\HeroFlameLord\\HeroFirelordWarcry1.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroFirelordWarcry1, "HeroFireLordWarcry")
	SetSoundDuration(gg_snd_HeroFirelordWarcry1, 5072)
	gg_snd_HeroLichReady1 = CreateSound("Units\\Undead\\HeroLich\\HeroLichReady1.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroLichReady1, "HeroLichReady")
	SetSoundDuration(gg_snd_HeroLichReady1, 4337)
	gg_snd_HeroLichYesAttack1 = CreateSound("Units\\Undead\\HeroLich\\HeroLichYesAttack1.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroLichYesAttack1, "HeroLichYesAttack")
	SetSoundDuration(gg_snd_HeroLichYesAttack1, $A4C)
	gg_snd_HeroLichYesAttack2 = CreateSound("Units\\Undead\\HeroLich\\HeroLichYesAttack2.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroLichYesAttack2, "HeroLichYesAttack")
	SetSoundDuration(gg_snd_HeroLichYesAttack2, $9D4)
	gg_snd_HeroLichYesAttack3 = CreateSound("Units\\Undead\\HeroLich\\HeroLichYesAttack3.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroLichYesAttack3, "HeroLichYesAttack")
	SetSoundDuration(gg_snd_HeroLichYesAttack3, $872)
	gg_snd_DeathSound1 = CreateSound("Units\\Creeps\\Bandit\\BanditYesAttack1.wav", false, false, false, $A, $A, "DefaultEAXON")
	SetSoundParamsFromLabel(gg_snd_DeathSound1, "BanditYesAttack")
	SetSoundDuration(gg_snd_DeathSound1, $4EE)
	gg_snd_KnightNoGold1 = CreateSound("Sound\\Interface\\Warning\\Human\\KnightNoGold1.wav", false, false, false, $A, $A, "")
	SetSoundParamsFromLabel(gg_snd_KnightNoGold1, "NoGoldHuman")
	SetSoundDuration(gg_snd_KnightNoGold1, $57D)
	gg_snd_KnightInventoryFull1 = CreateSound("Sound\\Interface\\Warning\\Human\\KnightInventoryFull1.wav", false, false, false, $A, $A, "")
	SetSoundParamsFromLabel(gg_snd_KnightInventoryFull1, "InventoryFullHuman")
	SetSoundDuration(gg_snd_KnightInventoryFull1, $3E8)
	gg_snd_HeroStep1 = CreateSound("Sound\\Units\\Footsteps\\HeroStep1.wav", false, true, true, $A, $A, "SpellsEAX")
	SetSoundParamsFromLabel(gg_snd_HeroStep1, "HeroCinematicStep")
	SetSoundDuration(gg_snd_HeroStep1, 947)
	gg_snd_HeroStep2 = CreateSound("Sound\\Units\\Footsteps\\HeroStep2.wav", false, true, true, $A, $A, "SpellsEAX")
	SetSoundParamsFromLabel(gg_snd_HeroStep2, "HeroCinematicStep")
	SetSoundDuration(gg_snd_HeroStep2, 697)
	gg_snd_HeroStep3 = CreateSound("Sound\\Units\\Footsteps\\HeroStep3.wav", false, true, true, $A, $A, "SpellsEAX")
	SetSoundParamsFromLabel(gg_snd_HeroStep3, "HeroCinematicStep")
	SetSoundDuration(gg_snd_HeroStep3, 599)
	gg_snd_HeroStep4 = CreateSound("Sound\\Units\\Footsteps\\HeroStep4.wav", false, true, true, $A, $A, "SpellsEAX")
	SetSoundParamsFromLabel(gg_snd_HeroStep4, "HeroCinematicStep")
	SetSoundDuration(gg_snd_HeroStep4, $E5)
	gg_snd_HuntressYesAttack4 = CreateSound("Units\\NightElf\\Huntress\\HuntressYesAttack4.wav", false, false, false, FourCC('d'), $A, "DefaultEAXON")
	SetSoundParamsFromLabel(gg_snd_HuntressYesAttack4, "HuntressYesAttack")
	SetSoundDuration(gg_snd_HuntressYesAttack4, $55E)
	SetSoundChannel(gg_snd_HuntressYesAttack4, 0)
	gg_snd_WardenAttackEffort1 = CreateSound("Units\\NightElf\\HeroWarden\\WardenAttackEffort1.wav", false, true, true, $A, $A, "CombatSoundsEAX")
	SetSoundParamsFromLabel(gg_snd_WardenAttackEffort1, "WardenAttack")
	SetSoundDuration(gg_snd_WardenAttackEffort1, $54E)
	gg_snd_AlchemistChemicalBurst1 = CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\AlchemistChemicalBurst1.wav", false, false, false, $A, $A, "DefaultEAXON")
	SetSoundParamsFromLabel(gg_snd_AlchemistChemicalBurst1, "GoblinAlchemistMorph")
	SetSoundDuration(gg_snd_AlchemistChemicalBurst1, $801)
	SetSoundChannel(gg_snd_AlchemistChemicalBurst1, 0)
	gg_snd_AlchemistMorph1 = CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\AlchemistMorph1.wav", false, false, false, $A, $A, "DefaultEAXON")
	SetSoundParamsFromLabel(gg_snd_AlchemistMorph1, "GoblinAlchemistMorphAlternate")
	SetSoundDuration(gg_snd_AlchemistMorph1, $67F)
	SetSoundChannel(gg_snd_AlchemistMorph1, 0)
	gg_snd_HeroAlchemistYesAttack1 = CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\HeroAlchemistYesAttack1.wav", false, false, false, $A, $A, "DefaultEAXON")
	SetSoundParamsFromLabel(gg_snd_HeroAlchemistYesAttack1, "HEROGoblinALCHEMISTYesAttack")
	SetSoundDuration(gg_snd_HeroAlchemistYesAttack1, $942)
	SetSoundChannel(gg_snd_HeroAlchemistYesAttack1, 0)
end

function CreateNeutralPassiveBuildings()
	local p = Player($F) ---@type player
	local u ---@type unit
	local unitID ---@type number integer
	local t ---@type trigger
	local life ---@type number real
	u = CreateUnit(p, FourCC('h00S'), 2144., -5184., 225.)
	u = CreateUnit(p, FourCC('h002'), 2176., -5760., 270.)
	u = CreateUnit(p, FourCC('h001'), 2144., -5312., 225.)
	u = CreateUnit(p, FourCC('n004'), 5120., 4032., 270.)
	SetUnitColor(u, ConvertPlayerColor(6))
	u = CreateUnit(p, FourCC('n002'), 4736., 4032., 270.)
	SetUnitColor(u, ConvertPlayerColor(0))
	u = CreateUnit(p, FourCC('n005'), 4928., 3648., 270.)
	SetUnitColor(u, ConvertPlayerColor(1))
	u = CreateUnit(p, FourCC('h003'), 2176., -6016., 270.)
	u = CreateUnit(p, FourCC('h000'), 2176., -5504., 180.)
	u = CreateUnit(p, FourCC('h00D'), 2176., -6272., 225.)
	u = CreateUnit(p, FourCC('h00Y'), 2176., -4992., 270.)
end

function CreateNeutralPassive()
	local p = Player($F) ---@type player
	local u ---@type unit
	local unitID ---@type number integer
	local t ---@type trigger
	local life ---@type number real
	u = CreateUnit(p, FourCC('h00I'), 2651.1, -8998.3, 132.101)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 2737.1, -8462., 222.901)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 2208., -7950.8, 240.89)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 1508.5, -7799.1, 271.992)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 761.9, -7825.8, 270.894)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 108.7, -7927.1, 297.652)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), -341.9, -8450.2, 346.764)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), -340.3, -9154.9, 16.661)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), -237.5, -9776.7, 2.615)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	gg_unit_o003_0027 = CreateUnit(p, FourCC('o003'), 1521.1, -5441.2, 222.91)
	gg_unit_o003_0028 = CreateUnit(p, FourCC('o003'), 1033.8, -5956.6, 42.425)
	u = CreateUnit(p, FourCC('h00I'), 1358.5, -9356.4, 270.)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 1357.3, -9244.8, 270.)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	gg_unit_h01K_0100 = CreateUnit(p, FourCC('h01K'), 1245.4, -5377.6, 270.73)
	gg_unit_n00Y_0101 = CreateUnit(p, FourCC('n00Y'), 1589.7, -5683.3, 173.645)
	SetUnitState(gg_unit_n00Y_0101, UNIT_STATE_MANA, 0)
	gg_unit_n00Y_0102 = CreateUnit(p, FourCC('n00Y'), 939.4, -5689.8, .69)
	SetUnitState(gg_unit_n00Y_0102, UNIT_STATE_MANA, 0)
	gg_unit_e002_0106 = CreateUnit(p, FourCC('e002'), 1007.4, -5428.7, 316.082)
	SetUnitState(gg_unit_e002_0106, UNIT_STATE_MANA, 0)
	gg_unit_e002_0108 = CreateUnit(p, FourCC('e002'), 1526.5, -5954.4, 138.892)
	SetUnitState(gg_unit_e002_0108, UNIT_STATE_MANA, 0)
	gg_unit_h01K_0109 = CreateUnit(p, FourCC('h01K'), 1268., -6027.5, 89.41)
end

function CreatePlayerBuildings()
end

function CreatePlayerUnits()
end

function CreateAllUnits()
	CreateNeutralPassiveBuildings()
	CreatePlayerBuildings()
	CreateNeutralPassive()
	CreatePlayerUnits()
end

function CreateRegions()
	local we ---@type weathereffect
	gg_rct_Miners_Arena = Rect(-4128., 1952., -2496., 3904.)
	gg_rct_Duel_left = Rect(1216., 2784., 1472., 3040.)
	gg_rct_Portal_1_down_left_Start = Rect(-1920., -9536., -1536., -9184.)
	gg_rct_Base = Rect(-288., -7488., 2560., -4128.)
	gg_rct_Portal_baza = Rect(896., -6016., 1408., -5408.)
	gg_rct_Les_2 = Rect(-3616., -8160., -512., 320.)
	gg_rct_Les_1 = Rect(-320., -10656., 2432., -7904.)
	gg_rct_Pogoda_v_bolote = Rect(3936., -6944., 5280., -3296.)
	we = AddWeatherEffect(gg_rct_Pogoda_v_bolote, FourCC('FDgh'))
	EnableWeatherEffect(we, true)
	gg_rct_cast_magi = Rect(832., -6112., 1664., -5312.)
	gg_rct_Event_Bonus_Etei_arena_1 = Rect(3488., -256., 5088., 1824.)
	gg_rct_Portal_3_up_Start = Rect(1024., -1120., 1408., -736.)
	gg_rct_Portal_2_down_right_Start = Rect(3392., -9376., 3744., -8992.)
	gg_rct_Oblstb_Tavern = Rect(4352., 3360., 5504., 4448.)
	gg_rct_Hero_Arena = Rect(1152., 2048., 2944., 3968.)
	gg_rct_les_3 = Rect(2592., -7040., 3872., -1280.)
	gg_rct_Respawn_Heroes = Rect(1056., -6624., 1408., -6112.)
	gg_rct_Oblast_Teleporta_Arena_Bot = Rect(4224., -32., 4416., 160.)
	gg_rct_Oblast_Teleporta_Arena_Top = Rect(4224., 1408., 4416., 1600.)
	gg_rct_6 = Rect(-1792., 1888., 544., 3840.)
	gg_rct_BaseDopVision = Rect(672., -4160., 1664., -3680.)
	gg_rct_Center_Vision = Rect(960., -5760., 1088., -5632.)
	gg_rct_Portal_Attack_Dummy_Left = Rect(-2112., -9696., -1952., -9536.)
	gg_rct_Portal_Attack_Dummy_Right = Rect(3584., -9600., 3744., -9440.)
	gg_rct_Portal_Attack_Dummy_Top = Rect(1120., -576., 1280., -416.)
	gg_rct_Duel_right = Rect(2592., 2784., 2848., 3040.)
	gg_rct_PlayableAreaVisionDeBag = Rect(-3680., -10400., 5504., 4544.)
	gg_rct_MinusVision1 = Rect(-3712., 800., -2048., 4640.)
	gg_rct_Les1_Dop1 = Rect(2400., -9184., 2912., -8096.)
	gg_rct_Les1_Dop2 = Rect(160., -7936., 2208., -7648.)
	gg_rct_Beorn_Boss_Area = Rect(800., -10368., 1952., -9248.)
	gg_rct_Beorn_Boss_Area2 = Rect(992., -10272., 1856., -9376.)
end

function CreateCameras()
	gg_cam_Kamera_na_taverni = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Kamera_na_taverni, 4928.7, 3881.5, .0)
	gg_cam_Kamera_glavnoi_bazi = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Kamera_glavnoi_bazi, 1240., -6378.1, .0)
	gg_cam_Camera_Eiti_Arena = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Eiti_Arena, 4255.9, 866.9, .0)
	gg_cam_Camera_Eiti_Arena_Top_Portal = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Eiti_Arena_Top_Portal, 4394.2, 1237.5, .0)
	gg_cam_Camera_Eiti_Arena_Bot_Portal = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Eiti_Arena_Bot_Portal, 4465.7, 342.3, .0)
	gg_cam_Camera_miners_arena = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_miners_arena, -3311.2, 2967.9, .0)
	gg_cam_Camera_BossFightStart = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_ROTATION, 180.9, .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_ANGLE_OF_ATTACK, 336.5, .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_BossFightStart, -608.2, 2881., .0)
	gg_cam_Camera_Duel_Arena = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Duel_Arena, 2139.4, 2853.8, .0)
	gg_cam_Kamera_cast_magi = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Kamera_cast_magi, 1268., -5714.3, .0)
	gg_cam_Camera_Beorn_Den1 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_ROTATION, 233.6, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_ANGLE_OF_ATTACK, 299.3, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_TARGET_DISTANCE, 1363.6, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den1, 1384., -9577.2, .0)
	gg_cam_Camera_Beorn_Den2 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_ROTATION, 297.9, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_ANGLE_OF_ATTACK, 300.3, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_TARGET_DISTANCE, 1363.6, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den2, 1240.7, -9620.8, .0)
	gg_cam_Camera_Beorn_Den3 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_ROTATION, 110.6, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_ANGLE_OF_ATTACK, 300.4, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_TARGET_DISTANCE, 1127., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den3, 562.8, -8241.1, .0)
	gg_cam_Camera_Beorn_Den4 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_ROTATION, 110.6, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_ANGLE_OF_ATTACK, 300.4, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_TARGET_DISTANCE, 1127., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den4, -15.3, -9035.4, .0)
	gg_cam_Camera_Beorn_Den5 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den5, 2191., -8224.1, .0)
	gg_cam_Camera_Beorn_Den6 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den6, 1474.8, -9613.2, .0)
end

---@param g group
---@return group
function CopyGroup(g)
	bj_groupAddGroupDest = CreateGroup()
	ForGroup(g, GroupAddGroupEnum)
	return bj_groupAddGroupDest
end

---@param u unit
---@param x number real
---@param y number real
---@param radius number real
---@param damage number real
---@param dbuilds boolean
---@param dmagicimmune boolean
---@param dally boolean
function DamageGroupOfUnit(u, x, y, radius, damage, dbuilds, dmagicimmune, dally)
	local g = CreateGroup() ---@type group
	local target ---@type unit
	GroupEnumUnitsInRange(g, x, y, radius, nil)
	while(true) do
		target = FirstOfGroup(g)
		if (target == nil) then break end
		if (dally and dbuilds) or (dally and not dbuilds and not IsUnitType(u, UNIT_TYPE_STRUCTURE)) or (IsUnitEnemy(target, GetOwningPlayer(u)) and dbuilds) or (IsUnitEnemy(target, GetOwningPlayer(u)) and not dbuilds and not IsUnitType(u, UNIT_TYPE_STRUCTURE)) then
			UnitDamageTarget(u, target, damage, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
		end
		GroupRemoveUnit(g, target)
	end
	GroupClear(g)
	DestroyGroup(g)
	target = nil
	g = nil
end

---@param g group
function KillSummonsAndIllusions(g)
	local Picked ---@type unit
	local id ---@type number integer
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		id = GetUnitTypeId(Picked)
		if ((IsUnitIllusion(Picked) or IsUnitType(Picked, UNIT_TYPE_SUMMONED)) or ((id == FourCC('h017')) or (id == FourCC('h01D')) or (id == FourCC('h01E')) or (id == FourCC('h01F')) or (id == FourCC('h01G')) or (id == FourCC('h01G')))) and id ~= FourCC('h00C') then
			KillUnit(Picked)
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
end

---@param g group
---@param Unit unit
function FilterMostNearUnit(g, Unit)
	local ufil ---@type unit
	local xu ---@type number real
	local yu ---@type number real
	local duU ---@type number real
	local x1U ---@type number real
	local y1U ---@type number real
	local d1UUF ---@type number real
	local X = GetUnitX(Unit) ---@type number real
	local Y = GetUnitY(Unit) ---@type number real
	while(true) do
		ufil = FirstOfGroup(g)
		if (ufil == nil) then break end
		if GetUnitState(ufil, UNIT_STATE_LIFE) > .405 and ufil ~= Unit and (IsUnitType(ufil, UNIT_TYPE_STRUCTURE) == false) and GetOwningPlayer(ufil) ~= GetOwningPlayer(Unit) then
			xu = GetUnitX(ufil)
			yu = GetUnitY(ufil)
			x1U = GetUnitX(udg_Unit_FilterMostNearUnit)
			y1U = GetUnitY(udg_Unit_FilterMostNearUnit)
			duU = SquareRoot((X - xu) * (X - xu) + (Y - yu) * (Y - yu))
			d1UUF = SquareRoot((X - x1U) * (X - x1U) + (Y - y1U) * (Y - y1U))
			if udg_Unit_FilterMostNearUnit == nil then
				udg_Unit_FilterMostNearUnit = ufil
			else
				if duU < d1UUF then
					udg_Unit_FilterMostNearUnit = ufil
				end
			end
		end
		GroupRemoveUnit(g, ufil)
	end
	GroupClear(g)
	DestroyGroup(g)
	g = nil
end

---@param id number integer
---@param level number integer
function AbilityPreload(id, level)
	UnitAddAbility(udg_preloader, id)
	SetUnitAbilityLevel(udg_preloader, id, level)
	UnitRemoveAbility(udg_preloader, id)
end

---@param s string
function EffectPreload(s)
	Preload(s)
end

---@param id number integer
function UnitPreload(id)
	KillUnit(CreateUnit(Player($F), id, -3000., -3000., .0))
end

---@param id number integer
function ItemPreload(id)
	RemoveItem(CreateItem(id, .0, .0))
end

function DestroyEffectWithWaitActions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 1) ---@type effect
	DestroyEffect(ef)
	ef = nil
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
end

---@param ef effect
---@param time number real
function DestroyEffectWithWait(ef, time)
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveEffectHandle(udg_hash, h, 1, ef)
	TimerStart(t, time, false, DestroyEffectWithWaitActions)
	t = nil
end

---@param target unit
---@param damage number integer
function SetAttackAbilityLevel(target, damage)
	local a100 ---@type number integer
	local a10 ---@type number integer
	local a1 ---@type number integer
	local una100 ---@type number integer
	local una10 ---@type number integer
	local una1 ---@type number integer
	local a ---@type number integer
	local una ---@type number integer
	local itog100 = 0 ---@type number integer
	local itog10 = 0 ---@type number integer
	local itog1 = 0 ---@type number integer
	local itog ---@type number integer
	if GetUnitAbilityLevel(target, FourCC('A07F')) <= 0 then
		UnitAddAbility(target, FourCC('A07F'))
		UnitAddAbility(target, FourCC('A07G'))
		UnitAddAbility(target, FourCC('A07I'))
		UnitAddAbility(target, FourCC('A09D'))
		UnitAddAbility(target, FourCC('A0E6'))
		UnitAddAbility(target, FourCC('A0E7'))
		UnitMakeAbilityPermanent(target, true, FourCC('A07F'))
		UnitMakeAbilityPermanent(target, true, FourCC('A07G'))
		UnitMakeAbilityPermanent(target, true, FourCC('A07I'))
		UnitMakeAbilityPermanent(target, true, FourCC('A09D'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0E6'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0E7'))
	end
	a100 = GetUnitAbilityLevel(target, FourCC('A07I'))
	a10 = GetUnitAbilityLevel(target, FourCC('A07G'))
	a1 = GetUnitAbilityLevel(target, FourCC('A07F'))
	una100 = GetUnitAbilityLevel(target, FourCC('A0E7'))
	una10 = GetUnitAbilityLevel(target, FourCC('A0E6'))
	una1 = GetUnitAbilityLevel(target, FourCC('A09D'))
	a = ((a100 - 1) * FourCC('d')) + ((a10 - 1) * $A) + a1 - 1
	una = ((una100 - 1) * FourCC('d')) + ((una10 - 1) * $A) + una1 - 1
	itog = a - una
	if itog + damage < $3E8 and itog + damage > -$3E8 then
		itog = itog + damage
		itog100 = (itog / FourCC('d'))
		itog10 = (itog - (itog100 * FourCC('d'))) / $A
		itog1 = itog - (itog100 * FourCC('d')) - (itog10 * $A)
		if itog100 >= 0 then
			SetUnitAbilityLevel(target, FourCC('A07I'), itog100 + 1)
			SetUnitAbilityLevel(target, FourCC('A0E7'), 1)
		else
			SetUnitAbilityLevel(target, FourCC('A0E7'), -itog100 + 1)
			SetUnitAbilityLevel(target, FourCC('A07I'), 1)
		end
		if itog10 >= 0 then
			SetUnitAbilityLevel(target, FourCC('A07G'), itog10 + 1)
			SetUnitAbilityLevel(target, FourCC('A0E6'), 1)
		else
			SetUnitAbilityLevel(target, FourCC('A0E6'), -itog10 + 1)
			SetUnitAbilityLevel(target, FourCC('A07G'), 1)
		end
		if itog1 >= 0 then
			SetUnitAbilityLevel(target, FourCC('A07F'), itog1 + 1)
			SetUnitAbilityLevel(target, FourCC('A09D'), 1)
		else
			SetUnitAbilityLevel(target, FourCC('A09D'), -itog1 + 1)
			SetUnitAbilityLevel(target, FourCC('A07F'), 1)
		end
	else
		if itog + damage >= $3E8 then
			SetUnitAbilityLevel(target, FourCC('A07I'), $A)
			SetUnitAbilityLevel(target, FourCC('A07G'), $A)
			SetUnitAbilityLevel(target, FourCC('A07F'), $A)
			SetUnitAbilityLevel(target, FourCC('A0E7'), 1)
			SetUnitAbilityLevel(target, FourCC('A0E6'), 1)
			SetUnitAbilityLevel(target, FourCC('A09D'), 1)
		end
		if itog + damage <= -$3E8 then
			SetUnitAbilityLevel(target, FourCC('A07I'), 1)
			SetUnitAbilityLevel(target, FourCC('A07G'), 1)
			SetUnitAbilityLevel(target, FourCC('A07F'), 1)
			SetUnitAbilityLevel(target, FourCC('A0E7'), $A)
			SetUnitAbilityLevel(target, FourCC('A0E6'), $A)
			SetUnitAbilityLevel(target, FourCC('A09D'), $A)
		end
	end
end

---@param target unit
---@param armor number integer
function SetArmorAbilityLevel(target, armor)
	local d100 ---@type number integer
	local d10 ---@type number integer
	local d1 ---@type number integer
	local und100 ---@type number integer
	local und10 ---@type number integer
	local und1 ---@type number integer
	local def ---@type number integer
	local undef ---@type number integer
	local itog100 = 0 ---@type number integer
	local itog10 = 0 ---@type number integer
	local itog1 = 0 ---@type number integer
	local itog ---@type number integer
	if GetUnitAbilityLevel(target, FourCC('A0AG')) <= 0 then
		UnitAddAbility(target, FourCC('A0AG'))
		UnitAddAbility(target, FourCC('A0AH'))
		UnitAddAbility(target, FourCC('A087'))
		UnitAddAbility(target, FourCC('A0AS'))
		UnitAddAbility(target, FourCC('A0AT'))
		UnitAddAbility(target, FourCC('A0D8'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0AG'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0AH'))
		UnitMakeAbilityPermanent(target, true, FourCC('A087'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0AS'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0AT'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0D8'))
	end
	d100 = GetUnitAbilityLevel(target, FourCC('A087'))
	d10 = GetUnitAbilityLevel(target, FourCC('A0AH'))
	d1 = GetUnitAbilityLevel(target, FourCC('A0AG'))
	und100 = GetUnitAbilityLevel(target, FourCC('A0D8'))
	und10 = GetUnitAbilityLevel(target, FourCC('A0AT'))
	und1 = GetUnitAbilityLevel(target, FourCC('A0AS'))
	def = ((d100 - 1) * FourCC('d')) + ((d10 - 1) * $A) + d1 - 1
	undef = ((und100 - 1) * FourCC('d')) + ((und10 - 1) * $A) + und1 - 1
	itog = def - undef
	if itog + armor < $3E8 and itog + armor > -$3E8 then
		itog = itog + armor
		itog100 = (itog / FourCC('d'))
		itog10 = (itog - (itog100 * FourCC('d'))) / $A
		itog1 = itog - (itog100 * FourCC('d')) - (itog10 * $A)
		if itog100 >= 0 then
			SetUnitAbilityLevel(target, FourCC('A087'), itog100 + 1)
			SetUnitAbilityLevel(target, FourCC('A0D8'), 1)
		else
			SetUnitAbilityLevel(target, FourCC('A0D8'), -itog100 + 1)
			SetUnitAbilityLevel(target, FourCC('A087'), 1)
		end
		if itog10 >= 0 then
			SetUnitAbilityLevel(target, FourCC('A0AH'), itog10 + 1)
			SetUnitAbilityLevel(target, FourCC('A0AT'), 1)
		else
			SetUnitAbilityLevel(target, FourCC('A0AT'), -itog10 + 1)
			SetUnitAbilityLevel(target, FourCC('A0AH'), 1)
		end
		if itog1 >= 0 then
			SetUnitAbilityLevel(target, FourCC('A0AG'), itog1 + 1)
			SetUnitAbilityLevel(target, FourCC('A0AS'), 1)
		else
			SetUnitAbilityLevel(target, FourCC('A0AS'), -itog1 + 1)
			SetUnitAbilityLevel(target, FourCC('A0AG'), 1)
		end
	else
		if itog + armor >= $3E8 then
			SetUnitAbilityLevel(target, FourCC('A087'), $A)
			SetUnitAbilityLevel(target, FourCC('A0AH'), $A)
			SetUnitAbilityLevel(target, FourCC('A0AG'), $A)
			SetUnitAbilityLevel(target, FourCC('A0D8'), 1)
			SetUnitAbilityLevel(target, FourCC('A0AT'), 1)
			SetUnitAbilityLevel(target, FourCC('A0AS'), 1)
		end
		if itog + armor <= -$3E8 then
			SetUnitAbilityLevel(target, FourCC('A087'), 1)
			SetUnitAbilityLevel(target, FourCC('A0AH'), 1)
			SetUnitAbilityLevel(target, FourCC('A0AG'), 1)
			SetUnitAbilityLevel(target, FourCC('A0D8'), $A)
			SetUnitAbilityLevel(target, FourCC('A0AT'), $A)
			SetUnitAbilityLevel(target, FourCC('A0AS'), $A)
		end
	end
end

---@param target unit
---@param attackspeed number integer
function SetAttackSpeedAbilityLevel(target, attackspeed)
	local as100 ---@type number integer
	local as10 ---@type number integer
	local as1 ---@type number integer
	local unas100 ---@type number integer
	local unas10 ---@type number integer
	local unas1 ---@type number integer
	local as ---@type number integer
	local unas ---@type number integer
	local itog100 = 0 ---@type number integer
	local itog10 = 0 ---@type number integer
	local itog1 = 0 ---@type number integer
	local itog ---@type number integer
	if GetUnitAbilityLevel(target, FourCC('A0B3')) <= 0 then
		UnitAddAbility(target, FourCC('A0B3'))
		UnitAddAbility(target, FourCC('A0B4'))
		UnitAddAbility(target, FourCC('A0B5'))
		UnitAddAbility(target, FourCC('A0E9'))
		UnitAddAbility(target, FourCC('A0EA'))
		UnitAddAbility(target, FourCC('A0EB'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0B3'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0B4'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0B5'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0E9'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0EA'))
		UnitMakeAbilityPermanent(target, true, FourCC('A0EB'))
	end
	as100 = GetUnitAbilityLevel(target, FourCC('A0B5'))
	as10 = GetUnitAbilityLevel(target, FourCC('A0B4'))
	as1 = GetUnitAbilityLevel(target, FourCC('A0B3'))
	unas100 = GetUnitAbilityLevel(target, FourCC('A0EB'))
	unas10 = GetUnitAbilityLevel(target, FourCC('A0EA'))
	unas1 = GetUnitAbilityLevel(target, FourCC('A0E9'))
	as = ((as100 - 1) * FourCC('d')) + ((as10 - 1) * $A) + as1 - 1
	unas = ((unas100 - 1) * FourCC('d')) + ((unas10 - 1) * $A) + unas1 - 1
	itog = as - unas
	if itog + attackspeed < $3E8 and itog + attackspeed > -$3E8 then
		itog = itog + attackspeed
		itog100 = (itog / FourCC('d'))
		itog10 = (itog - (itog100 * FourCC('d'))) / $A
		itog1 = itog - (itog100 * FourCC('d')) - (itog10 * $A)
		if itog100 >= 0 then
			SetUnitAbilityLevel(target, FourCC('A0B5'), itog100 + 1)
			SetUnitAbilityLevel(target, FourCC('A0EB'), 1)
		else
			SetUnitAbilityLevel(target, FourCC('A0EB'), -itog100 + 1)
			SetUnitAbilityLevel(target, FourCC('A0B5'), 1)
		end
		if itog10 >= 0 then
			SetUnitAbilityLevel(target, FourCC('A0B4'), itog10 + 1)
			SetUnitAbilityLevel(target, FourCC('A0EA'), 1)
		else
			SetUnitAbilityLevel(target, FourCC('A0EA'), -itog10 + 1)
			SetUnitAbilityLevel(target, FourCC('A0B4'), 1)
		end
		if itog1 >= 0 then
			SetUnitAbilityLevel(target, FourCC('A0B3'), itog1 + 1)
			SetUnitAbilityLevel(target, FourCC('A0E9'), 1)
		else
			SetUnitAbilityLevel(target, FourCC('A0E9'), -itog1 + 1)
			SetUnitAbilityLevel(target, FourCC('A0B3'), 1)
		end
	else
		if itog + attackspeed >= $3E8 then
			SetUnitAbilityLevel(target, FourCC('A0B5'), $A)
			SetUnitAbilityLevel(target, FourCC('A0B4'), $A)
			SetUnitAbilityLevel(target, FourCC('A0B3'), $A)
			SetUnitAbilityLevel(target, FourCC('A0EB'), 1)
			SetUnitAbilityLevel(target, FourCC('A0EA'), 1)
			SetUnitAbilityLevel(target, FourCC('A0E9'), 1)
		end
		if itog + attackspeed <= -$3E8 then
			SetUnitAbilityLevel(target, FourCC('A0B5'), 1)
			SetUnitAbilityLevel(target, FourCC('A0B4'), 1)
			SetUnitAbilityLevel(target, FourCC('A0B3'), 1)
			SetUnitAbilityLevel(target, FourCC('A0EB'), $A)
			SetUnitAbilityLevel(target, FourCC('A0EA'), $A)
			SetUnitAbilityLevel(target, FourCC('A0E9'), $A)
		end
	end
end

---@param u unitstate
---@return number integer
function MaxStateModifierID(u)
	if u == UNIT_STATE_MAX_LIFE then
		return FourCC('A07A')
	elseif u == UNIT_STATE_MAX_LIFE then
		return FourCC('A07E')
	end
	return 0
end

---@param u unit
---@param us unitstate
---@param val number integer
function SetUnitMaxState(u, us, val)
	local i = MaxStateModifierID(us) ---@type number integer
	local c = val ---@type number integer
	if i == 0 then
		return
	end
	if c > 0 then
		while(true) do
			if (c == 0) then break end
			UnitAddAbility(u, i)
			if c >= FourCC('d') then
				c = c - FourCC('d')
				SetUnitAbilityLevel(u, i, 4)
			elseif c >= FourCC('d') then
				c = c - $A
				SetUnitAbilityLevel(u, i, 3)
			else
				c = c - 1
				SetUnitAbilityLevel(u, i, 2)
			end
			UnitRemoveAbility(u, i)
		end
	elseif c > 0 then
		c = -c
		while(true) do
			if (c == 0) then break end
			UnitAddAbility(u, i)
			if c >= FourCC('d') then
				c = c - FourCC('d')
				SetUnitAbilityLevel(u, i, 7)
			elseif c >= FourCC('d') then
				c = c - $A
				SetUnitAbilityLevel(u, i, 6)
			else
				c = c - 1
				SetUnitAbilityLevel(u, i, 5)
			end
			UnitRemoveAbility(u, i)
		end
	end
end

function SetUnitLifeAndManaRegenerationActions()
	local t = GetExpiredTimer() ---@type timer
	local ht = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, ht, 1) ---@type unit
	local life = LoadInteger(udg_hash, ht, 2) ---@type number integer
	local mana = LoadInteger(udg_hash, ht, 3) ---@type number integer
	local uslife = GetUnitState(target, UNIT_STATE_LIFE) ---@type number real
	if uslife > .405 and (life ~= 0 or mana ~= 0) then
		SetUnitState(target, UNIT_STATE_LIFE, uslife + (I2R(life) / $A))
		SetUnitState(target, UNIT_STATE_MANA, GetUnitState(target, UNIT_STATE_MANA) + (I2R(mana) / $A))
	elseif uslife > .405 and (life ~= 0 or mana ~= 0) then
		FlushChildHashtable(udg_hash, ht)
		DestroyTimer(t)
	end
	t = nil
	target = nil
end

---@param target unit
---@param s string
---@param regen number integer
function SetUnitLifeAndManaRegeneration(target, s, regen)
	local hunit = GetHandleId(target) ---@type number integer
	local t = LoadTimerHandle(udg_hash, hunit, 50) ---@type timer
	local ht ---@type number integer
	local life = 0 ---@type number integer
	local mana = 0 ---@type number integer
	if t == nil then
		t = CreateTimer()
		ht = GetHandleId(t)
		life = 0
		mana = 0
		SaveTimerHandle(udg_hash, hunit, 50, t)
		SaveUnitHandle(udg_hash, ht, 1, target)
	end
	ht = GetHandleId(t)
	life = LoadInteger(udg_hash, ht, 2)
	mana = LoadInteger(udg_hash, ht, 3)
	if s == "life" then
		life = life + regen
		SaveInteger(udg_hash, ht, 2, life)
	end
	if s == "mana" then
		mana = mana + regen
		SaveInteger(udg_hash, ht, 3, mana)
	end
	TimerStart(t, .1, true, SetUnitLifeAndManaRegenerationActions)
	t = nil
end

---@param count number integer
---@param g group
function RandomUnitFromGroup(count, g)
	local u ---@type unit
	local irand ---@type number integer
	local first = nil ---@type unit
	local random = nil ---@type unit
	local howunits = 0 ---@type number integer
	local howunits2 ---@type number integer
	local intran ---@type number integer
	local schetchik = 0 ---@type number integer
	GroupClear(udg_GroupRandomUnitFromGroup)
	while(true) do
		first = FirstOfGroup(g)
		if (first == nil) then break end
		if first ~= nil and GetUnitState(first, UNIT_STATE_LIFE) > .405 then
			howunits = howunits + 1
			u[howunits] = first
		end
		GroupRemoveUnit(g, first)
	end
	howunits2 = howunits
	while(true) do
		if (howunits <= 0 or count <= schetchik) then break end
		intran = GetRandomInt(1, howunits)
		random = u[intran]
		GroupAddUnit(udg_GroupRandomUnitFromGroup, random)
		u[intran] = u[howunits]
		howunits = howunits - 1
		schetchik = schetchik + 1
		random = nil
	end
	while(true) do
		if (howunits2 <= 0) then break end
		u[howunits2] = nil
		howunits2 = howunits2 - 1
	end
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	first = nil
end

function MoveUnit_Timer()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local speed = LoadReal(udg_hash, h, 2) ---@type number real
	local speedreduction = LoadReal(udg_hash, h, 3) ---@type number real
	local angle = LoadReal(udg_hash, h, 4) ---@type number real
	local wait = LoadInteger(udg_hash, h, 7) ---@type number integer
	local wait2 = LoadInteger(udg_hash, h, 8) ---@type number integer
	local pause = LoadBoolean(udg_hash, h, 9) ---@type boolean
	local dist = speed - (speedreduction * (wait2 * 2 - wait)) ---@type number real
	local x = GetUnitX(u) + dist * Cos(angle * bj_DEGTORAD) ---@type number real
	local y = GetUnitY(u) + dist * Sin(angle * bj_DEGTORAD) ---@type number real
	if IsTerrainPathable(x, y, PATHING_TYPE_FLYABILITY) == false and (GetUnitState(u, UNIT_STATE_LIFE) > .405 or LoadReal(udg_hash, h, 5) ~= .0) then
		if pause then
			SetUnitPosition(u, x, y)
		else
			SetUnitX(u, x)
			SetUnitY(u, y)
		end
	end
	if wait == wait2 and LoadReal(udg_hash, h, 5) > .0 then
		SetUnitFlyHeight(u, -(LoadReal(udg_hash, h, 5)), LoadReal(udg_hash, h, 6))
	end
	wait = wait - 1
	if wait <= 0 then
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	else
		SaveInteger(udg_hash, h, 7, wait)
	end
	u = nil
end

---@param u unit
---@param time number real
---@param speed number real
---@param speedreduction number real
---@param angle number real
---@param height number real
---@param pause boolean
function MoveUnit(u, time, speed, speedreduction, angle, height, pause)
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = R2I(time / .03) ---@type number integer
	SaveUnitHandle(udg_hash, h, 1, u)
	SaveReal(udg_hash, h, 2, speed / 33.33)
	if speedreduction ~= .0 then
		SaveReal(udg_hash, h, 3, (speedreduction / 33.33) / 33.33)
	end
	SaveReal(udg_hash, h, 4, angle)
	if height ~= .0 then
		UnitAddAbility(u, FourCC('Amrf'))
		UnitRemoveAbility(u, FourCC('Amrf'))
		SetUnitFlyHeight(u, height, height / (time / 2))
		SaveReal(udg_hash, h, 5, height)
		SaveReal(udg_hash, h, 6, height / (time / 2))
	end
	SaveInteger(udg_hash, h, 7, wait)
	SaveInteger(udg_hash, h, 8, wait / 2)
	SaveBoolean(udg_hash, h, 9, pause)
	TimerStart(t, .03, true, MoveUnit_Timer)
	t = nil
end

---@param ForPlayer player
---@param msg string
function SimError(ForPlayer, msg)
	if udg_SimError == nil then
		udg_SimError = CreateSoundFromLabel("InterfaceError", false, false, false, $A, $A)
	end
	if (GetLocalPlayer() == ForPlayer) then
		ClearTextMessages()
		DisplayTimedTextToPlayer(ForPlayer, .52, -1., 3., "|cffffcc00" .. msg .. "|r")
		StartSound(udg_SimError)
	end
end

---@param s string
---@param size number real
---@param alpha number integer
---@param x number real
---@param y number real
---@param offset number real
---@param velx number real
---@param vely number real
---@param lifespain number real
function CreateTexttag(s, size, alpha, x, y, offset, velx, vely, lifespain)
	local txt = CreateTextTag() ---@type texttag
	SetTextTagText(txt, s, size)
	SetTextTagColor(txt, $FF, $FF, $FF, alpha)
	SetTextTagPos(txt, x, y, offset)
	SetTextTagVelocity(txt, velx, vely)
	SetTextTagPermanent(txt, false)
	if lifespain > .0 then
		SetTextTagLifespan(txt, lifespain)
		SetTextTagFadepoint(txt, lifespain / 2)
	end
	txt = nil
end

---@param u unit
---@param itemId number integer
---@return number integer
function CountItemOfTypeOnUnit(u, itemId)
	local index = 0 ---@type number integer
	local count = 0 ---@type number integer
	local indexItem ---@type item
	while(true) do
		indexItem = UnitItemInSlot(u, index)
		if (indexItem ~= nil) and (GetItemTypeId(indexItem) == itemId) then
			count = count + 1
		end
		index = index + 1
		if (index >= 6) then break end
	end
	return count
end

---@param ForPlayer player
---@param number number integer
function SoundForPlayer(ForPlayer, number)
	if (GetLocalPlayer() == ForPlayer) then
		StartSound(udg_Game_Sound[number])
	end
end

---@param count1 number integer
---@param id1 number integer
---@param count2 number integer
---@param id2 number integer
---@param count3 number integer
---@param id3 number integer
---@param count4 number integer
---@param id4 number integer
---@param count5 number integer
---@param id5 number integer
---@param id number integer
---@param sef string
---@param remove boolean
function LinkItems(count1, id1, count2, id2, count3, id3, count4, id4, count5, id5, id, sef, remove)
	local count ---@type number integer
	local itemid ---@type number integer
	local iteminslot ---@type item
	local hero = GetTriggerUnit() ---@type unit
	local p = GetOwningPlayer(hero) ---@type player
	local manipulateditem = GetManipulatedItem() ---@type item
	local i = 0 ---@type number integer
	local lopa = 1 ---@type number integer
	local index ---@type number integer
	local indexItem ---@type item
	local counter = 0 ---@type number integer
	local numerator = 0 ---@type number integer
	local bol = true ---@type boolean
	local finalitem ---@type item
	local charges = 0 ---@type number integer
	local buysumm = 0 ---@type number integer
	local finalcost ---@type number integer
	local costdifference ---@type number integer
	local fastpurchaseitem ---@type item
	local fullinv = true ---@type boolean
	local stoppurchase = false ---@type boolean
	count[1] = count1
	count[2] = count2
	count[3] = count3
	count[4] = count4
	count[5] = count5
	itemid[1] = id1
	itemid[2] = id2
	itemid[3] = id3
	itemid[4] = id4
	itemid[5] = id5
	while(true) do
		if (lopa > 5) then break end
		if count[lopa] > 0 then
			index = 0
			numerator = 0
			while(true) do
				if (index > 5) then break end
				indexItem = UnitItemInSlot(hero, index)
				if (indexItem ~= nil) and (GetItemTypeId(indexItem) == itemid[lopa]) and count[lopa] > numerator then
					if GetItemCharges(indexItem) > 0 and GetItemCharges(indexItem) > charges then
						charges = GetItemCharges(indexItem)
					end
					buysumm = buysumm + LoadInteger(udg_hash, itemid[lopa], FourCC('x'))
					counter = counter + 1
					numerator = numerator + 1
					iteminslot[counter] = indexItem
					if udg_Boolean_Player_Fast_Purchase[GetPlayerId(p) + 1] then
						fastpurchaseitem[counter] = indexItem
					end
				end
				index = index + 1
			end
			if numerator < count[lopa] then
				bol = false
			end
		end
		lopa = lopa + 1
	end
	if LoadStr(udg_hash, GetUnitTypeId(hero), 91) ~= "ranged" and GetItemTypeId(manipulateditem) == FourCC('I041') then
		bol = false
		stoppurchase = true
		udg_Show_Item_Link_Text = false
		SimError(p, "Этот предмет предназначен только для героев дальнего боя!!!")
		SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + R2I(GetWidgetLife(manipulateditem)))
	end
	if LoadStr(udg_hash, GetUnitTypeId(hero), 91) ~= "melee" and (GetItemTypeId(manipulateditem) == FourCC('I01R') or GetItemTypeId(manipulateditem) == FourCC('I02M')) then
		bol = false
		stoppurchase = true
		udg_Show_Item_Link_Text = false
		SimError(p, "Этот предмет предназначен только для героев ближнего боя!!!")
		SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + R2I(GetWidgetLife(manipulateditem)))
	else
		if (GetItemTypeId(manipulateditem) == FourCC('I01R') or GetItemTypeId(manipulateditem) == FourCC('I02M')) then
			if (GetItemTypeId(manipulateditem) == FourCC('I01R') and (CountItemOfTypeOnUnit(hero, FourCC('I02E')) + CountItemOfTypeOnUnit(hero, FourCC('I02N'))) >= 1) or (GetItemTypeId(manipulateditem) == FourCC('I02M') and CountItemOfTypeOnUnit(hero, FourCC('I02N')) >= 1) then
				bol = false
				stoppurchase = true
				udg_Show_Item_Link_Text = false
				SimError(p, "У вашего героя уже есть Топор Вождя Орков или Крушитель!!!")
				SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + R2I(GetWidgetLife(manipulateditem)))
			end
		end
	end
	if bol then
		while(true) do
			if (counter <= 0) then break end
			RemoveItem(iteminslot[counter])
			iteminslot[counter] = nil
			counter = counter - 1
		end
		finalitem = CreateItem(id, GetUnitX(hero), GetUnitY(hero))
		UnitAddItem(hero, finalitem)
		SetItemUserData(finalitem, GetPlayerId(GetOwningPlayer(hero)) + 1)
		if IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS) and udg_System_ShowAbil_And_Items_Hint[GetPlayerId(GetLocalPlayer()) + 1] then
			DisplayTextToPlayer(GetLocalPlayer(), .0, .0, udg_ColorString[GetPlayerId(p) + 1] .. GetPlayerName(p) .. "|r приобрел предмет |cff99ccff" .. GetItemName(finalitem) .. "|r")
		end
		if (id == FourCC('I055') or id == FourCC('I056') or id == FourCC('I057') or id == FourCC('I058')) then
			SetItemCharges(finalitem, 1)
		end
		if charges ~= 0 then
			SetItemCharges(finalitem, charges)
		end
		udg_Integer_Item_Recipe_Level = -1
		udg_Show_Item_Link_Text = false
		if sef == "" then
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIam\\AIamTarget.mdl", hero, "origin"))
		else
			DestroyEffect(AddSpecialEffectTarget(sef, hero, "origin"))
		end
	else
		if udg_Boolean_Player_Fast_Purchase[GetPlayerId(p) + 1] and GetItemType(manipulateditem) == ITEM_TYPE_POWERUP and stoppurchase == false and LoadInteger(udg_hash, id, FourCC('y')) <= 0 then
			finalcost = LoadInteger(udg_hash, id, FourCC('x'))
			costdifference = GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + R2I(GetWidgetLife(manipulateditem)) - finalcost + buysumm
			if costdifference >= 0 then
				lopa = 0
				while(true) do
					if (lopa > 5) then break end
					if fastpurchaseitem[lopa] ~= nil then
						RemoveItem(fastpurchaseitem[lopa])
					end
					fastpurchaseitem[lopa] = nil
					iteminslot[lopa] = nil
					lopa = lopa + 1
				end
				lopa = 0
				while(true) do
					if (lopa > 5) then break end
					if UnitItemInSlot(hero, lopa) == nil then
						fullinv = false
					end
					lopa = lopa + 1
				end
				if fullinv == false then
					finalitem = CreateItem(id, GetUnitX(hero), GetUnitY(hero))
					UnitAddItem(hero, finalitem)
					SetItemUserData(finalitem, GetPlayerId(GetOwningPlayer(hero)) + 1)
					SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + R2I(GetWidgetLife(manipulateditem)) - finalcost + buysumm)
					if IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS) and udg_System_ShowAbil_And_Items_Hint[GetPlayerId(GetLocalPlayer()) + 1] then
						DisplayTextToPlayer(GetLocalPlayer(), .0, .0, udg_ColorString[GetPlayerId(p) + 1] .. GetPlayerName(p) .. "|r приобрел предмет |cff99ccff" .. GetItemName(finalitem) .. "|r")
					end
					if (id == FourCC('I055') or id == FourCC('I056') or id == FourCC('I057') or id == FourCC('I058')) then
						SetItemCharges(finalitem, 1)
					end
					if charges ~= 0 then
						SetItemCharges(finalitem, charges)
					end
					udg_Integer_Item_Recipe_Level = -1
					udg_Show_Item_Link_Text = false
					if sef == "" then
						DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIam\\AIamTarget.mdl", hero, "origin"))
					else
						DestroyEffect(AddSpecialEffectTarget(sef, hero, "origin"))
					end
				else
					SoundForPlayer(p, $C)
					SimError(p, "Недостаточно места в инвентаре.")
				end
			else
				SoundForPlayer(p, $D)
				SimError(p, "Недостаточно золота для быстрой покупки!!!")
			end
		end
	end
	if GetItemType(manipulateditem) == ITEM_TYPE_POWERUP then
		if bol == false then
			udg_Integer_Item_Recipe_Level = udg_Integer_Item_Recipe_Level - 1
		end
		if udg_Integer_Item_Recipe_Level < 0 and udg_Show_Item_Link_Text then
			if udg_Boolean_Player_Fast_Purchase[GetPlayerId(p) + 1] and LoadInteger(udg_hash, id, 0) <= 0 then
				if fullinv == false then
					SoundForPlayer(p, $D)
					SimError(p, "Недостаточно золота для быстрой покупки!!!")
				end
			else
				SimError(p, "Для того, чтобы собрать предмет, требуются все компоненты!!!")
			end
			SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + R2I(GetWidgetLife(manipulateditem)))
		end
		if udg_Integer_Item_Recipe_Level < 0 then
			RemoveItem(manipulateditem)
		end
	end
	indexItem = nil
	finalitem = nil
	hero = nil
	manipulateditem = nil
	p = nil
end

function ProgressBarMove()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local txt = LoadTextTagHandle(udg_hash, h, 1) ---@type texttag
	local u = LoadUnitHandle(udg_hash, h, 4) ---@type unit
	local counter = LoadInteger(udg_hash, h, 5) ---@type number integer
	local color = LoadStr(udg_hash, h, 6) ---@type string
	local orderId = LoadInteger(udg_hash, h, 7) ---@type number integer
	local length = LoadInteger(udg_hash, h, 8) ---@type number integer
	local orderunit ---@type number integer
	local orderbool = false ---@type boolean
	local display = true ---@type boolean
	local scolor ---@type string
	local swhite ---@type string
	local s ---@type string
	if counter > 0 then
		counter = counter - 1
		SaveInteger(udg_hash, h, 5, counter)
		if orderId ~= 0 then
			orderbool = true
		end
		if orderbool then
			orderunit = GetUnitCurrentOrder(u)
			if orderunit == orderId then
			else
				display = false
			end
		end
		if display then
			scolor = color .. SubString("llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll", counter, length) .. "|r"
			swhite = SubString("llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll", 0, counter)
			s = scolor .. swhite
			SetTextTagText(txt, s, .0115)
		else
			counter = 0
			SaveInteger(udg_hash, h, 5, counter)
		end
	else
		DestroyTextTag(txt)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	txt = nil
	u = nil
end

---@param u unit
---@param size number real
---@param color string
---@param order string
---@param time number real
function AddProgressBarfake(u, size, color, order, time)
	local txt = CreateTextTag() ---@type texttag
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local x = GetUnitX(u) + (125. * size) * Cos(180. * bj_DEGTORAD) ---@type number real
	local y = GetUnitY(u) + (125. * size) * Sin(180. * bj_DEGTORAD) ---@type number real
	local counter = R2I(FourCC('d') * size) ---@type number integer
	local periodic = time / counter ---@type number real
	local orderId ---@type number integer
	SetTextTagText(txt, SubString("llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll", 0, R2I(FourCC('d') * size)), .0115)
	SetTextTagPos(txt, x, y, 200.)
	SetTextTagPermanent(txt, false)
	SaveTextTagHandle(udg_hash, h, 1, txt)
	SaveUnitHandle(udg_hash, h, 4, u)
	SaveInteger(udg_hash, h, 5, counter)
	SaveStr(udg_hash, h, 6, color)
	if order ~= "" then
		orderId = OrderId(order)
		if (orderId ~= 0) then
		else
			orderId = UnitId(order)
			if (orderId ~= 0) then
			end
		end
		SaveInteger(udg_hash, h, 7, orderId)
	else
		SaveInteger(udg_hash, h, 7, 0)
	end
	SaveInteger(udg_hash, h, 8, counter)
	TimerStart(t, periodic, true, ProgressBarMove)
	txt = nil
	t = nil
end

---@param px number real
---@param py number real
---@param cx number real
---@param cy number real
---@param ax number real
---@param ay number real
---@param bx number real
---@param by number real
---@return boolean
function IsPointInRect(px, py, cx, cy, ax, ay, bx, by)
	local dot1 = (px - cx) * (ax - cx) + (py - cy) * (ay - cy) ---@type number real
	local dot2 = (ax - cx) * (ax - cx) + (ay - cy) * (ay - cy) ---@type number real
	local dot3 = (px - cx) * (bx - cx) + (py - cy) * (by - cy) ---@type number real
	local dot4 = (bx - cx) * (bx - cx) + (by - cy) * (by - cy) ---@type number real
	return dot1 >= 0 and dot1 <= dot2 and dot3 >= 0 and dot3 <= dot4
end

function UnitPeriodicPostionMovePeriodic()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local wait = LoadInteger(udg_hash, h, 2) ---@type number integer
	SetUnitX(target, GetUnitX(target))
	SetUnitY(target, GetUnitY(target))
	IssueImmediateOrderById(target, $D0004)
	if wait <= 0 then
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	else
		SaveInteger(udg_hash, h, 2, wait - 1)
	end
	t = nil
	target = nil
end

---@param target unit
---@param periodic number real
---@param time number real
function UnitPeriodicPostionMove(target, periodic, time)
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveUnitHandle(udg_hash, h, 1, target)
	SaveInteger(udg_hash, h, 2, R2I(time / periodic))
	TimerStart(t, periodic, true, UnitPeriodicPostionMovePeriodic)
	t = nil
end

function StunUnitTimed_Periodic()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local stun100 = LoadInteger(udg_hash, h, 3) ---@type number integer
	local stun10 = LoadInteger(udg_hash, h, 4) ---@type number integer
	local stun1 = LoadInteger(udg_hash, h, 5) ---@type number integer
	local stunstage = LoadInteger(udg_hash, h, 6) ---@type number integer
	stunstage = stunstage + 1
	SaveInteger(udg_hash, h, 6, stunstage)
	if stunstage == 1 then
		if GetUnitAbilityLevel(dammi, FourCC('A0H4')) > 0 then
			IssueTargetOrderById(dammi, $D007F, target)
		end
		TimerStart(t, stun100 * 1., false, StunUnitTimed_Periodic)
	end
	if stunstage == 2 then
		if GetUnitAbilityLevel(dammi, FourCC('A0H5')) > 0 then
			IssueTargetOrderById(dammi, $D0107, target)
		end
		TimerStart(t, stun10 * .1, false, StunUnitTimed_Periodic)
	end
	if stunstage == 3 then
		if GetUnitAbilityLevel(dammi, FourCC('A0H6')) > 0 then
			IssueTargetOrderById(dammi, $D011C, target)
		end
		TimerStart(t, stun1 * .01, false, StunUnitTimed_Periodic)
	end
	if stunstage >= 4 then
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	dammi = nil
	target = nil
end

---@param target unit
---@param time number real
function StunUnitTimed(target, time)
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi = CreateUnit(Player($F), FourCC('h00U'), GetUnitX(target), GetUnitY(target), .0) ---@type unit
	local stun100 ---@type number integer
	local stun10 ---@type number integer
	local stun1 ---@type number integer
	local stunstage = 0 ---@type number integer
	if time >= 10. then
		time = 9.99
	end
	stun100 = R2I(time)
	stun10 = R2I((time - stun100) * $A)
	stun1 = R2I(time * FourCC('d')) - stun100 * FourCC('d') - stun10 * $A
	if stun100 > 0 then
		UnitAddAbility(dammi, FourCC('A0H4'))
		SetUnitAbilityLevel(dammi, FourCC('A0H4'), stun100)
	end
	if stun10 > 0 then
		UnitAddAbility(dammi, FourCC('A0H5'))
		SetUnitAbilityLevel(dammi, FourCC('A0H5'), stun10)
	end
	if stun1 > 0 then
		UnitAddAbility(dammi, FourCC('A0H6'))
		SetUnitAbilityLevel(dammi, FourCC('A0H6'), stun1)
	end
	UnitApplyTimedLife(dammi, FourCC('BTLF'), I2R(stun100) + 2.)
	SaveUnitHandle(udg_hash, h, 1, dammi)
	SaveUnitHandle(udg_hash, h, 2, target)
	SaveInteger(udg_hash, h, 3, stun100)
	SaveInteger(udg_hash, h, 4, stun10)
	SaveInteger(udg_hash, h, 5, stun1)
	SaveInteger(udg_hash, h, 6, stunstage)
	TimerStart(t, .0, false, StunUnitTimed_Periodic)
	t = nil
	dammi = nil
end

function RemovePotionAfterMinute()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local ef = LoadEffectHandle(udg_hash, h, 2) ---@type effect
	local reg = LoadRegionHandle(udg_hash, h, 3) ---@type region
	local rct = LoadRectHandle(udg_hash, h, 4) ---@type rect
	KillUnit(dammi)
	DestroyEffect(ef)
	FlushChildHashtable(udg_hash, GetHandleId(reg))
	FlushChildHashtable(udg_hash, GetHandleId(dammi))
	RemoveRect(rct)
	RemoveRegion(reg)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	dammi = nil
	ef = nil
	reg = nil
	rct = nil
end

---@param x number real
---@param y number real
---@param potionmin number integer
---@param potionmax number integer
function CreatePotion(x, y, potionmin, potionmax)
	local potionindex = GetRandomInt(potionmin, potionmax) ---@type number integer
	local dammi = CreateUnit(Player($F), FourCC('h00U'), x, y, GetRandomReal(.0, 360.)) ---@type unit
	local ef = AddSpecialEffectTarget(udg_Potion_Effect[potionindex], dammi, "origin") ---@type effect
	local healtype = udg_Potion_Type[potionindex] ---@type string
	local heal = udg_Potion_Heal_Amount[potionindex] ---@type number integer
	local size = udg_Potion_Size[potionindex] ---@type number real
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local destroy = false ---@type boolean
	local txt ---@type texttag
	local vel = .0221875 ---@type number real
	local angle = 45. + GetRandomReal(.0, 90.) ---@type number real
	local xvel = vel * Cos(angle * bj_DEGTORAD) ---@type number real
	local yvel = vel * Sin(angle * bj_DEGTORAD) ---@type number real
	local state ---@type number real
	local rct ---@type rect
	local reg ---@type region
	local t ---@type timer
	local h ---@type number integer
	SetUnitScale(dammi, size, size, size)
	GroupEnumUnitsInRange(g, x, y, 150., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil or destroy) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and GetPlayerId(GetOwningPlayer(Picked)) <= 8 and IsUnitType(Picked, UNIT_TYPE_HERO) and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			state = GetUnitState(Picked, UNIT_STATE_LIFE)
			if healtype == "life" and (state < GetUnitState(Picked, UNIT_STATE_MAX_LIFE)) then
				SetUnitState(Picked, UNIT_STATE_LIFE, state + heal)
				DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Heal\\HealTarget.mdl", Picked, "origin"), 2.)
				txt = CreateTextTag()
				SetTextTagText(txt, "|cFF00DC00+" .. I2S(heal) .. "|r", .03)
				SetTextTagPos(txt, x, y, .0)
				SetTextTagColor(txt, 0, 0, 0, $C8)
				SetTextTagVelocity(txt, xvel, yvel)
				SetTextTagLifespan(txt, 3.)
				SetTextTagFadepoint(txt, .0)
				SetTextTagPermanent(txt, false)
				destroy = true
			end
			state = GetUnitState(Picked, UNIT_STATE_MANA)
			if healtype == "mana" and (state < GetUnitState(Picked, UNIT_STATE_MAX_MANA)) then
				SetUnitState(Picked, UNIT_STATE_MANA, state + heal)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl", Picked, "origin"))
				txt = CreateTextTag()
				SetTextTagText(txt, "|c000347FC+" .. I2S(heal) .. "|r", .03)
				SetTextTagPos(txt, x, y, .0)
				SetTextTagColor(txt, 0, 0, 0, $C8)
				SetTextTagVelocity(txt, xvel, yvel)
				SetTextTagLifespan(txt, 3.)
				SetTextTagFadepoint(txt, .0)
				SetTextTagPermanent(txt, false)
				destroy = true
			end
		end
		GroupRemoveUnit(g, Picked)
	end
	if destroy then
		KillUnit(dammi)
		DestroyEffect(ef)
	else
		reg = CreateRegion()
		rct = Rect(x - 100., y - 100., x + 100., y + 100.)
		RegionAddRect(reg, rct)
		SaveUnitHandle(udg_hash, GetHandleId(reg), 1, dammi)
		SaveRectHandle(udg_hash, GetHandleId(reg), 2, rct)
		SaveInteger(udg_hash, GetHandleId(dammi), 1, potionindex)
		SaveEffectHandle(udg_hash, GetHandleId(dammi), 2, ef)
		TriggerRegisterEnterRegion(gg_trg_Check_Potion_Picked_Up, reg, nil)
		rct = nil
		reg = nil
		t = CreateTimer()
		h = GetHandleId(t)
		SaveUnitHandle(udg_hash, h, 1, dammi)
		SaveEffectHandle(udg_hash, h, 2, ef)
		SaveRegionHandle(udg_hash, h, 3, reg)
		SaveRectHandle(udg_hash, h, 4, rct)
		TimerStart(t, 60., false, RemovePotionAfterMinute)
	end
	dammi = nil
	ef = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
	txt = nil
	t = nil
end

function TimerToFunctionDestroy()
	local t2 = GetExpiredTimer() ---@type timer
	local h2 = GetHandleId(t2) ---@type number integer
	local t = LoadTimerHandle(udg_hash, h2, 1) ---@type timer
	local td = LoadTimerDialogHandle(udg_hash, h2, 2) ---@type timerdialog
	DestroyTimer(t)
	DestroyTimer(t2)
	DestroyTimerDialog(td)
	FlushChildHashtable(udg_hash, h2)
	t = nil
	t2 = nil
	td = nil
end

---@param time number real
---@param s string
---@param funcname function
function TimerToFunction(time, s, funcname)
	local t = CreateTimer() ---@type timer
	local td ---@type timerdialog
	local t2 = CreateTimer() ---@type timer
	local h2 = GetHandleId(t2) ---@type number integer
	if s ~= "" then
		td = CreateTimerDialog(t)
		TimerDialogSetTitle(td, s)
		TimerDialogDisplay(td, true)
		TimerDialogSetTimeColor(td, $FF, 45, 45, 20)
		SaveTimerDialogHandle(udg_hash, h2, 2, td)
		td = nil
	end
	TimerStart(t, time, false, funcname)
	TimerStart(t2, time + 1., false, TimerToFunctionDestroy)
	SaveTimerHandle(udg_hash, h2, 1, t)
	t = nil
	t2 = nil
end

function HintsToPlayerWithDelay_ShowHint()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local count = LoadInteger(udg_hash, h, $A) ---@type number integer
	local p = LoadPlayerHandle(udg_hash, h, $B) ---@type player
	local s ---@type string
	if count > 0 then
		s = LoadStr(udg_hash, h, count)
		DisplayTimedTextToPlayer(p, .0, .0, 10., "|cff32cd32ПОДСКАЗКА:|r")
		DisplayTimedTextToPlayer(p, .0, .0, 10., s)
		SoundForPlayer(p, 1)
		count = count - 1
		SaveInteger(udg_hash, h, $A, count)
	else
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	end
	t = nil
	p = nil
end

---@param p player
function HintsToPlayerWithDelay(p)
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local count = 5 ---@type number integer
	local s ---@type string
	s[5] = "Ваша задача: защищать стражей-заклинателей, находящихся около портала на вашей базе. Если все они погибнут - вы проиграете"
	s[4] = "В правой части базы находятся магазины с предметами, они разделены по типу, поэтому вы можете быстро найти нужные для себя артефакты"
	s[3] = "Просмотреть игровые команды, а также краткую информацию о карте вы можете в меню Инфо (|Cfffed312F9|r) а также на верхней панели интерфейса"
	s[2] = "Для более легкого прохождения первых волн, купите в магазинах несколько зелий лечения здоровья и маны, они помогут вам не умирать в бою."
	s[1] = "Приношу свои извинения, но в альфа версии карты, в лесy вокруг базы пока что никого и ничего нет. В следующих версиях там уже кое-что появится..."
	TimerStart(t, 15., true, HintsToPlayerWithDelay_ShowHint)
	SaveStr(udg_hash, h, 1, s[1])
	SaveStr(udg_hash, h, 2, s[2])
	SaveStr(udg_hash, h, 3, s[3])
	SaveStr(udg_hash, h, 4, s[4])
	SaveStr(udg_hash, h, 5, s[5])
	SaveInteger(udg_hash, h, $A, count)
	SavePlayerHandle(udg_hash, h, $B, p)
	t = nil
end

function ProgressBarAddPercentComplete_Stop_Animation()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local sum = LoadReal(udg_hash, GetHandleId(dammi), 1) ---@type number real
	local count = LoadInteger(udg_hash, GetHandleId(dammi), 2) ---@type number integer
	local tsum = LoadReal(udg_hash, h, 2) ---@type number real
	local tcount = LoadInteger(udg_hash, h, 3) ---@type number integer
	count = count - tcount
	SaveInteger(udg_hash, GetHandleId(dammi), 2, count)
	tcount = 0
	SaveInteger(udg_hash, h, 3, tcount)
	sum = sum - tsum
	SaveReal(udg_hash, GetHandleId(dammi), 1, sum)
	tsum = .0
	SaveReal(udg_hash, h, 2, tsum)
	if count <= 0 then
		SetUnitTimeScale(dammi, .0)
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	else
		tsum = sum
		tcount = count
		SaveReal(udg_hash, h, 2, tsum)
		SaveInteger(udg_hash, h, 3, tcount)
		SaveUnitHandle(udg_hash, h, 1, dammi)
		SetUnitTimeScale(dammi, (.1 * tsum))
		TimerStart(t, .1, false, ProgressBarAddPercentComplete_Stop_Animation)
	end
	t = nil
	dammi = nil
end

---@param dammi unit
---@param percent number real
function ProgressBarAddPercentComplete(dammi, percent)
	local t ---@type timer
	local h ---@type number integer
	local sum = LoadReal(udg_hash, GetHandleId(dammi), 1) ---@type number real
	local count = LoadInteger(udg_hash, GetHandleId(dammi), 2) ---@type number integer
	sum = sum + percent
	count = count + 1
	SaveReal(udg_hash, GetHandleId(dammi), 1, sum)
	SaveInteger(udg_hash, GetHandleId(dammi), 2, count)
	if count <= 1 then
		t = CreateTimer()
		h = GetHandleId(t)
		SaveUnitHandle(udg_hash, h, 1, dammi)
		SaveReal(udg_hash, h, 2, percent)
		SaveInteger(udg_hash, h, 3, 1)
		SetUnitTimeScale(dammi, (.1 * percent))
		TimerStart(t, .1, false, ProgressBarAddPercentComplete_Stop_Animation)
		t = nil
	end
end

function AddProgressBarMovingPeriodic()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local dammi = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local dead ---@type boolean
	if GetUnitState(dammi, UNIT_STATE_LIFE) > .405 and dammi ~= nil then
		if GetUnitState(target, UNIT_STATE_LIFE) > .405 then
			SetUnitPosition(dammi, GetUnitX(target), GetUnitY(target))
			dead = LoadBoolean(udg_hash, h, 3)
			if dead then
				SetUnitVertexColor(dammi, LoadInteger(udg_hash, h, 4), LoadInteger(udg_hash, h, 5), LoadInteger(udg_hash, h, 6), $FF)
				SaveBoolean(udg_hash, h, 3, false)
			end
		else
			dead = LoadBoolean(udg_hash, h, 3)
			if dead == false then
				SetUnitVertexColor(dammi, LoadInteger(udg_hash, h, 4), LoadInteger(udg_hash, h, 5), LoadInteger(udg_hash, h, 6), 0)
				SaveBoolean(udg_hash, h, 3, true)
			end
		end
	else
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	end
	t = nil
	target = nil
	dammi = nil
end

---@param target unit
---@param height number real
---@param size number real
---@param time number real
---@param move boolean
---@param auto boolean
---@param hand number integer
---@param red number integer
---@param green number integer
---@param blue number integer
function AddProgressBar(target, height, size, time, move, auto, hand, red, green, blue)
	local dammi = CreateUnit(GetOwningPlayer(target), FourCC('h00B'), GetUnitX(target), GetUnitY(target), 270.) ---@type unit
	local t ---@type timer
	local h ---@type number integer
	SetUnitX(dammi, GetUnitX(target))
	SetUnitY(dammi, GetUnitY(target))
	UnitAddAbility(dammi, FourCC('Amrf'))
	UnitRemoveAbility(dammi, FourCC('Amrf'))
	SetUnitFlyHeight(dammi, height, .0)
	SetUnitScale(dammi, size, size, size)
	SetUnitVertexColor(dammi, red, green, blue, $FF)
	SetUnitAnimation(dammi, "birth")
	SaveUnitHandle(udg_hash, GetHandleId(target), hand, dammi)
	if auto then
		SetUnitTimeScale(dammi, (1. / time))
		UnitApplyTimedLife(dammi, FourCC('BTLF'), time)
	else
		SetUnitTimeScale(dammi, .0)
	end
	if move then
		t = CreateTimer()
		h = GetHandleId(t)
		SaveUnitHandle(udg_hash, h, 1, target)
		SaveUnitHandle(udg_hash, h, 2, dammi)
		SaveBoolean(udg_hash, h, 3, false)
		SaveInteger(udg_hash, h, 4, red)
		SaveInteger(udg_hash, h, 5, green)
		SaveInteger(udg_hash, h, 6, blue)
		TimerStart(t, .03, true, AddProgressBarMovingPeriodic)
		t = nil
	end
	dammi = nil
end

function HeroStepsPeriodicSound()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local x = LoadReal(udg_hash, h, 2) ---@type number real
	local y = LoadReal(udg_hash, h, 3) ---@type number real
	local xnew = GetUnitX(target) ---@type number real
	local ynew = GetUnitY(target) ---@type number real
	local random = GetRandomInt(1, 4) ---@type number integer
	local p ---@type player
	if GetUnitState(target, UNIT_STATE_LIFE) > .405 and (x ~= xnew and y ~= ynew) then
		p = GetOwningPlayer(target)
		if random == 1 then
			SoundForPlayer(p, 8)
			BJDebugMsg("1")
		end
		if random == 2 then
			SoundForPlayer(p, 9)
			BJDebugMsg("2")
		end
		if random == 3 then
			SoundForPlayer(p, $A)
			BJDebugMsg("3")
		end
		if random == 4 then
			SoundForPlayer(p, $B)
			BJDebugMsg("4")
		end
		SaveReal(udg_hash, h, 2, xnew)
		SaveReal(udg_hash, h, 3, ynew)
	end
	t = nil
	target = nil
end

---@param target unit
function HeroStepsSound(target)
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local x = GetUnitX(target) ---@type number real
	local y = GetUnitY(target) ---@type number real
	SaveUnitHandle(udg_hash, h, 1, target)
	SaveReal(udg_hash, h, 2, x)
	SaveReal(udg_hash, h, 3, y)
	TimerStart(t, 1., true, HeroStepsPeriodicSound)
	t = nil
end

---@param flushonly boolean
function ShowAndFlushAllPlayerDamage(flushonly)
	local s ---@type string
	local maxtakendamage = .0 ---@type number real
	local maxreciveddamage = .0 ---@type number real
	local ptakendamage = .0 ---@type number real
	local preceiveddamage = .0 ---@type number real
	local pmaxtakedamage = Player(0) ---@type player
	local pmaxreceiveddamage = Player(0) ---@type player
	local lopa = 0 ---@type number integer
	local alltakendamage = .0 ---@type number real
	local allreceiveddamage = .0 ---@type number real
	local p ---@type player
	local id ---@type number integer
	local percent = .0 ---@type number real
	local spercent ---@type string
	local time = .0 ---@type number real
	if flushonly == false then
		while(true) do
			if (lopa > 8) then break end
			alltakendamage = alltakendamage + udg_Player_Taken_Damage_Current[lopa]
			allreceiveddamage = allreceiveddamage + udg_Player_Received_Damage_Current[lopa]
			if udg_Player_Taken_Damage_Current[lopa] > maxtakendamage then
				maxtakendamage = udg_Player_Taken_Damage_Current[lopa]
				pmaxtakedamage = Player(lopa)
			end
			if udg_Player_Received_Damage_Current[lopa] > maxreciveddamage then
				maxreciveddamage = udg_Player_Received_Damage_Current[lopa]
				pmaxreceiveddamage = Player(lopa)
			end
			time = (10000. - TimerGetRemaining(udg_TimerShowAndFlushAllPlayerDmg))
			PauseTimer(udg_TimerShowAndFlushAllPlayerDmg)
			lopa = lopa + 1
		end
		if (IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS)) then
			p = GetLocalPlayer()
			DisplayTimedTextToPlayer(p, .0, .0, 20., " ")
			DisplayTimedTextToPlayer(p, .0, .0, 20., "Затраченное Время: |cff00CD00" .. (SubString(R2S(time), 0, StringLength(R2S(time)) - 2)) .. "|r секунд")
			DisplayTimedTextToPlayer(p, .0, .0, 20., "Всего урона нанесено: |cff99ccff" .. I2S(R2I(alltakendamage)) .. "|r урона")
			DisplayTimedTextToPlayer(p, .0, .0, 20., "Всего урона получено: |cff99ccff" .. I2S(R2I(allreceiveddamage)) .. "|r урона")
			percent = ((maxtakendamage / alltakendamage) * FourCC('d'))
			DisplayTimedTextToPlayer(p, .0, .0, 20., "Больше всего нанесено урона: " .. udg_ColorString[GetPlayerId(pmaxtakedamage) + 1] .. GetPlayerName(pmaxtakedamage) .. "|r (|cff99ccff" .. I2S(R2I(maxtakendamage)) .. "|r урона - |cff99ccff" .. (SubString(R2S(percent), 0, StringLength(R2S(percent)) - 2)) .. "%|r )")
			percent = ((maxreciveddamage / allreceiveddamage) * FourCC('d'))
			DisplayTimedTextToPlayer(p, .0, .0, 20., "Больше всего урона получено: " .. udg_ColorString[GetPlayerId(pmaxreceiveddamage) + 1] .. GetPlayerName(pmaxreceiveddamage) .. "|r (|cff99ccff" .. I2S(R2I(maxreciveddamage)) .. "|r урона - |cff99ccff" .. (SubString(R2S(percent), 0, StringLength(R2S(percent)) - 2)) .. "%|r )")
			if p ~= pmaxtakedamage then
				percent = ((udg_Player_Taken_Damage_Current[GetPlayerId(p)] / alltakendamage) * FourCC('d'))
				DisplayTimedTextToPlayer(p, .0, .0, 20., "Ваш нанесенный урон: ( |cff99ccff" .. I2S(R2I(udg_Player_Taken_Damage_Current[GetPlayerId(p)])) .. "|r урона - |cff99ccff" .. (SubString(R2S(percent), 0, StringLength(R2S(percent)) - 2)) .. "%|r )")
			end
			if p ~= pmaxreceiveddamage then
				percent = ((udg_Player_Received_Damage_Current[GetPlayerId(p)] / allreceiveddamage) * FourCC('d'))
				DisplayTimedTextToPlayer(p, .0, .0, 20., "Ваш полученный урон: ( |cff99ccff" .. I2S(R2I(udg_Player_Received_Damage_Current[GetPlayerId(p)])) .. "|r урона - |cff99ccff" .. (SubString(R2S(percent), 0, StringLength(R2S(percent)) - 2)) .. "%|r )")
			end
			p = nil
		end
		lopa = 0
	end
	while(true) do
		if (lopa > 8) then break end
		udg_Player_Taken_Damage_Current[lopa] = .0
		udg_Player_Received_Damage_Current[lopa] = .0
		lopa = lopa + 1
	end
end

function MoveDammiReferencePanel_Timer()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local dammi = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local x = GetUnitX(hero) ---@type number real
	local y = GetUnitY(hero) ---@type number real
	local alife = LoadBoolean(udg_hash, h, 3) ---@type boolean
	if (GetUnitState(hero, UNIT_STATE_LIFE) < .405 and alife) then
		ShowUnit(dammi, false)
		alife = false
		SaveBoolean(udg_hash, h, 3, alife)
	else
		if (GetUnitState(hero, UNIT_STATE_LIFE) > .405 and alife == false) then
			ShowUnit(dammi, true)
			alife = true
			SaveBoolean(udg_hash, h, 3, alife)
		end
		SetUnitX(dammi, x)
		SetUnitY(dammi, y)
	end
	t = nil
	hero = nil
	dammi = nil
end

---@param hero unit
function MoveDammiReferencePanel(hero)
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi = CreateUnit(GetOwningPlayer(hero), FourCC('h00C'), GetUnitX(hero), GetUnitY(hero), .0) ---@type unit
	SaveUnitHandle(udg_hash, h, 1, hero)
	SaveUnitHandle(udg_hash, h, 2, dammi)
	SaveBoolean(udg_hash, h, 3, true)
	IssueImmediateOrderById(dammi, $D0057)
	TimerStart(t, 1., true, MoveDammiReferencePanel_Timer)
	t = nil
	dammi = nil
end

---@param Unit unit
---@return boolean
function IsUnitInvulnerable(Unit)
	local Health_Current = GetWidgetLife(Unit) ---@type number real
	local Mana_Current = GetUnitState(Unit, UNIT_STATE_MANA) ---@type number real
	local Check_Health ---@type boolean
	SetWidgetLife(Unit, Health_Current + .001)
	if Health_Current ~= GetWidgetLife(Unit) then
		UnitDamageTarget(Unit, Unit, .001, false, true, nil, nil, nil)
		Check_Health = (GetWidgetLife(Unit) == Health_Current + .001)
	else
		UnitDamageTarget(Unit, Unit, .001, false, true, nil, nil, nil)
		Check_Health = (GetWidgetLife(Unit) == Health_Current)
		SetWidgetLife(Unit, Health_Current)
	end
	if Check_Health then
		return not (GetUnitState(Unit, UNIT_STATE_MANA) ~= Mana_Current)
	end
	return Check_Health
end

function GroupToGroupUnitMoving()
	GroupAddUnit(udg_Temp_Group[1], GetEnumUnit())
end

---@param gold group
---@param gnew group
function GroupToGroup(gold, gnew)
	udg_Temp_Group[1] = gnew
	ForGroup(gold, GroupToGroupUnitMoving)
	udg_Temp_Group[1] = nil
end

---@param start number integer
---@param Yt number integer
function CreateEnergyWall(start, Yt)
	local lopa = start ---@type number integer
	local lopb ---@type number integer
	while(true) do
		if (lopa > Yt) then break end
		udg_EnergyWallUnit[lopa] = CreateUnit(Player($F), FourCC('h00I'), udg_EnergyWallX[lopa], udg_EnergyWallY[lopa], udg_EnergyWallAngle[lopa])
		lopb = 1
		while(true) do
			if (lopb > 7) then break end
			udg_EnergyWallBlock[(lopa - 1) * 7 + lopb] = CreateDestructable(FourCC('YTpc'), udg_EnergyWallX[lopa] - ((4 - lopb) * 128. - 64.) * Cos((udg_EnergyWallAngle[lopa] - 90.) * bj_DEGTORAD), udg_EnergyWallY[lopa] - ((4 - lopb) * 128. - 64.) * Sin((udg_EnergyWallAngle[lopa] - 90.) * bj_DEGTORAD), udg_EnergyWallAngle[lopa], 1., 0)
			lopb = lopb + 1
		end
		lopa = lopa + 1
	end
end

---@param target unit
---@param magicdamage number real
---@param chaosdamage number real
---@return number real
function ConvertMagicAndChaosDamageInClear(target, magicdamage, chaosdamage)
	local itog = magicdamage ---@type number real
	if IsUnitType(target, UNIT_TYPE_MAGIC_IMMUNE) == false then
		if IsUnitType(target, UNIT_TYPE_HERO) then
			magicdamage = magicdamage * .75
		end
		if GetUnitAbilityLevel(target, FourCC('A0HD')) > 0 then
			magicdamage = magicdamage * 1.5
		end
		if GetUnitAbilityLevel(target, FourCC('A0CZ')) > 0 then
			magicdamage = magicdamage * .75
		end
		if GetUnitAbilityLevel(target, FourCC('A017')) > 0 then
			magicdamage = magicdamage * .85
		end
		if GetUnitAbilityLevel(target, FourCC('A01C')) > 0 then
			magicdamage = magicdamage * .7
		end
		if GetUnitAbilityLevel(target, FourCC('A09T')) > 0 then
			magicdamage = magicdamage * .7
		end
	else
		magicdamage = .0
	end
	itog = magicdamage + chaosdamage
	return itog
end

function RemoveUnitAttack_End()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local ef = LoadEffectHandle(udg_hash, h, 2) ---@type effect
	UnitRemoveAbility(target, FourCC('A0PL'))
	DestroyEffect(ef)
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	ef = nil
	target = nil
end

---@param target unit
---@param time number real
function RemoveUnitAttack(target, time)
	local t ---@type timer
	local h ---@type number integer
	local ef ---@type effect
	local newtime ---@type number real
	if LoadTimerHandle(udg_hash, GetHandleId(target), $A4) == nil then
		t = CreateTimer()
		h = GetHandleId(t)
		ef = AddSpecialEffectTarget("Effects\\NoAttack.mdx", target, "overhead")
		UnitAddAbility(target, FourCC('A0PL'))
		SaveUnitHandle(udg_hash, h, 1, target)
		SaveEffectHandle(udg_hash, h, 2, ef)
		SaveTimerHandle(udg_hash, GetHandleId(target), $A4, t)
		ef = nil
		newtime = time
	else
		t = LoadTimerHandle(udg_hash, GetHandleId(target), $A4)
		if time > TimerGetRemaining(t) then
			newtime = time
		else
			newtime = TimerGetRemaining(t)
		end
	end
	TimerStart(t, newtime, false, RemoveUnitAttack_End)
	t = nil
end

---@return number real
function HaveAnyTimeTalisman()
	local respawn = .0 ---@type number real
	local grp = CreateGroup() ---@type group
	local Picked ---@type unit
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, grp)
	while(true) do
		Picked = FirstOfGroup(grp)
		if (Picked == nil) then break end
		if IsUnitType(Picked, UNIT_TYPE_HERO) and GetPlayerId(GetOwningPlayer(Picked)) <= 8 then
			if CountItemOfTypeOnUnit(Picked, FourCC('I02R')) > 0 and (.1 > respawn) then
				respawn = .1
			end
			if CountItemOfTypeOnUnit(Picked, FourCC('I02S')) > 0 and (.15 > respawn) then
				respawn = .15
			end
			if CountItemOfTypeOnUnit(Picked, FourCC('I02W')) > 0 and (.2 > respawn) then
				respawn = .2
			end
			if CountItemOfTypeOnUnit(Picked, FourCC('I02X')) > 0 and (.25 > respawn) then
				respawn = .25
			end
			if CountItemOfTypeOnUnit(Picked, FourCC('I02Y')) > 0 and (.3 > respawn) then
				respawn = .3
			end
		end
		GroupRemoveUnit(grp, Picked)
	end
	Picked = nil
	GroupClear(grp)
	DestroyGroup(grp)
	grp = nil
	return respawn
end

function Trig_Players_Start_Script_Func034A()
	SetPlayerFlagBJ(PLAYER_STATE_GIVES_BOUNTY, true, GetEnumPlayer())
	SetPlayerColorBJ(GetEnumPlayer(), PLAYER_COLOR_BROWN, true)
end

function Trig_Players_Start_Script_Actions()
	AbilityPreload(FourCC('A0J2'), 30)
	AbilityPreload(FourCC('A0J4'), 25)
	udg_CountGuardsExorcist = 8
	udg_ColorString[1] = "|cffff0000"
	udg_ColorString[2] = "|cff0000ff"
	udg_ColorString[3] = "|cff00f5ff"
	udg_ColorString[4] = "|cff551A8B"
	udg_ColorString[5] = "|cffffff00"
	udg_ColorString[6] = "|cffEE9A00"
	udg_ColorString[7] = "|cff00CD00"
	udg_ColorString[8] = "|cffFF69B4"
	udg_ColorString[9] = "|cffC0C0C0"
	udg_ColorString[$A] = "|cffB0E2FF"
	udg_ColorString[$B] = "|cff006400"
	udg_ColorString[$C] = "|cff8B4513"
	udg_ColorString[20] = "|cffff0000"
	udg_ColorString[21] = "|cff0000ff"
	udg_ColorString[22] = "|c00959697"
	udg_ColorString[23] = "|cFFFFDC00"
	udg_ColorString[24] = "|cFFDCDCDC"
	SetPlayerName(Player(9), "TRIGSTR_858")
	SetPlayerName(Player($A), "Армия Тьмы")
	SetPlayerName(Player($B), "Армия Тьмы")
	SetPlayerColorBJ(Player($F), PLAYER_COLOR_LIGHT_BLUE, false)
	ForceAddPlayer(udg_Players_Enemy_Group, Player(9))
	ForceAddPlayer(udg_Players_Enemy_Group, Player($A))
	ForceAddPlayer(udg_Players_Enemy_Group, Player($B))
	SetForceAllianceStateBJ(udg_Players_Enemy_Group, udg_Players_Enemy_Group, 3)
	SetForceAllianceStateBJ(udg_Players_Enemy_Group, bj_FORCE_PLAYER[$C], 3)
	SetForceAllianceStateBJ(bj_FORCE_PLAYER[$C], udg_Players_Enemy_Group, 3)
	SetForceAllianceStateBJ(udg_Players_Enemy_Group, bj_FORCE_PLAYER[$F], 0)
	SetForceAllianceStateBJ(bj_FORCE_PLAYER[$F], udg_Players_Enemy_Group, 0)
	ForForce(udg_Players_Enemy_Group, Trig_Players_Start_Script_Func034A)
end

function InitTrig_Players_Start_Script()
	gg_trg_Players_Start_Script = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Players_Start_Script, 2.)
	TriggerAddAction(gg_trg_Players_Start_Script, Trig_Players_Start_Script_Actions)
end

function Trig_InitMap_Func009A()
	CreateFogModifierRectBJ(true, GetEnumPlayer(), FOG_OF_WAR_VISIBLE, gg_rct_PlayableAreaVisionDeBag)
	FogModifierStart(bj_lastCreatedFogModifier)
	DestroyFogModifier(bj_lastCreatedFogModifier)
	CreateFogModifierRectBJ(true, GetEnumPlayer(), FOG_OF_WAR_MASKED, gg_rct_MinusVision1)
	FogModifierStart(bj_lastCreatedFogModifier)
	CameraSetupApplyForPlayer(true, gg_cam_Kamera_na_taverni, GetEnumPlayer(), 0)
	CinematicFadeBJ(1, .0, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 0)
end

function Trig_InitMap_Actions()
	SetTimeOfDay(5.45)
	SetMapFlag(MAP_RESOURCE_TRADING_ALLIES_ONLY, true)
	ShowInterfaceForceOff(bj_FORCE_ALL_PLAYERS, .0)
	StartTimerBJ(udg_InitMapTimer, false, 10.)
	DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 12., "|cff99ccffДобро пожаловать на альфа версию карты|r |Cfffed312Последние Стражи|r (|Cfffed312Last Guards|r)|cff99ccff!|r")
	DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 12., "|cff99ccffЦель игры: выстоять против 10 разнообразнейших волн врагов, защищая стражей-заклинателей. По ходу прохождения вы также поучавствуете во множестве различных игровых событий, сражений, битв с боссами и многое другое...|r")
	DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 12., "|cff99ccffА теперь - выберете своего героя, и отправляйтесь в бой!|r")
	ForForce(bj_FORCE_ALL_PLAYERS, Trig_InitMap_Func009A)
end

function InitTrig_InitMap()
	gg_trg_InitMap = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_InitMap, .0)
	TriggerAddAction(gg_trg_InitMap, Trig_InitMap_Actions)
end

function Trig_InitMapStage2_Func002A()
	CameraSetupApplyForPlayer(true, gg_cam_Kamera_na_taverni, GetEnumPlayer(), 0)
	CinematicFadeBJ(0, 5., "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 0)
end

function Trig_InitMapStage2_Actions()
	ShowInterfaceForceOn(bj_FORCE_ALL_PLAYERS, 5.)
	ForForce(bj_FORCE_ALL_PLAYERS, Trig_InitMapStage2_Func002A)
end

function InitTrig_InitMapStage2()
	gg_trg_InitMapStage2 = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_InitMapStage2, udg_InitMapTimer)
	TriggerAddAction(gg_trg_InitMapStage2, Trig_InitMapStage2_Actions)
end

function Trig_System_Spells_Load_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local i = LoadInteger(udg_hash, h, 0) ---@type number integer
	if LoadInteger(udg_hash, h, i) ~= 0 then
		AbilityPreload(LoadInteger(udg_hash, h, i), LoadInteger(udg_hash, h, i + 1))
		i = i + 2
		SaveInteger(udg_hash, h, 0, i)
	else
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
end

function Trig_System_Spells_Load_Actions()
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local i = 1 ---@type number integer
	SaveInteger(udg_hash, h, 0, i)
	SaveInteger(udg_hash, h, 1, FourCC('A07F'))
	SaveInteger(udg_hash, h, 2, $A)
	SaveInteger(udg_hash, h, 3, FourCC('A07G'))
	SaveInteger(udg_hash, h, 4, $A)
	SaveInteger(udg_hash, h, 5, FourCC('A07I'))
	SaveInteger(udg_hash, h, 6, $A)
	SaveInteger(udg_hash, h, 7, FourCC('A09D'))
	SaveInteger(udg_hash, h, 8, $A)
	SaveInteger(udg_hash, h, 9, FourCC('A0E6'))
	SaveInteger(udg_hash, h, $A, $A)
	SaveInteger(udg_hash, h, $B, FourCC('A0E7'))
	SaveInteger(udg_hash, h, $C, $A)
	SaveInteger(udg_hash, h, $D, FourCC('A0B3'))
	SaveInteger(udg_hash, h, $E, $A)
	SaveInteger(udg_hash, h, $F, FourCC('A0B4'))
	SaveInteger(udg_hash, h, 16, $A)
	SaveInteger(udg_hash, h, 17, FourCC('A0B5'))
	SaveInteger(udg_hash, h, 18, $A)
	SaveInteger(udg_hash, h, 19, FourCC('A0E9'))
	SaveInteger(udg_hash, h, 20, $A)
	SaveInteger(udg_hash, h, 21, FourCC('A0EA'))
	SaveInteger(udg_hash, h, 22, $A)
	SaveInteger(udg_hash, h, 23, FourCC('A0EB'))
	SaveInteger(udg_hash, h, 24, $A)
	SaveInteger(udg_hash, h, 25, FourCC('A0AG'))
	SaveInteger(udg_hash, h, 26, $A)
	SaveInteger(udg_hash, h, 27, FourCC('A0AH'))
	SaveInteger(udg_hash, h, 28, $A)
	SaveInteger(udg_hash, h, 29, FourCC('A087'))
	SaveInteger(udg_hash, h, 30, $A)
	SaveInteger(udg_hash, h, 31, FourCC('A0AS'))
	SaveInteger(udg_hash, h, 32, $A)
	SaveInteger(udg_hash, h, 33, FourCC('A0AT'))
	SaveInteger(udg_hash, h, 34, $A)
	SaveInteger(udg_hash, h, 35, FourCC('A0D8'))
	SaveInteger(udg_hash, h, 36, $A)
	SaveInteger(udg_hash, h, 37, FourCC('A07A'))
	SaveInteger(udg_hash, h, 38, 7)
	SaveInteger(udg_hash, h, 39, FourCC('A07E'))
	SaveInteger(udg_hash, h, 40, 7)
	SaveInteger(udg_hash, h, 41, FourCC('A0H6'))
	SaveInteger(udg_hash, h, 42, $A)
	SaveInteger(udg_hash, h, 43, FourCC('A0H5'))
	SaveInteger(udg_hash, h, 44, $A)
	SaveInteger(udg_hash, h, 45, FourCC('A0H4'))
	SaveInteger(udg_hash, h, 46, $A)
	TimerStart(t, .2, true, Trig_System_Spells_Load_Periodic_Actions)
end

function InitTrig_System_Spells_Load()
	gg_trg_System_Spells_Load = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_System_Spells_Load, 2., false)
	TriggerAddAction(gg_trg_System_Spells_Load, Trig_System_Spells_Load_Actions)
end

function Trig_Items_Preload_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local i = LoadInteger(udg_hash, h, 0) ---@type number integer
	if LoadInteger(udg_hash, h, i) ~= 0 then
		ItemPreload(LoadInteger(udg_hash, h, i))
		i = i + 1
		SaveInteger(udg_hash, h, 0, i)
	else
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
end

function Trig_Items_Preload_Actions()
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local i = 1 ---@type number integer
	SaveInteger(udg_hash, h, 0, i)
	SaveInteger(udg_hash, h, 1, FourCC('I00I'))
	SaveInteger(udg_hash, h, 2, FourCC('I01G'))
	SaveInteger(udg_hash, h, 3, FourCC('I03W'))
	SaveInteger(udg_hash, h, 4, FourCC('I036'))
	SaveInteger(udg_hash, h, 5, FourCC('I05A'))
	SaveInteger(udg_hash, h, 6, FourCC('I04Z'))
	SaveInteger(udg_hash, h, 7, FourCC('I01U'))
	SaveInteger(udg_hash, h, 8, FourCC('I03U'))
	SaveInteger(udg_hash, h, 9, FourCC('I02J'))
	SaveInteger(udg_hash, h, $A, FourCC('I01B'))
	SaveInteger(udg_hash, h, $B, FourCC('I01X'))
	SaveInteger(udg_hash, h, $C, FourCC('I052'))
	SaveInteger(udg_hash, h, $D, FourCC('I053'))
	SaveInteger(udg_hash, h, $E, FourCC('I051'))
	SaveInteger(udg_hash, h, $F, FourCC('I03Q'))
	SaveInteger(udg_hash, h, 16, FourCC('I048'))
	SaveInteger(udg_hash, h, 17, FourCC('I01P'))
	SaveInteger(udg_hash, h, 18, FourCC('I00G'))
	SaveInteger(udg_hash, h, 19, FourCC('I01Q'))
	SaveInteger(udg_hash, h, 20, FourCC('I01V'))
	SaveInteger(udg_hash, h, 21, FourCC('I02N'))
	SaveInteger(udg_hash, h, 22, FourCC('I03N'))
	SaveInteger(udg_hash, h, 23, FourCC('I042'))
	SaveInteger(udg_hash, h, 24, FourCC('I03S'))
	SaveInteger(udg_hash, h, 25, FourCC('I02U'))
	SaveInteger(udg_hash, h, 26, FourCC('I00C'))
	SaveInteger(udg_hash, h, 27, FourCC('I00A'))
	SaveInteger(udg_hash, h, 28, FourCC('I04V'))
	SaveInteger(udg_hash, h, 29, FourCC('I044'))
	SaveInteger(udg_hash, h, 30, FourCC('I00J'))
	SaveInteger(udg_hash, h, 31, FourCC('I03G'))
	SaveInteger(udg_hash, h, 32, FourCC('I04L'))
	SaveInteger(udg_hash, h, 33, FourCC('I02I'))
	SaveInteger(udg_hash, h, 34, FourCC('I02T'))
	SaveInteger(udg_hash, h, 35, FourCC('I04U'))
	SaveInteger(udg_hash, h, 36, FourCC('I03K'))
	SaveInteger(udg_hash, h, 37, FourCC('I03L'))
	SaveInteger(udg_hash, h, 38, FourCC('I03M'))
	SaveInteger(udg_hash, h, 39, FourCC('I04X'))
	SaveInteger(udg_hash, h, 40, FourCC('I055'))
	SaveInteger(udg_hash, h, 41, FourCC('I056'))
	SaveInteger(udg_hash, h, 42, FourCC('I057'))
	SaveInteger(udg_hash, h, 43, FourCC('I058'))
	SaveInteger(udg_hash, h, 44, FourCC('I02E'))
	SaveInteger(udg_hash, h, 45, FourCC('I02F'))
	SaveInteger(udg_hash, h, 46, FourCC('I01S'))
	SaveInteger(udg_hash, h, 47, FourCC('I03Y'))
	SaveInteger(udg_hash, h, 48, FourCC('I02G'))
	SaveInteger(udg_hash, h, 49, FourCC('I00S'))
	SaveInteger(udg_hash, h, 50, FourCC('I00T'))
	SaveInteger(udg_hash, h, 51, FourCC('I00V'))
	SaveInteger(udg_hash, h, 52, FourCC('I00X'))
	SaveInteger(udg_hash, h, 53, FourCC('I012'))
	SaveInteger(udg_hash, h, 54, FourCC('I01W'))
	TimerStart(t, .05, true, Trig_Items_Preload_Periodic_Actions)
end

function InitTrig_Items_Preload()
	gg_trg_Items_Preload = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Items_Preload, 17., false)
	TriggerAddAction(gg_trg_Items_Preload, Trig_Items_Preload_Actions)
end

---@return boolean
function Trig_Igrok_Massiv_Save_Func005Func001C()
	return (GetPlayerSlotState(Player(-1 + (bj_forLoopAIndex))) == PLAYER_SLOT_STATE_PLAYING) and (GetPlayerController(Player(-1 + (bj_forLoopAIndex))) ~= MAP_CONTROL_COMPUTER)
end

function Trig_Igrok_Massiv_Save_Func006002()
	SetPlayerStateBJ(GetEnumPlayer(), PLAYER_STATE_RESOURCE_FOOD_CAP, 1)
end

---@return boolean
function Trig_Igrok_Massiv_Save_Func007C()
	return (CountPlayersInForceBJ(udg_IGRAET) <= 0)
end

function Trig_Igrok_Massiv_Save_Actions()
	RemoveAllGuardPositions(Player(9))
	RemoveAllGuardPositions(Player($A))
	RemoveAllGuardPositions(Player($B))
	bj_forLoopAIndex = 1
	bj_forLoopAIndexEnd = 9
	while(true) do
		if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
		if (Trig_Igrok_Massiv_Save_Func005Func001C()) then
			udg_Igraet_Igrok[bj_forLoopAIndex] = true
			ForceAddPlayer(udg_IGRAET, Player(-1 + (bj_forLoopAIndex)))
		else
			udg_Igraet_Igrok[bj_forLoopAIndex] = false
		end
		bj_forLoopAIndex = bj_forLoopAIndex + 1
	end
	ForForce(udg_IGRAET, Trig_Igrok_Massiv_Save_Func006002)
	if (Trig_Igrok_Massiv_Save_Func007C()) then
		DisplayTextToForce(bj_FORCE_ALL_PLAYERS, "Игра одному пока что запрещена!!!")
		CustomVictoryBJ(ForcePickRandomPlayer(udg_IGRAET), true, false)
	end
end

function InitTrig_Igrok_Massiv_Save()
	gg_trg_Igrok_Massiv_Save = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Igrok_Massiv_Save, .0)
	TriggerAddAction(gg_trg_Igrok_Massiv_Save, Trig_Igrok_Massiv_Save_Actions)
end

---@return boolean
function Trig_Load_Vsiakoe_Func004Func001Func003C()
	return (GetUnitTypeId(GetEnumUnit()) == FourCC('e002')) or (GetUnitTypeId(GetEnumUnit()) == FourCC('h01K')) or (GetUnitTypeId(GetEnumUnit()) == FourCC('n00Y')) or (GetUnitTypeId(GetEnumUnit()) == FourCC('o003'))
end

---@return boolean
function Trig_Load_Vsiakoe_Func004Func001C()
	return (Trig_Load_Vsiakoe_Func004Func001Func003C())
end

function Trig_Load_Vsiakoe_Func004A()
	if (Trig_Load_Vsiakoe_Func004Func001C()) then
		UnitAddType(GetEnumUnit(), UNIT_TYPE_PEON)
		GroupAddUnit(udg_PortalCastersMagi, GetEnumUnit())
	end
end

function Trig_Load_Vsiakoe_Func007A()
	SetPlayerStateBJ(GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD, 500)
	SetPlayerStateBJ(GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER, 8)
	SetPlayerAbilityAvailableBJ(false, FourCC('A04F'), GetEnumPlayer())
	SetPlayerAbilityAvailableBJ(false, FourCC('A0EF'), GetEnumPlayer())
end

function Trig_Load_Vsiakoe_Actions()
	CreateNUnitsAtLoc(1, FourCC('h00U'), Player($F), GetRectCenter(bj_mapInitialPlayableArea), bj_UNIT_FACING)
	udg_preloader = bj_lastCreatedUnit
	ForGroupBJ(GetUnitsInRectAll(gg_rct_cast_magi), Trig_Load_Vsiakoe_Func004A)
	CreateQuestBJ(0, "Авторы", "Создатели Карты (|Cfffed312Последние Стражи|r/|Cfffed312Last Guards|r)|n|cff99ccfflluo_OHEP (Derarius/Sladkoegka)|nCosonic5|r", "CommandButton\\Map_Autor's.blp")
	CreateQuestBJ(2, "Игровые Команды", "TRIGSTR_5336", "CommandButton\\Game_Commands.blp")
	ForForce(bj_FORCE_ALL_PLAYERS, Trig_Load_Vsiakoe_Func007A)
end

function InitTrig_Load_Vsiakoe()
	gg_trg_Load_Vsiakoe = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Load_Vsiakoe, 2.)
	TriggerAddAction(gg_trg_Load_Vsiakoe, Trig_Load_Vsiakoe_Actions)
end

---@return boolean
function Trig_Igrok_Massiv_Liver_Func004Func001C()
	return (IsUnitType(GetEnumUnit(), UNIT_TYPE_HERO)) ~= nil
end

function Trig_Igrok_Massiv_Liver_Func004A()
	if (Trig_Igrok_Massiv_Liver_Func004Func001C()) then
		bj_forLoopAIndex = 1
		bj_forLoopAIndexEnd = 6
		while(true) do
			if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
			RemoveItem(UnitItemInSlotBJ(GetEnumUnit(), bj_forLoopAIndex))
			bj_forLoopAIndex = bj_forLoopAIndex + 1
		end
	end
	KillUnit(GetEnumUnit())
	RemoveUnit(GetEnumUnit())
end

---@return boolean
function Trig_Igrok_Massiv_Liver_Func012Func001C()
	return (udg_Is_Player_Fast_Wave_Start[(1 + GetPlayerId(GetTriggerPlayer()))])
end

---@return boolean
function Trig_Igrok_Massiv_Liver_Func012Func002C()
	return (udg_Count_Players_Fast_Wave_Start >= CountPlayersInForceBJ(udg_IGRAET))
end

---@return boolean
function Trig_Igrok_Massiv_Liver_Func012C()
	return (udg_Is_Fast_Wave_Start_On_Off)
end

---@return boolean
function Trig_Igrok_Massiv_Liver_Func013Func001C()
	return (GetRandomInt(1, 2) == 1)
end

---@return boolean
function Trig_Igrok_Massiv_Liver_Func013Func002C()
	return (GetRandomInt(1, 2) == 1)
end

---@return boolean
function Trig_Igrok_Massiv_Liver_Func013C()
	return (GetRandomInt(1, 2) == 1)
end

function Trig_Igrok_Massiv_Liver_Actions()
	udg_Igraet_Igrok[(1 + GetPlayerId(GetTriggerPlayer()))] = false
	ForceRemovePlayer(udg_IGRAET, GetTriggerPlayer())
	ForGroupBJ(GetUnitsOfPlayerAll(GetTriggerPlayer()), Trig_Igrok_Massiv_Liver_Func004A)
	udg_herounit[(1 + GetPlayerId(GetTriggerPlayer()))] = nil
	DestroyEffect(udg_Rune_On_Base_Effect[(CountPlayersInForceBJ(udg_IGRAET) + 1)])
	RemoveUnit(udg_Rune_On_Base_Dummy[(CountPlayersInForceBJ(udg_IGRAET) + 1)])
	udg_Rune_On_Base_Dummy[(CountPlayersInForceBJ(udg_IGRAET) + 1)] = nil
	udg_ColorString[(1 + GetPlayerId(GetTriggerPlayer()))] = "|cFF969696"
	MultiboardSetItemValueBJ(udg_MultiBoard, 2, udg_PlayerNumberInMB[(1 + GetPlayerId(GetTriggerPlayer()))], ("|cFF969696" .. (GetPlayerName(GetTriggerPlayer()) .. "|r")))
	if (Trig_Igrok_Massiv_Liver_Func012C()) then
		if (Trig_Igrok_Massiv_Liver_Func012Func001C()) then
			udg_Count_Players_Fast_Wave_Start = (udg_Count_Players_Fast_Wave_Start - 1)
			udg_Is_Player_Fast_Wave_Start[(1 + GetPlayerId(GetTriggerPlayer()))] = false
		end
		if (Trig_Igrok_Massiv_Liver_Func012Func002C()) then
			StartTimerBJ(udg_Timer_Nomera_Volni, false, 1.)
		end
	end
	if (Trig_Igrok_Massiv_Liver_Func013C()) then
		if (Trig_Igrok_Massiv_Liver_Func013Func002C()) then
			DisplayTextToForce(bj_FORCE_ALL_PLAYERS, (udg_ColorString[(1 + GetPlayerId(GetTriggerPlayer()))] .. (GetPlayerName(GetTriggerPlayer()) .. "|r по непонятным причинам решил ливнуть!")))
		else
			DisplayTextToForce(bj_FORCE_ALL_PLAYERS, (udg_ColorString[(1 + GetPlayerId(GetTriggerPlayer()))] .. (GetPlayerName(GetTriggerPlayer()) .. "|r вышел из игры! Ну почему всегда найдется тот, кто запорет всю игру?!")))
		end
	else
		if (Trig_Igrok_Massiv_Liver_Func013Func001C()) then
			DisplayTextToForce(bj_FORCE_ALL_PLAYERS, (udg_ColorString[(1 + GetPlayerId(GetTriggerPlayer()))] .. (GetPlayerName(GetTriggerPlayer()) .. "|r сбежал с поля боя...Чтож‚ придется подолжать без него!")))
		else
			DisplayTextToForce(bj_FORCE_ALL_PLAYERS, (udg_ColorString[(1 + GetPlayerId(GetTriggerPlayer()))] .. (GetPlayerName(GetTriggerPlayer()) .. "|r специально (а может случайно?) покинул игру!")))
		end
	end
end

function InitTrig_Igrok_Massiv_Liver()
	gg_trg_Igrok_Massiv_Liver = CreateTrigger()
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(0))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(1))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(2))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(3))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(4))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(5))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(6))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(7))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(8))
	TriggerAddAction(gg_trg_Igrok_Massiv_Liver, Trig_Igrok_Massiv_Liver_Actions)
end

function Trig_Messager_Actions()
	ConditionalTriggerExecute(gg_trg_Start_game)
	CreateNUnitsAtLoc(1, FourCC('h009'), Player($B), GetRectCenter(gg_rct_Portal_Attack_Dummy_Left), bj_UNIT_FACING)
	udg_Dammy_Portal[1] = bj_lastCreatedUnit
	SetUnitFlyHeight(udg_Dammy_Portal[1], 150., 1200.)
	CreateNUnitsAtLoc(1, FourCC('h009'), Player($B), GetRectCenter(gg_rct_Portal_Attack_Dummy_Right), bj_UNIT_FACING)
	udg_Dammy_Portal[2] = bj_lastCreatedUnit
	SetUnitFlyHeight(udg_Dammy_Portal[2], 150., 1200.)
	CreateNUnitsAtLoc(1, FourCC('h009'), Player($B), GetRectCenter(gg_rct_Portal_Attack_Dummy_Top), bj_UNIT_FACING)
	udg_Dammy_Portal[3] = bj_lastCreatedUnit
	SetUnitFlyHeight(udg_Dammy_Portal[3], 150., 1200.)
	udg_Rune_On_Base_Dummy_X[1] = 1220.
	udg_Rune_On_Base_Dummy_Y[1] = -4740.
	udg_Rune_On_Base_Effect_String[1] = "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes0.mdl"
	udg_Rune_On_Base_Dummy_X[2] = 1745.
	udg_Rune_On_Base_Dummy_Y[2] = -6380.
	udg_Rune_On_Base_Effect_String[2] = "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes1.mdl"
	udg_Rune_On_Base_Dummy_X[3] = 1100.
	udg_Rune_On_Base_Dummy_Y[3] = -5000.
	udg_Rune_On_Base_Effect_String[3] = "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes2.mdl"
	udg_Rune_On_Base_Dummy_X[4] = 1735.
	udg_Rune_On_Base_Dummy_Y[4] = -6160.
	udg_Rune_On_Base_Effect_String[4] = "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes3.mdl"
	udg_Rune_On_Base_Dummy_X[5] = 1400.
	udg_Rune_On_Base_Dummy_Y[5] = -4990.
	udg_Rune_On_Base_Effect_String[5] = "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes4.mdl"
	udg_Rune_On_Base_Dummy_X[6] = 1600.
	udg_Rune_On_Base_Dummy_Y[6] = -6310.
	udg_Rune_On_Base_Effect_String[6] = "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes5.mdl"
	udg_Rune_On_Base_Dummy_X[7] = 800.
	udg_Rune_On_Base_Dummy_Y[7] = -6420.
	udg_Rune_On_Base_Effect_String[7] = "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes6.mdl"
	udg_Rune_On_Base_Dummy_X[8] = 800.
	udg_Rune_On_Base_Dummy_Y[8] = -6200.
	udg_Rune_On_Base_Effect_String[8] = "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes7.mdl"
	udg_Rune_On_Base_Dummy_X[9] = 1000.
	udg_Rune_On_Base_Dummy_Y[9] = -6400.
	udg_Rune_On_Base_Effect_String[9] = "Doodads\\Cinematic\\GlowingRunes\\GlowingRunes8.mdl"
	udg_Rune_Position_X[1] = $58C
	udg_Rune_Position_Y[1] = -$AF0
	udg_Rune_Position_X[2] = $BE5
	udg_Rune_Position_Y[2] = -7523
	udg_Rune_Position_X[3] = -390
	udg_Rune_Position_Y[3] = -8275
	udg_Arrow_Pointer_Guide_X[1] = $4CE
	udg_Arrow_Pointer_Guide_Y[1] = -5065
	udg_Arrow_Pointer_Guide_Angle[1] = $B4
	udg_Arrow_Pointer_Guide_X[2] = $62C
	udg_Arrow_Pointer_Guide_Y[2] = -6220
	udg_Arrow_Pointer_Guide_Angle[2] = 45
	udg_Arrow_Pointer_Guide_X[3] = $53A
	udg_Arrow_Pointer_Guide_Y[3] = -5220
	udg_Arrow_Pointer_Guide_Angle[3] = $B4
	udg_Arrow_Pointer_Guide_X[4] = $65C
	udg_Arrow_Pointer_Guide_Y[4] = -6130
	udg_Arrow_Pointer_Guide_Angle[4] = 45
	udg_Arrow_Pointer_Guide_X[5] = $461
	udg_Arrow_Pointer_Guide_Y[5] = -5223
	udg_Arrow_Pointer_Guide_Angle[5] = $B4
	udg_Arrow_Pointer_Guide_X[6] = $591
	udg_Arrow_Pointer_Guide_Y[6] = -6215
	udg_Arrow_Pointer_Guide_Angle[6] = 45
	udg_Arrow_Pointer_Guide_X[7] = 822
	udg_Arrow_Pointer_Guide_Y[7] = -6227
	udg_Arrow_Pointer_Guide_Angle[7] = 315
	udg_Arrow_Pointer_Guide_X[8] = $40C
	udg_Arrow_Pointer_Guide_Y[8] = -6216
	udg_Arrow_Pointer_Guide_Angle[8] = 315
	udg_Arrow_Pointer_Guide_X[9] = 790
	udg_Arrow_Pointer_Guide_Y[9] = -6050
	udg_Arrow_Pointer_Guide_Angle[9] = 315
	udg_Arrow_Pointer_Guide_Count = CountPlayersInForceBJ(udg_IGRAET)
	bj_forLoopAIndex = 1
	bj_forLoopAIndexEnd = CountPlayersInForceBJ(udg_IGRAET)
	while(true) do
		if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
		CreateNUnitsAtLoc(1, FourCC('h00U'), Player($F), Location(I2R(udg_Arrow_Pointer_Guide_X[bj_forLoopAIndex]), I2R(udg_Arrow_Pointer_Guide_Y[bj_forLoopAIndex])), I2R(udg_Arrow_Pointer_Guide_Angle[bj_forLoopAIndex]))
		udg_Arrow_Pointer_Guide_Unit[bj_forLoopAIndex] = bj_lastCreatedUnit
		AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, "Effects\\Arrow - Chapter Browse - Rotated.mdx")
		udg_Arrow_Pointer_Guide_Effect[bj_forLoopAIndex] = bj_lastCreatedEffect
		bj_forLoopAIndex = bj_forLoopAIndex + 1
	end
	AddSpecialEffectLocBJ(Location(I2R(udg_Rune_Position_X[1]), I2R(udg_Rune_Position_Y[1])), "Effects\\MistAura.mdx")
	AddSpecialEffectLocBJ(Location(I2R(udg_Rune_Position_X[2]), I2R(udg_Rune_Position_Y[2])), "Effects\\MistAura.mdx")
	AddSpecialEffectLocBJ(Location(I2R(udg_Rune_Position_X[3]), I2R(udg_Rune_Position_Y[3])), "Effects\\MistAura.mdx")
	AddSpecialEffectLocBJ(Location(I2R(udg_Rune_Position_X[1]), I2R(udg_Rune_Position_Y[1])), "Effects\\GreenRing.mdx")
	bj_forLoopAIndex = 1
	bj_forLoopAIndexEnd = CountPlayersInForceBJ(udg_IGRAET)
	while(true) do
		if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
		CreateNUnitsAtLoc(1, FourCC('h00E'), Player($F), Location(udg_Rune_On_Base_Dummy_X[bj_forLoopAIndex], udg_Rune_On_Base_Dummy_Y[bj_forLoopAIndex]), bj_UNIT_FACING)
		AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, udg_Rune_On_Base_Effect_String[bj_forLoopAIndex])
		SetUnitFlyHeight(bj_lastCreatedUnit, -50., .0)
		udg_Rune_On_Base_Effect[bj_forLoopAIndex] = bj_lastCreatedEffect
		udg_Rune_On_Base_Dummy[bj_forLoopAIndex] = bj_lastCreatedUnit
		bj_forLoopAIndex = bj_forLoopAIndex + 1
	end
end

function InitTrig_Messager()
	gg_trg_Messager = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Messager, 8.)
	TriggerAddAction(gg_trg_Messager, Trig_Messager_Actions)
end

function Trig_Create_TExttags_about_Shops_Actions()
	CreateTexttag("|cFF00C850Барахолка|r", .03, $FF, 2050., -5100., .0, .0, .0, 9999999.)
	CreateTexttag("|cFF00C850Экипировка|r", .03, $FF, 2050., -5250., .0, .0, .0, 99999999.)
	CreateTexttag("|cFFFF8C00Броня и Доспехи|r", .03, $FF, 2050., -5400., .0, .0, .0, 99999999.)
	CreateTexttag("|cFF9600FFВооружение|r", .03, $FF, 2050., -5660., .0, .0, .0, 99999999.)
	CreateTexttag("|cFF6464FAТайник Странника|r", .03, $FF, 2050., -5900., .0, .0, .0, 9999999.)
	CreateTexttag("|cFF6464FAМагические Артефакты|r", .03, $FF, 2050., -6130., .0, .0, .0, 999999.)
end

function InitTrig_Create_TExttags_about_Shops()
	gg_trg_Create_TExttags_about_Shops = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Create_TExttags_about_Shops, 9.)
	TriggerAddAction(gg_trg_Create_TExttags_about_Shops, Trig_Create_TExttags_about_Shops_Actions)
end

function Trig_InitHashtable_Actions()
	udg_hash = InitHashtable()
end

function InitTrig_InitHashtable()
	gg_trg_InitHashtable = CreateTrigger()
	TriggerAddAction(gg_trg_InitHashtable, Trig_InitHashtable_Actions)
end

function Trig_Save_Sounds_Actions()
	udg_Game_Sound[1] = CreateSoundFromLabel("Hint", false, false, false, $A, $A)
	udg_Game_Sound[2] = CreateSoundFromLabel("GoodJob", false, false, false, $A, $A)
	udg_Game_Sound[3] = CreateSoundFromLabel("Warning", false, false, false, $A, $A)
	udg_Game_Sound[4] = CreateSoundFromLabel("ClanInvitation", false, false, false, $A, $A)
	udg_Game_Sound[5] = CreateSoundFromLabel("NewTournament", false, false, false, $A, $A)
	udg_Game_Sound[6] = CreateSoundFromLabel("ArrangedTeamInvitation", false, false, false, $A, $A)
	udg_Game_Sound[7] = CreateSoundFromLabel("GameFound", false, false, false, $A, $A)
	udg_Game_Sound[8] = gg_snd_HeroStep1
	udg_Game_Sound[$B] = gg_snd_HeroStep2
	udg_Game_Sound[$A] = gg_snd_HeroStep3
	udg_Game_Sound[$B] = gg_snd_HeroStep4
	udg_Game_Sound[$C] = gg_snd_KnightInventoryFull1
	udg_Game_Sound[$D] = gg_snd_KnightNoGold1
	udg_Game_Sound[$E] = CreateSoundFromLabel("ShimmeringPortalBirth", false, false, false, $A, $A)
	udg_Game_Sound[$F] = CreateSoundFromLabel("ShimmeringPortalDeath", false, false, false, $A, $A)
	udg_Game_Sound[16] = CreateSoundFromLabel("ShimmeringPortalEntrance", false, false, false, $A, $A)
	udg_Game_Sound[18] = CreateSoundFromLabel("Tranquility", false, false, false, $A, $A)
	udg_Game_Sound[19] = CreateSoundFromLabel("AlchemistChemicalBurst1", false, false, false, $A, $A)
	udg_Game_Sound[20] = CreateSoundFromLabel("AlchemistMorph1", false, false, false, $A, $A)
end

function InitTrig_Save_Sounds()
	gg_trg_Save_Sounds = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Save_Sounds, 5., false)
	TriggerAddAction(gg_trg_Save_Sounds, Trig_Save_Sounds_Actions)
end

function HandleCounter_Update()
	local i = 0 ---@type number integer
	local id ---@type number integer
	local P ---@type location
	local result = 0 ---@type number real
	while(true) do
		if (i >= 50) then break end
		i = i + 1
		P[i] = Location(0, 0)
		id = GetHandleId(P[i])
		result = result + (id - $100000)
	end
	result = result / i - i / 2
	while(true) do
		RemoveLocation(P[i])
		P[i] = nil
		if (i <= 1) then break end
		i = i - 1
	end
	LeaderboardSetItemValue(udg_HandleBoard, 0, R2I(result))
end

function HandleCounter_Actions()
	udg_HandleBoard = CreateLeaderboard()
	LeaderboardSetLabel(udg_HandleBoard, "Handle Counter")
	PlayerSetLeaderboard(GetLocalPlayer(), udg_HandleBoard)
	LeaderboardDisplay(udg_HandleBoard, false)
	if GetPlayerName(GetLocalPlayer()) == "Derarius" or GetPlayerName(GetLocalPlayer()) == "WorldEdit" then
		LeaderboardDisplay(udg_HandleBoard, true)
	end
	LeaderboardAddItem(udg_HandleBoard, "Handles", 0, Player(0))
	LeaderboardSetSizeByItemCount(udg_HandleBoard, 1)
	HandleCounter_Update()
	TimerStart(GetExpiredTimer(), .05, true, HandleCounter_Update)
end

function InitTrig_HandleCounter()
	TimerStart(CreateTimer(), 0, false, HandleCounter_Actions)
end

function Trig_Set_Chlenix_Actions()
	udg_Integer_Creep_On_Line_Spawn[1] = S2I(SubStringBJ(GetEventPlayerChatString(), $A, $A))
	udg_Integer_Creep_On_Line_Spawn[2] = S2I(SubStringBJ(GetEventPlayerChatString(), $B, $B))
	udg_Integer_Creep_On_Line_Spawn[3] = S2I(SubStringBJ(GetEventPlayerChatString(), $C, $C))
	DisplayTextToForce(bj_FORCE_ALL_PLAYERS, "|cFFFF0000CHLENIX|r АКТИВИРОВАН")
end

function InitTrig_Set_Chlenix()
	gg_trg_Set_Chlenix = CreateTrigger()
	TriggerRegisterPlayerChatEvent(gg_trg_Set_Chlenix, Player(0), "-chlenix", false)
	TriggerAddAction(gg_trg_Set_Chlenix, Trig_Set_Chlenix_Actions)
end

function Trig_Set_Energy_Walls_Func003A()
	udg_EnergyWallX[udg_Temp_Integer[1]] = R2I(GetUnitX(GetEnumUnit()))
	udg_EnergyWallY[udg_Temp_Integer[1]] = R2I(GetUnitY(GetEnumUnit()))
	udg_EnergyWallAngle[udg_Temp_Integer[1]] = R2I(GetUnitFacing(GetEnumUnit()))
	RemoveUnit(GetEnumUnit())
	udg_Temp_Integer[1] = (udg_Temp_Integer[1] + 1)
end

function Trig_Set_Energy_Walls_Actions()
	udg_Temp_Integer[1] = 1
	udg_EnergyWallCount[1] = $B
	ForGroupBJ(GetUnitsOfPlayerAndTypeId(Player($F), FourCC('h00I')), Trig_Set_Energy_Walls_Func003A)
end

function InitTrig_Set_Energy_Walls()
	gg_trg_Set_Energy_Walls = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Set_Energy_Walls, 5.)
	TriggerAddAction(gg_trg_Set_Energy_Walls, Trig_Set_Energy_Walls_Actions)
end

function Trig_EitiArenaRemovesAllItems_Actions()
	RemoveItem(GetEnumItem())
end

function Trig_TimerEitiAreniTheEnd3_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local td = LoadTimerDialogHandle(udg_hash, GetHandleId(gg_rct_Event_Bonus_Etei_arena_1), $B) ---@type timerdialog
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local xc = GetRectCenterX(gg_rct_Respawn_Heroes) ---@type number real
	local yc = GetRectCenterY(gg_rct_Respawn_Heroes) ---@type number real
	local perekluchatel = .0 ---@type number real
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		DestroyFogModifier(LoadFogModifierHandle(udg_hash, GetHandleId(Picked), $AB))
		if perekluchatel >= 0 then
			perekluchatel = -perekluchatel
			perekluchatel = perekluchatel - 50.
		else
			perekluchatel = -perekluchatel
			perekluchatel = perekluchatel + 50.
		end
		xc = GetRectCenterX(gg_rct_Respawn_Heroes) + perekluchatel
		yc = GetRectCenterY(gg_rct_Respawn_Heroes)
		SetUnitPosition(Picked, xc, yc)
		SetUnitFacing(Picked, 270.)
		SetUnitState(Picked, UNIT_STATE_LIFE, $540BE3FF)
		SetUnitState(Picked, UNIT_STATE_MANA, $540BE3FF)
		ShowUnit(Picked, true)
		PauseUnit(Picked, false)
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			ResetToGameCamera(.0)
			PanCameraToTimed(xc, yc, .0)
			ClearSelection()
			SelectUnit(Picked, true)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	EnumItemsInRect(gg_rct_Event_Bonus_Etei_arena_1, nil, Trig_EitiArenaRemovesAllItems_Actions)
	StartTimerBJ(udg_Timer_Nomera_Volni, false, 75.)
	CreateTimerDialogBJ(udg_Timer_Nomera_Volni, ("Волна № |cFFFF0000" .. (I2S(udg_Nomer_samoi_volni) .. "|r")))
	udg_TimerDialog_Nomera_Volni = bj_lastCreatedTimerDialog
	TimerDialogSetTimeColorBJ(udg_TimerDialog_Nomera_Volni, FourCC('d'), 90., 30., 20.)
	udg_Is_Fast_Wave_Start_On_Off = true
	udg_Is_Eiti_Arena_Already_Go = false
	KillUnit(LoadUnitHandle(udg_hash, GetHandleId(gg_rct_Event_Bonus_Etei_arena_1), $C))
	KillUnit(LoadUnitHandle(udg_hash, GetHandleId(gg_rct_Event_Bonus_Etei_arena_1), $D))
	EnableTrigger(gg_trg_Hero_Dead)
	DestroyTimerDialog(td)
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	td = nil
	gruppa = nil
	Picked = nil
end

function Trig_TimerEitiAreniTheEnd2_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local t2 = CreateTimer() ---@type timer
	local h2 = GetHandleId(t2) ---@type number integer
	TimerStart(t2, 1.25, false, Trig_TimerEitiAreniTheEnd3_Actions)
	t = nil
	t2 = nil
end

function Trig_TimerEitiAreniTheEnd_ForForce()
	bj_forLoopAIndex = 1
	while(true) do
		if (bj_forLoopAIndex > 9) then break end
		SetPlayerAllianceStateBJ(GetEnumPlayer(), Player(bj_forLoopAIndex - 1), 3)
		bj_forLoopAIndex = bj_forLoopAIndex + 1
	end
end

function Trig_TimerEitiAreniTheEnd_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local Picked ---@type unit
	local gruppa = CreateGroup() ---@type group
	local angle = 0 ---@type number real
	local x = GetRectCenterX(gg_rct_Event_Bonus_Etei_arena_1) ---@type number real
	local y = GetRectCenterY(gg_rct_Event_Bonus_Etei_arena_1) ---@type number real
	local xc = GetRectCenterX(gg_rct_Respawn_Heroes) ---@type number real
	local yc = GetRectCenterY(gg_rct_Respawn_Heroes) ---@type number real
	local xu ---@type number real
	local yu ---@type number real
	local play = 0 ---@type number integer
	local hhero = 0 ---@type number integer
	local txt = CreateTextTag() ---@type texttag
	local vel = .0221875 ---@type number real
	local angletxt = 45. + GetRandomReal(.0, 90.) ---@type number real
	local xvel = vel * Cos(angle * bj_DEGTORAD) ---@type number real
	local yvel = vel * Sin(angle * bj_DEGTORAD) ---@type number real
	local t2 = CreateTimer() ---@type timer
	local h2 = GetHandleId(t2) ---@type number integer
	local timeRemaining = 0 ---@type number real
	local anglestep = (360. / CountPlayersInForceBJ(udg_IGRAET)) ---@type number real
	ForForce(udg_IGRAET, Trig_TimerEitiAreniTheEnd_ForForce)
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	TimerStart(t2, 4., false, Trig_TimerEitiAreniTheEnd2_Actions)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		angle = angle + anglestep
		SetUnitPosition(Picked, (x + 400 * Cos(angle * bj_DEGTORAD)), (y + 400 * Sin(angle * bj_DEGTORAD)))
		ReviveHero(Picked, (x + 400 * Cos(angle * bj_DEGTORAD)), (y + 400 * Sin(angle * bj_DEGTORAD)), true)
		SetUnitFacing(Picked, bj_RADTODEG * Atan2(y - GetUnitY(Picked), x - GetUnitX(Picked)))
		SetUnitState(Picked, UNIT_STATE_LIFE, $540BE3FF)
		SetUnitState(Picked, UNIT_STATE_MANA, $540BE3FF)
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			PanCameraToTimed(x, y, .0)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	GroupEnumUnitsInRect(gruppa, gg_rct_Event_Bonus_Etei_arena_1, nil)
	KillSummonsAndIllusions(gruppa)
	gruppa = CreateGroup()
	GroupEnumUnitsInRect(gruppa, gg_rct_Event_Bonus_Etei_arena_1, nil)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		if GetUnitTypeId(Picked) ~= FourCC('h00C') and GetUnitTypeId(Picked) ~= FourCC('h00B') then
			PauseUnit(Picked, true)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		hhero = GetHandleId(Picked)
		play = LoadInteger(udg_hash, hhero, 1)
		if play == 2 or play == 1 or play == 0 then
			xu = GetUnitX(Picked)
			yu = GetUnitY(Picked)
			SetTextTagText(txt, "|cFFFFFF00+650|r", .045)
			SetTextTagPos(txt, xu, yu, .0)
			SetTextTagColor(txt, 0, 0, 0, 50)
			SetTextTagVelocity(txt, xvel, yvel)
			SetTextTagPermanent(txt, false)
			SetTextTagLifespan(txt, 4.)
			SetTextTagFadepoint(txt, .0)
			txt = CreateTextTag()
			SetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD) + 650)
			if GetLocalPlayer() == GetOwningPlayer(Picked) then
				DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Вы получили " .. udg_ColorString[23] .. I2S(650) .. " золота|r!!!")
			end
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	t = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
	txt = nil
	t2 = nil
	Picked = nil
	gruppa = nil
	txt = nil
	t2 = nil
end

function Trig_Nachalo_Eiti_aren_Actions_Periodic()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local timeout = LoadInteger(udg_hash, h, 3) ---@type number integer
	local lvl = LoadInteger(udg_hash, h, 4) ---@type number integer
	local I = LoadInteger(udg_hash, h, 5) ---@type number integer
	local rct = gg_rct_Event_Bonus_Etei_arena_1 ---@type rect
	local minx = GetRectMinX(rct) ---@type number real
	local maxx = GetRectMaxX(rct) ---@type number real
	local miny = GetRectMinY(rct) ---@type number real
	local maxy = GetRectMaxY(rct) ---@type number real
	local x = GetRandomReal(minx, maxx) ---@type number real
	local y = GetRandomReal(miny, maxy) ---@type number real
	local p = Player($C) ---@type player
	local random = R2I($F + 5 * CountPlayersInForceBJ(udg_IGRAET)) ---@type number integer
	local randomgold = GetRandomInt(1, R2I(30 - 3 * CountPlayersInForceBJ(udg_IGRAET))) ---@type number integer
	local o = GetHandleId(udg_Gruppa_HeroUnitov_Geroev) ---@type number integer
	local ff = 0 ---@type number integer
	local t2 = LoadTimerHandle(udg_hash, h, 8) ---@type timer
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local xt ---@type number real
	local yt ---@type number real
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		xt = GetUnitX(Picked)
		yt = GetUnitY(Picked)
		if not ((GetRectMinX(gg_rct_Event_Bonus_Etei_arena_1) <= xt) and (xt <= GetRectMaxX(gg_rct_Event_Bonus_Etei_arena_1)) and (GetRectMinY(gg_rct_Event_Bonus_Etei_arena_1) <= yt) and (yt <= GetRectMaxY(gg_rct_Event_Bonus_Etei_arena_1))) then
			SetUnitPosition(Picked, 4250., 800.)
			if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
				PanCameraToTimed(4250., 800., .0)
			end
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", 4250., 800.))
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	ff = LoadInteger(udg_hash, o, 2)
	I = I + 1
	if randomgold <= 3 then
		CreateItem(FourCC('I03B'), x, y)
	end
	if randomgold == 4 then
		CreateItem(FourCC('I03A'), x, y)
	end
	SaveInteger(udg_hash, h, 3, timeout - 1)
	x = GetRandomReal(minx + 200., maxx - 200.)
	y = GetRandomReal(miny + 200., maxy - 200.)
	if GetRandomInt(1, FourCC('d')) <= random then
		CreatePotion(x, y, 1, 6)
	end
	if timeout <= 0 then
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	end
	if ff == 1 then
		TimerStart(t2, .05, false, Trig_TimerEitiAreniTheEnd_Actions)
	end
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
	Picked = nil
	t = nil
	t2 = nil
	p = nil
	rct = nil
end

function Trig_Nachalo_Eiti_aren2_Actions()
	local t3 = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t3) ---@type number integer
	local Picked ---@type unit
	local gruppa = CreateGroup() ---@type group
	local xtop = GetRectCenterX(gg_rct_Oblast_Teleporta_Arena_Top) ---@type number real
	local ytop = GetRectCenterY(gg_rct_Oblast_Teleporta_Arena_Top) ---@type number real
	local xbot = GetRectCenterX(gg_rct_Oblast_Teleporta_Arena_Bot) ---@type number real
	local ybot = GetRectCenterY(gg_rct_Oblast_Teleporta_Arena_Bot) ---@type number real
	local t = LoadTimerHandle(udg_hash, h, 1) ---@type timer
	local t2 = LoadTimerHandle(udg_hash, h, 2) ---@type timer
	local td = LoadTimerDialogHandle(udg_hash, h, 3) ---@type timerdialog
	local portal ---@type unit
	GroupEnumUnitsInRect(gruppa, gg_rct_Event_Bonus_Etei_arena_1, nil)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		PauseUnit(Picked, false)
		GroupRemoveUnit(gruppa, Picked)
	end
	portal = CreateUnit(Player($F), FourCC('h012'), xtop, ytop, .0)
	SaveUnitHandle(udg_hash, GetHandleId(gg_rct_Event_Bonus_Etei_arena_1), $C, portal)
	portal = CreateUnit(Player($F), FourCC('h012'), xbot, ybot, .0)
	SaveUnitHandle(udg_hash, GetHandleId(gg_rct_Event_Bonus_Etei_arena_1), $D, portal)
	TimerStart(t2, 90., false, Trig_TimerEitiAreniTheEnd_Actions)
	TimerDialogSetTitle(td, "Time Remaining:")
	TimerDialogDisplay(td, true)
	TimerDialogSetTimeColor(td, $FF, 30, 30, $A)
	SaveTimerDialogHandle(udg_hash, GetHandleId(gg_rct_Event_Bonus_Etei_arena_1), $B, td)
	TimerStart(t, .5, true, Trig_Nachalo_Eiti_aren_Actions_Periodic)
	Picked = nil
	t = nil
	t2 = nil
	td = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
end

function Trig_Nachalo_Eiti_aren_FuncForGroup()
	bj_forLoopAIndex = 1
	while(true) do
		if (bj_forLoopAIndex > 9) then break end
		if GetEnumPlayer() ~= Player(bj_forLoopAIndex - 1) then
			SetPlayerAllianceStateBJ(GetEnumPlayer(), Player(bj_forLoopAIndex - 1), 0)
		end
		bj_forLoopAIndex = bj_forLoopAIndex + 1
	end
end

function Trig_Nachalo_Eiti_aren_Actions()
	local angle = 0 ---@type number real
	local x = GetRectCenterX(gg_rct_Event_Bonus_Etei_arena_1) ---@type number real
	local y = GetRectCenterY(gg_rct_Event_Bonus_Etei_arena_1) ---@type number real
	local xtop = GetRectCenterX(gg_rct_Oblast_Teleporta_Arena_Top) ---@type number real
	local ytop = GetRectCenterY(gg_rct_Oblast_Teleporta_Arena_Top) ---@type number real
	local xbot = GetRectCenterX(gg_rct_Oblast_Teleporta_Arena_Bot) ---@type number real
	local ybot = GetRectCenterY(gg_rct_Oblast_Teleporta_Arena_Bot) ---@type number real
	local Picked ---@type unit
	local t2 = CreateTimer() ---@type timer
	local td = CreateTimerDialog(t2) ---@type timerdialog
	local h2 = GetHandleId(t2) ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local t3 = CreateTimer() ---@type timer
	local h3 = GetHandleId(t3) ---@type number integer
	local gruppa = CreateGroup() ---@type group
	local grupa = CreateGroup() ---@type group
	local I = 0 ---@type number integer
	local lvl = 0 ---@type number integer
	local hhero ---@type number integer
	local anglestep = (360. / CountPlayersInForceBJ(udg_IGRAET)) ---@type number real
	local o = GetHandleId(udg_Gruppa_HeroUnitov_Geroev) ---@type number integer
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, grupa)
	SaveInteger(udg_hash, h, 3, $B4)
	SaveInteger(udg_hash, h, 4, lvl)
	SaveInteger(udg_hash, h, 5, I)
	SaveReal(udg_hash, h, 6, x)
	SaveReal(udg_hash, h, 7, y)
	SaveTimerHandle(udg_hash, h, 8, t)
	SaveGroupHandle(udg_hash, o, 1, grupa)
	DisableTrigger(gg_trg_Hero_Dead)
	ForForce(udg_IGRAET, Trig_Nachalo_Eiti_aren_FuncForGroup)
	if (IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS)) then
		DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Добро Пожаловать на |cFFFFDC00Золотую Поляну|r!!!")
		DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Здесь каждый играет сам за себя. Постарайтесь выжить указанное время и собрать как можно больше золотых монеток. Удачи!")
	end
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		hhero = GetHandleId(Picked)
		SaveInteger(udg_hash, hhero, 1, 0)
		angle = angle + anglestep
		SetUnitPosition(Picked, (x + 400 * Cos(angle * bj_DEGTORAD)), (y + 400 * Sin(angle * bj_DEGTORAD)))
		SetUnitFacing(Picked, bj_RADTODEG * Atan2(y - GetUnitY(Picked), x - GetUnitX(Picked)))
		bj_lastCreatedFogModifier = CreateFogModifierRect(GetOwningPlayer(Picked), FOG_OF_WAR_VISIBLE, gg_rct_Event_Bonus_Etei_arena_1, true, false)
		FogModifierStart(bj_lastCreatedFogModifier)
		SaveFogModifierHandle(udg_hash, GetHandleId(Picked), $AB, bj_lastCreatedFogModifier)
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			SoundForPlayer(GetOwningPlayer(Picked), 7)
			ClearSelection()
			SelectUnit(Picked, true)
			PanCameraToTimed(x, y, .0)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	GroupEnumUnitsInRange(gruppa, 0, 0, 99999, nil)
	KillSummonsAndIllusions(gruppa)
	gruppa = CreateGroup()
	GroupEnumUnitsInRect(gruppa, gg_rct_Event_Bonus_Etei_arena_1, nil)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		PauseUnit(Picked, true)
		GroupRemoveUnit(gruppa, Picked)
	end
	SaveTimerHandle(udg_hash, h3, 1, t)
	SaveTimerHandle(udg_hash, h3, 2, t2)
	SaveTimerDialogHandle(udg_hash, h3, 3, td)
	udg_Is_Eiti_Arena_Already_Go = true
	TimerStart(t3, 5., false, Trig_Nachalo_Eiti_aren2_Actions)
	Picked = nil
	t = nil
	t2 = nil
	t3 = nil
	td = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
	grupa = nil
end

function InitTrig_Nachalo_Eiti_aren()
	gg_trg_Nachalo_Eiti_aren = CreateTrigger()
	TriggerAddAction(gg_trg_Nachalo_Eiti_aren, Trig_Nachalo_Eiti_aren_Actions)
end

function Trig_Hero_Deadd_Timer2_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local ef = LoadEffectHandle(udg_hash, h, 4) ---@type effect
	DestroyEffect(ef)
	UnitRemoveAbility(u, FourCC('Avul'))
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	u = nil
end

function Trig_Hero_Deadd_Timer_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local x = LoadReal(udg_hash, h, 2) ---@type number real
	local y = LoadReal(udg_hash, h, 3) ---@type number real
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\Human\\DivineShield\\DivineShieldTarget.mdl", u, "origin") ---@type effect
	SaveEffectHandle(udg_hash, h, 4, ef)
	TimerStart(t, 3., false, Trig_Hero_Deadd_Timer2_Actions)
	ReviveHero(u, x, y, true)
	SetUnitState(u, UNIT_STATE_MANA, GetUnitState(u, UNIT_STATE_MAX_MANA))
	SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_MAX_LIFE))
	UnitAddAbility(u, FourCC('Avul'))
	if (GetLocalPlayer() == GetOwningPlayer(u)) then
		DisplayTextToPlayer(GetOwningPlayer(u), 0, 0, "|cFFFFFF00Ваш Герой Получил Второй Шанс!!!|r")
		PanCameraToTimed(x, y, .0)
		ClearSelection()
		SelectUnit(u, true)
	end
	t = nil
	u = nil
end

function Trig_HeroDeadonEitiArena_Actions()
	local u = GetDyingUnit() ---@type unit
	local hhero = GetHandleId(u) ---@type number integer
	local p = GetOwningPlayer(u) ---@type player
	local play = GetPlayerId(p) + 1 ---@type number integer
	local heroint ---@type number integer
	local killer = GetKillingUnit() ---@type unit
	local pk = GetOwningPlayer(killer) ---@type player
	local random = GetRandomInt(1, 3) ---@type number integer
	local o = GetHandleId(udg_Gruppa_HeroUnitov_Geroev) ---@type number integer
	local g = LoadGroupHandle(udg_hash, o, 1) ---@type group
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local xu = GetUnitX(u) ---@type number real
	local yu = GetUnitY(u) ---@type number real
	local stext = "" ---@type string
	local ff = 0 ---@type number integer
	local gold = 0 ---@type number integer
	local xp = 0 ---@type number integer
	heroint[play] = 0
	heroint[play] = LoadInteger(udg_hash, hhero, 1)
	SaveUnitHandle(udg_hash, h, 1, u)
	SaveReal(udg_hash, h, 2, xu)
	SaveReal(udg_hash, h, 3, yu)
	heroint[play] = heroint[play] + 1
	SaveInteger(udg_hash, hhero, 1, heroint[play])
	if heroint[play] == 1 then
		TimerStart(t, 4., false, Trig_Hero_Deadd_Timer_Actions)
		gold = 350
		xp = 500
	end
	if heroint[play] == 2 then
		TimerStart(t, 4., false, Trig_Hero_Deadd_Timer_Actions)
		gold = $FA
		xp = 300
	end
	if heroint[play] == 3 then
		gold = $96
		xp = FourCC('d')
	end
	if GetPlayerId(pk) <= 8 and heroint[play] <= 3 then
		if random == 1 then
			stext = udg_ColorString[GetPlayerId(pk) + 1] .. GetPlayerName(pk) .. "|r убил " .. udg_ColorString[GetPlayerId(p) + 1] .. GetPlayerName(p) .. "|r и получает за это " .. udg_ColorString[23] .. I2S(gold) .. " золота|r и " .. udg_ColorString[23] .. I2S(xp) .. " опыта|r!!!"
		end
		if random == 2 then
			stext = udg_ColorString[GetPlayerId(pk) + 1] .. GetPlayerName(pk) .. "|r скукожил " .. udg_ColorString[GetPlayerId(p) + 1] .. GetPlayerName(p) .. "|r и получает за это " .. udg_ColorString[23] .. I2S(gold) .. " золота|r и " .. udg_ColorString[23] .. I2S(xp) .. " опыта|r!!!"
		end
		if random == 3 then
			stext = udg_ColorString[GetPlayerId(pk) + 1] .. GetPlayerName(pk) .. "|r распотрошил " .. udg_ColorString[GetPlayerId(p) + 1] .. GetPlayerName(p) .. "|r и получает за это " .. udg_ColorString[23] .. I2S(gold) .. " золота|r и " .. udg_ColorString[23] .. I2S(xp) .. " опыта|r!!!"
		end
		SetPlayerState(pk, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(pk, PLAYER_STATE_RESOURCE_GOLD) + gold)
		AddHeroXP(killer, xp, true)
	end
	if stext ~= nil and stext ~= "" then
		if IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS) then
			DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 7., stext)
		end
	end
	if heroint[play] == 3 then
		GroupRemoveUnit(g, u)
	end
	if CountUnitsInGroup(g) <= 0 then
		ff = 1
		SaveInteger(udg_hash, o, 2, ff)
	end
	SaveGroupHandle(udg_hash, o, 1, g)
	u = nil
	p = nil
	killer = nil
	pk = nil
	g = nil
	t = nil
end

---@return boolean
function Trig_HeroDeadonEitiArena_Conditions()
	return (IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO) and IsUnitIllusion(GetDyingUnit()) == false and GetPlayerId(GetOwningPlayer(GetDyingUnit())) <= 8 and (udg_Is_Eiti_Arena_Already_Go)) ~= nil
end

function InitTrig_HeroDeadonEitiArena()
	local index = 0 ---@type number integer
	gg_trg_HeroDeadonEitiArena = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_HeroDeadonEitiArena, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_HeroDeadonEitiArena, Condition(Trig_HeroDeadonEitiArena_Conditions))
	TriggerAddAction(gg_trg_HeroDeadonEitiArena, Trig_HeroDeadonEitiArena_Actions)
end

---@return boolean
function Trig__PortalCheckTop_Conditions()
	return (IsUnitType(GetEnteringUnit(), UNIT_TYPE_HERO) and IsUnitIllusion(GetTriggerUnit()) == false) ~= nil
end

function Trig__PortalCheckTop_Actions()
	local u = GetEnteringUnit() ---@type unit
	local x = GetRectCenterX(gg_rct_Oblast_Teleporta_Arena_Bot) ---@type number real
	local y = GetRectCenterY(gg_rct_Oblast_Teleporta_Arena_Bot) ---@type number real
	if IsUnitInGroup(u, udg_OtriadPortalUnitsEitiArena) then
		GroupRemoveUnit(udg_OtriadPortalUnitsEitiArena, u)
	else
		GroupAddUnit(udg_OtriadPortalUnitsEitiArena, u)
		SetUnitPosition(u, x, y)
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", x, y))
		if GetLocalPlayer() == GetOwningPlayer(u) then
			CameraSetupApplyForceDuration(gg_cam_Camera_Eiti_Arena_Bot_Portal, true, .0)
		end
	end
	u = nil
end

function InitTrig__PortalCheckTop()
	local rectRegion = CreateRegion() ---@type region
	gg_trg__PortalCheckTop = CreateTrigger()
	RegionAddRect(rectRegion, gg_rct_Oblast_Teleporta_Arena_Top)
	TriggerRegisterEnterRegion(gg_trg__PortalCheckTop, rectRegion, nil)
	TriggerAddCondition(gg_trg__PortalCheckTop, Condition(Trig__PortalCheckTop_Conditions))
	TriggerAddAction(gg_trg__PortalCheckTop, Trig__PortalCheckTop_Actions)
end

---@return boolean
function Trig__PortalCheckBot_Conditions()
	return (IsUnitType(GetEnteringUnit(), UNIT_TYPE_HERO) and IsUnitIllusion(GetTriggerUnit()) == false) ~= nil
end

function Trig__PortalCheckBot_Actions()
	local u = GetEnteringUnit() ---@type unit
	local x = GetRectCenterX(gg_rct_Oblast_Teleporta_Arena_Top) ---@type number real
	local y = GetRectCenterY(gg_rct_Oblast_Teleporta_Arena_Top) ---@type number real
	if IsUnitInGroup(u, udg_OtriadPortalUnitsEitiArena) then
		GroupRemoveUnit(udg_OtriadPortalUnitsEitiArena, u)
	else
		GroupAddUnit(udg_OtriadPortalUnitsEitiArena, u)
		SetUnitPosition(u, x, y)
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", x, y))
		if GetLocalPlayer() == GetOwningPlayer(u) then
			CameraSetupApplyForceDuration(gg_cam_Camera_Eiti_Arena_Top_Portal, true, .0)
		end
	end
	u = nil
end

function InitTrig__PortalCheckBot()
	local rectRegion = CreateRegion() ---@type region
	gg_trg__PortalCheckBot = CreateTrigger()
	RegionAddRect(rectRegion, gg_rct_Oblast_Teleporta_Arena_Bot)
	TriggerRegisterEnterRegion(gg_trg__PortalCheckBot, rectRegion, nil)
	TriggerAddCondition(gg_trg__PortalCheckBot, Condition(Trig__PortalCheckBot_Conditions))
	TriggerAddAction(gg_trg__PortalCheckBot, Trig__PortalCheckBot_Actions)
end

---@param count1 number integer
---@param id1 number integer
---@param count2 number integer
---@param id2 number integer
---@param count3 number integer
---@param id3 number integer
---@param count4 number integer
---@param id4 number integer
---@param count5 number integer
---@param id5 number integer
---@param itemlevel number integer
---@param idfinal number integer
---@param idrecipe number integer
---@param sef string
function Trig_LinkItemsInitAddItemToSystem_Actions(count1, id1, count2, id2, count3, id3, count4, id4, count5, id5, itemlevel, idfinal, idrecipe, sef)
	local h = ($C * itemlevel) ---@type number integer
	SaveInteger(udg_hash, idrecipe, h + 1, count1)
	SaveInteger(udg_hash, idrecipe, h + 2, id1)
	SaveInteger(udg_hash, idrecipe, h + 3, count2)
	SaveInteger(udg_hash, idrecipe, h + 4, id2)
	SaveInteger(udg_hash, idrecipe, h + 5, count3)
	SaveInteger(udg_hash, idrecipe, h + 6, id3)
	SaveInteger(udg_hash, idrecipe, h + 7, count4)
	SaveInteger(udg_hash, idrecipe, h + 8, id4)
	SaveInteger(udg_hash, idrecipe, h + 9, count5)
	SaveInteger(udg_hash, idrecipe, h + $A, id5)
	SaveInteger(udg_hash, idrecipe, h + $B, idfinal)
	SaveStr(udg_hash, idrecipe, h + $C, sef)
	SaveInteger(udg_hash, idfinal, FourCC('y'), itemlevel)
end

function Trig_LinkItemsInit_Actions()
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I004'), 1, FourCC('I00D'), 0, 0, 0, 0, 0, 0, 0, FourCC('I027'), FourCC('I02T'), "Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00M'), 0, 0, 0, 0, 0, 0, 0, 0, 0, FourCC('I02Y'), FourCC('I030'), "Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I02Y'), 0, 0, 0, 0, 0, 0, 0, 0, 1, FourCC('I02Z'), FourCC('I030'), "Abilities\\Spells\\Human\\Resurrect\\ResurrectCaster.mdl")
	SaveInteger(udg_hash, FourCC('I030'), 0, 1)
	Trig_LinkItemsInitAddItemToSystem_Actions(2, FourCC('I01T'), 1, FourCC('I021'), 0, 0, 0, 0, 0, 0, 0, FourCC('I036'), FourCC('I037'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I003'), 1, FourCC('I004'), 1, FourCC('I01T'), 0, 0, 0, 0, 0, FourCC('I02J'), FourCC('I01D'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I02J'), 0, 0, 0, 0, 0, 0, 0, 0, 1, FourCC('I01B'), FourCC('I01D'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I01B'), 0, 0, 0, 0, 0, 0, 0, 0, 2, FourCC('I01X'), FourCC('I01D'), "")
	SaveInteger(udg_hash, FourCC('I01D'), 0, 2)
	Trig_LinkItemsInitAddItemToSystem_Actions(2, FourCC('I01T'), 1, FourCC('I001'), 0, 0, 0, 0, 0, 0, 0, FourCC('I01U'), FourCC('I01M'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(2, FourCC('I003'), 1, FourCC('I01U'), 0, 0, 0, 0, 0, 0, 0, FourCC('I01G'), FourCC('I018'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00Z'), 1, FourCC('I00D'), 0, 0, 0, 0, 0, 0, 0, FourCC('I00A'), FourCC('I000'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00D'), 1, FourCC('I00E'), 0, 0, 0, 0, 0, 0, 0, FourCC('I00I'), FourCC('I01N'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00A'), 1, FourCC('I00I'), 0, 0, 0, 0, 0, 0, 0, FourCC('I00C'), FourCC('I00O'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00J'), 1, FourCC('I00E'), 1, FourCC('I00N'), 0, 0, 0, 0, 0, FourCC('I00G'), FourCC('I00K'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00G'), 0, 0, 0, 0, 0, 0, 0, 0, 1, FourCC('I01Q'), FourCC('I00K'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I01Q'), 0, 0, 0, 0, 0, 0, 0, 0, 2, FourCC('I01V'), FourCC('I00K'), "")
	SaveInteger(udg_hash, FourCC('I00K'), 0, 2)
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00Z'), 2, FourCC('I027'), 0, 0, 0, 0, 0, 0, 0, FourCC('I03G'), FourCC('I02K'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I027'), 1, FourCC('I022'), 1, FourCC('I021'), 1, FourCC('I026'), 0, 0, 0, FourCC('I03K'), FourCC('I03J'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I03K'), 0, 0, 0, 0, 0, 0, 0, 0, 1, FourCC('I03L'), FourCC('I03J'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I03L'), 0, 0, 0, 0, 0, 0, 0, 0, 2, FourCC('I03M'), FourCC('I03J'), "")
	SaveInteger(udg_hash, FourCC('I03J'), 0, 2)
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00Z'), 2, FourCC('I026'), 0, 0, 0, 0, 0, 0, 0, FourCC('I02U'), FourCC('I03I'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(2, FourCC('I00N'), 1, FourCC('I00Y'), 0, 0, 0, 0, 0, 0, 0, FourCC('I03Q'), FourCC('I02V'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(2, FourCC('I015'), 1, FourCC('I00D'), 0, 0, 0, 0, 0, 0, 0, FourCC('I03S'), FourCC('I03R'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00F'), 1, FourCC('I001'), 2, FourCC('I00E'), 0, 0, 0, 0, 0, FourCC('I03U'), FourCC('I03T'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00J'), 1, FourCC('I021'), 1, FourCC('I026'), 1, FourCC('I00F'), 0, 0, 0, FourCC('I03W'), FourCC('I03V'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I02C'), 1, FourCC('I001'), 1, FourCC('I004'), 0, 0, 0, 0, 0, FourCC('I03Y'), FourCC('I03X'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I01X'), 1, FourCC('I01S'), 0, 0, 0, 0, 0, 0, 0, FourCC('I02G'), FourCC('I03Z'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I023'), 1, FourCC('I001'), 0, 0, 0, 0, 0, 0, 0, FourCC('I02I'), FourCC('I02O'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I036'), 1, FourCC('I00B'), 1, FourCC('I02A'), 0, 0, 0, 0, 0, FourCC('I02F'), FourCC('I040'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I022'), 1, FourCC('I00Z'), 1, FourCC('I026'), 1, FourCC('I00F'), 0, 0, 0, FourCC('I042'), FourCC('I041'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00J'), 1, FourCC('I01A'), 1, FourCC('I015'), 0, 0, 0, 0, 0, FourCC('I044'), FourCC('I043'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I02G'), 1, FourCC('I01X'), 1, FourCC('I01U'), 0, 0, 0, 0, 0, FourCC('I048'), FourCC('I047'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I023'), 1, FourCC('I00Z'), 0, 0, 0, 0, 0, 0, 0, FourCC('I04L'), FourCC('I04K'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I03U'), 1, FourCC('I00I'), 1, FourCC('I00J'), 0, 0, 0, 0, 0, FourCC('I04U'), FourCC('I04M'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00J'), 1, FourCC('I00I'), 1, FourCC('I006'), 0, 0, 0, 0, 0, FourCC('I04V'), FourCC('I00Q'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(2, FourCC('I01K'), 0, 0, 0, 0, 0, 0, 0, 0, 0, FourCC('I04X'), FourCC('I04W'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I01G'), 1, FourCC('I01S'), 1, FourCC('I04X'), 0, 0, 0, 0, 0, FourCC('I04Z'), FourCC('I04Y'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00B'), 1, FourCC('I02A'), 2, FourCC('I001'), 0, 0, 0, 0, 0, FourCC('I02E'), FourCC('I01R'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I02E'), 1, FourCC('I03N'), 1, FourCC('I02A'), 0, 0, 0, 0, 0, FourCC('I02N'), FourCC('I02M'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I03M'), 1, FourCC('I02U'), 1, FourCC('I03G'), 0, 0, 0, 0, 0, FourCC('I051'), FourCC('I050'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I02F'), 1, FourCC('I03Q'), 1, FourCC('I00B'), 0, 0, 0, 0, 0, FourCC('I02T'), FourCC('I02D'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I01T'), 2, FourCC('I00N'), 1, FourCC('I015'), 0, 0, 0, 0, 0, FourCC('I052'), FourCC('I03H'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I052'), 0, 0, 0, 0, 0, 0, 0, 0, 1, FourCC('I053'), FourCC('I03H'), "")
	SaveInteger(udg_hash, FourCC('I03H'), 0, 1)
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I015'), 1, FourCC('I001'), 1, FourCC('I00E'), 0, 0, 0, 0, 0, FourCC('I055'), FourCC('I054'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I055'), 0, 0, 0, 0, 0, 0, 0, 0, 1, FourCC('I056'), FourCC('I054'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I056'), 0, 0, 0, 0, 0, 0, 0, 0, 2, FourCC('I057'), FourCC('I054'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I057'), 0, 0, 0, 0, 0, 0, 0, 0, 3, FourCC('I058'), FourCC('I054'), "")
	SaveInteger(udg_hash, FourCC('I054'), 0, 3)
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I04X'), 1, FourCC('I03S'), 1, FourCC('I00I'), 0, 0, 0, 0, 0, FourCC('I05A'), FourCC('I059'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(2, FourCC('I00D'), 1, FourCC('I00F'), 0, 0, 0, 0, 0, 0, 0, FourCC('I006'), FourCC('I005'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I036'), 1, FourCC('I006'), 1, FourCC('I026'), 0, 0, 0, 0, 0, FourCC('I008'), FourCC('I007'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I008'), 0, 0, 0, 0, 0, 0, 0, 0, 1, FourCC('I009'), FourCC('I007'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I009'), 0, 0, 0, 0, 0, 0, 0, 0, 2, FourCC('I00L'), FourCC('I007'), "")
	SaveInteger(udg_hash, FourCC('I007'), 0, 2)
	Trig_LinkItemsInitAddItemToSystem_Actions(2, FourCC('I022'), 1, FourCC('I00F'), 0, 0, 0, 0, 0, 0, 0, FourCC('I00S'), FourCC('I00R'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I044'), 1, FourCC('I00S'), 1, FourCC('I01A'), 0, 0, 0, 0, 0, FourCC('I00T'), FourCC('I00M'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I004'), 0, 0, 0, 0, 0, 0, 0, 0, 0, FourCC('I00V'), FourCC('I00U'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I01T'), 1, FourCC('I00D'), 1, FourCC('I001'), 1, FourCC('I00E'), 0, 0, 0, FourCC('I00X'), FourCC('I00W'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I042'), 1, FourCC('I03Q'), 1, FourCC('I022'), 0, 0, 0, 0, 0, FourCC('I012'), FourCC('I011'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I003'), 1, FourCC('I001'), 0, 0, 0, 0, 0, 0, 0, FourCC('I01C'), FourCC('I019'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I00S'), 1, FourCC('I03G'), 1, FourCC('I006'), 0, 0, 0, 0, 0, FourCC('I01W'), FourCC('I01P'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I02U'), 1, FourCC('I03Y'), 0, 0, 0, 0, 0, 0, 0, FourCC('I02H'), FourCC('I029'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I01G'), 1, FourCC('I03U'), 0, 0, 0, 0, 0, 0, 0, FourCC('I02P'), FourCC('I02L'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(2, FourCC('I00E'), 1, FourCC('I01T'), 0, 0, 0, 0, 0, 0, 0, FourCC('I02R'), FourCC('I02Q'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I02R'), 0, 0, 0, 0, 0, 0, 0, 0, 1, FourCC('I02S'), FourCC('I02Q'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I02S'), 0, 0, 0, 0, 0, 0, 0, 0, 2, FourCC('I02W'), FourCC('I02Q'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I02W'), 0, 0, 0, 0, 0, 0, 0, 0, 3, FourCC('I02X'), FourCC('I02Q'), "")
	Trig_LinkItemsInitAddItemToSystem_Actions(1, FourCC('I02X'), 0, 0, 0, 0, 0, 0, 0, 0, 4, FourCC('I02Y'), FourCC('I02Q'), "")
	SaveInteger(udg_hash, FourCC('I02Q'), 0, 4)
end

function InitTrig_LinkItemsInit()
	gg_trg_LinkItemsInit = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_LinkItemsInit, 6., false)
	TriggerAddAction(gg_trg_LinkItemsInit, Trig_LinkItemsInit_Actions)
end

function Trig_ItemPickedUp_Actions()
	local it = GetManipulatedItem() ---@type item
	local id = GetItemTypeId(it) ---@type number integer
	local itemlevel ---@type number integer
	local h ---@type number integer
	local lopa ---@type number integer
	if GetItemType(it) == ITEM_TYPE_POWERUP and id ~= FourCC('I03A') and id ~= FourCC('I03B') and id ~= FourCC('I013') and id ~= FourCC('I014') and id ~= FourCC('I016') and id ~= FourCC('I017') then
		if (id == FourCC('I035')) or (id == FourCC('I00P')) or (id == FourCC('I03O')) then
			RemoveItem(it)
			SimError(GetOwningPlayer(GetTriggerUnit()), "Для покупки это предмета не нужен рецепт!")
		else
			itemlevel = LoadInteger(udg_hash, id, 0)
			lopa = 0
			udg_Show_Item_Link_Text = true
			udg_Integer_Item_Recipe_Level = itemlevel
			while(true) do
				if ((itemlevel < lopa) or (udg_Integer_Item_Recipe_Level < 0)) then break end
				h = itemlevel * $C
				LinkItems(LoadInteger(udg_hash, id, h + 1), LoadInteger(udg_hash, id, h + 2), LoadInteger(udg_hash, id, h + 3), LoadInteger(udg_hash, id, h + 4), LoadInteger(udg_hash, id, h + 5), LoadInteger(udg_hash, id, h + 6), LoadInteger(udg_hash, id, h + 7), LoadInteger(udg_hash, id, h + 8), LoadInteger(udg_hash, id, h + 9), LoadInteger(udg_hash, id, h + $A), LoadInteger(udg_hash, id, h + $B), LoadStr(udg_hash, id, h + $C), true)
				itemlevel = itemlevel - 1
			end
			itemlevel = 0
			h = 0
		end
	else
		if id ~= FourCC('I03A') and id ~= FourCC('I03B') and id ~= FourCC('I013') and id ~= FourCC('I014') and id ~= FourCC('I016') and id ~= FourCC('I017') and id ~= FourCC('I01Y') then
			LinkItems(1, FourCC('I01U'), 1, FourCC('I01K'), 1, FourCC('I004'), 0, 0, 0, 0, FourCC('I01S'), "", false)
			LinkItems(2, FourCC('I00F'), 1, FourCC('I00E'), 0, 0, 0, 0, 0, 0, FourCC('I00J'), "", false)
			LinkItems(1, FourCC('I02A'), 1, FourCC('I00H'), 1, FourCC('I021'), 0, 0, 0, 0, FourCC('I03N'), "", false)
		end
	end
	it = nil
end

function InitTrig_ItemPickedUp()
	local index = 0 ---@type number integer
	gg_trg_ItemPickedUp = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_ItemPickedUp, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddAction(gg_trg_ItemPickedUp, Trig_ItemPickedUp_Actions)
end

---@return boolean
function Trig_ChargesConnecting_Func002C()
	return (GetItemTypeId(GetManipulatedItem()) ~= FourCC('I055')) and (GetItemTypeId(GetManipulatedItem()) ~= FourCC('I056')) and (GetItemTypeId(GetManipulatedItem()) ~= FourCC('I057')) and (GetItemTypeId(GetManipulatedItem()) ~= FourCC('I058'))
end

---@return boolean
function Trig_ChargesConnecting_Conditions()
	return (GetItemCharges(GetManipulatedItem()) > 0) and (Trig_ChargesConnecting_Func002C())
end

---@return boolean
function Trig_ChargesConnecting_Func005C()
	return (UnitHasItemOfTypeBJ(GetManipulatingUnit(), GetItemTypeId(GetManipulatedItem())) == false)
end

function Trig_ChargesConnecting_Actions()
	UnitRemoveItemSwapped(GetManipulatedItem(), GetManipulatingUnit())
	if (Trig_ChargesConnecting_Func005C()) then
		CreateItemLoc(GetItemTypeId(GetManipulatedItem()), GetUnitLoc(GetManipulatingUnit()))
		DisableTrigger(GetTriggeringTrigger())
		UnitAddItem(GetManipulatingUnit(), bj_lastCreatedItem)
		EnableTrigger(GetTriggeringTrigger())
		SetItemCharges(bj_lastCreatedItem, GetItemCharges(GetManipulatedItem()))
	else
		SetItemCharges(GetItemOfTypeFromUnitBJ(GetManipulatingUnit(), GetItemTypeId(GetManipulatedItem())), (GetItemCharges(GetItemOfTypeFromUnitBJ(GetManipulatingUnit(), GetItemTypeId(GetManipulatedItem()))) + GetItemCharges(GetManipulatedItem())))
	end
	RemoveItem(GetManipulatedItem())
end

function InitTrig_ChargesConnecting()
	gg_trg_ChargesConnecting = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_ChargesConnecting, EVENT_PLAYER_UNIT_PICKUP_ITEM)
	TriggerAddCondition(gg_trg_ChargesConnecting, Condition(Trig_ChargesConnecting_Conditions))
	TriggerAddAction(gg_trg_ChargesConnecting, Trig_ChargesConnecting_Actions)
end

---@return boolean
function Trig_Remove_Dammi_Items_Func003C()
	return (GetItemTypeId(GetManipulatedItem()) == FourCC('I035'))
end

---@return boolean
function Trig_Remove_Dammi_Items_Conditions()
	return (Trig_Remove_Dammi_Items_Func003C())
end

function Trig_Remove_Dammi_Items_Actions()
	RemoveItem(GetManipulatedItem())
	SimError(GetOwningPlayer(GetTriggerUnit()), "Для покупки это предмета не нужен рецепт!")
end

function InitTrig_Remove_Dammi_Items()
	gg_trg_Remove_Dammi_Items = CreateTrigger()
	DisableTrigger(gg_trg_Remove_Dammi_Items)
	TriggerRegisterAnyUnitEventBJ(gg_trg_Remove_Dammi_Items, EVENT_PLAYER_UNIT_PICKUP_ITEM)
	TriggerAddCondition(gg_trg_Remove_Dammi_Items, Condition(Trig_Remove_Dammi_Items_Conditions))
	TriggerAddAction(gg_trg_Remove_Dammi_Items, Trig_Remove_Dammi_Items_Actions)
end

function Trig_Save_Items_Cost_Actions()
	SaveInteger(udg_hash, FourCC('I00I'), FourCC('x'), $3ED)
	SaveInteger(udg_hash, FourCC('I01G'), FourCC('x'), $D0C)
	SaveInteger(udg_hash, FourCC('I03W'), FourCC('x'), $D70)
	SaveInteger(udg_hash, FourCC('I036'), FourCC('x'), $546)
	SaveInteger(udg_hash, FourCC('I05A'), FourCC('x'), 5150)
	SaveInteger(udg_hash, FourCC('I04Z'), FourCC('x'), 8100)
	SaveInteger(udg_hash, FourCC('I01U'), FourCC('x'), $67C)
	SaveInteger(udg_hash, FourCC('I03U'), FourCC('x'), $7DF)
	SaveInteger(udg_hash, FourCC('I02J'), FourCC('x'), $4E2)
	SaveInteger(udg_hash, FourCC('I01B'), FourCC('x'), $60E)
	SaveInteger(udg_hash, FourCC('I01X'), FourCC('x'), $73A)
	SaveInteger(udg_hash, FourCC('I052'), FourCC('x'), $596)
	SaveInteger(udg_hash, FourCC('I053'), FourCC('x'), $6C2)
	SaveInteger(udg_hash, FourCC('I051'), FourCC('x'), 8710)
	SaveInteger(udg_hash, FourCC('I03Q'), FourCC('x'), $654)
	SaveInteger(udg_hash, FourCC('I048'), FourCC('x'), 9815)
	SaveInteger(udg_hash, FourCC('I00G'), FourCC('x'), $7A8)
	SaveInteger(udg_hash, FourCC('I01Q'), FourCC('x'), $9CE)
	SaveInteger(udg_hash, FourCC('I01V'), FourCC('x'), $BF4)
	SaveInteger(udg_hash, FourCC('I02N'), FourCC('x'), 4900)
	SaveInteger(udg_hash, FourCC('I03N'), FourCC('x'), $465)
	SaveInteger(udg_hash, FourCC('I042'), FourCC('x'), $979)
	SaveInteger(udg_hash, FourCC('I03S'), FourCC('x'), $712)
	SaveInteger(udg_hash, FourCC('I02U'), FourCC('x'), $6AE)
	SaveInteger(udg_hash, FourCC('I00C'), FourCC('x'), $D5C)
	SaveInteger(udg_hash, FourCC('I00A'), FourCC('x'), $5C3)
	SaveInteger(udg_hash, FourCC('I04V'), FourCC('x'), 4100)
	SaveInteger(udg_hash, FourCC('I044'), FourCC('x'), $AB4)
	SaveInteger(udg_hash, FourCC('I00J'), FourCC('x'), 980)
	SaveInteger(udg_hash, FourCC('I03G'), FourCC('x'), $5AA)
	SaveInteger(udg_hash, FourCC('I04L'), FourCC('x'), 925)
	SaveInteger(udg_hash, FourCC('I02I'), FourCC('x'), 765)
	SaveInteger(udg_hash, FourCC('I02T'), FourCC('x'), 7000)
	SaveInteger(udg_hash, FourCC('I04U'), FourCC('x'), 5250)
	SaveInteger(udg_hash, FourCC('I03K'), FourCC('x'), $A2D)
	SaveInteger(udg_hash, FourCC('I03L'), FourCC('x'), $E01)
	SaveInteger(udg_hash, FourCC('I03M'), FourCC('x'), $4FB)
	SaveInteger(udg_hash, FourCC('I04X'), FourCC('x'), $4FB)
	SaveInteger(udg_hash, FourCC('I055'), FourCC('x'), $4F6)
	SaveInteger(udg_hash, FourCC('I056'), FourCC('x'), $686)
	SaveInteger(udg_hash, FourCC('I057'), FourCC('x'), $816)
	SaveInteger(udg_hash, FourCC('I058'), FourCC('x'), $9A6)
	SaveInteger(udg_hash, FourCC('I02E'), FourCC('x'), $834)
	SaveInteger(udg_hash, FourCC('I02F'), FourCC('x'), $AB9)
	SaveInteger(udg_hash, FourCC('I01S'), FourCC('x'), $875)
	SaveInteger(udg_hash, FourCC('I03Y'), FourCC('x'), 955)
	SaveInteger(udg_hash, FourCC('I02G'), FourCC('x'), 4805)
	SaveInteger(udg_hash, FourCC('I00D'), FourCC('x'), 275)
	SaveInteger(udg_hash, FourCC('I022'), FourCC('x'), 350)
	SaveInteger(udg_hash, FourCC('I00N'), FourCC('x'), $C8)
	SaveInteger(udg_hash, FourCC('I027'), FourCC('x'), 450)
	SaveInteger(udg_hash, FourCC('I003'), FourCC('x'), 475)
	SaveInteger(udg_hash, FourCC('I026'), FourCC('x'), 425)
	SaveInteger(udg_hash, FourCC('I004'), FourCC('x'), FourCC('}'))
	SaveInteger(udg_hash, FourCC('I001'), FourCC('x'), 260)
	SaveInteger(udg_hash, FourCC('I01K'), FourCC('x'), 380)
	SaveInteger(udg_hash, FourCC('I00H'), FourCC('x'), 375)
	SaveInteger(udg_hash, FourCC('I00Y'), FourCC('x'), 650)
	SaveInteger(udg_hash, FourCC('I00E'), FourCC('x'), $E6)
	SaveInteger(udg_hash, FourCC('I02C'), FourCC('x'), 360)
	SaveInteger(udg_hash, FourCC('I01A'), FourCC('x'), 500)
	SaveInteger(udg_hash, FourCC('I02A'), FourCC('x'), 350)
	SaveInteger(udg_hash, FourCC('I015'), FourCC('x'), 380)
	SaveInteger(udg_hash, FourCC('I00Z'), FourCC('x'), 300)
	SaveInteger(udg_hash, FourCC('I00F'), FourCC('x'), 375)
	SaveInteger(udg_hash, FourCC('I021'), FourCC('x'), 400)
	SaveInteger(udg_hash, FourCC('I023'), FourCC('x'), $E1)
	SaveInteger(udg_hash, FourCC('I00B'), FourCC('x'), 600)
	SaveInteger(udg_hash, FourCC('I01T'), FourCC('x'), 350)
	SaveInteger(udg_hash, FourCC('I006'), FourCC('x'), $465)
	SaveInteger(udg_hash, FourCC('I008'), FourCC('x'), $ED8)
	SaveInteger(udg_hash, FourCC('I009'), FourCC('x'), 4700)
	SaveInteger(udg_hash, FourCC('I00L'), FourCC('x'), 5600)
	SaveInteger(udg_hash, FourCC('I00S'), FourCC('x'), $555)
	SaveInteger(udg_hash, FourCC('I00T'), FourCC('x'), 5655)
	SaveInteger(udg_hash, FourCC('I00V'), FourCC('x'), 475)
	SaveInteger(udg_hash, FourCC('I00X'), FourCC('x'), $514)
	SaveInteger(udg_hash, FourCC('I012'), FourCC('x'), 5595)
	SaveInteger(udg_hash, FourCC('I01C'), FourCC('x'), 860)
	SaveInteger(udg_hash, FourCC('I01W'), FourCC('x'), 4500)
	SaveInteger(udg_hash, FourCC('I02H'), FourCC('x'), $C1C)
	SaveInteger(udg_hash, FourCC('I02P'), FourCC('x'), 6300)
	SaveInteger(udg_hash, FourCC('I02R'), FourCC('x'), $51E)
	SaveInteger(udg_hash, FourCC('I02S'), FourCC('x'), $712)
	SaveInteger(udg_hash, FourCC('I02W'), FourCC('x'), $906)
	SaveInteger(udg_hash, FourCC('I02X'), FourCC('x'), $AFA)
	SaveInteger(udg_hash, FourCC('I02Y'), FourCC('x'), $CEE)
	SaveInteger(udg_hash, FourCC('I030'), FourCC('x'), $708)
end

function InitTrig_Save_Items_Cost()
	gg_trg_Save_Items_Cost = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Save_Items_Cost, 10., false)
	TriggerAddAction(gg_trg_Save_Items_Cost, Trig_Save_Items_Cost_Actions)
end

function Trig_IceBoss_onbase_Actions()
	local tonbase = GetExpiredTimer() ---@type timer
	local honbase = GetHandleId(tonbase) ---@type number integer
	local ishod = LoadInteger(udg_hash, honbase, 3) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, honbase, 1) ---@type unit
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local xc = GetRectCenterX(gg_rct_Respawn_Heroes) ---@type number real
	local yc = GetRectCenterY(gg_rct_Respawn_Heroes) ---@type number real
	local fm = LoadFogModifierHandle(udg_hash, honbase, 2) ---@type fogmodifier
	local txt ---@type texttag
	local vel = .0221875 ---@type number real
	local angle = 45. + GetRandomReal(.0, 90.) ---@type number real
	local xvel = vel * Cos(angle * bj_DEGTORAD) ---@type number real
	local yvel = vel * Sin(angle * bj_DEGTORAD) ---@type number real
	local dead = 0 ---@type number integer
	local perekluchatel = .1 ---@type number real
	ShowAndFlushAllPlayerDamage(false)
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	CinematicModeExBJ(false, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	CinematicFadeBJ(0, 5., "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 0)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		if perekluchatel >= 0 then
			perekluchatel = -perekluchatel
			perekluchatel = perekluchatel - 50.
		else
			perekluchatel = -perekluchatel
			perekluchatel = perekluchatel + 50.
		end
		xc = GetRectCenterX(gg_rct_Respawn_Heroes) + perekluchatel
		yc = GetRectCenterY(gg_rct_Respawn_Heroes)
		ReviveHero(Picked, xc, yc, true)
		SetUnitPosition(Picked, xc, yc)
		SetUnitFacing(Picked, 270.)
		SetUnitState(Picked, UNIT_STATE_LIFE, $540BE3FF)
		SetUnitState(Picked, UNIT_STATE_MANA, $540BE3FF)
		if ishod == 0 then
			txt = CreateTextTag()
			dead = LoadInteger(udg_hash, GetHandleId(Picked), 1)
			if dead == 1 then
				SetTextTagText(txt, "|cFFFFFF00+850|r", .035)
				AddHeroXP(Picked, $6A4, true)
				SetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD, (GetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD) + 750))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIem\\AIemTarget.mdl", Picked, "overhead"))
				if GetLocalPlayer() == GetOwningPlayer(Picked) then
					DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Вы получили " .. udg_ColorString[23] .. I2S(850) .. " золота|r!!!")
				end
			else
				SetTextTagText(txt, "|cFFFFFF00+2600|r", .045)
				AddHeroXP(Picked, 5500, true)
				SetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD, (GetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD) + $708))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIem\\AIemTarget.mdl", Picked, "overhead"))
				if GetLocalPlayer() == GetOwningPlayer(Picked) then
					DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Вы получили " .. udg_ColorString[23] .. I2S($A28) .. " золота|r!!!")
				end
			end
			SetTextTagPos(txt, GetUnitX(Picked), GetUnitY(Picked), .0)
			SetTextTagColor(txt, 0, 0, 0, 50)
			SetTextTagVelocity(txt, xvel, yvel)
			SetTextTagPermanent(txt, false)
			SetTextTagLifespan(txt, 4.)
			SetTextTagFadepoint(txt, .0)
			txt = nil
		end
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			ResetToGameCamera(.0)
			if ishod == 1 then
				DisplayTextToPlayer(GetOwningPlayer(Picked), 0, 0, "|cFFFF0000ВЫ ПРОИГРАЛИ БИТВУ С БОССОМ!!!|r")
			else
				DisplayTextToPlayer(GetOwningPlayer(Picked), 0, 0, "|cFFFFFF00ВЫ ПОБЕДИЛИ В БИТВЕ С БОССОМ!!!|r")
			end
			ResetToGameCamera(.0)
			PanCameraToTimed(xc, yc, .0)
			SelectUnit(Picked, true)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	EnableTrigger(gg_trg_Hero_Dead)
	Picked = nil
	GroupEnumUnitsInRect(gruppa, gg_rct_6, nil)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		if GetUnitTypeId(Picked) ~= FourCC('h00C') and GetUnitTypeId(Picked) ~= FourCC('h00B') and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			RemoveUnit(Picked)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	if TriggerEvaluate(gg_trg_GameEndWin) then
		TriggerExecute(gg_trg_GameEndWin)
	end
	Picked = nil
	RemoveWeatherEffect(udg_BossFightWeather)
	udg_BossFightWeather = nil
	FlushChildHashtable(udg_hash, GetHandleId(boss))
	RemoveUnit(boss)
	boss = nil
	DestroyFogModifier(fm)
	fm = nil
	DestroyGroup(gruppa)
	gruppa = nil
	FlushChildHashtable(udg_hash, honbase)
	DestroyTimer(tonbase)
	tonbase = nil
end

function Trig_IceBoss_end_Actions()
	local tend = GetExpiredTimer() ---@type timer
	local hend = GetHandleId(tend) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, hend, 1) ---@type unit
	local fm = CreateFogModifierRect(Player(0), FOG_OF_WAR_VISIBLE, gg_rct_6, true, true) ---@type fogmodifier
	local lop = 0 ---@type number integer
	local ishod = LoadInteger(udg_hash, hend, 2) ---@type number integer
	local tonbase = CreateTimer() ---@type timer
	local honbase = GetHandleId(tonbase) ---@type number integer
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	SaveUnitHandle(udg_hash, honbase, 1, boss)
	SaveFogModifierHandle(udg_hash, honbase, 2, fm)
	SaveInteger(udg_hash, honbase, 3, ishod)
	GroupEnumUnitsInRect(g, gg_rct_6, nil)
	while(true) do
		if (lop > 9) then break end
		if (GetLocalPlayer() == Player(lop)) then
			CameraSetupApplyForceDuration(gg_cam_Camera_BossFightStart, true, .0)
			SetCameraRotateMode(GetRectCenterX(gg_rct_6), GetRectCenterY(gg_rct_6), bj_DEGTORAD * 360., 6.)
		end
		lop = lop + 1
	end
	TimerStart(tonbase, 6., false, Trig_IceBoss_onbase_Actions)
	if ishod == 1 then
		IssuePointOrderById(boss, $D0012, GetRectCenterX(gg_rct_6), GetRectCenterY(gg_rct_6))
	else
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if GetOwningPlayer(Picked) == Player($B) then
				KillUnit(Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
	end
	CinematicModeExBJ(true, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	CinematicFadeBJ(1, 6., "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	FlushChildHashtable(udg_hash, hend)
	DestroyTimer(tend)
	tend = nil
	boss = nil
	fm = nil
	tonbase = nil
	DestroyGroup(g)
	g = nil
end

function Trig_IceBoss_ActionWithWait_Actions()
	local twact = GetExpiredTimer() ---@type timer
	local hwact = GetHandleId(twact) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, hwact, 1) ---@type unit
	IssueImmediateOrderById(boss, $D00FC)
	DestroyTimer(twact)
	twact = nil
	FlushChildHashtable(udg_hash, hwact)
	boss = nil
end

function Trig_IceBoss_No_zaniat_Actions()
	local t = GetExpiredTimer() ---@type timer
	local boss = LoadUnitHandle(udg_hash, GetHandleId(t), 1) ---@type unit
	local zaniat = LoadBoolean(udg_hash, GetHandleId(boss), $A) ---@type boolean
	zaniat = false
	SaveBoolean(udg_hash, GetHandleId(boss), $A, zaniat)
	FlushChildHashtable(udg_hash, GetHandleId(t))
end

function Trig_IceBoss_hpcheck_Actions()
	local xc = GetRectCenterX(gg_rct_6) ---@type number real
	local yc = GetRectCenterY(gg_rct_6) ---@type number real
	local thpcheck = GetExpiredTimer() ---@type timer
	local hhpcheck = GetHandleId(thpcheck) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, hhpcheck, 1) ---@type unit
	local stage = LoadInteger(udg_hash, hhpcheck, 2) ---@type number integer
	local dammicheck = LoadInteger(udg_hash, hhpcheck, 4) ---@type number integer
	local dx = GetUnitX(boss) - xc ---@type number real
	local dy = GetUnitY(boss) - yc ---@type number real
	local twact = CreateTimer() ---@type timer
	local hwact = GetHandleId(twact) ---@type number integer
	local taltars ---@type timer
	local zaniat = LoadBoolean(udg_hash, GetHandleId(boss), $A) ---@type boolean
	local cdwall = LoadInteger(udg_hash, GetHandleId(boss), 41) ---@type number integer
	local cdstorm = LoadInteger(udg_hash, GetHandleId(boss), 42) ---@type number integer
	local cdrain = LoadInteger(udg_hash, GetHandleId(boss), 43) ---@type number integer
	local cdpunishment = LoadInteger(udg_hash, GetHandleId(boss), 44) ---@type number integer
	local cdblink = LoadInteger(udg_hash, GetHandleId(boss), 45) ---@type number integer
	local grp = CreateGroup() ---@type group
	local tcd ---@type timer
	local tgol ---@type timer
	local heroes = CreateGroup() ---@type group
	local Picked ---@type unit
	local kolvo = 0 ---@type number integer
	local random = GetRandomInt(1, 4) ---@type number integer
	local dist ---@type number real
	local tend ---@type timer
	local hend ---@type number integer
	local ishod = 0 ---@type number integer
	local ef ---@type effect
	local p = Player($C) ---@type player
	local itemrand = R2I($F + 5 * CountPlayersInForceBJ(udg_IGRAET)) ---@type number integer
	local itemx = (GetRandomReal(-1350., 100.)) ---@type number real
	local itemy = (GetRandomReal(1900., 3450.)) ---@type number real
	local dammi ---@type unit
	local geroi = CreateGroup() ---@type group
	if GetRandomInt(1, FourCC('d')) <= itemrand then
		CreatePotion(itemx, itemy, 3, 6)
	end
	if (zaniat == false and stage == 0 and GetUnitState(boss, UNIT_STATE_LIFE) > 140000. and GetUnitState(boss, UNIT_STATE_LIFE) < 120000.) or (stage == 1 and GetUnitState(boss, UNIT_STATE_LIFE) > 100000. and GetUnitState(boss, UNIT_STATE_LIFE) < 75000.) or (stage == 2 and GetUnitState(boss, UNIT_STATE_LIFE) > 30000. and GetUnitState(boss, UNIT_STATE_LIFE) < 5000.) then
		stage = stage + 1
		zaniat = true
		SaveBoolean(udg_hash, GetHandleId(boss), $A, zaniat)
		SaveInteger(udg_hash, hhpcheck, 2, stage)
		SaveUnitHandle(udg_hash, hwact, 1, boss)
		if SquareRoot(dx * dx + dy * dy) > 500 then
			IssuePointOrderById(boss, $D0012, xc + GetRandomReal(-250., 250.), yc + GetRandomReal(-250., 250.))
			SetUnitPathing(boss, false)
			TimerStart(twact, 4., false, Trig_IceBoss_ActionWithWait_Actions)
		else
			TimerStart(twact, .25, false, Trig_IceBoss_ActionWithWait_Actions)
		end
	end
	if cdwall > 0 then
		SaveInteger(udg_hash, GetHandleId(boss), 41, cdwall - 1)
	end
	if cdstorm > 0 then
		SaveInteger(udg_hash, GetHandleId(boss), 42, cdstorm - 1)
	end
	if cdrain > 0 then
		SaveInteger(udg_hash, GetHandleId(boss), 43, cdrain - 1)
	end
	if cdpunishment > 0 then
		SaveInteger(udg_hash, GetHandleId(boss), 44, cdpunishment - 1)
	end
	if cdblink > 0 then
		SaveInteger(udg_hash, GetHandleId(boss), 45, cdblink - 1)
	end
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, geroi)
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, grp)
	while(true) do
		Picked = FirstOfGroup(grp)
		if (Picked == nil) then break end
		if IsUnitType(Picked, UNIT_TYPE_HERO) and Picked ~= boss and GetUnitState(Picked, UNIT_STATE_LIFE) > .405 then
			GroupAddUnit(heroes, Picked)
		end
		GroupRemoveUnit(grp, Picked)
	end
	FilterMostNearUnit(heroes, boss)
	Picked = nil
	AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodSorceress.mdl", udg_Unit_FilterMostNearUnit, "chest")
	dammicheck = dammicheck + 1
	if dammicheck == 8 or dammicheck == 16 then
		dammi = CreateUnit(Player($B), FourCC('h00U'), GetUnitX(boss), GetUnitY(boss), .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 7.)
		UnitAddAbility(dammi, FourCC('A04H'))
		IssuePointOrderById(dammi, $D0079, GetUnitX(udg_Unit_FilterMostNearUnit), GetUnitY(udg_Unit_FilterMostNearUnit))
	end
	if dammicheck == 18 then
		dammicheck = 0
	end
	SaveInteger(udg_hash, hhpcheck, 4, dammicheck)
	if zaniat == false then
		if random == 1 and cdwall <= 0 and udg_Unit_FilterMostNearUnit ~= nil then
			IssuePointOrderById(boss, $D027A, GetUnitX(udg_Unit_FilterMostNearUnit), GetUnitY(udg_Unit_FilterMostNearUnit))
			SaveInteger(udg_hash, GetHandleId(boss), 41, 16)
		end
		if random == 2 and SquareRoot(dx * dx + dy * dy) < 700 and cdstorm <= 0 then
			IssueImmediateOrderById(boss, $D0278)
			SaveInteger(udg_hash, GetHandleId(boss), 42, 19)
			zaniat = true
			tcd = CreateTimer()
			SaveBoolean(udg_hash, GetHandleId(boss), $A, zaniat)
			SaveInteger(udg_hash, GetHandleId(boss), $C, 20)
			SaveUnitHandle(udg_hash, GetHandleId(tcd), 1, boss)
			TimerStart(tcd, 3.5, false, Trig_IceBoss_No_zaniat_Actions)
			tcd = nil
		end
		if random == 3 and SquareRoot(dx * dx + dy * dy) < 700 and cdrain <= 0 then
			IssuePointOrderById(boss, $D010D, GetUnitX(boss) + $A * Cos(GetUnitFacing(boss) * bj_DEGTORAD), GetUnitY(boss) + $A * Sin(GetUnitFacing(boss) * bj_DEGTORAD))
			zaniat = true
			SaveInteger(udg_hash, GetHandleId(boss), 43, 22)
			tcd = CreateTimer()
			SaveBoolean(udg_hash, GetHandleId(boss), $A, zaniat)
			SaveInteger(udg_hash, GetHandleId(boss), $C, 20)
			SaveUnitHandle(udg_hash, GetHandleId(tcd), 1, boss)
			TimerStart(tcd, 6., false, Trig_IceBoss_No_zaniat_Actions)
			tcd = nil
		end
		if random == 4 and cdpunishment <= 0 and udg_Unit_FilterMostNearUnit ~= nil then
			TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, boss, "FrostLich the Freezing in Ice", gg_snd_HeroLichYesAttack1, udg_ColorString[GetPlayerId(GetOwningPlayer(udg_Unit_FilterMostNearUnit)) + 1] .. GetPlayerName(GetOwningPlayer(udg_Unit_FilterMostNearUnit)) .. "|r, |cFFAFE6FFПочувствуй Зов Могилы!!!...|r", 0, 2.2, false)
			SaveInteger(udg_hash, GetHandleId(boss), 44, $C)
			IssueTargetOrderById(boss, $D00DD, udg_Unit_FilterMostNearUnit)
		end
	end
	if cdblink <= 0 and zaniat == false then
		dist = GetRandomReal(-800., -400.)
		SaveInteger(udg_hash, GetHandleId(boss), 45, 25)
		IssuePointOrderById(boss, $D022D, GetUnitX(boss) + dist * Cos(bj_RADTODEG * Atan2(dx, dy) * bj_DEGTORAD), GetUnitY(boss) + dist * Sin(bj_RADTODEG * Atan2(dx, dy) * bj_DEGTORAD))
		DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Shiva'sWrath.mdl", boss, "origin"))
	end
	if SquareRoot(dx * dx + dy * dy) > $4B0 and zaniat == false then
		SetUnitPosition(boss, xc, yc)
	end
	GroupClear(heroes)
	if GetUnitState(boss, UNIT_STATE_LIFE) < .405 then
		tend = CreateTimer()
		hend = GetHandleId(tend)
		SaveInteger(udg_hash, hend, 2, ishod)
		SaveUnitHandle(udg_hash, hend, 1, boss)
		TimerStart(tend, 3., false, Trig_IceBoss_end_Actions)
		taltars = LoadTimerHandle(udg_hash, hhpcheck, 3)
		FlushChildHashtable(udg_hash, GetHandleId(taltars))
		DestroyTimer(taltars)
		GroupEnumUnitsInRect(heroes, gg_rct_6, nil)
		DestroyTimer(thpcheck)
		tend = nil
		FlushChildHashtable(udg_hash, hhpcheck)
	end
	GroupClear(heroes)
	while(true) do
		Picked = FirstOfGroup(geroi)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) < .405 then
			kolvo = kolvo + 1
			SaveInteger(udg_hash, GetHandleId(Picked), 1, 1)
		end
		GroupRemoveUnit(geroi, Picked)
	end
	Picked = nil
	if kolvo >= CountUnitsInGroup(udg_Gruppa_HeroUnitov_Geroev) then
		tend = CreateTimer()
		hend = GetHandleId(tend)
		SaveInteger(udg_hash, hend, 2, ishod + 1)
		SaveUnitHandle(udg_hash, hend, 1, boss)
		taltars = LoadTimerHandle(udg_hash, hhpcheck, 3)
		FlushChildHashtable(udg_hash, GetHandleId(taltars))
		DestroyTimer(taltars)
		TimerStart(tend, 3., false, Trig_IceBoss_end_Actions)
		DestroyTimer(thpcheck)
		tend = nil
		FlushChildHashtable(udg_hash, hhpcheck)
	end
	thpcheck = nil
	boss = nil
	twact = nil
	GroupClear(grp)
	DestroyGroup(grp)
	grp = nil
	GroupClear(heroes)
	DestroyGroup(heroes)
	GroupClear(geroi)
	DestroyGroup(geroi)
	geroi = nil
	heroes = nil
	p = nil
	dammi = nil
end

function Trig_IceBoss_frasa_Actions()
	local tfrasa = GetExpiredTimer() ---@type timer
	local hfrasa = GetHandleId(tfrasa) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, hfrasa, 1) ---@type unit
	local random = GetRandomInt(1, 3) ---@type number integer
	if GetUnitState(boss, UNIT_STATE_LIFE) > .405 then
		if random == 1 then
			TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, boss, "FrostLich the Freezing in Ice", gg_snd_HeroLichReady1, "|cFFAFE6FFДревнее Зло... Непобедимо!!!|r", 0, 4.37, false)
		end
		if random == 2 then
			TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, boss, "FrostLich the Freezing in Ice", gg_snd_HeroLichYesAttack2, "|cFFAFE6FFВо Славу Тьмы!!!..|r", 0, 2.7, false)
		end
		if random == 3 then
			TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, boss, "FrostLich the Freezing in Ice", gg_snd_HeroLichYesAttack3, "|cFFAFE6FFИх Ждет Смерть!!!...|r", 0, 2.4, false)
		end
	else
		FlushChildHashtable(udg_hash, hfrasa)
		DestroyTimer(tfrasa)
	end
	tfrasa = nil
	boss = nil
end

function Trig_IceBoss_5sec_Actions()
	local t5sec = GetExpiredTimer() ---@type timer
	local h5sec = GetHandleId(t5sec) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, h5sec, 1) ---@type unit
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local tfrasa = CreateTimer() ---@type timer
	local hfrasa = GetHandleId(tfrasa) ---@type number integer
	local thpcheck = CreateTimer() ---@type timer
	local hhpcheck = GetHandleId(thpcheck) ---@type number integer
	local stage = 0 ---@type number integer
	local taltars = CreateTimer() ---@type timer
	local zaniat = false ---@type boolean
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	CinematicModeExBJ(false, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		PauseUnit(Picked, false)
		IssueTargetOrderById(Picked, $D000F, boss)
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			ClearSelection()
			SelectUnit(Picked, true)
			ResetToGameCamera(.0)
			PanCameraToTimed(GetRectCenterX(gg_rct_6), GetRectCenterY(gg_rct_6), .0)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	PauseUnit(boss, false)
	IssuePointOrderById(boss, $D0012, GetRectCenterX(gg_rct_6), GetRectCenterY(gg_rct_6))
	SaveUnitHandle(udg_hash, hfrasa, 1, boss)
	TimerStart(tfrasa, 13., true, Trig_IceBoss_frasa_Actions)
	SaveUnitHandle(udg_hash, hhpcheck, 1, boss)
	SaveInteger(udg_hash, hhpcheck, 2, stage)
	SaveTimerHandle(udg_hash, hhpcheck, 3, taltars)
	SaveBoolean(udg_hash, GetHandleId(boss), $A, zaniat)
	SaveInteger(udg_hash, GetHandleId(boss), 41, 0)
	SaveInteger(udg_hash, GetHandleId(boss), 42, 0)
	SaveInteger(udg_hash, GetHandleId(boss), 43, 0)
	SaveInteger(udg_hash, GetHandleId(boss), 44, 0)
	SaveInteger(udg_hash, GetHandleId(boss), 45, 20)
	SaveInteger(udg_hash, hhpcheck, 4, 0)
	TimerStart(thpcheck, 1., true, Trig_IceBoss_hpcheck_Actions)
	DestroyTimer(t5sec)
	FlushChildHashtable(udg_hash, h5sec)
	t5sec = nil
	boss = nil
	Picked = nil
	tfrasa = nil
	thpcheck = nil
	taltars = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
end

function Trig_IceBoss_3sec_Actions()
	local t3sec = GetExpiredTimer() ---@type timer
	local h3sec = GetHandleId(t3sec) ---@type number integer
	local t5sec = CreateTimer() ---@type timer
	local h5sec = GetHandleId(t5sec) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, h3sec, 1) ---@type unit
	SaveUnitHandle(udg_hash, h5sec, 1, boss)
	TimerStart(t5sec, 5., false, Trig_IceBoss_5sec_Actions)
	ForceCinematicSubtitles(true)
	TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, boss, "FrostLich the Freezing in Ice", gg_snd_HeroLichReady1, "|cFFAFE6FFДревнее Зло... Непобедимо!!!|r", 0, 4.75, false)
	DestroyTimer(t3sec)
	FlushChildHashtable(udg_hash, h3sec)
	t3sec = nil
	t5sec = nil
	boss = nil
end

function Trig_IceBoss_Actions()
	local xc = GetRectCenterX(gg_rct_6) ---@type number real
	local yc = GetRectCenterY(gg_rct_6) ---@type number real
	local xp = xc - 1216. ---@type number real
	local yp = yc + 1088. ---@type number real
	local random ---@type number integer
	local oB = 1 ---@type number integer
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local dist = -350 ---@type number real
	local boss = CreateUnit(Player($B), FourCC('N000'), (xc - 500), yc, .0) ---@type unit
	local t3sec = CreateTimer() ---@type timer
	local h3sec = GetHandleId(t3sec) ---@type number integer
	udg_BossFightWeather = AddWeatherEffect(gg_rct_6, FourCC('SNhs'))
	udg_BossFightWeather2 = AddWeatherEffect(gg_rct_6, FourCC('FDbh'))
	EnableWeatherEffect(udg_BossFightWeather, true)
	EnableWeatherEffect(udg_BossFightWeather2, true)
	DisableTrigger(gg_trg_Hero_Dead)
	EnableTrigger(gg_trg_Ice_Wall)
	EnableTrigger(gg_trg_Ice_Storm)
	EnableTrigger(gg_trg_Ice_Rain)
	EnableTrigger(gg_trg_Ice_Restoration)
	EnableTrigger(gg_trg_Cold_Punishment)
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	SetAttackSpeedAbilityLevel(boss, 20 * CountPlayersInForceBJ(udg_IGRAET))
	SetAttackAbilityLevel(boss, FourCC('d') * CountPlayersInForceBJ(udg_IGRAET))
	SetArmorAbilityLevel(boss, $A * CountPlayersInForceBJ(udg_IGRAET))
	CinematicModeExBJ(true, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	CinematicFadeBJ(1, .0, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	CinematicFadeBJ(0, 8.25, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		SetUnitPosition(Picked, (xc + 500), (yc + dist))
		SetUnitFacing(Picked, bj_RADTODEG * Atan2(yc - GetUnitY(Picked), xc - GetUnitX(Picked)))
		PauseUnit(Picked, true)
		ClearSelection()
		dist = dist + FourCC('d')
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			CameraSetupApplyForceDuration(gg_cam_Camera_BossFightStart, true, .0)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	SetHeroLevel(boss, 50, false)
	UnitAddAbility(boss, FourCC('A00K'))
	UnitAddAbility(boss, FourCC('A03K'))
	UnitAddAbility(boss, FourCC('A03P'))
	UnitAddAbility(boss, FourCC('A043'))
	UnitAddAbility(boss, FourCC('A04B'))
	UnitAddAbility(boss, FourCC('A04D'))
	PauseUnit(boss, true)
	SaveUnitHandle(udg_hash, h3sec, 1, boss)
	TimerStart(t3sec, 3., false, Trig_IceBoss_3sec_Actions)
	ShowAndFlushAllPlayerDamage(true)
	TimerStart(udg_TimerShowAndFlushAllPlayerDmg, 10000., false, nil)
	while(true) do
		if (oB > 16) then break end
		yp = yp - $80
		bj_forLoopAIndex = 1
		while(true) do
			if (bj_forLoopAIndex > 20) then break end
			random = GetRandomInt(1, $A)
			if random >= 1 and random <= 3 then
				SetTerrainType(xp, yp, FourCC('Idki'), -1, 2, 1)
			else
				if random >= 4 and random <= 7 then
					SetTerrainType(xp, yp, FourCC('Iice'), -1, 2, 1)
				else
					SetTerrainType(xp, yp, FourCC('Nice'), -1, 2, 1)
				end
			end
			xp = xp + $80
			bj_forLoopAIndex = bj_forLoopAIndex + 1
		end
		oB = oB + 1
		xp = xc - 1216.
	end
	Picked = nil
	boss = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
	t3sec = nil
end

function InitTrig_Ice_Boss()
	gg_trg_Ice_Boss = CreateTrigger()
	TriggerAddAction(gg_trg_Ice_Boss, Trig_IceBoss_Actions)
end

function Trig_Ice_Wall_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local wait = LoadInteger(udg_hash, h, 2) ---@type number integer
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local gdamage = CreateGroup() ---@type group
	local gdamage2 = CreateGroup() ---@type group
	local Picked ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local ef ---@type effect
	local lopa = 1 ---@type number integer
	local dammi ---@type unit
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 2, wait)
		while(true) do
			if (lopa > 20) then break end
			dammi = LoadUnitHandle(udg_hash, h, $A + lopa)
			GroupEnumUnitsInRange(gdamage, GetUnitX(dammi), GetUnitY(dammi), 140., nil)
			GroupAddGroup(gdamage, gdamage2)
			dammi = nil
			lopa = lopa + 1
		end
		while(true) do
			Picked = FirstOfGroup(gdamage2)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, (damage / 10.), false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				if (wait - (wait / $A) * $A) == 0 then
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIob\\AIobSpecialArt.mdl", Picked, "origin"))
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\ZigguratFrostMissile\\ZigguratFrostMissile.mdl", Picked, "chest"))
				end
				if GetUnitAbilityLevel(Picked, FourCC('B008')) <= 0 then
					dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
					UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
					UnitAddAbility(dammi, FourCC('A03M'))
					IssueTargetOrderById(dammi, $D006B, Picked)
					dammi = nil
				end
			end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitType(Picked, UNIT_TYPE_HERO) == false and IsUnitAlly(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				if GetUnitAbilityLevel(Picked, FourCC('B009')) <= 0 then
					dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
					UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
					UnitAddAbility(dammi, FourCC('A03I'))
					SetUnitAbilityLevel(dammi, FourCC('A03I'), 1)
					IssueTargetOrderById(dammi, $D0101, Picked)
					dammi = nil
				end
			end
			GroupRemoveUnit(gdamage2, Picked)
		end
	else
		lopa = 1
		while(true) do
			if (lopa > 20) then break end
			dammi = LoadUnitHandle(udg_hash, h, $A + lopa)
			KillUnit(dammi)
			ef = LoadEffectHandle(udg_hash, h, 40 + lopa)
			DestroyEffect(ef)
			dammi = nil
			ef = nil
			lopa = lopa + 1
		end
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	ef = nil
	Picked = nil
	p = nil
	GroupClear(gdamage)
	DestroyGroup(gdamage)
	gdamage = nil
	GroupClear(gdamage2)
	DestroyGroup(gdamage2)
	gdamage2 = nil
	dammi = nil
	ef = nil
end

function Trig_Ice_Wall_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc ---@type location
	local xt ---@type number real
	local yt ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = FourCC('x') ---@type number integer
	local damage = 150. ---@type number real
	local lopa = 1 ---@type number integer
	local lopb = 1 ---@type number integer
	local dammi ---@type unit
	local ef ---@type effect
	local p = GetOwningPlayer(caster) ---@type player
	local random ---@type number real
	if target ~= nil then
		xt = GetUnitX(target)
		yt = GetUnitY(target)
	else
		loc = GetSpellTargetLoc()
		xt = GetLocationX(loc)
		yt = GetLocationY(loc)
	end
	angle = bj_RADTODEG * Atan2(yt - GetUnitY(caster), xt - GetUnitX(caster))
	xt = xt + 75. * Cos(angle * bj_DEGTORAD)
	yt = yt + 75. * Sin(angle * bj_DEGTORAD)
	angle = angle - 90.
	xt = xt + 500. * Cos(angle * bj_DEGTORAD)
	yt = yt + 500. * Sin(angle * bj_DEGTORAD)
	while(true) do
		if (lopb > 2) then break end
		while(true) do
			if (lopa > $A) then break end
			random = GetRandomReal(.8, 1.25)
			dammi = CreateUnit(p, FourCC('h00U'), xt - ((lopa - 1) * 100.) * Cos(angle * bj_DEGTORAD), yt - ((lopa - 1) * 100.) * Sin(angle * bj_DEGTORAD), GetRandomReal(.0, 360.))
			SetUnitScale(dammi, random, random, random)
			ef = AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathTargetArt.mdl", dammi, "origin")
			SaveUnitHandle(udg_hash, h, $A + lopa + ($A * (lopb - 1)), dammi)
			SaveEffectHandle(udg_hash, h, 40 + lopa + ($A * (lopb - 1)), ef)
			dammi = nil
			ef = nil
			lopa = lopa + 1
		end
		xt = xt - 150. * Cos((angle + 90.) * bj_DEGTORAD)
		yt = yt - 150. * Sin((angle + 90.) * bj_DEGTORAD)
		lopb = lopb + 1
		lopa = 1
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveInteger(udg_hash, h, 2, wait)
	SaveReal(udg_hash, h, 3, damage)
	TimerStart(t, .1, true, Trig_Ice_Wall_Periodic_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	target = nil
	t = nil
	p = nil
end

---@return boolean
function Trig_Ice_Wall_Conditions()
	return GetSpellAbilityId() == FourCC('A03K')
end

function InitTrig_Ice_Wall()
	local index = 0 ---@type number integer
	gg_trg_Ice_Wall = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ice_Wall, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ice_Wall, Condition(Trig_Ice_Wall_Conditions))
	TriggerAddAction(gg_trg_Ice_Wall, Trig_Ice_Wall_Actions)
end

function Trig_Ice_Storm_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local x = LoadReal(udg_hash, h, 2) ---@type number real
	local y = LoadReal(udg_hash, h, 3) ---@type number real
	local wait = LoadInteger(udg_hash, h, 4) ---@type number integer
	local damage = LoadReal(udg_hash, h, 5) ---@type number real
	local angle = LoadReal(udg_hash, h, 6) ---@type number real
	local gdamage = CreateGroup() ---@type group
	local Picked ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local dammi ---@type unit
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local orderId ---@type number integer
	local dist ---@type number real
	local xt ---@type number real
	local yt ---@type number real
	orderId = $D0278
	if (orderId ~= 0) then
	else
		orderId = UnitId("channel")
		if (orderId ~= 0) then
		end
	end
	if order == orderId and wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 4, wait)
		dist = GetRandomReal(250., 600.)
		angle = angle + GetRandomReal(-60., 60.)
		xt = x + dist * Cos(angle * bj_DEGTORAD)
		yt = y + dist * Sin(angle * bj_DEGTORAD)
		angle = angle + 120.
		SaveReal(udg_hash, h, 6, angle)
		GroupEnumUnitsInRange(gdamage, xt, yt, 200., nil)
		DestroyEffect(AddSpecialEffect("war3mapImported\\Shiva'sWrath.mdl", xt, yt))
		dammi = CreateUnit(p, FourCC('n00A'), xt, yt, GetRandomReal(.0, 360.))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", dammi, "origin"))
		dammi = nil
		while(true) do
			Picked = FirstOfGroup(gdamage)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
				UnitAddAbility(dammi, FourCC('A039'))
				SetUnitAbilityLevel(dammi, FourCC('A039'), 1)
				IssueTargetOrderById(dammi, $D00CB, Picked)
				dammi = nil
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIob\\AIobSpecialArt.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\ZigguratFrostMissile\\ZigguratFrostMissile.mdl", Picked, "chest"))
			end
			GroupRemoveUnit(gdamage, Picked)
		end
	else
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	Picked = nil
	p = nil
	GroupClear(gdamage)
	DestroyGroup(gdamage)
	gdamage = nil
	dammi = nil
end

function Trig_Ice_Storm_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = 6 ---@type number integer
	local damage = 350 ---@type number real
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, x)
	SaveReal(udg_hash, h, 3, y)
	SaveInteger(udg_hash, h, 4, wait)
	SaveReal(udg_hash, h, 5, damage)
	SaveReal(udg_hash, h, 6, GetUnitFacing(caster))
	TimerStart(t, .5, true, Trig_Ice_Storm_Periodic_Actions)
	caster = nil
	t = nil
end

---@return boolean
function Trig_Ice_Storm_Conditions()
	return GetSpellAbilityId() == FourCC('A03P')
end

function InitTrig_Ice_Storm()
	local index = 0 ---@type number integer
	gg_trg_Ice_Storm = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ice_Storm, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ice_Storm, Condition(Trig_Ice_Storm_Conditions))
	TriggerAddAction(gg_trg_Ice_Storm, Trig_Ice_Storm_Actions)
end

---@return boolean
function Trig_Ice_Rain_Filter_Actions()
	return (GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405 and IsUnitEnemy(GetFilterUnit(), udg_Temp_Player[1]) and IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false and IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(GetFilterUnit()) ~= FourCC('h00U')) ~= nil
end

function Trig_Ice_Rain_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local wait = LoadInteger(udg_hash, h, 2) ---@type number integer
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local xt = LoadReal(udg_hash, h, 4) ---@type number real
	local yt = LoadReal(udg_hash, h, 5) ---@type number real
	local angle = LoadReal(udg_hash, h, 6) ---@type number real
	local gmissile = LoadGroupHandle(udg_hash, h, 7) ---@type group
	local waitcreate = LoadInteger(udg_hash, h, 8) ---@type number integer
	local gmissile2 = CreateGroup() ---@type group
	local gdamage ---@type group
	local gdamage2 = CreateGroup() ---@type group
	local Picked ---@type unit
	local Picked2 ---@type unit
	local missile ---@type unit
	local xmissile ---@type number real
	local ymissile ---@type number real
	local hmissile ---@type number integer
	local missileflywait ---@type number integer
	local anglemissile ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local ef ---@type effect
	local stop ---@type boolean
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local orderId ---@type number integer
	orderId = $D010D
	if (orderId ~= 0) then
	else
		orderId = UnitId("rainofchaos")
		if (orderId ~= 0) then
		end
	end
	if order == orderId and wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 2, wait)
		udg_Temp_Player[1] = p
		if waitcreate > 0 then
			waitcreate = waitcreate - 1
			SaveInteger(udg_hash, h, 8, waitcreate)
			xmissile = xt + GetRandomReal(-300., 300.) * Cos((angle - 90.) * bj_DEGTORAD)
			ymissile = yt + GetRandomReal(-300., 300.) * Sin((angle - 90.) * bj_DEGTORAD)
			anglemissile = angle + GetRandomReal(-30., 30.)
			missile = CreateUnit(p, FourCC('h00U'), xmissile, ymissile, anglemissile)
			ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\FrostBolt\\FrostBoltMissile.mdl", missile, "chest")
			UnitAddAbility(missile, FourCC('Amrf'))
			UnitRemoveAbility(missile, FourCC('Amrf'))
			SetUnitFlyHeight(missile, 50., .0)
			hmissile = GetHandleId(missile)
			SaveInteger(udg_hash, hmissile, 1, 0)
			SaveEffectHandle(udg_hash, hmissile, 2, ef)
			SaveStr(udg_hash, hmissile, 3, "Im missile")
			GroupAddUnit(gmissile, missile)
			SaveGroupHandle(udg_hash, h, 7, gmissile)
			missile = nil
			ef = nil
		end
		GroupAddGroup(gmissile, gmissile2)
		while(true) do
			missile = FirstOfGroup(gmissile2)
			if (missile == nil) then break end
			anglemissile = GetUnitFacing(missile)
			xmissile = GetUnitX(missile) + 36. * Cos(anglemissile * bj_DEGTORAD)
			ymissile = GetUnitY(missile) + 36. * Sin(anglemissile * bj_DEGTORAD)
			gdamage = CreateGroup()
			GroupEnumUnitsInRange(gdamage, xmissile, ymissile, 100., Filter(Trig_Ice_Rain_Filter_Actions))
			GroupAddGroup(gdamage, gdamage2)
			GroupClear(gdamage)
			DestroyGroup(gdamage)
			gdamage = nil
			if IsTerrainPathable(xmissile, ymissile, PATHING_TYPE_FLYABILITY) == false then
				SetUnitPosition(missile, xmissile, ymissile)
			end
			hmissile = GetHandleId(missile)
			missileflywait = LoadInteger(udg_hash, hmissile, 1)
			if missileflywait >= 30 then
				KillUnit(missile)
				GroupRemoveUnit(gmissile, missile)
				SaveGroupHandle(udg_hash, h, 7, gmissile)
				ef = LoadEffectHandle(udg_hash, hmissile, 2)
				DestroyEffect(ef)
				FlushChildHashtable(udg_hash, hmissile)
				ef = nil
				missile = nil
			else
				SaveInteger(udg_hash, hmissile, 1, missileflywait + 1)
			end
			GroupRemoveUnit(gmissile2, missile)
		end
		while(true) do
			Picked = FirstOfGroup(gdamage2)
			if (Picked == nil) then break end
			gdamage = CreateGroup()
			GroupEnumUnitsInRange(gdamage, GetUnitX(Picked), GetUnitY(Picked), 100., nil)
			stop = false
			while(true) do
				Picked2 = FirstOfGroup(gdamage)
				if (Picked2 == nil or stop) then break end
				if GetUnitState(Picked2, UNIT_STATE_LIFE) > .405 and GetOwningPlayer(Picked2) == p and GetUnitTypeId(Picked2) == FourCC('h00U') and LoadStr(udg_hash, GetHandleId(Picked2), 3) == "Im missile" then
					hmissile = GetHandleId(Picked2)
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIob\\AIobSpecialArt.mdl", Picked, "origin"))
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\ZigguratFrostMissile\\ZigguratFrostMissile.mdl", Picked, "chest"))
					UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					StunUnitTimed(Picked, .66)
					missile = Picked2
					KillUnit(missile)
					GroupRemoveUnit(gmissile, missile)
					SaveGroupHandle(udg_hash, h, 7, gmissile)
					ef = LoadEffectHandle(udg_hash, hmissile, 2)
					DestroyEffect(ef)
					FlushChildHashtable(udg_hash, hmissile)
					ef = nil
					missile = nil
					stop = true
				end
				GroupRemoveUnit(gdamage, Picked2)
			end
			GroupClear(gdamage)
			DestroyGroup(gdamage)
			gdamage = nil
			GroupRemoveUnit(gdamage2, Picked)
		end
	else
		if wait > 0 then
			while(true) do
				missile = FirstOfGroup(gmissile)
				if (missile == nil) then break end
				KillUnit(missile)
				hmissile = GetHandleId(missile)
				ef = LoadEffectHandle(udg_hash, hmissile, 2)
				DestroyEffect(ef)
				FlushChildHashtable(udg_hash, hmissile)
				ef = nil
				GroupRemoveUnit(gmissile, missile)
				missile = nil
			end
		end
		GroupClear(gmissile)
		DestroyGroup(gmissile)
		gmissile = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	ef = nil
	Picked = nil
	Picked2 = nil
	missile = nil
	p = nil
	GroupClear(gmissile2)
	DestroyGroup(gmissile2)
	gmissile2 = nil
	GroupClear(gdamage2)
	DestroyGroup(gdamage2)
	gdamage2 = nil
end

function Trig_Ice_Rain_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local loc ---@type location
	local xt ---@type number real
	local yt ---@type number real
	local xpoint ---@type number real
	local ypoint ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = $AF ---@type number integer
	local waitcreate = $91 ---@type number integer
	local damage = 150. ---@type number real
	local gmissile = CreateGroup() ---@type group
	if target ~= nil then
		xt = GetUnitX(target)
		yt = GetUnitY(target)
	else
		loc = GetSpellTargetLoc()
		xt = GetLocationX(loc)
		yt = GetLocationY(loc)
	end
	angle = bj_RADTODEG * Atan2(yt - GetUnitY(caster), xt - GetUnitX(caster))
	xpoint = x - 300. * Cos(angle * bj_DEGTORAD)
	ypoint = y - 300. * Sin(angle * bj_DEGTORAD)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveInteger(udg_hash, h, 2, wait)
	SaveReal(udg_hash, h, 3, damage)
	SaveReal(udg_hash, h, 4, xpoint)
	SaveReal(udg_hash, h, 5, ypoint)
	SaveReal(udg_hash, h, 6, angle)
	SaveGroupHandle(udg_hash, h, 7, gmissile)
	SaveInteger(udg_hash, h, 8, waitcreate)
	TimerStart(t, .04, true, Trig_Ice_Rain_Periodic_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	target = nil
	t = nil
	gmissile = nil
end

---@return boolean
function Trig_Ice_Rain_Conditions()
	return GetSpellAbilityId() == FourCC('A043')
end

function InitTrig_Ice_Rain()
	local index = 0 ---@type number integer
	gg_trg_Ice_Rain = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ice_Rain, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ice_Rain, Condition(Trig_Ice_Rain_Conditions))
	TriggerAddAction(gg_trg_Ice_Rain, Trig_Ice_Rain_Actions)
end

function Trig_Cold_Punishment_RefreshGroup_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local Picked = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gdamage = LoadGroupHandle(udg_hash, h, 2) ---@type group
	GroupRemoveUnit(gdamage, Picked)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	Picked = nil
	gdamage = nil
end

function Trig_Cold_Punishment_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local wait = LoadInteger(udg_hash, h, 3) ---@type number integer
	local damage = LoadReal(udg_hash, h, 4) ---@type number real
	local x = LoadReal(udg_hash, h, 5) ---@type number real
	local y = LoadReal(udg_hash, h, 6) ---@type number real
	local gdamage = LoadGroupHandle(udg_hash, h, 7) ---@type group
	local xt ---@type number real
	local yt ---@type number real
	local angle ---@type number real
	local g ---@type group
	local Picked ---@type unit
	local p ---@type player
	local lopa = 1 ---@type number integer
	local dammi ---@type unit
	local ef ---@type effect
	local destroy = false ---@type boolean
	local abilitylevel ---@type number integer
	local tPicked ---@type timer
	local htPicked ---@type number integer
	local time ---@type number real
	if GetUnitState(target, UNIT_STATE_LIFE) > .405 and wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 3, wait)
		g = CreateGroup()
		p = GetOwningPlayer(caster)
		xt = GetUnitX(target)
		yt = GetUnitY(target)
		angle = bj_RADTODEG * Atan2(yt - y, xt - x)
		x = x + 6. * Cos(angle * bj_DEGTORAD)
		y = y + 6. * Sin(angle * bj_DEGTORAD)
		SaveReal(udg_hash, h, 5, x)
		SaveReal(udg_hash, h, 6, y)
		while(true) do
			if (lopa > 5) then break end
			dammi = LoadUnitHandle(udg_hash, h, 9 + lopa)
			SetUnitPosition(dammi, x + 75. * Cos((lopa * 72) * bj_DEGTORAD), y + 75. * Sin((lopa * 72) * bj_DEGTORAD))
			dammi = nil
			lopa = lopa + 1
		end
		GroupEnumUnitsInRange(g, x, y, 150., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') and IsUnitInGroup(Picked, gdamage) == false then
				abilitylevel = 2
				if Picked == target then
					abilitylevel = 4
					UnitDamageTarget(caster, Picked, GetUnitState(target, UNIT_STATE_MAX_LIFE) / 2.5 + damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					destroy = true
				end
				if GetUnitAbilityLevel(Picked, FourCC('B005')) <= 0 or Picked == target then
					UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
					UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
					UnitAddAbility(dammi, FourCC('A039'))
					SetUnitAbilityLevel(dammi, FourCC('A039'), abilitylevel)
					IssueTargetOrderById(dammi, $D00CB, Picked)
					dammi = nil
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", Picked, "origin"))
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIob\\AIobSpecialArt.mdl", Picked, "origin"))
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\ZigguratFrostMissile\\ZigguratFrostMissile.mdl", Picked, "chest"))
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl", Picked, "chest"))
					GroupAddUnit(gdamage, Picked)
					tPicked = CreateTimer()
					htPicked = GetHandleId(tPicked)
					SaveUnitHandle(udg_hash, htPicked, 1, Picked)
					SaveGroupHandle(udg_hash, htPicked, 2, gdamage)
					time = 2.5
					if IsUnitType(Picked, UNIT_TYPE_HERO) == false then
						time = time * 2
					end
					TimerStart(tPicked, time, false, Trig_Cold_Punishment_RefreshGroup_Actions)
					tPicked = nil
				end
			end
			GroupRemoveUnit(g, Picked)
		end
		SaveGroupHandle(udg_hash, h, 7, gdamage)
	else
		destroy = true
	end
	if destroy then
		lopa = 1
		while(true) do
			if (lopa > 5) then break end
			dammi = LoadUnitHandle(udg_hash, h, 9 + lopa)
			ef = LoadEffectHandle(udg_hash, h, $E + lopa)
			KillUnit(dammi)
			DestroyEffect(ef)
			dammi = nil
			ef = nil
			lopa = lopa + 1
		end
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	Picked = nil
	target = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	gdamage = nil
	dammi = nil
end

function Trig_Cold_Punishment_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2(yt - GetUnitY(caster), xt - GetUnitX(caster)) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = 500 ---@type number integer
	local damage = 300. ---@type number real
	local lopa = 1 ---@type number integer
	local dammi ---@type unit
	local ef ---@type effect
	local p = GetOwningPlayer(caster) ---@type player
	local xnew = x + 200. * Cos(angle * bj_DEGTORAD) ---@type number real
	local ynew = y + 200. * Sin(angle * bj_DEGTORAD) ---@type number real
	local gdamage = CreateGroup() ---@type group
	while(true) do
		if (lopa > 5) then break end
		dammi = CreateUnit(p, FourCC('h00U'), xnew + 75. * Cos((lopa * 72) * bj_DEGTORAD), ynew + 75. * Sin((lopa * 72) * bj_DEGTORAD), angle)
		UnitAddAbility(dammi, FourCC('Amrf'))
		UnitRemoveAbility(dammi, FourCC('Amrf'))
		SetUnitFlyHeight(dammi, 100., .0)
		ef = AddSpecialEffectTarget("Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl", dammi, "origin")
		SaveUnitHandle(udg_hash, h, 9 + lopa, dammi)
		SaveEffectHandle(udg_hash, h, $E + lopa, ef)
		dammi = nil
		ef = nil
		lopa = lopa + 1
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveUnitHandle(udg_hash, h, 2, target)
	SaveInteger(udg_hash, h, 3, wait)
	SaveReal(udg_hash, h, 4, damage)
	SaveReal(udg_hash, h, 5, xnew)
	SaveReal(udg_hash, h, 6, ynew)
	SaveGroupHandle(udg_hash, h, 7, gdamage)
	TimerStart(t, .03, true, Trig_Cold_Punishment_Periodic_Actions)
	caster = nil
	target = nil
	t = nil
	p = nil
	gdamage = nil
end

---@return boolean
function Trig_Cold_Punishment_Conditions()
	return GetSpellAbilityId() == FourCC('A04B')
end

function InitTrig_Cold_Punishment()
	local index = 0 ---@type number integer
	gg_trg_Cold_Punishment = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Cold_Punishment, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Cold_Punishment, Condition(Trig_Cold_Punishment_Conditions))
	TriggerAddAction(gg_trg_Cold_Punishment, Trig_Cold_Punishment_Actions)
end

function Trig_Ice_Restoration_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, $D) ---@type unit
	local wait = LoadInteger(udg_hash, h, $E) ---@type number integer
	local xprestore = LoadReal(udg_hash, h, $F) ---@type number real
	local txtxp = LoadTextTagHandle(udg_hash, h, 16) ---@type texttag
	local txt ---@type texttag
	local txttime = LoadTextTagHandle(udg_hash, h, 17) ---@type texttag
	local lop = 0 ---@type number integer
	local dammi ---@type unit
	local l ---@type lightning
	local schetchik = 0 ---@type number integer
	local ef ---@type effect
	local angle ---@type number real
	local Picked ---@type unit
	local dammi2 ---@type unit
	local gdamage ---@type group
	local xt ---@type number real
	local yt ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	wait = wait - 1
	SaveInteger(udg_hash, h, $E, wait)
	SetTextTagText(txttime, "|cFFAFE6FF " .. I2S(R2I(wait / 5)) .. "|r", .065)
	while(true) do
		if (lop > 3) then break end
		lop = lop + 1
		dammi = LoadUnitHandle(udg_hash, h, lop)
		if GetUnitState(dammi, UNIT_STATE_LIFE) > .405 and wait > 0 then
			schetchik = schetchik + 1
		else
			if dammi ~= nil then
				xt = GetUnitX(dammi)
				yt = GetUnitY(dammi)
				dammi2 = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
				UnitApplyTimedLife(dammi2, FourCC('BTLF'), 2.)
				SetUnitScale(dammi2, 2., 2., 2.)
				DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Shiva'sWrath.mdl", dammi2, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", dammi2, "origin"))
				dammi2 = nil
				gdamage = CreateGroup()
				GroupEnumUnitsInRange(gdamage, GetUnitX(dammi), GetUnitY(dammi), 250., nil)
				while(true) do
					Picked = FirstOfGroup(gdamage)
					if (Picked == nil) then break end
					if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
						UnitDamageTarget(caster, Picked, 100., false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
						dammi2 = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
						UnitApplyTimedLife(dammi2, FourCC('BTLF'), 2.)
						UnitAddAbility(dammi2, FourCC('A039'))
						SetUnitAbilityLevel(dammi2, FourCC('A039'), 2)
						IssueTargetOrderById(dammi2, $D00CB, Picked)
						dammi2 = nil
						DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", Picked, "origin"))
						DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIob\\AIobSpecialArt.mdl", Picked, "origin"))
						DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\ZigguratFrostMissile\\ZigguratFrostMissile.mdl", Picked, "chest"))
					end
					GroupRemoveUnit(gdamage, Picked)
				end
				Picked = nil
				GroupClear(gdamage)
				DestroyGroup(gdamage)
				gdamage = nil
				RemoveUnit(dammi)
				l = LoadLightningHandle(udg_hash, GetHandleId(dammi), 1)
				DestroyLightning(l)
				FlushChildHashtable(udg_hash, GetHandleId(dammi))
				l = nil
			end
		end
		dammi = nil
	end
	if schetchik <= 0 or wait <= 0 then
		if wait <= 0 then
			SetUnitState(caster, UNIT_STATE_LIFE, GetUnitState(caster, UNIT_STATE_LIFE) + $3A98)
		end
		xprestore = xprestore + $3A98
		txt = CreateTextTag()
		SetTextTagText(txt, "|cFFAFE6FF +" .. I2S(R2I(xprestore)) .. "!|r", .045)
		xt = GetUnitX(caster) + FourCC('d') * Cos(180. * bj_DEGTORAD)
		yt = GetUnitY(caster) + FourCC('d') * Sin(180. * bj_DEGTORAD)
		SetTextTagPos(txt, xt + $96 * Cos(90. * bj_DEGTORAD), yt + $96 * Sin(90. * bj_DEGTORAD), .0)
		angle = GetRandomReal(45., 135.)
		SetTextTagVelocity(txt, .0101875 * Cos(angle * bj_DEGTORAD), .0301875 * Sin(angle * bj_DEGTORAD))
		SetTextTagPermanent(txt, false)
		SetTextTagColor(txt, $FF, $FF, $FF, $C8)
		SetTextTagLifespan(txt, 4.)
		SetTextTagFadepoint(txt, 2.)
		txt = nil
		DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Shiva'sWrath.mdl", caster, "origin"))
		DestroyTextTag(txtxp)
		DestroyTextTag(txttime)
		UnitRemoveAbility(caster, FourCC('Avul'))
		PauseUnit(caster, false)
		SetUnitAnimation(caster, "stand")
		ef = LoadEffectHandle(udg_hash, h, 18)
		DestroyEffect(ef)
		ef = nil
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
		SaveBoolean(udg_hash, GetHandleId(caster), $A, false)
	else
		xprestore = xprestore + schetchik * 50
		SetTextTagText(txtxp, "|cFFAFE6FF +" .. I2S(R2I(xprestore)) .. "|r", .045)
		SaveReal(udg_hash, h, $F, xprestore)
		SetUnitState(caster, UNIT_STATE_LIFE, GetUnitState(caster, UNIT_STATE_LIFE) + schetchik * 50)
	end
	t = nil
	caster = nil
	txtxp = nil
	txttime = nil
	p = nil
end

function Trig_Ice_Restoration_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local angle = 45. ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = FourCC('}') ---@type number integer
	local lop = 0 ---@type number integer
	local dammi ---@type unit
	local ef ---@type effect
	local p = GetOwningPlayer(caster) ---@type player
	local xc = GetRectCenterX(gg_rct_6) ---@type number real
	local yc = GetRectCenterY(gg_rct_6) ---@type number real
	local l ---@type lightning
	local xprestore = .0 ---@type number real
	local txtxp = CreateTextTag() ---@type texttag
	local txttime = CreateTextTag() ---@type texttag
	local xnew ---@type number real
	local ynew ---@type number real
	local dammi2 ---@type unit
	SetTextTagText(txtxp, "|cFFAFE6FF +" .. I2S(R2I(.0)) .. "|r", .045)
	xnew = x + FourCC('d') * Cos(180. * bj_DEGTORAD)
	ynew = y + FourCC('d') * Sin(180. * bj_DEGTORAD)
	SetTextTagPos(txtxp, xnew, ynew, .0)
	SetTextTagPos(txtxp, xnew + $96 * Cos(90. * bj_DEGTORAD), ynew + $96 * Sin(90. * bj_DEGTORAD), .0)
	SetTextTagPermanent(txtxp, false)
	SetTextTagColor(txtxp, $FF, $FF, $FF, $C8)
	SetTextTagText(txttime, "|cFFAFE6FF " .. I2S(R2I(wait / 25)) .. "|r", .065)
	xnew = x + 75 * Cos(180. * bj_DEGTORAD)
	ynew = y + 75 * Sin(180. * bj_DEGTORAD)
	SetTextTagPos(txttime, xnew, ynew, .0)
	SetTextTagPos(txttime, xnew + 50 * Cos(90. * bj_DEGTORAD), ynew + 50 * Sin(90. * bj_DEGTORAD), .0)
	SetTextTagPermanent(txttime, false)
	SetTextTagColor(txttime, $FF, $FF, $FF, $C8)
	UnitAddAbility(caster, FourCC('Avul'))
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FrostArmor\\FrostArmorTarget.mdl", caster, "chest")
	SaveEffectHandle(udg_hash, h, 18, ef)
	ef = nil
	PauseUnit(caster, true)
	SetUnitAnimation(caster, "Stand Channel")
	SetUnitFacing(caster, 270.)
	while(true) do
		if (lop > 3) then break end
		lop = lop + 1
		dammi = CreateUnit(p, FourCC('n007'), xc + $41A * Cos(angle * bj_DEGTORAD), yc + $41A * Sin(angle * bj_DEGTORAD), angle + $87)
		dammi2 = CreateUnit(p, FourCC('h00U'), GetUnitX(dammi), GetUnitY(dammi), .0)
		UnitApplyTimedLife(dammi2, FourCC('BTLF'), 2.)
		SetUnitScale(dammi2, 2., 2., 2.)
		DestroyEffect(AddSpecialEffectTarget("war3mapImported\\Shiva'sWrath.mdl", dammi2, "origin"))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", dammi2, "origin"))
		dammi2 = nil
		SetUnitAnimation(dammi, "Stand Work")
		SaveUnitHandle(udg_hash, h, lop, dammi)
		ef = AddSpecialEffectTarget("Abilities\\Weapons\\ZigguratFrostMissile\\ZigguratFrostMissile.mdl", dammi, "overhead")
		l = AddLightningEx("DRAM", true, x, y, 100., GetUnitX(dammi), GetUnitY(dammi), 260.)
		SaveEffectHandle(udg_hash, h, lop + 4, ef)
		SaveLightningHandle(udg_hash, GetHandleId(dammi), 1, l)
		angle = angle + 90.
		dammi = nil
		ef = nil
		l = nil
	end
	SaveUnitHandle(udg_hash, h, $D, caster)
	SaveInteger(udg_hash, h, $E, wait)
	SaveReal(udg_hash, h, $F, xprestore)
	SaveTextTagHandle(udg_hash, h, 16, txtxp)
	SaveTextTagHandle(udg_hash, h, 17, txttime)
	TimerStart(t, .2, true, Trig_Ice_Restoration_Periodic_Actions)
	t = nil
	caster = nil
	p = nil
	txtxp = nil
	txttime = nil
end

---@return boolean
function Trig_Ice_Restoration_Conditions()
	return GetSpellAbilityId() == FourCC('A04D')
end

function InitTrig_Ice_Restoration()
	local index = 0 ---@type number integer
	gg_trg_Ice_Restoration = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ice_Restoration, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ice_Restoration, Condition(Trig_Ice_Restoration_Conditions))
	TriggerAddAction(gg_trg_Ice_Restoration, Trig_Ice_Restoration_Actions)
end

function Trig_BossStart_onbase_Actions()
	local tonbase = GetExpiredTimer() ---@type timer
	local honbase = GetHandleId(tonbase) ---@type number integer
	local ishod = LoadInteger(udg_hash, honbase, 3) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, honbase, 1) ---@type unit
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local xc = GetRectCenterX(gg_rct_Respawn_Heroes) ---@type number real
	local yc = GetRectCenterY(gg_rct_Respawn_Heroes) ---@type number real
	local fm = LoadFogModifierHandle(udg_hash, honbase, 2) ---@type fogmodifier
	local txt ---@type texttag
	local vel = .0221875 ---@type number real
	local angle = 45. + GetRandomReal(.0, 90.) ---@type number real
	local xvel = vel * Cos(angle * bj_DEGTORAD) ---@type number real
	local yvel = vel * Sin(angle * bj_DEGTORAD) ---@type number real
	local dead = 0 ---@type number integer
	local perekluchatel = .1 ---@type number real
	ShowAndFlushAllPlayerDamage(false)
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	CinematicModeExBJ(false, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	CinematicFadeBJ(0, 5., "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 0)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		if perekluchatel >= 0 then
			perekluchatel = -perekluchatel
			perekluchatel = perekluchatel - 50.
		else
			perekluchatel = -perekluchatel
			perekluchatel = perekluchatel + 50.
		end
		xc = GetRectCenterX(gg_rct_Respawn_Heroes) + perekluchatel
		yc = GetRectCenterY(gg_rct_Respawn_Heroes)
		ReviveHero(Picked, xc, yc, true)
		SetUnitPosition(Picked, xc, yc)
		SetUnitFacing(Picked, 270.)
		SetUnitState(Picked, UNIT_STATE_LIFE, $540BE3FF)
		SetUnitState(Picked, UNIT_STATE_MANA, $540BE3FF)
		if ishod == 0 then
			txt = CreateTextTag()
			dead = LoadInteger(udg_hash, GetHandleId(Picked), 1)
			if dead == 1 then
				SetTextTagText(txt, "|cFFFFFF00+500|r", .035)
				AddHeroXP(Picked, $3E8, true)
				SetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD, (GetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD) + 500))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIem\\AIemTarget.mdl", Picked, "overhead"))
				if GetLocalPlayer() == GetOwningPlayer(Picked) then
					DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Вы получили " .. udg_ColorString[23] .. I2S(500) .. " золота|r!!!")
				end
			else
				SetTextTagText(txt, "|cFFFFFF00+1200|r", .045)
				AddHeroXP(Picked, $BB8, true)
				SetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD, (GetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD) + $4B0))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIem\\AIemTarget.mdl", Picked, "overhead"))
				if GetLocalPlayer() == GetOwningPlayer(Picked) then
					DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Вы получили " .. udg_ColorString[23] .. I2S($4B0) .. " золота|r!!!")
				end
			end
			SetTextTagPos(txt, GetUnitX(Picked), GetUnitY(Picked), .0)
			SetTextTagColor(txt, 0, 0, 0, 50)
			SetTextTagVelocity(txt, xvel, yvel)
			SetTextTagPermanent(txt, false)
			SetTextTagLifespan(txt, 4.)
			SetTextTagFadepoint(txt, .0)
			txt = nil
		end
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			ResetToGameCamera(.0)
			if ishod == 1 then
				DisplayTextToPlayer(GetOwningPlayer(Picked), 0, 0, "|cFFFF0000ВЫ ПРОИГРАЛИ БИТВУ С БОССОМ!!!|r")
			else
				DisplayTextToPlayer(GetOwningPlayer(Picked), 0, 0, "|cFFFFFF00ВЫ ПОБЕДИЛИ В БИТВЕ С БОССОМ!!!|r")
			end
			ResetToGameCamera(.0)
			PanCameraToTimed(xc, yc, .0)
			SelectUnit(Picked, true)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	EnableTrigger(gg_trg_Hero_Dead)
	DisableTrigger(gg_trg_FlameSpells)
	DisableTrigger(gg_trg_Upgrade_Summons)
	Picked = nil
	GroupEnumUnitsInRect(gruppa, gg_rct_6, nil)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		if GetUnitTypeId(Picked) ~= FourCC('h00C') and GetUnitTypeId(Picked) ~= FourCC('h00B') and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			RemoveUnit(Picked)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	StartTimerBJ(udg_Timer_Nomera_Volni, false, 75.)
	CreateTimerDialogBJ(udg_Timer_Nomera_Volni, ("Волна № |cFFFF0000" .. (I2S(udg_Nomer_samoi_volni) .. "|r")))
	udg_TimerDialog_Nomera_Volni = bj_lastCreatedTimerDialog
	TimerDialogSetTimeColorBJ(udg_TimerDialog_Nomera_Volni, FourCC('d'), 90., 30., 20.)
	udg_Is_Fast_Wave_Start_On_Off = true
	Picked = nil
	RemoveWeatherEffect(udg_BossFightWeather)
	udg_BossFightWeather = nil
	FlushChildHashtable(udg_hash, GetHandleId(boss))
	RemoveUnit(boss)
	boss = nil
	DestroyFogModifier(fm)
	fm = nil
	DestroyGroup(gruppa)
	gruppa = nil
	FlushChildHashtable(udg_hash, honbase)
	DestroyTimer(tonbase)
	tonbase = nil
end

function Trig_BossStart_end_Actions()
	local tend = GetExpiredTimer() ---@type timer
	local hend = GetHandleId(tend) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, hend, 1) ---@type unit
	local fm = CreateFogModifierRect(Player(0), FOG_OF_WAR_VISIBLE, gg_rct_6, true, true) ---@type fogmodifier
	local lop = 0 ---@type number integer
	local ishod = LoadInteger(udg_hash, hend, 2) ---@type number integer
	local tonbase = CreateTimer() ---@type timer
	local honbase = GetHandleId(tonbase) ---@type number integer
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	SaveUnitHandle(udg_hash, honbase, 1, boss)
	SaveFogModifierHandle(udg_hash, honbase, 2, fm)
	SaveInteger(udg_hash, honbase, 3, ishod)
	GroupEnumUnitsInRect(g, gg_rct_6, nil)
	while(true) do
		if (lop > 9) then break end
		if (GetLocalPlayer() == Player(lop)) then
			CameraSetupApplyForceDuration(gg_cam_Camera_BossFightStart, true, .0)
			SetCameraRotateMode(GetRectCenterX(gg_rct_6), GetRectCenterY(gg_rct_6), bj_DEGTORAD * 360., 6.)
		end
		lop = lop + 1
	end
	TimerStart(tonbase, 6., false, Trig_BossStart_onbase_Actions)
	if ishod == 1 then
		IssuePointOrderById(boss, $D0012, GetRectCenterX(gg_rct_6), GetRectCenterY(gg_rct_6))
	else
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if GetOwningPlayer(Picked) == Player($B) then
				KillUnit(Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
	end
	CinematicModeExBJ(true, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	CinematicFadeBJ(1, 6., "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	FlushChildHashtable(udg_hash, hend)
	DestroyTimer(tend)
	tend = nil
	boss = nil
	fm = nil
	tonbase = nil
	DestroyGroup(g)
	g = nil
end

function Trig_BossStart_altars_periodic_Actions()
	local taltarsper = GetExpiredTimer() ---@type timer
	local haltarsper = GetHandleId(taltarsper) ---@type number integer
	local x = GetRectCenterX(gg_rct_6) + GetRandomReal(-1000., 1000.) ---@type number real
	local y = GetRectCenterY(gg_rct_6) + GetRandomReal(-800., 800.) ---@type number real
	local number = LoadInteger(udg_hash, haltarsper, 5) ---@type number integer
	local ZF = LoadInteger(udg_hash, haltarsper, 6) ---@type number integer
	local altar = LoadUnitHandle(udg_hash, haltarsper, number) ---@type unit
	local lop = 0 ---@type number integer
	local ef ---@type effect
	number = number + 1
	if number >= 5 then
		number = 1
	end
	SaveInteger(udg_hash, haltarsper, 5, number)
	if GetUnitState(altar, UNIT_STATE_LIFE) > .405 then
		IssuePointOrderById(altar, $D0208, x, y)
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", GetUnitX(altar), GetUnitY(altar)))
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosTarget.mdl", GetUnitX(altar), GetUnitY(altar)))
	else
		ef = LoadEffectHandle(udg_hash, GetHandleId(altar), 1)
		DestroyEffect(ef)
		FlushChildHashtable(udg_hash, GetHandleId(altar))
		ef = nil
	end
	altar = nil
	ZF = ZF - 1
	SaveInteger(udg_hash, haltarsper, 6, ZF)
	if ZF <= 0 then
		while(true) do
			lop = lop + 1
			if (lop > 4) then break end
			altar = LoadUnitHandle(udg_hash, haltarsper, lop)
			KillUnit(altar)
			altar = nil
			FlushChildHashtable(udg_hash, GetHandleId(altar))
		end
		DestroyTimer(taltarsper)
		FlushChildHashtable(udg_hash, haltarsper)
	end
	taltarsper = nil
end

function Trig_BossStart_altars_Actions()
	local taltars = GetExpiredTimer() ---@type timer
	local xc = GetRectCenterX(gg_rct_6) ---@type number real
	local yc = GetRectCenterY(gg_rct_6) ---@type number real
	local Picked ---@type unit
	local number = 0 ---@type number integer
	local lG = 40 ---@type number integer
	local lop = 0 ---@type number integer
	local angle = 45. ---@type number real
	local taltarsper = CreateTimer() ---@type timer
	local haltarsper = GetHandleId(taltarsper) ---@type number integer
	local ef ---@type effect
	while(true) do
		if (lop > 3) then break end
		lop = lop + 1
		Picked = CreateUnit(Player($B), FourCC('n00Q'), xc + $41A * Cos(angle * bj_DEGTORAD), yc + $41A * Sin(angle * bj_DEGTORAD), angle + $87)
		UnitApplyTimedLife(Picked, FourCC('BTLF'), 60.01)
		SaveUnitHandle(udg_hash, haltarsper, lop, Picked)
		ef = AddSpecialEffectTarget("Environment\\LargeBuildingFire\\LargeBuildingFire1.mdl", Picked, "origin")
		SaveEffectHandle(udg_hash, GetHandleId(Picked), 1, ef)
		angle = angle + 90.
		Picked = nil
		ef = nil
	end
	SaveInteger(udg_hash, haltarsper, 5, number)
	SaveInteger(udg_hash, haltarsper, 6, lG)
	TimerStart(taltarsper, 1.5, true, Trig_BossStart_altars_periodic_Actions)
	taltarsper = nil
	taltars = nil
end

function Trig_BossStart_hprestore_Actions()
	local thprestore = GetExpiredTimer() ---@type timer
	local hhprestore = GetHandleId(thprestore) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, hhprestore, 1) ---@type unit
	local lop = 0 ---@type number integer
	local u ---@type unit
	local l ---@type lightning
	local schetchik = 0 ---@type number integer
	local zG = LoadInteger(udg_hash, hhprestore, $A) ---@type number integer
	local txt ---@type texttag
	local endtxt = zG - (zG / 5) * 5 ---@type number integer
	local zaniat = LoadBoolean(udg_hash, GetHandleId(boss), $A) ---@type boolean
	local ef ---@type effect
	local angle ---@type number real
	local hpforsolo = (GetUnitState(boss, UNIT_STATE_MAX_LIFE) / $BB8) ---@type number real
	local hpforall = R2I((GetUnitState(boss, UNIT_STATE_MAX_LIFE) / $A)) ---@type number integer
	if (endtxt < 0) then
		endtxt = endtxt + 5
	end
	zG = zG + 1
	SaveInteger(udg_hash, hhprestore, $A, zG)
	if endtxt == 0 then
		txt = CreateTextTag()
		angle = GetRandomReal(.0, 360.)
		SetTextTagText(txt, "|cFFFF0000" .. I2S(20 - (zG / 5)) .. "|r", .055)
		SetTextTagPos(txt, GetUnitX(boss), GetUnitY(boss), .0)
		SetTextTagPermanent(txt, false)
		SetTextTagColor(txt, 0, 0, 0, $C8)
		SetTextTagVelocity(txt, .0501875 * Cos(angle * bj_DEGTORAD), .0501875 * Cos(angle * bj_DEGTORAD))
		SetTextTagLifespan(txt, 3.5)
		SetTextTagFadepoint(txt, .0)
		txt = nil
	end
	while(true) do
		if (lop > 4) then break end
		lop = lop + 1
		u[lop] = LoadUnitHandle(udg_hash, hhprestore, 1 + lop)
		l = LoadLightningHandle(udg_hash, GetHandleId(u[lop]), 1 + lop)
		if GetUnitState(u[lop], UNIT_STATE_LIFE) > .405 and zG < FourCC('d') then
			schetchik = schetchik + 1
			MoveLightningEx(l, true, GetUnitX(boss), GetUnitY(boss), 100., GetUnitX(u[lop]), GetUnitY(u[lop]), 5.)
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomTarget.mdl", GetUnitX(u[lop]), GetUnitY(u[lop])))
		else
			if zG >= FourCC('d') then
				KillUnit(u[lop])
			end
			if GetUnitState(u[lop], UNIT_STATE_LIFE) < .405 then
			end
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosTarget.mdl", GetUnitX(u[lop]), GetUnitY(u[lop])))
			DestroyLightning(l)
			FlushChildHashtable(udg_hash, GetHandleId(u[lop]))
			u[lop] = nil
			l = nil
		end
	end
	if schetchik <= 0 or zG >= FourCC('d') then
		if zG >= FourCC('d') then
			SetUnitState(boss, UNIT_STATE_LIFE, GetUnitState(boss, UNIT_STATE_LIFE) + hpforall)
			txt = CreateTextTag()
			SetTextTagText(txt, "|cFFFF0000 +" .. I2S(hpforall) .. "!|r", .055)
			SetTextTagPos(txt, GetUnitX(boss), GetUnitY(boss), .0)
			SetTextTagPermanent(txt, false)
			SetTextTagColor(txt, 0, 0, 0, $C8)
			SetTextTagVelocity(txt, .0101875 * Cos(GetRandomReal(.0, 360.) * bj_DEGTORAD), .0301875 * Sin(GetRandomReal(.0, 360.) * bj_DEGTORAD))
			SetTextTagLifespan(txt, 3.5)
			SetTextTagFadepoint(txt, .0)
			txt = nil
		end
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosTarget.mdl", GetUnitX(boss), GetUnitY(boss)))
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", GetUnitX(boss), GetUnitY(boss)))
		UnitRemoveAbility(boss, FourCC('Avul'))
		ef = LoadEffectHandle(udg_hash, GetHandleId(boss), $F)
		DestroyEffect(ef)
		ef = nil
		DestroyTimer(thprestore)
		FlushChildHashtable(udg_hash, hhprestore)
		PauseUnit(boss, false)
		SetUnitAnimation(boss, "stand")
		zaniat = false
		SaveBoolean(udg_hash, GetHandleId(boss), $A, zaniat)
	else
		SetUnitState(boss, UNIT_STATE_LIFE, GetUnitState(boss, UNIT_STATE_LIFE) + (schetchik * hpforsolo))
	end
	thprestore = nil
	boss = nil
end

function Trig_BossStart_ActionWithWait_Actions()
	local twact = GetExpiredTimer() ---@type timer
	local hwact = GetHandleId(twact) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, hwact, 1) ---@type unit
	local ef = LoadEffectHandle(udg_hash, hwact, 2) ---@type effect
	local lop = 0 ---@type number integer
	local xboss = GetUnitX(boss) ---@type number real
	local yboss = GetUnitY(boss) ---@type number real
	local angle = 0 ---@type number real
	local u ---@type unit
	local thprestore = CreateTimer() ---@type timer
	local hhprestore = GetHandleId(thprestore) ---@type number integer
	local IG = 0 ---@type number integer
	TimerStart(thprestore, .2, true, Trig_BossStart_hprestore_Actions)
	PauseUnit(boss, true)
	SetUnitPathing(boss, true)
	SetUnitAnimationByIndex(boss, 7)
	SaveUnitHandle(udg_hash, hhprestore, 1, boss)
	SaveInteger(udg_hash, hhprestore, $A, IG)
	while(true) do
		if (lop > 4) then break end
		lop = lop + 1
		u[lop] = CreateUnit(Player($B), FourCC('n00L'), xboss + 500 * Cos(angle * bj_DEGTORAD), yboss + 500 * Sin(angle * bj_DEGTORAD), angle + $B4)
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosTarget.mdl", xboss + 500 * Cos(angle * bj_DEGTORAD), yboss + 500 * Sin(angle * bj_DEGTORAD)))
		UnitApplyTimedLife(u[lop], FourCC('BTLF'), 20.)
		UnitAddAbility(u[lop], FourCC('Abun'))
		UnitAddType(u[lop], UNIT_TYPE_PEON)
		PauseUnit(u[lop], true)
		SetUnitAnimationByIndex(u[lop], 2)
		SetUnitMoveSpeed(u[lop], 0)
		bj_lastCreatedLightning = AddLightningEx("AFOD", true, xboss, yboss, 100., GetUnitX(u[lop]), GetUnitY(u[lop]), 5.)
		SaveUnitHandle(udg_hash, hhprestore, 1 + lop, u[lop])
		SaveLightningHandle(udg_hash, GetHandleId(u[lop]), 1 + lop, bj_lastCreatedLightning)
		angle = angle + 72
		u[lop] = nil
	end
	DestroyTimer(twact)
	twact = nil
	FlushChildHashtable(udg_hash, hwact)
	boss = nil
	DestroyEffect(ef)
	ef = nil
	thprestore = nil
end

function Trig_BossStart_vulcano_Actions()
	local tvul = GetExpiredTimer() ---@type timer
	local boss = LoadUnitHandle(udg_hash, GetHandleId(tvul), 1) ---@type unit
	local zaniat = LoadBoolean(udg_hash, GetHandleId(boss), $A) ---@type boolean
	local ef = LoadEffectHandle(udg_hash, GetHandleId(boss), $F) ---@type effect
	zaniat = false
	SaveBoolean(udg_hash, GetHandleId(boss), $A, zaniat)
	DestroyEffect(ef)
	ef = nil
	UnitRemoveAbility(boss, FourCC('Avul'))
	FlushChildHashtable(udg_hash, GetHandleId(tvul))
end

function Trig_BossStart_golems_Actions()
	local tgol = GetExpiredTimer() ---@type timer
	local boss = LoadUnitHandle(udg_hash, GetHandleId(tgol), 1) ---@type unit
	local zaniat = LoadBoolean(udg_hash, GetHandleId(boss), $A) ---@type boolean
	zaniat = false
	SaveBoolean(udg_hash, GetHandleId(boss), $A, zaniat)
	FlushChildHashtable(udg_hash, GetHandleId(tgol))
end

function Trig_BossStart_hpcheck_Actions()
	local xc = GetRectCenterX(gg_rct_6) ---@type number real
	local yc = GetRectCenterY(gg_rct_6) ---@type number real
	local thpcheck = GetExpiredTimer() ---@type timer
	local hhpcheck = GetHandleId(thpcheck) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, hhpcheck, 1) ---@type unit
	local stage = LoadInteger(udg_hash, hhpcheck, 2) ---@type number integer
	local dammicheck = LoadInteger(udg_hash, hhpcheck, 4) ---@type number integer
	local dx = GetUnitX(boss) - xc ---@type number real
	local dy = GetUnitY(boss) - yc ---@type number real
	local twact = CreateTimer() ---@type timer
	local hwact = GetHandleId(twact) ---@type number integer
	local taltars ---@type timer
	local zaniat = LoadBoolean(udg_hash, GetHandleId(boss), $A) ---@type boolean
	local cdvul = LoadInteger(udg_hash, GetHandleId(boss), $B) ---@type number integer
	local cdgol = LoadInteger(udg_hash, GetHandleId(boss), $C) ---@type number integer
	local grp = CreateGroup() ---@type group
	local tvul ---@type timer
	local tgol ---@type timer
	local heroes = CreateGroup() ---@type group
	local heroes2 ---@type group
	local targethero ---@type unit
	local heroes2dummi ---@type group
	local Picked ---@type unit
	local kolvo = 0 ---@type number integer
	local random = GetRandomInt(1, 4) ---@type number integer
	local tend ---@type timer
	local hend ---@type number integer
	local ishod = 0 ---@type number integer
	local ef ---@type effect
	local p = Player($C) ---@type player
	local itemrand = R2I($F + 5 * CountPlayersInForceBJ(udg_IGRAET)) ---@type number integer
	local itemx = (GetRandomReal(-1350., 100.)) ---@type number real
	local itemy = (GetRandomReal(1900., 3450.)) ---@type number real
	local dammi ---@type unit
	local geroi = CreateGroup() ---@type group
	local maxhp = GetUnitState(boss, UNIT_STATE_MAX_LIFE) ---@type number real
	if GetRandomInt(1, FourCC('d')) <= itemrand then
		CreatePotion(itemx, itemy, 3, 6)
	end
	if (zaniat == false and stage == 0 and GetUnitState(boss, UNIT_STATE_LIFE) > (maxhp * .566) and GetUnitState(boss, UNIT_STATE_LIFE) < (maxhp * .733)) or (stage == 1 and GetUnitState(boss, UNIT_STATE_LIFE) > (maxhp * .3) and GetUnitState(boss, UNIT_STATE_LIFE) < (maxhp * .466)) or (stage == 2 and GetUnitState(boss, UNIT_STATE_LIFE) > (maxhp * .03) and GetUnitState(boss, UNIT_STATE_LIFE) < (maxhp * .2)) then
		stage = stage + 1
		zaniat = true
		SaveBoolean(udg_hash, GetHandleId(boss), $A, zaniat)
		SaveInteger(udg_hash, hhpcheck, 2, stage)
		SaveUnitHandle(udg_hash, hwact, 1, boss)
		if SquareRoot(dx * dx + dy * dy) > 500 then
			IssuePointOrderById(boss, $D0012, xc + GetRandomReal(-250., 250.), yc + GetRandomReal(-250., 250.))
			SetUnitPathing(boss, false)
			TimerStart(twact, 4., false, Trig_BossStart_ActionWithWait_Actions)
		else
			TimerStart(twact, .25, false, Trig_BossStart_ActionWithWait_Actions)
		end
		UnitAddAbility(boss, FourCC('Avul'))
		ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\ImmolationRed\\ImmolationRedTarget.mdl", boss, "chest")
		SaveEffectHandle(udg_hash, GetHandleId(boss), $F, ef)
	end
	if cdgol > 0 then
		SaveInteger(udg_hash, GetHandleId(boss), $C, cdgol - 1)
	end
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, geroi)
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, grp)
	while(true) do
		Picked = FirstOfGroup(grp)
		if (Picked == nil) then break end
		if IsUnitType(Picked, UNIT_TYPE_HERO) and GetPlayerId(GetOwningPlayer(Picked)) <= 8 and Picked ~= boss then
			GroupAddUnit(heroes, Picked)
		end
		GroupRemoveUnit(grp, Picked)
	end
	FilterMostNearUnit(heroes, boss)
	Picked = nil
	AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodSorceress.mdl", udg_Unit_FilterMostNearUnit, "chest")
	dammicheck = dammicheck + 1
	if dammicheck == 7 or dammicheck == $E or dammicheck == 21 then
		heroes2dummi = CreateGroup()
		heroes2 = CreateGroup()
		GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, heroes2dummi)
		RandomUnitFromGroup(1, heroes2dummi)
		GroupAddGroup(udg_GroupRandomUnitFromGroup, heroes2)
		targethero = FirstOfGroup(heroes2)
		dammi = CreateUnit(Player($B), FourCC('h00U'), GetUnitX(boss), GetUnitY(boss), .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
		UnitAddAbility(dammi, FourCC('A0O4'))
		IssuePointOrderById(dammi, $D0201, GetUnitX(targethero), GetUnitY(targethero))
		GroupClear(heroes2dummi)
		DestroyGroup(heroes2dummi)
		heroes2dummi = nil
		GroupClear(heroes2)
		DestroyGroup(heroes2)
		heroes2 = nil
		targethero = nil
		dammi = nil
	end
	if dammicheck == $A or dammicheck == 20 then
		dammi = CreateUnit(Player($B), FourCC('h00U'), GetUnitX(boss), GetUnitY(boss), .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
		UnitAddAbility(dammi, FourCC('A06J'))
		IssueTargetOrderById(dammi, $D02BC, udg_Unit_FilterMostNearUnit)
	end
	if dammicheck == 21 then
		dammicheck = 0
	end
	SaveInteger(udg_hash, hhpcheck, 4, dammicheck)
	if zaniat == false and GetRandomInt(2, 4) <= 2 then
		if random == 1 then
			if udg_Unit_FilterMostNearUnit ~= nil then
				IssuePointOrderById(boss, $D009D, GetUnitX(udg_Unit_FilterMostNearUnit), GetUnitY(udg_Unit_FilterMostNearUnit))
			end
		end
		if random == 2 and SquareRoot(dx * dx + dy * dy) < 700 and cdgol <= 0 then
			IssueImmediateOrderById(boss, $D0080)
			zaniat = true
			tgol = CreateTimer()
			SaveBoolean(udg_hash, GetHandleId(boss), $A, zaniat)
			SaveInteger(udg_hash, GetHandleId(boss), $C, 20)
			SaveUnitHandle(udg_hash, GetHandleId(tgol), 1, boss)
			TimerStart(tgol, 4., false, Trig_BossStart_golems_Actions)
			tgol = nil
		end
		if random == 4 and SquareRoot(dx * dx + dy * dy) < 700 then
			IssueImmediateOrderById(boss, $D00B1)
		end
	end
	if SquareRoot(dx * dx + dy * dy) > $4B0 and zaniat == false then
		SetUnitPosition(boss, xc, yc)
	end
	GroupClear(heroes)
	if GetUnitState(boss, UNIT_STATE_LIFE) < .405 then
		tend = CreateTimer()
		hend = GetHandleId(tend)
		SaveInteger(udg_hash, hend, 2, ishod)
		SaveUnitHandle(udg_hash, hend, 1, boss)
		TimerStart(tend, 3., false, Trig_BossStart_end_Actions)
		taltars = LoadTimerHandle(udg_hash, hhpcheck, 3)
		FlushChildHashtable(udg_hash, GetHandleId(taltars))
		DestroyTimer(taltars)
		GroupEnumUnitsInRect(heroes, gg_rct_6, nil)
		DestroyTimer(thpcheck)
		tend = nil
		FlushChildHashtable(udg_hash, hhpcheck)
	end
	GroupClear(heroes)
	while(true) do
		Picked = FirstOfGroup(geroi)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) < .405 then
			kolvo = kolvo + 1
			SaveInteger(udg_hash, GetHandleId(Picked), 1, 1)
		end
		GroupRemoveUnit(geroi, Picked)
	end
	Picked = nil
	if kolvo >= CountUnitsInGroup(udg_Gruppa_HeroUnitov_Geroev) then
		tend = CreateTimer()
		hend = GetHandleId(tend)
		SaveInteger(udg_hash, hend, 2, ishod + 1)
		SaveUnitHandle(udg_hash, hend, 1, boss)
		taltars = LoadTimerHandle(udg_hash, hhpcheck, 3)
		FlushChildHashtable(udg_hash, GetHandleId(taltars))
		DestroyTimer(taltars)
		TimerStart(tend, 3., false, Trig_BossStart_end_Actions)
		DestroyTimer(thpcheck)
		tend = nil
		FlushChildHashtable(udg_hash, hhpcheck)
	end
	thpcheck = nil
	boss = nil
	twact = nil
	GroupClear(grp)
	DestroyGroup(grp)
	grp = nil
	GroupClear(heroes)
	DestroyGroup(heroes)
	GroupClear(geroi)
	DestroyGroup(geroi)
	geroi = nil
	heroes = nil
	p = nil
	dammi = nil
end

function Trig_BossStart_frasa_Actions()
	local tfrasa = GetExpiredTimer() ---@type timer
	local hfrasa = GetHandleId(tfrasa) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, hfrasa, 1) ---@type unit
	local random = GetRandomInt(1, 4) ---@type number integer
	if GetUnitState(boss, UNIT_STATE_LIFE) > .405 then
		if random == 1 then
			TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, boss, "Pyrovulcanous the Sunderer", gg_snd_HeroFirelordWarcry1, "|cFFFF0000Всех сожгу!!!......Один останусь!!!|r", 0, 4.77, false)
		end
		if random == 2 then
			TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, boss, "Pyrovulcanous the Sunderer", gg_snd_HeroFirelordYesAttack1, "|cFFFF0000Сожгу!!!......|r", 0, 2.13, false)
		end
		if random == 3 then
			TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, boss, "Pyrovulcanous the Sunderer", gg_snd_HeroFirelordYesAttack2, "|cFFFF0000Всё поглотит огонь!!!...|r", 0, 3.2, false)
		end
		if random == 4 then
			TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, boss, "Pyrovulcanous the Sunderer", gg_snd_HeroFirelordYesAttack3, "|cFFFF0000Испепелю!!!...|r", 0, 2.49, false)
		end
	else
		FlushChildHashtable(udg_hash, hfrasa)
		DestroyTimer(tfrasa)
	end
	tfrasa = nil
	boss = nil
end

function Trig_BossStart_5sec_Actions()
	local t5sec = GetExpiredTimer() ---@type timer
	local h5sec = GetHandleId(t5sec) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, h5sec, 1) ---@type unit
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local tfrasa = CreateTimer() ---@type timer
	local hfrasa = GetHandleId(tfrasa) ---@type number integer
	local thpcheck = CreateTimer() ---@type timer
	local hhpcheck = GetHandleId(thpcheck) ---@type number integer
	local stage = 0 ---@type number integer
	local taltars = CreateTimer() ---@type timer
	local zaniat = false ---@type boolean
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	CinematicModeExBJ(false, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		PauseUnit(Picked, false)
		IssueTargetOrderById(Picked, $D000F, boss)
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			ClearSelection()
			SelectUnit(Picked, true)
			ResetToGameCamera(.0)
			PanCameraToTimed(GetRectCenterX(gg_rct_6), GetRectCenterY(gg_rct_6), .0)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	PauseUnit(boss, false)
	IssuePointOrderById(boss, $D0012, GetRectCenterX(gg_rct_6), GetRectCenterY(gg_rct_6))
	SaveUnitHandle(udg_hash, hfrasa, 1, boss)
	TimerStart(tfrasa, 14., true, Trig_BossStart_frasa_Actions)
	SaveUnitHandle(udg_hash, hhpcheck, 1, boss)
	SaveInteger(udg_hash, hhpcheck, 2, stage)
	SaveTimerHandle(udg_hash, hhpcheck, 3, taltars)
	SaveBoolean(udg_hash, GetHandleId(boss), $A, zaniat)
	SaveInteger(udg_hash, GetHandleId(boss), $B, 0)
	SaveInteger(udg_hash, GetHandleId(boss), $C, 0)
	SaveInteger(udg_hash, hhpcheck, 4, 0)
	TimerStart(thpcheck, 1., true, Trig_BossStart_hpcheck_Actions)
	TimerStart(taltars, 61., true, Trig_BossStart_altars_Actions)
	DestroyTimer(t5sec)
	FlushChildHashtable(udg_hash, h5sec)
	t5sec = nil
	boss = nil
	Picked = nil
	tfrasa = nil
	thpcheck = nil
	taltars = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
end

function Trig_BossStart_3sec_Actions()
	local t3sec = GetExpiredTimer() ---@type timer
	local h3sec = GetHandleId(t3sec) ---@type number integer
	local t5sec = CreateTimer() ---@type timer
	local h5sec = GetHandleId(t5sec) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, h3sec, 1) ---@type unit
	SaveUnitHandle(udg_hash, h5sec, 1, boss)
	TimerStart(t5sec, 5.25, false, Trig_BossStart_5sec_Actions)
	ForceCinematicSubtitles(true)
	TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, boss, "Pyrovulcanous the Sunderer", gg_snd_HeroFirelordWarcry1, "|cFFFF0000Всех сожгу!!!......Один останусь!!!|r", 0, 5.07, false)
	DestroyTimer(t3sec)
	FlushChildHashtable(udg_hash, h3sec)
	t3sec = nil
	t5sec = nil
	boss = nil
end

function Trig_BossStart_Actions()
	local xc = GetRectCenterX(gg_rct_6) ---@type number real
	local yc = GetRectCenterY(gg_rct_6) ---@type number real
	local xp = xc - 1216. ---@type number real
	local yp = yc + 1088. ---@type number real
	local random ---@type number integer
	local tI = 1 ---@type number integer
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local dist = -350 ---@type number real
	local boss = CreateUnit(Player($B), FourCC('N00J'), (xc - 500), yc, .0) ---@type unit
	local t3sec = CreateTimer() ---@type timer
	local h3sec = GetHandleId(t3sec) ---@type number integer
	udg_BossFightWeather = AddWeatherEffect(gg_rct_6, FourCC('FDrh'))
	EnableWeatherEffect(udg_BossFightWeather, true)
	DisableTrigger(gg_trg_Hero_Dead)
	EnableTrigger(gg_trg_FlameSpells)
	EnableTrigger(gg_trg_Upgrade_Summons)
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	CinematicModeExBJ(true, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	CinematicFadeBJ(1, .0, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	CinematicFadeBJ(0, 8.25, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	SetAttackSpeedAbilityLevel(boss, $F * CountPlayersInForceBJ(udg_IGRAET))
	SetAttackAbilityLevel(boss, 30 * CountPlayersInForceBJ(udg_IGRAET))
	SetArmorAbilityLevel(boss, 5 * CountPlayersInForceBJ(udg_IGRAET))
	SetUnitMaxState(boss, UNIT_STATE_MAX_LIFE, R2I(3000. * CountPlayersInForceBJ(udg_IGRAET)))
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		SetUnitPosition(Picked, (xc + 500), (yc + dist))
		SetUnitFacing(Picked, bj_RADTODEG * Atan2(yc - GetUnitY(Picked), xc - GetUnitX(Picked)))
		PauseUnit(Picked, true)
		ClearSelection()
		dist = dist + FourCC('d')
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			CameraSetupApplyForceDuration(gg_cam_Camera_BossFightStart, true, .0)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	SetHeroLevel(boss, 30, false)
	AddSpecialEffectTarget("Environment\\LargeBuildingFire\\LargeBuildingFire1.mdl", boss, "chest")
	AddSpecialEffectTarget("Environment\\LargeBuildingFire\\LargeBuildingFire1.mdl", boss, "hand,right")
	AddSpecialEffectTarget("Environment\\LargeBuildingFire\\LargeBuildingFire1.mdl", boss, "hand,left")
	AddSpecialEffectTarget("Environment\\LargeBuildingFire\\LargeBuildingFire2.mdl", boss, "head")
	UnitAddAbility(boss, FourCC('A05T'))
	UnitAddAbility(boss, FourCC('A051'))
	UnitAddAbility(boss, FourCC('A05U'))
	UnitAddAbility(boss, FourCC('A004'))
	PauseUnit(boss, true)
	SaveUnitHandle(udg_hash, h3sec, 1, boss)
	TimerStart(t3sec, 3., false, Trig_BossStart_3sec_Actions)
	ShowAndFlushAllPlayerDamage(true)
	TimerStart(udg_TimerShowAndFlushAllPlayerDmg, 10000., false, nil)
	while(true) do
		if (tI > 16) then break end
		yp = yp - $80
		bj_forLoopAIndex = 1
		while(true) do
			if (bj_forLoopAIndex > 20) then break end
			random = GetRandomInt(1, $A)
			if random >= 1 and random <= 3 then
				SetTerrainType(xp, yp, FourCC('Ddrt'), -1, 2, 1)
			else
				if random >= 4 and random <= 7 then
					SetTerrainType(xp, yp, FourCC('Dlvc'), -1, 2, 1)
				else
					SetTerrainType(xp, yp, FourCC('Dlav'), -1, 2, 1)
				end
			end
			xp = xp + $80
			bj_forLoopAIndex = bj_forLoopAIndex + 1
		end
		tI = tI + 1
		xp = xc - 1216.
	end
	Picked = nil
	boss = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
	t3sec = nil
end

function InitTrig_BossStart()
	gg_trg_BossStart = CreateTrigger()
	TriggerAddAction(gg_trg_BossStart, Trig_BossStart_Actions)
end

---@return boolean
function Trig_FlameSpells_Conditions()
	return GetSpellAbilityId() == FourCC('A05T') or GetSpellAbilityId() == FourCC('A05U')
end

function Trig_FlameSpells_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local xu = LoadReal(udg_hash, h, 1) ---@type number real
	local yu = LoadReal(udg_hash, h, 2) ---@type number real
	local angle = LoadReal(udg_hash, h, 3) ---@type number real
	local i = LoadInteger(udg_hash, h, 4) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 5) ---@type unit
	local x = xu + 400 * Cos((angle + i * FourCC('x')) * bj_DEGTORAD) ---@type number real
	local y = yu + 400 * Sin((angle + i * FourCC('x')) * bj_DEGTORAD) ---@type number real
	local u ---@type unit
	local un ---@type unit
	local zaniat = LoadBoolean(udg_hash, GetHandleId(caster), $A) ---@type boolean
	local ef = LoadEffectHandle(udg_hash, GetHandleId(caster), $F) ---@type effect
	i = i + 1
	SaveInteger(udg_hash, h, 4, i)
	if i < 4 then
		u = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), xu, yu, .0)
		un = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), xu, yu, .0)
		UnitApplyTimedLife(u, FourCC('BTLF'), 2.)
		UnitAddAbility(u, FourCC('A055'))
		UnitAddAbility(un, FourCC('A05A'))
		SetUnitAbilityLevel(u, FourCC('A055'), 1)
		IssuePointOrderById(u, $D0100, x, y)
		IssuePointOrderById(un, $D0208, x, y)
	else
		zaniat = false
		SaveBoolean(udg_hash, GetHandleId(caster), $A, zaniat)
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
		PauseUnit(caster, false)
		UnitRemoveAbility(caster, FourCC('Avul'))
		SetUnitAnimation(caster, "stand")
		DestroyEffect(ef)
	end
	t = nil
	u = nil
	un = nil
	caster = nil
	ef = nil
end

function Trig_FlameSpells_Actions()
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local x ---@type number real
	local y ---@type number real
	local angle = 0 ---@type number real
	local lop = 0 ---@type number integer
	local loc ---@type location
	local u = GetSpellAbilityUnit() ---@type unit
	local ef ---@type effect
	if GetSpellAbilityId() == FourCC('A05T') then
		PauseUnit(u, true)
		UnitAddAbility(u, FourCC('Avul'))
		ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\ImmolationRed\\ImmolationRedTarget.mdl", u, "chest")
		SaveEffectHandle(udg_hash, GetHandleId(u), $F, ef)
		SetUnitAnimationByIndex(u, 7)
		SaveReal(udg_hash, h, 1, GetUnitX(u))
		SaveReal(udg_hash, h, 2, GetUnitY(u))
		SaveReal(udg_hash, h, 3, GetUnitFacing(u))
		SaveInteger(udg_hash, h, 4, 0)
		SaveUnitHandle(udg_hash, h, 5, u)
		TimerStart(t, 1., true, Trig_FlameSpells_Periodic_Actions)
		ef = nil
	end
	if GetSpellAbilityId() == FourCC('A05U') then
		loc = GetSpellTargetLoc()
		x = GetLocationX(loc)
		y = GetLocationY(loc)
		while(true) do
			if (lop > 4) then break end
			lop = lop + 1
			CreateUnit(GetOwningPlayer(u), FourCC('n00L'), x + $96 * Cos(angle * bj_DEGTORAD), y + $96 * Sin(angle * bj_DEGTORAD), GetUnitFacing(u))
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosTarget.mdl", x + $96 * Cos(angle * bj_DEGTORAD), y + $96 * Sin(angle * bj_DEGTORAD)))
			UnitApplyTimedLife(bj_lastCreatedUnit, FourCC('BTLF'), GetRandomReal(40., 60.))
			angle = angle + 72
		end
		RemoveLocation(loc)
		loc = nil
	end
	t = nil
	u = nil
end

function InitTrig_FlameSpells()
	local index = 0 ---@type number integer
	gg_trg_FlameSpells = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_FlameSpells, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_FlameSpells, Condition(Trig_FlameSpells_Conditions))
	TriggerAddAction(gg_trg_FlameSpells, Trig_FlameSpells_Actions)
end

function Trig_Fire_Circle_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local x = LoadReal(udg_hash, h, 2) ---@type number real
	local y = LoadReal(udg_hash, h, 3) ---@type number real
	local angle = LoadReal(udg_hash, h, 4) ---@type number real
	local waitcreate = LoadInteger(udg_hash, h, 6) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 7) ---@type number integer
	local damage = LoadReal(udg_hash, h, 8) ---@type number real
	local counter = LoadInteger(udg_hash, h, 9) ---@type number integer
	local gdamage = CreateGroup() ---@type group
	local gdamage2 = CreateGroup() ---@type group
	local Picked ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local ef ---@type effect
	local lopa ---@type number integer
	local xnew ---@type number real
	local ynew ---@type number real
	local xcheck ---@type number real
	local ycheck ---@type number real
	if waitcreate > 0 then
		waitcreate = waitcreate - 1
		SaveInteger(udg_hash, h, 6, waitcreate)
		xcheck = x + 500. * Cos(angle + ((40 - waitcreate) * 9.) * bj_DEGTORAD)
		ycheck = y + 500. * Sin(angle + ((40 - waitcreate) * 9.) * bj_DEGTORAD)
		if (waitcreate - (waitcreate / 2) * 2) == 0 and IsTerrainPathable(xcheck, ycheck, PATHING_TYPE_FLYABILITY) == false then
			counter = counter + 1
			ef = AddSpecialEffect("Doodads\\Cinematic\\TownBurningFireEmitter\\TownBurningFireEmitter.mdl", xcheck, ycheck)
			SaveEffectHandle(udg_hash, h, counter, ef)
			ef = nil
			SaveInteger(udg_hash, h, 9, counter)
		end
	end
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 7, wait)
		lopa = $A
		while(true) do
			if (lopa > counter) then break end
			xnew = x + 500. * Cos(angle + (lopa * 18.) * bj_DEGTORAD)
			ynew = y + 500. * Sin(angle + (lopa * 18.) * bj_DEGTORAD)
			GroupEnumUnitsInRange(gdamage, xnew, ynew, 150., nil)
			GroupAddGroup(gdamage, gdamage2)
			lopa = lopa + 1
		end
		while(true) do
			Picked = FirstOfGroup(gdamage2)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, (damage / 25.), false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				if (wait - (wait / $F) * $F) == 0 then
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\FlameStrike\\FlameStrikeEmbers.mdl", Picked, "origin"))
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\FlameStrike\\FlameStrikeEmbers.mdl", Picked, "chest"))
				end
			end
			GroupRemoveUnit(gdamage2, Picked)
		end
	else
		lopa = $A
		while(true) do
			if (lopa > counter) then break end
			ef = LoadEffectHandle(udg_hash, h, lopa)
			DestroyEffect(ef)
			ef = nil
			lopa = lopa + 1
		end
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	ef = nil
	Picked = nil
	p = nil
	GroupClear(gdamage)
	DestroyGroup(gdamage)
	gdamage = nil
	GroupClear(gdamage2)
	DestroyGroup(gdamage2)
	gdamage2 = nil
end

function Trig_Fire_Circle_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local angle = GetUnitFacing(caster) ---@type number real
	local xt = x + 500. * Cos(angle * bj_DEGTORAD) ---@type number real
	local yt = y + 500. * Sin(angle * bj_DEGTORAD) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local waitcreate = 20 * 2 ---@type number integer
	local wait = 390 ---@type number integer
	local counter = 9 ---@type number integer
	local damage = 40. + 20. * CountPlayersInForceBJ(udg_IGRAET) ---@type number real
	TimerStart(t, .04, true, Trig_Fire_Circle_Periodic_Actions)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, x)
	SaveReal(udg_hash, h, 3, y)
	SaveReal(udg_hash, h, 4, angle)
	SaveInteger(udg_hash, h, 6, waitcreate)
	SaveInteger(udg_hash, h, 7, wait)
	SaveReal(udg_hash, h, 8, damage)
	SaveInteger(udg_hash, h, 9, counter)
	caster = nil
	t = nil
end

---@return boolean
function Trig_Fire_Circle_Conditions()
	return GetSpellAbilityId() == FourCC('A004')
end

function InitTrig_Fire_Circle()
	local index = 0 ---@type number integer
	gg_trg_Fire_Circle = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fire_Circle, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fire_Circle, Condition(Trig_Fire_Circle_Conditions))
	TriggerAddAction(gg_trg_Fire_Circle, Trig_Fire_Circle_Actions)
end

function Trig_Fire_Meteor_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster ---@type unit
	local damage ---@type number real
	local stuntime ---@type number real
	local wait = LoadInteger(udg_hash, h, 4) ---@type number integer
	local circle ---@type unit
	local ef ---@type effect
	local xt ---@type number real
	local yt ---@type number real
	local p ---@type player
	local g ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 4, wait)
		if wait == 24 then
			xt = LoadReal(udg_hash, h, $B)
			yt = LoadReal(udg_hash, h, $C)
			DestroyEffect(AddSpecialEffect("Effects\\MeteorStrike.mdl", xt, yt))
		end
	else
		caster = LoadUnitHandle(udg_hash, h, 1)
		circle = LoadUnitHandle(udg_hash, h, 6)
		ef = LoadEffectHandle(udg_hash, h, 7)
		DestroyEffect(ef)
		ef = nil
		RemoveUnit(circle)
		damage = LoadReal(udg_hash, h, 2)
		stuntime = LoadReal(udg_hash, h, 3)
		xt = LoadReal(udg_hash, h, $B)
		yt = LoadReal(udg_hash, h, $C)
		p = GetOwningPlayer(caster)
		g = CreateGroup()
		GroupEnumUnitsInRange(g, xt, yt, 200., nil)
		dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
		UnitAddAbility(dammi, FourCC('A0O5'))
		IssuePointOrderById(dammi, $D0208, xt, yt)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				StunUnitTimed(Picked, stuntime)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Effects\\FireBall.mdl", Picked, "chest"))
			end
			GroupRemoveUnit(g, Picked)
		end
		ef = LoadEffectHandle(udg_hash, h, $E)
		DestroyEffect(ef)
		ef = nil
		p = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		DestroyTimer(t)
		Picked = nil
		caster = nil
		circle = nil
		dammi = nil
		FlushChildHashtable(udg_hash, h)
	end
	t = nil
end

function Trig_Fire_Meteor_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local damage = 200. + 40. * CountPlayersInForceBJ(udg_IGRAET) ---@type number real
	local stuntime = 4. ---@type number real
	local time = 3. ---@type number real
	local circle = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), xt, yt, 270.) ---@type unit
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\CommandAura\\CommandAuraTarget.mdl", circle, "origin") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetUnitScale(circle, 4., 4., 4.)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, damage)
	SaveReal(udg_hash, h, 3, stuntime)
	SaveInteger(udg_hash, h, 4, R2I(time / .03))
	SaveUnitHandle(udg_hash, h, 6, circle)
	SaveEffectHandle(udg_hash, h, 7, ef)
	SaveReal(udg_hash, h, $B, xt)
	SaveReal(udg_hash, h, $C, yt)
	TimerStart(t, .03, true, Trig_Fire_Meteor_Move_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	circle = nil
	ef = nil
end

---@return boolean
function Trig_Fire_Meteor_Conditions()
	return GetSpellAbilityId() == FourCC('A0O4')
end

function InitTrig_Fire_Meteor()
	local index = 0 ---@type number integer
	gg_trg_Fire_Meteor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fire_Meteor, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fire_Meteor, Condition(Trig_Fire_Meteor_Conditions))
	TriggerAddAction(gg_trg_Fire_Meteor, Trig_Fire_Meteor_Actions)
end

function Trig_Upgrade_Summons_Actions()
	local summon = GetEnteringUnit() ---@type unit
	local h = GetUnitTypeId(summon) ---@type number integer
	if h == FourCC('n00L') then
		SetAttackAbilityLevel(summon, 5 * CountPlayersInForceBJ(udg_IGRAET))
		SetUnitMaxState(summon, UNIT_STATE_MAX_LIFE, R2I(75. * CountPlayersInForceBJ(udg_IGRAET)))
	end
	if h == FourCC('n00M') then
		SetAttackAbilityLevel(summon, 3 * CountPlayersInForceBJ(udg_IGRAET))
		SetUnitMaxState(summon, UNIT_STATE_MAX_LIFE, R2I(30. * CountPlayersInForceBJ(udg_IGRAET)))
	end
	if h == FourCC('n00N') then
		SetAttackAbilityLevel(summon, $C * CountPlayersInForceBJ(udg_IGRAET))
		SetUnitMaxState(summon, UNIT_STATE_MAX_LIFE, R2I(100. * CountPlayersInForceBJ(udg_IGRAET)))
	end
end

---@return boolean
function Trig_Upgrade_Summons_Conditions()
	return GetOwningPlayer(GetEnteringUnit()) == Player($B)
end

function InitTrig_Upgrade_Summons()
	local rectRegion = CreateRegion() ---@type region
	gg_trg_Upgrade_Summons = CreateTrigger()
	RegionAddRect(rectRegion, gg_rct_6)
	TriggerRegisterEnterRegion(gg_trg_Upgrade_Summons, rectRegion, nil)
	TriggerAddCondition(gg_trg_Upgrade_Summons, Condition(Trig_Upgrade_Summons_Conditions))
	TriggerAddAction(gg_trg_Upgrade_Summons, Trig_Upgrade_Summons_Actions)
end

---@return boolean
function Trig_UseBeornSpells_Is_Enemy_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerEnemy(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_UseBeornSpells_Is_Ally_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) < GetUnitState(GetFilterUnit(), UNIT_STATE_MAX_LIFE) * .6) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerAlly(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_UseBeornSpells_Condition()
	return (IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), udg_Players_Enemy_Group))
end

function Trig_UseBeornSpells_Actions()
	local gall = CreateGroup() ---@type group
	local g ---@type group
	local g2 ---@type group
	local Picked ---@type unit
	local target ---@type unit
	local x ---@type number real
	local y ---@type number real
	local dist ---@type number real
	local angle ---@type number real
	GroupEnumUnitsInRect(gall, bj_mapInitialPlayableArea, Condition(Trig_UseBeornSpells_Condition))
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0OD')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 600., Condition(Trig_UseBeornSpells_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00CB, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0OC')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 575., Condition(Trig_UseBeornSpells_Is_Ally_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00C0, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0OF')) > 0) and GetRandomInt(1, 3) <= 2 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 300., Condition(Trig_UseBeornSpells_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00BD, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(gall)
	DestroyGroup(gall)
	gall = nil
end

function InitTrig_UseBeornSpells()
	gg_trg_UseBeornSpells = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_UseBeornSpells, 1., true)
	TriggerAddAction(gg_trg_UseBeornSpells, Trig_UseBeornSpells_Actions)
end

function Trig_Beorn_Den_onbase_Actions()
	local tonbase = GetExpiredTimer() ---@type timer
	local honbase = GetHandleId(tonbase) ---@type number integer
	local ishod = LoadInteger(udg_hash, honbase, 3) ---@type number integer
	local boss = udg_BeornBoss ---@type unit
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local xc = GetRectCenterX(gg_rct_Respawn_Heroes) ---@type number real
	local yc = GetRectCenterY(gg_rct_Respawn_Heroes) ---@type number real
	local txt ---@type texttag
	local vel = .0221875 ---@type number real
	local angle = 45. + GetRandomReal(.0, 90.) ---@type number real
	local xvel = vel * Cos(angle * bj_DEGTORAD) ---@type number real
	local yvel = vel * Sin(angle * bj_DEGTORAD) ---@type number real
	local dead = 0 ---@type number integer
	local perekluchatel = .1 ---@type number real
	local g1 = CreateGroup() ---@type group
	local g2 = CreateGroup() ---@type group
	local g3 = CreateGroup() ---@type group
	local g4 = CreateGroup() ---@type group
	local g = CreateGroup() ---@type group
	local grp = CreateGroup() ---@type group
	local lopb = 0 ---@type number integer
	local lopa = 0 ---@type number integer
	RemoveUnit(udg_EnergyWallUnit[$A])
	RemoveUnit(udg_EnergyWallUnit[$B])
	lopb = 1
	while(true) do
		if (lopb > $B) then break end
		RemoveUnit(udg_EnergyWallUnit[lopb])
		lopb = lopb + 1
	end
	lopb = 1
	lopa = 0
	while(true) do
		if (lopa > $B) then break end
		lopa = lopa + 1
		while(true) do
			if (lopb > 7) then break end
			RemoveDestructable(udg_EnergyWallBlock[lopa * 7 + lopb])
			lopb = lopb + 1
		end
		lopb = 1
	end
	GroupEnumUnitsInRange(grp, 0, 0, 99999, nil)
	KillSummonsAndIllusions(grp)
	DisableTrigger(gg_trg_UseBeornSpells)
	ShowAndFlushAllPlayerDamage(false)
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	CinematicModeExBJ(false, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	CinematicFadeBJ(0, 5., "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 0)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		if perekluchatel >= 0 then
			perekluchatel = -perekluchatel
			perekluchatel = perekluchatel - 50.
		else
			perekluchatel = -perekluchatel
			perekluchatel = perekluchatel + 50.
		end
		xc = GetRectCenterX(gg_rct_Respawn_Heroes) + perekluchatel
		yc = GetRectCenterY(gg_rct_Respawn_Heroes)
		ReviveHero(Picked, xc, yc, true)
		SetUnitPosition(Picked, xc, yc)
		SetUnitFacing(Picked, 270.)
		SetUnitState(Picked, UNIT_STATE_LIFE, $540BE3FF)
		SetUnitState(Picked, UNIT_STATE_MANA, $540BE3FF)
		if ishod == 2 then
			txt = CreateTextTag()
			SetTextTagText(txt, "|cFFFFFF00+800|r", .045)
			SetTextTagPos(txt, GetUnitX(Picked), GetUnitY(Picked), .0)
			SetTextTagColor(txt, 0, 0, 0, 50)
			SetTextTagVelocity(txt, xvel, yvel)
			SetTextTagPermanent(txt, false)
			SetTextTagLifespan(txt, 4.)
			SetTextTagFadepoint(txt, .0)
			txt = nil
			SetHeroStr(Picked, GetHeroStr(Picked, false) + 8, true)
			SetHeroAgi(Picked, GetHeroAgi(Picked, false) + 8, true)
			SetHeroInt(Picked, GetHeroInt(Picked, false) + 8, true)
			SetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD, (GetPlayerState(GetOwningPlayer(Picked), PLAYER_STATE_RESOURCE_GOLD) + 800))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIem\\AIemTarget.mdl", Picked, "overhead"))
			if GetLocalPlayer() == GetOwningPlayer(Picked) then
				DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Вы получили " .. udg_ColorString[23] .. I2S(800) .. " золота|r!!!")
				DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Все характеристики вашего героя повышены на |cff99ccff8!|r")
			end
		end
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			ResetToGameCamera(.0)
		end
		if ishod == 1 then
			DisplayTextToPlayer(GetOwningPlayer(Picked), 0, 0, "|cFFFF0000ВЫ ПРОИГРАЛИ БИТВУ С БЕОРНАМИ!!!|r")
		else
			DisplayTextToPlayer(GetOwningPlayer(Picked), 0, 0, "|cFFFFFF00ВЫ ПОБЕДИЛИ В БИТВЕ С БЕОРНАМИ!!!|r")
		end
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			ResetToGameCamera(.0)
			PanCameraToTimed(xc, yc, .0)
			SelectUnit(Picked, true)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	EnableTrigger(gg_trg_Hero_Dead)
	Picked = nil
	GroupEnumUnitsInRect(g1, gg_rct_Les_1, nil)
	GroupEnumUnitsInRect(g2, gg_rct_Les1_Dop1, nil)
	GroupEnumUnitsInRect(g3, gg_rct_Les1_Dop2, nil)
	GroupAddGroup(g1, g)
	GroupAddGroup(g2, g)
	GroupAddGroup(g3, g)
	GroupEnumUnitsInRange(g4, .0, .0, 999999., nil)
	while(true) do
		Picked = FirstOfGroup(g4)
		if (Picked == nil) then break end
		if GetUnitTypeId(Picked) == FourCC('n01N') or GetUnitTypeId(Picked) == FourCC('n01R') or GetUnitTypeId(Picked) == FourCC('n01P') then
			GroupAddUnit(g, Picked)
		end
		GroupRemoveUnit(g4, Picked)
	end
	DestroyGroup(g4)
	g4 = nil
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitTypeId(Picked) ~= FourCC('h00C') and GetUnitTypeId(Picked) ~= FourCC('h00B') and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			RemoveUnit(Picked)
		end
		GroupRemoveUnit(g, Picked)
	end
	StartTimerBJ(udg_Timer_Nomera_Volni, false, 50.)
	CreateTimerDialogBJ(udg_Timer_Nomera_Volni, ("Волна № |cFFFF0000" .. (I2S(udg_Nomer_samoi_volni) .. "|r")))
	udg_TimerDialog_Nomera_Volni = bj_lastCreatedTimerDialog
	TimerDialogSetTimeColorBJ(udg_TimerDialog_Nomera_Volni, FourCC('d'), 90., 30., 20.)
	udg_Is_Fast_Wave_Start_On_Off = true
	Picked = nil
	RemoveUnit(boss)
	boss = nil
	DestroyGroup(gruppa)
	gruppa = nil
	FlushChildHashtable(udg_hash, honbase)
	DestroyTimer(tonbase)
	tonbase = nil
	DisableTrigger(gg_trg_Start_Beorn_Den)
end

function Trig_Beorn_Den_end_Actions()
	local tend = GetExpiredTimer() ---@type timer
	local hend = GetHandleId(tend) ---@type number integer
	local boss = udg_BeornBoss ---@type unit
	local lop = 0 ---@type number integer
	local ishod = udg_Ishod_S_Beornami ---@type number integer
	local tonbase = CreateTimer() ---@type timer
	local honbase = GetHandleId(tonbase) ---@type number integer
	local g1 = CreateGroup() ---@type group
	local g2 = CreateGroup() ---@type group
	local g22 = CreateGroup() ---@type group
	local g3 = CreateGroup() ---@type group
	local g = CreateGroup() ---@type group
	local gg ---@type group
	local Picked ---@type unit
	DestroyEffect(LoadEffectHandle(udg_hash, GetHandleId(boss), $87))
	SaveUnitHandle(udg_hash, honbase, 1, boss)
	SaveInteger(udg_hash, honbase, 3, ishod)
	GroupEnumUnitsInRect(g1, gg_rct_Les_1, nil)
	GroupEnumUnitsInRect(g2, gg_rct_Les1_Dop1, nil)
	GroupEnumUnitsInRect(g3, gg_rct_Les1_Dop2, nil)
	GroupAddGroup(g1, g)
	GroupAddGroup(g2, g)
	GroupAddGroup(g3, g)
	while(true) do
		if (lop > 9) then break end
		if (GetLocalPlayer() == Player(lop)) then
			CameraSetupApplyForceDuration(gg_cam_Camera_Beorn_Den1, true, .0)
			SetCameraRotateMode(GetRectCenterX(gg_rct_Beorn_Boss_Area), GetRectCenterY(gg_rct_Beorn_Boss_Area), bj_DEGTORAD * 360., 5.)
		end
		lop = lop + 1
	end
	TimerStart(tonbase, 5., false, Trig_Beorn_Den_onbase_Actions)
	if ishod == 1 then
		IssuePointOrderById(boss, $D0012, GetRectCenterX(gg_rct_Beorn_Boss_Area), GetRectCenterY(gg_rct_Beorn_Boss_Area))
	else
		udg_IsBeronsFightWin = false
		gg = CreateGroup()
		GroupAddGroup(udg_PortalCastersMagi, gg)
		while(true) do
			Picked = FirstOfGroup(gg)
			if (Picked == nil) then break end
			UnitAddAbility(Picked, FourCC('A0OL'))
			GroupRemoveUnit(gg, Picked)
		end
		DestroyGroup(gg)
		gg = nil
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if GetOwningPlayer(Picked) == Player($B) then
				KillUnit(Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
	end
	g22 = CreateGroup()
	GroupEnumUnitsInRange(g22, 0, 0, 99999, nil)
	KillSummonsAndIllusions(g22)
	CinematicModeExBJ(true, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	CinematicFadeBJ(1, 5., "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	FlushChildHashtable(udg_hash, hend)
	DestroyTimer(tend)
	tend = nil
	boss = nil
	tonbase = nil
	DestroyGroup(g)
	g = nil
end

function Trig_Beorn_Den_Boss_hpcheck_Actions()
	local boss = udg_BeornBoss ---@type unit
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local maxwait = LoadInteger(udg_hash, h, 1) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 2) ---@type number integer
	local cdskill = LoadInteger(udg_hash, h, 3) ---@type number integer
	local itemrand = R2I($A + 5 * CountPlayersInForceBJ(udg_IGRAET)) ---@type number integer
	local itemx = (GetRandomReal(1000., 1650.)) ---@type number real
	local itemy = (GetRandomReal(-9800., -10200.)) ---@type number real
	local beorn ---@type unit
	if GetUnitState(boss, UNIT_STATE_LIFE) > .405 and udg_BeornBossFightEnd == false then
		if GetRandomInt(1, FourCC('d')) <= itemrand then
			CreatePotion(itemx, itemy, 1, 4)
		end
		if cdskill < 8 then
			SaveInteger(udg_hash, h, 3, cdskill + 1)
		end
		if cdskill >= 8 then
			IssueImmediateOrderById(boss, $D0105)
			SaveInteger(udg_hash, h, 3, 0)
		end
		if wait < maxwait then
			SaveInteger(udg_hash, h, 2, wait + 1)
		end
		if wait >= maxwait then
			SaveInteger(udg_hash, h, 2, 0)
			beorn = CreateUnit(Player($B), FourCC('n01R'), itemx, itemy, GetRandomReal(.0, 360.))
			UnitApplyTimedLife(beorn, FourCC('BTLF'), 60.)
			beorn = nil
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\FeralSpirit\\feralspiritdone.mdl", itemx, itemy))
		end
	else
		DestroyTimer(t)
	end
	boss = nil
end

function Trig_Beorn_Den_HeroInHeroArea_Check_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local lopb ---@type number integer
	local gruppa = CreateGroup() ---@type group
	local g2 ---@type group
	local Picked ---@type unit
	local x ---@type number real
	local y ---@type number real
	local countrct = 0 ---@type number integer
	local dist = 1. ---@type number real
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		x = GetUnitX(Picked)
		y = GetUnitY(Picked)
		if (GetRectMinX(gg_rct_Beorn_Boss_Area) <= x) and (x <= GetRectMaxX(gg_rct_Beorn_Boss_Area)) and (GetRectMinY(gg_rct_Beorn_Boss_Area) <= y) and (y <= GetRectMaxY(gg_rct_Beorn_Boss_Area)) then
			countrct = 1
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	if countrct == 1 then
		CreateEnergyWall($A, $B)
		GroupClear(gruppa)
		DestroyGroup(gruppa)
		gruppa = nil
		g2 = CreateGroup()
		GroupEnumUnitsInRange(g2, 0, 0, 99999, nil)
		KillSummonsAndIllusions(g2)
		gruppa = CreateGroup()
		GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
		while(true) do
			Picked = FirstOfGroup(gruppa)
			if (Picked == nil) then break end
			SetUnitPosition(Picked, 1320. + dist, -9540.)
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", 1320. + dist, -9540.))
			if dist > .0 then
				dist = -dist - 50.
			else
				dist = -dist + 50.
			end
			SetUnitFacing(Picked, 270.)
			if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
				CameraSetupApplyForceDuration(gg_cam_Camera_Beorn_Den6, true, 1.)
				ClearSelection()
				SelectUnit(Picked, true)
			end
			GroupRemoveUnit(gruppa, Picked)
		end
		SetAttackAbilityLevel(udg_BeornBoss, $F * CountPlayersInForceBJ(udg_IGRAET))
		SetArmorAbilityLevel(udg_BeornBoss, 3 * CountPlayersInForceBJ(udg_IGRAET))
		SetUnitMaxState(udg_BeornBoss, UNIT_STATE_MAX_LIFE, R2I(800. * CountPlayersInForceBJ(udg_IGRAET)))
		SetUnitInvulnerable(udg_BeornBoss, false)
		IssueImmediateOrderById(udg_BeornBoss, $D0004)
		DestroyTimer(t)
		t = CreateTimer()
		h = GetHandleId(t)
		SaveInteger(udg_hash, h, 1, R2I(22. - CountPlayersInForceBJ(udg_IGRAET) * 2.))
		SaveInteger(udg_hash, h, 2, 0)
		SaveInteger(udg_hash, h, 3, 0)
		TimerStart(t, 1., true, Trig_Beorn_Den_Boss_hpcheck_Actions)
		t = nil
	end
	t = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
end

function Trig_Beorn_Den_Shamans_HP_Check_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local sh1 = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local sh2 = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local sh3 = LoadUnitHandle(udg_hash, h, 3) ---@type unit
	local lopb ---@type number integer
	if (GetUnitState(sh1, UNIT_STATE_LIFE) < .0 or sh1 == nil) and (GetUnitState(sh2, UNIT_STATE_LIFE) < .0 or sh2 == nil) and (GetUnitState(sh3, UNIT_STATE_LIFE) < .0 or sh3 == nil) then
		DestroyTimer(t)
		RemoveUnit(udg_EnergyWallUnit[$A])
		RemoveUnit(udg_EnergyWallUnit[$B])
		lopb = 1
		while(true) do
			if (lopb > 7) then break end
			RemoveDestructable(udg_EnergyWallBlock[63 + lopb])
			RemoveDestructable(udg_EnergyWallBlock[70 + lopb])
			lopb = lopb + 1
		end
		t = CreateTimer()
		TimerStart(t, 1., true, Trig_Beorn_Den_HeroInHeroArea_Check_Actions)
		t = nil
	end
	t = nil
	sh1 = nil
	sh2 = nil
	sh3 = nil
end

function Trig_Beorn_Shamans_Animation_Check_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local sh1 = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	if GetUnitState(sh1, UNIT_STATE_LIFE) > .405 then
		SetUnitAnimationByIndex(sh1, 3)
	else
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	end
	t = nil
	sh1 = nil
end

function Trig_Beorn_Den_HP_Check_Actions()
	local t = GetExpiredTimer() ---@type timer
	local players = CountPlayersInForceBJ(udg_IGRAET) ---@type number integer
	local lopa = 1 ---@type number integer
	local countmelee = 1 + R2I(players / 4) ---@type number integer
	local dist = 1. ---@type number real
	local h ---@type number integer
	local u ---@type unit
	local t1 ---@type timer
	local h1 ---@type number integer
	if GetUnitState(udg_BeornDenHouse[1], UNIT_STATE_LIFE) < .405 and GetUnitState(udg_BeornDenHouse[2], UNIT_STATE_LIFE) < .405 then
		DestroyTimer(t)
		t = CreateTimer()
		h = GetHandleId(t)
		u = CreateUnit(Player($B), FourCC('n01Q'), 1900., -8000., 270.)
		UnitAddAbility(u, FourCC('Abun'))
		UnitAddType(u, UNIT_TYPE_PEON)
		PauseUnit(u, true)
		SetUnitAnimationByIndex(u, 3)
		SetUnitMoveSpeed(u, 0)
		t1 = CreateTimer()
		h1 = GetHandleId(t1)
		SaveUnitHandle(udg_hash, h1, 1, u)
		TimerStart(t1, 1., true, Trig_Beorn_Shamans_Animation_Check_Actions)
		t1 = nil
		SaveUnitHandle(udg_hash, h, 1, u)
		while(true) do
			if (lopa > countmelee) then break end
			CreateUnit(Player($B), FourCC('n01R'), 1900. + dist, -8000., 270.)
			if dist > .0 then
				dist = -dist - 50.
			else
				dist = -dist + 50.
			end
			lopa = lopa + 1
		end
		lopa = 1
		dist = 1.
		u = CreateUnit(Player($B), FourCC('n01Q'), 2400., -8850., 90.)
		UnitAddAbility(u, FourCC('Abun'))
		UnitAddType(u, UNIT_TYPE_PEON)
		PauseUnit(u, true)
		SetUnitAnimationByIndex(u, 3)
		SetUnitMoveSpeed(u, 0)
		t1 = CreateTimer()
		h1 = GetHandleId(t1)
		SaveUnitHandle(udg_hash, h1, 1, u)
		TimerStart(t1, 1., true, Trig_Beorn_Shamans_Animation_Check_Actions)
		t1 = nil
		SaveUnitHandle(udg_hash, h, 2, u)
		while(true) do
			if (lopa > countmelee) then break end
			CreateUnit(Player($B), FourCC('n01R'), 2400. + dist, -8600., 90.)
			if dist > .0 then
				dist = -dist - 50.
			else
				dist = -dist + 50.
			end
			lopa = lopa + 1
		end
		lopa = 1
		dist = 1.
		u = CreateUnit(Player($B), FourCC('n01Q'), 850., -8900., .0)
		UnitAddAbility(u, FourCC('Abun'))
		UnitAddType(u, UNIT_TYPE_PEON)
		PauseUnit(u, true)
		SetUnitAnimationByIndex(u, 3)
		SetUnitMoveSpeed(u, 0)
		SaveUnitHandle(udg_hash, h, 3, u)
		t1 = CreateTimer()
		h1 = GetHandleId(t1)
		SaveUnitHandle(udg_hash, h1, 1, u)
		TimerStart(t1, 1., true, Trig_Beorn_Shamans_Animation_Check_Actions)
		t1 = nil
		while(true) do
			if (lopa > countmelee) then break end
			CreateUnit(Player($B), FourCC('n01R'), 850. + dist, -8700., .0)
			if dist > .0 then
				dist = -dist - 50.
			else
				dist = -dist + 50.
			end
			lopa = lopa + 1
		end
		lopa = 1
		dist = 1.
		TimerStart(t, 1., true, Trig_Beorn_Den_Shamans_HP_Check_Actions)
		t = nil
	end
	t = nil
end

function Trig_Beorn_Den_Create_Beorns2_Actions()
	local t = GetExpiredTimer() ---@type timer
	local players = CountPlayersInForceBJ(udg_IGRAET) ---@type number integer
	local countmelee = 1 + R2I(players / 3) ---@type number integer
	local countrange = 1 + R2I(players / 3) ---@type number integer
	local lopa = 1 ---@type number integer
	local dist = 1. ---@type number real
	local u ---@type unit
	local hero ---@type unit
	local g = CreateGroup() ---@type group
	if GetUnitState(udg_BeornDenHouse[2], UNIT_STATE_LIFE) > .0 then
		GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, g)
		while(true) do
			if (lopa > countmelee) then break end
			u = CreateUnit(Player($B), FourCC('n01N'), 70. + dist, -8870., 90.)
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\FeralSpirit\\feralspiritdone.mdl", GetUnitX(u), GetUnitY(u)))
			RandomUnitFromGroup(1, g)
			hero = FirstOfGroup(udg_GroupRandomUnitFromGroup)
			IssuePointOrderById(u, $D000F, GetUnitX(hero), GetUnitY(hero))
			u = nil
			u = CreateUnit(Player($B), FourCC('n01P'), 70. + dist, -9000., 90.)
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\FeralSpirit\\feralspiritdone.mdl", GetUnitX(u), GetUnitY(u)))
			IssuePointOrderById(u, $D000F, GetUnitX(hero), GetUnitY(hero))
			u = nil
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			if dist > .0 then
				dist = -dist - 50.
			else
				dist = -dist + 50.
			end
			lopa = lopa + 1
		end
		TimerStart(t, 30., false, Trig_Beorn_Den_Create_Beorns2_Actions)
	else
		DestroyTimer(t)
	end
	t = nil
end

function Trig_Beorn_Den_Create_Beorns_Actions()
	local t = GetExpiredTimer() ---@type timer
	local players = CountPlayersInForceBJ(udg_IGRAET) ---@type number integer
	local countmelee = 1 + R2I(players / 3) ---@type number integer
	local countrange = 1 + R2I(players / 3) ---@type number integer
	local lopa = 1 ---@type number integer
	local dist = 1. ---@type number real
	local u ---@type unit
	local hero ---@type unit
	local g = CreateGroup() ---@type group
	if GetUnitState(udg_BeornDenHouse[1], UNIT_STATE_LIFE) > .0 then
		GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, g)
		while(true) do
			if (lopa > countmelee) then break end
			u = CreateUnit(Player($B), FourCC('n01N'), 500., -8400. + dist, .0)
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\FeralSpirit\\feralspiritdone.mdl", GetUnitX(u), GetUnitY(u)))
			RandomUnitFromGroup(1, g)
			hero = FirstOfGroup(udg_GroupRandomUnitFromGroup)
			IssuePointOrderById(u, $D000F, GetUnitX(hero), GetUnitY(hero))
			u = nil
			u = CreateUnit(Player($B), FourCC('n01P'), 300., -8400. + dist, .0)
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\FeralSpirit\\feralspiritdone.mdl", GetUnitX(u), GetUnitY(u)))
			IssuePointOrderById(u, $D000F, GetUnitX(hero), GetUnitY(hero))
			u = nil
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			if dist > .0 then
				dist = -dist - 50.
			else
				dist = -dist + 50.
			end
			lopa = lopa + 1
		end
		TimerStart(t, 35., false, Trig_Beorn_Den_Create_Beorns_Actions)
	else
		DestroyTimer(t)
	end
	t = nil
end

function Trig_Start_Beorn_Den_5sec_Actions()
	local t5sec = GetExpiredTimer() ---@type timer
	local h5sec = GetHandleId(t5sec) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, h5sec, 1) ---@type unit
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local tfrasa = CreateTimer() ---@type timer
	local hfrasa = GetHandleId(tfrasa) ---@type number integer
	local thpcheck = CreateTimer() ---@type timer
	local stage = 0 ---@type number integer
	local zaniat = false ---@type boolean
	local tbeorn = CreateTimer() ---@type timer
	local tbeorn2 = CreateTimer() ---@type timer
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	CinematicModeExBJ(false, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		PauseUnit(Picked, false)
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			ClearSelection()
			SelectUnit(Picked, true)
			ResetToGameCamera(.0)
			PanCameraToTimed(2090., -8300., .0)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	TimerStart(thpcheck, 1., true, Trig_Beorn_Den_HP_Check_Actions)
	TimerStart(tbeorn, 2., false, Trig_Beorn_Den_Create_Beorns_Actions)
	TimerStart(tbeorn2, 17., false, Trig_Beorn_Den_Create_Beorns2_Actions)
	DestroyTimer(t5sec)
	FlushChildHashtable(udg_hash, h5sec)
	t5sec = nil
	boss = nil
	Picked = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
end

function Trig_Start_Beorn_Den_6sec_Actions()
	local t3sec = GetExpiredTimer() ---@type timer
	local h3sec = GetHandleId(t3sec) ---@type number integer
	local t5sec = CreateTimer() ---@type timer
	local h5sec = GetHandleId(t5sec) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, h3sec, 1) ---@type unit
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local support = CreateUnit(Player($F), FourCC('h00J'), .0, .0, .0) ---@type unit
	UnitApplyTimedLife(support, FourCC('BTLF'), 20.)
	SaveUnitHandle(udg_hash, h5sec, 1, boss)
	TimerStart(t5sec, 7., false, Trig_Start_Beorn_Den_5sec_Actions)
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			CameraSetupApplyForceDuration(gg_cam_Camera_Beorn_Den3, true, .0)
			CameraSetupApplyForceDuration(gg_cam_Camera_Beorn_Den4, true, 7.)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, support, "Помощник", nil, "|cff99ccffДля этого уничтожьте две Хижины Беорнов, а затем... Ну, как-нибудь уберите магическую защиту и войдите в логово Старейшины Беорнов. Удачи...|r", 0, 7., false)
	DestroyTimer(t3sec)
	FlushChildHashtable(udg_hash, h3sec)
	t3sec = nil
	t5sec = nil
	boss = nil
end

function Trig_Start_Beorn_Den_4sec_Actions()
	local t3sec = GetExpiredTimer() ---@type timer
	local h3sec = GetHandleId(t3sec) ---@type number integer
	local t6sec = CreateTimer() ---@type timer
	local h6sec = GetHandleId(t6sec) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, h3sec, 1) ---@type unit
	local support = CreateUnit(Player($F), FourCC('h00J'), .0, .0, .0) ---@type unit
	UnitApplyTimedLife(support, FourCC('BTLF'), 20.)
	SaveUnitHandle(udg_hash, h6sec, 1, boss)
	TimerStart(t6sec, 8., false, Trig_Start_Beorn_Den_6sec_Actions)
	TransmissionFromUnitWithNameBJ(bj_FORCE_ALL_PLAYERS, support, "Помощник", nil, "|cff99ccffУничтожьте Старейшину Беорнов, для того чтобы получить награду золотом, бонусы для своего героя и усилить стражей-заклинателей на базе|r", 0, 8., false)
	DestroyTimer(t3sec)
	FlushChildHashtable(udg_hash, h3sec)
	t3sec = nil
	t6sec = nil
	boss = nil
end

function Trig_Start_Beorn_Den_Check_Rects_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local boss = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local x ---@type number real
	local y ---@type number real
	local countrct ---@type number integer
	if GetUnitState(boss, UNIT_STATE_LIFE) > .0 then
		x = GetUnitX(boss)
		y = GetUnitY(boss)
		if (GetRectMinX(gg_rct_Beorn_Boss_Area2) <= x) and (x <= GetRectMaxX(gg_rct_Beorn_Boss_Area2)) and (GetRectMinY(gg_rct_Beorn_Boss_Area2) <= y) and (y <= GetRectMaxY(gg_rct_Beorn_Boss_Area2)) then
		else
			SetUnitPosition(boss, 1400., -9900.)
			SetUnitFacing(boss, 90.)
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", 1400., -9900.))
		end
		GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
		while(true) do
			Picked = FirstOfGroup(gruppa)
			if (Picked == nil) then break end
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			countrct = 0
			if (GetRectMinX(gg_rct_Les_1) <= x) and (x <= GetRectMaxX(gg_rct_Les_1)) and (GetRectMinY(gg_rct_Les_1) <= y) and (y <= GetRectMaxY(gg_rct_Les_1)) then
				countrct = 1
			end
			if (GetRectMinX(gg_rct_Les1_Dop1) <= x) and (x <= GetRectMaxX(gg_rct_Les1_Dop1)) and (GetRectMinY(gg_rct_Les1_Dop1) <= y) and (y <= GetRectMaxY(gg_rct_Les1_Dop1)) then
				countrct = 1
			end
			if (GetRectMinX(gg_rct_Les1_Dop2) <= x) and (x <= GetRectMaxX(gg_rct_Les1_Dop2)) and (GetRectMinY(gg_rct_Les1_Dop2) <= y) and (y <= GetRectMaxY(gg_rct_Les1_Dop2)) then
				countrct = 1
			end
			if countrct == 0 then
				if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
					ClearSelection()
					SelectUnit(Picked, true)
					CameraSetupApplyForceDuration(gg_cam_Camera_Beorn_Den5, true, .0)
				end
				SetUnitPosition(Picked, 2090., -8300.)
				SetUnitFacing(Picked, 180.)
			end
			GroupRemoveUnit(gruppa, Picked)
		end
	else
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	end
	t = nil
	Picked = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
	boss = nil
end

function Trig_Start_Beorn_Den_Check_Alive_Units_Actions()
	local t = GetExpiredTimer() ---@type timer
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local ishod = 0 ---@type number integer
	local alive = false ---@type boolean
	local start = false ---@type boolean
	if GetUnitState(udg_BeornBoss, UNIT_STATE_LIFE) < .405 then
		udg_Ishod_S_Beornami = 2
		start = true
	end
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 then
			alive = true
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	if alive == false then
		udg_Ishod_S_Beornami = 1
		start = true
	end
	if start then
		DestroyTimer(t)
		udg_BeornBossFightEnd = true
		t = CreateTimer()
		TimerStart(t, 1., false, Trig_Beorn_Den_end_Actions)
	end
	t = nil
	Picked = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
end

function Trig_Start_Beorn_Den_Actions()
	local random ---@type number integer
	local MN = 1 ---@type number integer
	local gruppa = CreateGroup() ---@type group
	local Picked ---@type unit
	local dist = 1. ---@type number real
	local boss = CreateUnit(Player($B), FourCC('n01S'), 1400., -9950., 90.) ---@type unit
	local t3sec = CreateTimer() ---@type timer
	local h3sec = GetHandleId(t3sec) ---@type number integer
	local tobl = CreateTimer() ---@type timer
	local hobl = GetHandleId(tobl) ---@type number integer
	local talive = CreateTimer() ---@type timer
	local grp = CreateGroup() ---@type group
	GroupEnumUnitsInRange(grp, 0, 0, 99999, nil)
	KillSummonsAndIllusions(grp)
	CreateEnergyWall(1, $B)
	udg_BeornBoss = boss
	SetUnitInvulnerable(boss, true)
	CreateUnit(Player($B), FourCC('n01R'), 1200., -9900., 90.)
	IssueImmediateOrderById(bj_lastCreatedUnit, $D0019)
	CreateUnit(Player($B), FourCC('n01R'), 1600., -9900., 90.)
	IssueImmediateOrderById(bj_lastCreatedUnit, $D0019)
	udg_BeornDenHouse[1] = CreateUnit(Player($B), FourCC('n01O'), 440., -8060., 270.)
	udg_BeornDenHouse[2] = CreateUnit(Player($B), FourCC('n01O'), -140., -9150., 270.)
	DisableTrigger(gg_trg_Hero_Dead)
	IssueImmediateOrderById(udg_BeornBoss, $D0019)
	EnableTrigger(gg_trg_UseBeornSpells)
	GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, gruppa)
	CinematicModeExBJ(true, bj_FORCE_ALL_PLAYERS, bj_CINEMODE_INTERFACEFADE)
	CinematicFadeBJ(1, .0, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	CinematicFadeBJ(0, 4., "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	while(true) do
		Picked = FirstOfGroup(gruppa)
		if (Picked == nil) then break end
		SetUnitPosition(Picked, 2090., (-8300. + dist))
		if dist > .0 then
			dist = -dist - 50.
		else
			dist = -dist + 50.
		end
		SetUnitFacing(Picked, 180.)
		PauseUnit(Picked, true)
		ClearSelection()
		if (GetLocalPlayer() == GetOwningPlayer(Picked)) then
			CameraSetupApplyForceDuration(gg_cam_Camera_Beorn_Den1, true, .0)
			CameraSetupApplyForceDuration(gg_cam_Camera_Beorn_Den2, true, 12.)
		end
		GroupRemoveUnit(gruppa, Picked)
	end
	SaveUnitHandle(udg_hash, h3sec, 1, boss)
	TimerStart(t3sec, 4., false, Trig_Start_Beorn_Den_4sec_Actions)
	ShowAndFlushAllPlayerDamage(true)
	TimerStart(udg_TimerShowAndFlushAllPlayerDmg, 10000., false, nil)
	SaveUnitHandle(udg_hash, hobl, 1, boss)
	TimerStart(tobl, 1., true, Trig_Start_Beorn_Den_Check_Rects_Actions)
	TimerStart(talive, 1., true, Trig_Start_Beorn_Den_Check_Alive_Units_Actions)
	Picked = nil
	boss = nil
	GroupClear(gruppa)
	DestroyGroup(gruppa)
	gruppa = nil
	t3sec = nil
end

function InitTrig_Start_Beorn_Den()
	gg_trg_Start_Beorn_Den = CreateTrigger()
	TriggerAddAction(gg_trg_Start_Beorn_Den, Trig_Start_Beorn_Den_Actions)
end

function Trig_Beorn_Push_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local dammi ---@type unit
	UnitDamageTarget(caster, target, 65. + 15. * CountPlayersInForceBJ(udg_IGRAET), false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
	MoveUnit(target, .5, 800., 1200., angle, .0, true)
	dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, .0)
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
	UnitAddAbility(dammi, FourCC('A0OG'))
	IssueTargetOrderById(dammi, $D006B, target)
	dammi = nil
	caster = nil
	target = nil
end

---@return boolean
function Trig_Beorn_Push_Conditions()
	return GetSpellAbilityId() == FourCC('A0OF')
end

function InitTrig_Beorn_Push()
	local index = 0 ---@type number integer
	gg_trg_Beorn_Push = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Beorn_Push, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Beorn_Push, Condition(Trig_Beorn_Push_Conditions))
	TriggerAddAction(gg_trg_Beorn_Push, Trig_Beorn_Push_Actions)
end

function Trig_Beorn_Stomp_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local radius = 300. ---@type number real
	local damage = 75. + 25. * CountPlayersInForceBJ(udg_IGRAET) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local dist ---@type number real
	local angle ---@type number real
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", x, y))
	GroupEnumUnitsInRange(g, x, y, radius, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			StunUnitTimed(Picked, 1.5)
			dist = SquareRoot((GetUnitX(Picked) - x) * (GetUnitX(Picked) - x) + (GetUnitY(Picked) - y) * (GetUnitY(Picked) - y))
			angle = bj_RADTODEG * Atan2(GetUnitY(Picked) - y, GetUnitX(Picked) - x)
			MoveUnit(Picked, (300. - dist) / 300. + .25, (600. - dist), .0, angle, .0, true)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", Picked, "origin"))
		end
		GroupRemoveUnit(g, Picked)
	end
	caster = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
end

---@return boolean
function Trig_Beorn_Stomp_Conditions()
	return GetSpellAbilityId() == FourCC('A0OH')
end

function InitTrig_Beorn_Stomp()
	local index = 0 ---@type number integer
	gg_trg_Beorn_Stomp = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Beorn_Stomp, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Beorn_Stomp, Condition(Trig_Beorn_Stomp_Conditions))
	TriggerAddAction(gg_trg_Beorn_Stomp, Trig_Beorn_Stomp_Actions)
end

---@return boolean
function Trig_HeroUnitGameSave_Func001C()
	return (IsUnitType(GetEnteringUnit(), UNIT_TYPE_HERO)) ~= nil
end

function Trig_HeroUnitGameSave_Actions()
	if (Trig_HeroUnitGameSave_Func001C()) then
		udg_herounit[(1 + GetPlayerId(GetOwningPlayer(GetEnteringUnit())))] = GetEnteringUnit()
		GroupAddUnit(udg_Gruppa_HeroUnitov_Geroev, GetEnteringUnit())
	end
end

function InitTrig_HeroUnitGameSave()
	gg_trg_HeroUnitGameSave = CreateTrigger()
	TriggerRegisterEnterRectSimple(gg_trg_HeroUnitGameSave, gg_rct_Oblstb_Tavern)
	TriggerAddAction(gg_trg_HeroUnitGameSave, Trig_HeroUnitGameSave_Actions)
end

---@return boolean
function Trig_INIT_Func001Func001C()
	return ((IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) and (GetUnitTypeId(GetEnumUnit()) ~= FourCC('h00A'))) ~= nil
end

function Trig_INIT_Func001A()
	if (Trig_INIT_Func001Func001C()) then
		udg_herounit[(1 + GetPlayerId(GetOwningPlayer(GetEnumUnit())))] = GetEnumUnit()
		GroupAddUnit(udg_Gruppa_HeroUnitov_Geroev, GetEnumUnit())
		ForceAddPlayer(udg_IGRAET, GetOwningPlayer(GetEnumUnit()))
	end
end

function Trig_INIT_Func002A()
	ForceAddPlayer(udg_Gruppa_Igrokov_Vibor_Heroev, GetEnumPlayer())
	CameraSetupApplyForPlayer(true, gg_cam_Kamera_na_taverni, GetEnumPlayer(), 0)
	CreateNUnitsAtLoc(1, FourCC('h00A'), GetEnumPlayer(), PolarProjectionBJ(GetRectCenter(gg_rct_Oblstb_Tavern), 50., (I2R((1 + GetPlayerId(GetEnumPlayer()))) * 40.)), bj_UNIT_FACING)
	udg_DummyHeroPick[(1 + GetPlayerId(GetEnumPlayer()))] = bj_lastCreatedUnit
	udg_System_ShowAbil_And_Items_Hint[(1 + GetPlayerId(GetEnumPlayer()))] = true
end

function Trig_INIT_Actions()
	ForGroupBJ(GetUnitsInRectAll(gg_rct_Oblstb_Tavern), Trig_INIT_Func001A)
	ForForce(udg_IGRAET, Trig_INIT_Func002A)
	udg_Heroes_Types[1] = FourCC('H01M')
	udg_MutliBoardHeroIcon[1] = "ReplaceableTextures\\CommandButtons\\BTNGuardsman.blp"
	SaveInteger(udg_hash, FourCC('H01M'), 84, 1)
	udg_Heroes_Types[2] = FourCC('O005')
	udg_MutliBoardHeroIcon[2] = "ReplaceableTextures\\CommandButtons\\BTNChaosGrunt.blp"
	SaveInteger(udg_hash, FourCC('O005'), 84, 2)
	udg_Heroes_Types[3] = FourCC('N012')
	udg_MutliBoardHeroIcon[3] = "ReplaceableTextures\\CommandButtons\\BTNChaosBlademaster.blp"
	SaveInteger(udg_hash, FourCC('N012'), 84, 3)
	udg_Heroes_Types[4] = FourCC('E004')
	udg_MutliBoardHeroIcon[4] = "ReplaceableTextures\\CommandButtons\\BTNEvilIllidan.blp"
	SaveInteger(udg_hash, FourCC('E004'), 84, 4)
	udg_Heroes_Types[5] = FourCC('H01L')
	udg_MutliBoardHeroIcon[5] = "ReplaceableTextures\\CommandButtons\\BTNSylvanusWindrunner.blp"
	SaveInteger(udg_hash, FourCC('H01L'), 84, 5)
	udg_Heroes_Types[6] = FourCC('E001')
	udg_MutliBoardHeroIcon[6] = "ReplaceableTextures\\CommandButtons\\BTNPriest.blp"
	SaveInteger(udg_hash, FourCC('E001'), 84, 6)
	udg_Heroes_Types[7] = FourCC('H01I')
	udg_MutliBoardHeroIcon[7] = "ReplaceableTextures\\CommandButtons\\BTNSeaElemental.blp"
	SaveInteger(udg_hash, FourCC('H01I'), 84, 7)
	udg_Heroes_Types[8] = FourCC('N00W')
	udg_MutliBoardHeroIcon[8] = "ReplaceableTextures\\CommandButtons\\BTNRevenant.blp"
	SaveInteger(udg_hash, FourCC('N00W'), 84, 8)
	udg_Heroes_Types[9] = FourCC('O000')
	udg_MutliBoardHeroIcon[9] = "ReplaceableTextures\\CommandButtons\\BTNArthas.blp"
	SaveInteger(udg_hash, FourCC('O000'), 84, 9)
	udg_Heroes_Types[$A] = FourCC('E005')
	udg_MutliBoardHeroIcon[$A] = "ReplaceableTextures\\CommandButtons\\BTNAncientOfWonders.blp"
	SaveInteger(udg_hash, FourCC('E005'), 84, $A)
	udg_Heroes_Types[$B] = FourCC('E003')
	udg_MutliBoardHeroIcon[$B] = "ReplaceableTextures\\CommandButtons\\BTNFurion.blp"
	SaveInteger(udg_hash, FourCC('E003'), 84, $B)
	udg_Heroes_Types[$C] = FourCC('E007')
	udg_MutliBoardHeroIcon[$C] = "ReplaceableTextures\\CommandButtons\\BTNHuntress.blp"
	SaveInteger(udg_hash, FourCC('E007'), 84, $C)
	udg_Heroes_Types[$D] = FourCC('O001')
	udg_MutliBoardHeroIcon[$D] = "ReplaceableTextures\\CommandButtons\\BTNSpiritWalker.blp"
	SaveInteger(udg_hash, FourCC('O001'), 84, $D)
	udg_Heroes_Types[$E] = FourCC('E008')
	udg_MutliBoardHeroIcon[$E] = "ReplaceableTextures\\CommandButtons\\BTNHeroWarden.blp"
	SaveInteger(udg_hash, FourCC('E008'), 84, $E)
	udg_Heroes_Types[$F] = FourCC('H00O')
	udg_MutliBoardHeroIcon[$F] = "ReplaceableTextures\\CommandButtons\\BTNGarithos.blp"
	SaveInteger(udg_hash, FourCC('H00O'), 84, $F)
	udg_Heroes_Types[16] = FourCC('H00Q')
	udg_MutliBoardHeroIcon[16] = "ReplaceableTextures\\CommandButtons\\BTNHeroArchMage.blp"
	SaveInteger(udg_hash, FourCC('H00Q'), 84, 16)
	udg_Heroes_Types[17] = FourCC('N01T')
	udg_MutliBoardHeroIcon[17] = "ReplaceableTextures\\CommandButtons\\BTNHeroAlchemist.blp"
	SaveInteger(udg_hash, FourCC('N01T'), 84, 17)
	udg_Heroes_Types[18] = FourCC('H00R')
	udg_MutliBoardHeroIcon[18] = "ReplaceableTextures\\CommandButtons\\BTNRifleman.blp"
	SaveInteger(udg_hash, FourCC('H00R'), 84, 18)
	udg_Total_Heroes_Count = 18
	udg_Random_Hero_Count = 18
	bj_forLoopAIndex = 1
	bj_forLoopAIndexEnd = udg_Total_Heroes_Count
	while(true) do
		if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
		udg_Heroes_Random_Data[bj_forLoopAIndex] = bj_forLoopAIndex
		udg_Is_Player_Got_Randomed[bj_forLoopAIndex] = false
		bj_forLoopAIndex = bj_forLoopAIndex + 1
	end
end

function InitTrig_INIT()
	gg_trg_INIT = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_INIT, 1.)
	TriggerAddAction(gg_trg_INIT, Trig_INIT_Actions)
end

function Trig_Pick_Hero_Upgrade_Func006A()
	SetPlayerTechMaxAllowed(GetEnumPlayer(), GetUnitTypeId(udg_Temp_Unit), 0)
end

function Trig_Pick_Hero_Upgrade_Actions()
	local hero ---@type unit
	local p ---@type player
	local heroid ---@type number integer
	local pid ---@type number integer
	local randomed = false ---@type boolean
	local i ---@type number integer
	if udg_Hero_Randomed ~= nil then
		hero = udg_Hero_Randomed
		randomed = true
		udg_Hero_Randomed = nil
	else
		hero = GetSoldUnit()
	end
	p = GetOwningPlayer(hero)
	pid = GetPlayerId(p) + 1
	heroid = GetUnitTypeId(hero)
	udg_Temp_Unit = hero
	udg_Temp_Integer[1] = LoadInteger(udg_hash, heroid, 84)
	MultiboardSetItemIconBJ(udg_MultiBoard, 1, udg_PlayerNumberInMB[pid], udg_MutliBoardHeroIcon[udg_Temp_Integer[1]])
	MultiboardSetItemValueBJ(udg_MultiBoard, 6, udg_PlayerNumberInMB[pid], (udg_ColorString[22] .. ("1|r")))
	SetPlayerTechMaxAllowed(p, FourCC('HERO'), 0)
	ForForce(bj_FORCE_ALL_PLAYERS, Trig_Pick_Hero_Upgrade_Func006A)
	ForceRemovePlayer(udg_Gruppa_Igrokov_Vibor_Heroev, p)
	if (GetLocalPlayer() == p) then
		ClearSelection()
		SelectUnit(hero, true)
		CameraSetupApplyForceDuration(gg_cam_Kamera_glavnoi_bazi, true, .0)
	end
	bj_lastCreatedItem = CreateItem(FourCC('I01E'), .0, .0)
	UnitAddItem(hero, bj_lastCreatedItem)
	SetUnitPosition(hero, 1232., -6368.)
	RemoveUnit(udg_DummyHeroPick[pid])
	bj_lastCreatedFogModifier = CreateFogModifierRadius(p, FOG_OF_WAR_VISIBLE, 1024., -5696., 1700., true, false)
	FogModifierStart(bj_lastCreatedFogModifier)
	udg_BaseVisionFogModifier[pid] = bj_lastCreatedFogModifier
	MoveDammiReferencePanel(hero)
	if heroid == FourCC('H01M') then
		SetUnitColor(hero, PLAYER_COLOR_RED)
		SaveStr(udg_hash, heroid, 91, "melee")
		SaveStr(udg_hash, heroid, 70, "str")
		udg_Hero_Player_Color_String[pid] = "|cFFC80000"
		if TriggerEvaluate(gg_trg_Guardsman_Load) then
			TriggerExecute(gg_trg_Guardsman_Load)
		end
	end
	if heroid == FourCC('O005') then
		SetUnitColor(hero, ConvertPlayerColor($C))
		SaveStr(udg_hash, heroid, 91, "melee")
		SaveStr(udg_hash, heroid, 70, "str")
		ForceAddPlayer(udg_Drenor_Bull_Hint_Player_Group, p)
		udg_Hero_Player_Color_String[pid] = "|cFFF0692D"
		if TriggerEvaluate(gg_trg_Drenor_Bull_Load) then
			TriggerExecute(gg_trg_Drenor_Bull_Load)
		end
	end
	if heroid == FourCC('O000') then
		SetUnitColor(hero, PLAYER_COLOR_ORANGE)
		SaveStr(udg_hash, heroid, 91, "melee")
		SaveStr(udg_hash, heroid, 70, "str")
		udg_Hero_Player_Color_String[pid] = "|cFFF89A00"
		if TriggerEvaluate(gg_trg_Paladin_Load) then
			TriggerExecute(gg_trg_Paladin_Load)
		end
	end
	if heroid == FourCC('E005') then
		SetUnitColor(hero, PLAYER_COLOR_LIGHT_GRAY)
		SaveStr(udg_hash, heroid, 91, "melee")
		SaveStr(udg_hash, heroid, 70, "str")
		udg_Hero_Player_Color_String[pid] = "|cFFAFAFAF"
		SetUnitAnimation(hero, "stand")
		if TriggerEvaluate(gg_trg_Stone_Guard_Load) then
			TriggerExecute(gg_trg_Stone_Guard_Load)
		end
	end
	if heroid == FourCC('N012') then
		SetUnitColor(hero, PLAYER_COLOR_RED)
		SaveStr(udg_hash, heroid, 91, "melee")
		SaveStr(udg_hash, heroid, 70, "agi")
		udg_Hero_Player_Color_String[pid] = "|cFFFF3200"
		if TriggerEvaluate(gg_trg_BladeMaster_Load) then
			TriggerExecute(gg_trg_BladeMaster_Load)
		end
	end
	if heroid == FourCC('E004') then
		SetUnitColor(hero, PLAYER_COLOR_PINK)
		SaveStr(udg_hash, heroid, 91, "melee")
		SaveStr(udg_hash, heroid, 70, "agi")
		udg_Hero_Player_Color_String[pid] = "|cFFB496AF"
		if TriggerEvaluate(gg_trg_Illusionist_Load) then
			TriggerExecute(gg_trg_Illusionist_Load)
		end
	end
	if heroid == FourCC('H01L') then
		SetUnitColor(hero, PLAYER_COLOR_BLUE)
		SaveStr(udg_hash, heroid, 91, "ranged")
		SaveStr(udg_hash, heroid, 70, "agi")
		udg_Hero_Player_Color_String[pid] = "|cFF146EE6"
		if TriggerEvaluate(gg_trg_Ranger_Load) then
			TriggerExecute(gg_trg_Ranger_Load)
		end
	end
	if heroid == FourCC('E007') then
		SetUnitColor(hero, PLAYER_COLOR_PURPLE)
		SaveStr(udg_hash, heroid, 91, "ranged")
		SaveStr(udg_hash, heroid, 70, "agi")
		udg_Hero_Player_Color_String[pid] = "|cFF9664FF"
		if TriggerEvaluate(gg_trg_MoonWarrior_Load) then
			TriggerExecute(gg_trg_MoonWarrior_Load)
		end
	end
	if heroid == FourCC('E001') then
		SetUnitColor(hero, PLAYER_COLOR_YELLOW)
		SaveStr(udg_hash, heroid, 91, "ranged")
		SaveStr(udg_hash, heroid, 70, "int")
		udg_Hero_Player_Color_String[pid] = "|cFFFFFF64"
		if TriggerEvaluate(gg_trg_Healer_Load) then
			TriggerExecute(gg_trg_Healer_Load)
		end
	end
	if heroid == FourCC('H01I') then
		SetUnitColor(hero, PLAYER_COLOR_CYAN)
		SaveStr(udg_hash, heroid, 91, "ranged")
		SaveStr(udg_hash, heroid, 70, "int")
		udg_Hero_Player_Color_String[pid] = "|cFF64DCFA"
		if TriggerEvaluate(gg_trg_Water_Elemental_Load) then
			TriggerExecute(gg_trg_Water_Elemental_Load)
		end
	end
	if heroid == FourCC('N00W') then
		SetUnitColor(hero, PLAYER_COLOR_LIGHT_GRAY)
		SaveStr(udg_hash, heroid, 91, "ranged")
		SaveStr(udg_hash, heroid, 70, "int")
		udg_Hero_Player_Color_String[pid] = "|cFF9696AF"
		if TriggerEvaluate(gg_trg_Master_of_Lightnings_Load) then
			TriggerExecute(gg_trg_Master_of_Lightnings_Load)
		end
	end
	if heroid == FourCC('E003') then
		SetUnitColor(hero, PLAYER_COLOR_GREEN)
		SaveStr(udg_hash, heroid, 91, "ranged")
		SaveStr(udg_hash, heroid, 70, "int")
		udg_Hero_Player_Color_String[pid] = "|cff00CD00"
		if TriggerEvaluate(gg_trg_Archdruid_Load) then
			TriggerExecute(gg_trg_Archdruid_Load)
		end
	end
	if heroid == FourCC('O001') then
		SetUnitColor(hero, PLAYER_COLOR_ORANGE)
		SaveStr(udg_hash, heroid, 91, "ranged")
		SaveStr(udg_hash, heroid, 70, "int")
		udg_Hero_Player_Color_String[pid] = "|cffEE9A00"
		if TriggerEvaluate(gg_trg_SpiritBreaker_Load) then
			TriggerExecute(gg_trg_SpiritBreaker_Load)
		end
	end
	if heroid == FourCC('E008') then
		SetUnitColor(hero, PLAYER_COLOR_LIGHT_BLUE)
		SaveStr(udg_hash, heroid, 91, "melee")
		SaveStr(udg_hash, heroid, 70, "agi")
		udg_Hero_Player_Color_String[pid] = "|cffB0E2FF"
		if TriggerEvaluate(gg_trg_Warden_Load) then
			TriggerExecute(gg_trg_Warden_Load)
		end
	end
	if heroid == FourCC('H00O') then
		SetUnitColor(hero, PLAYER_COLOR_YELLOW)
		SaveStr(udg_hash, heroid, 91, "melee")
		SaveStr(udg_hash, heroid, 70, "str")
		udg_Hero_Player_Color_String[pid] = "|cFFFFE150"
		if TriggerEvaluate(gg_trg_Marshal_Load) then
			TriggerExecute(gg_trg_Marshal_Load)
		end
	end
	if heroid == FourCC('H00Q') then
		SetUnitColor(hero, PLAYER_COLOR_BLUE)
		udg_Hero_Player_Color_String[pid] = "|cFF6496FF"
		SaveStr(udg_hash, heroid, 70, "int")
		SaveStr(udg_hash, heroid, 91, "ranged")
		if TriggerEvaluate(gg_trg_Load_ArchMage) then
			TriggerExecute(gg_trg_Load_ArchMage)
		end
	end
	if heroid == FourCC('N01T') then
		SetUnitColor(hero, PLAYER_COLOR_AQUA)
		udg_Hero_Player_Color_String[pid] = "|cFF00C800"
		SaveStr(udg_hash, heroid, 70, "str")
		SaveStr(udg_hash, heroid, 91, "melee")
		if TriggerEvaluate(gg_trg_Load_Alchemist) then
			TriggerExecute(gg_trg_Load_Alchemist)
		end
	end
	if heroid == FourCC('H00R') then
		SetUnitColor(hero, PLAYER_COLOR_LIGHT_BLUE)
		SaveStr(udg_hash, heroid, 91, "ranged")
		SaveStr(udg_hash, heroid, 70, "agi")
		udg_Hero_Player_Color_String[pid] = "|cffC0C0C0"
		if TriggerEvaluate(gg_trg_Load_Sniper) then
			TriggerExecute(gg_trg_Load_Sniper)
		end
	end
	udg_Is_Player_Got_Randomed[pid] = true
	udg_Heroes_Random_Data[LoadInteger(udg_hash, heroid, 84)] = udg_Heroes_Random_Data[udg_Total_Heroes_Count]
	udg_Total_Heroes_Count = udg_Total_Heroes_Count - 1
	if randomed == false and IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS) then
		DisplayTextToPlayer(GetLocalPlayer(), 0, 0, udg_ColorString[pid] .. GetPlayerName(p) .. "|r выбрал героя: " .. udg_Hero_Player_Color_String[pid] .. GetUnitName(hero) .. "|r")
	end
	if randomed and IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS) then
		DisplayTextToPlayer(GetLocalPlayer(), 0, 0, udg_ColorString[pid] .. GetPlayerName(p) .. "|r наугад выбрал героя: " .. udg_Hero_Player_Color_String[pid] .. GetUnitName(hero) .. "|r")
	end
	if randomed then
		SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + $FA)
		if (GetLocalPlayer() == p) then
			DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 10., "За случайный выбор героя вы получили |cFFFFFF00+250|r золота!")
		end
	end
end

---@return boolean
function Trig_Pick_Hero_Upgrade_Conditions()
	return (IsUnitType(GetSoldUnit(), UNIT_TYPE_HERO) and IsPlayerInForce(GetOwningPlayer(GetSoldUnit()), udg_Gruppa_Igrokov_Vibor_Heroev)) ~= nil
end

function InitTrig_Pick_Hero_Upgrade()
	local index = 0 ---@type number integer
	gg_trg_Pick_Hero_Upgrade = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Pick_Hero_Upgrade, Player(index), EVENT_PLAYER_UNIT_SELL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Pick_Hero_Upgrade, Condition(Trig_Pick_Hero_Upgrade_Conditions))
	TriggerAddAction(gg_trg_Pick_Hero_Upgrade, Trig_Pick_Hero_Upgrade_Actions)
end

function Trig_Hero_Dead_MultiBoard_Check_Actions()
	local tmb = GetExpiredTimer() ---@type timer
	local htmb = GetHandleId(tmb) ---@type number integer
	local time = LoadReal(udg_hash, htmb, 1) ---@type number real
	local pnumber = LoadInteger(udg_hash, htmb, 2) ---@type number integer
	if time > 0 then
		time = time - 1
		SaveReal(udg_hash, htmb, 1, time)
		MultiboardSetItemValueBJ(udg_MultiBoard, 2, udg_PlayerNumberInMB[pnumber], (udg_ColorString[pnumber] .. GetPlayerName(Player(pnumber - 1)) .. "|r (" .. udg_ColorString[pnumber] .. I2S((R2I(time))) .. "|r)"))
	else
		time = 0
		MultiboardSetItemValueBJ(udg_MultiBoard, 2, udg_PlayerNumberInMB[pnumber], (udg_ColorString[pnumber] .. GetPlayerName(Player(pnumber - 1)) .. "|r"))
		FlushChildHashtable(udg_hash, htmb)
		DestroyTimer(tmb)
	end
	udg_Hero_Respawn_Time[pnumber] = R2I(time)
	tmb = nil
end

function Trig_Hero_Dead_Timer2_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	UnitRemoveAbility(u, FourCC('Avul'))
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	u = nil
end

function Trig_Hero_Dead_Timer_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local x = GetRectCenterX(gg_rct_Respawn_Heroes) ---@type number real
	local y = GetRectCenterY(gg_rct_Respawn_Heroes) ---@type number real
	local td = LoadTimerDialogHandle(udg_hash, h, 2) ---@type timerdialog
	local theCam = CreateCameraSetup() ---@type camerasetup
	TimerStart(t, 4., false, Trig_Hero_Dead_Timer2_Actions)
	ReviveHero(u, x, y, true)
	SetUnitState(u, UNIT_STATE_MANA, GetUnitState(u, UNIT_STATE_MAX_MANA))
	SetUnitState(u, UNIT_STATE_LIFE, GetUnitState(u, UNIT_STATE_MAX_LIFE))
	UnitAddAbility(u, FourCC('Avul'))
	DisplayTextToPlayer(GetOwningPlayer(u), 500., 500, "|cFFFFFF00Ваш Герой Воскрешен!!!|r")
	if (GetLocalPlayer() == GetOwningPlayer(u)) and udg_IsGameEnd == false then
		CameraSetupSetField(theCam, CAMERA_FIELD_TARGET_DISTANCE, GetCameraField(CAMERA_FIELD_TARGET_DISTANCE), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_FARZ, GetCameraField(CAMERA_FIELD_FARZ), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ZOFFSET, GetCameraField(CAMERA_FIELD_ZOFFSET), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ANGLE_OF_ATTACK, bj_RADTODEG * GetCameraField(CAMERA_FIELD_ANGLE_OF_ATTACK), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_FIELD_OF_VIEW, bj_RADTODEG * GetCameraField(CAMERA_FIELD_FIELD_OF_VIEW), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ROLL, bj_RADTODEG * GetCameraField(CAMERA_FIELD_ROLL), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ROTATION, bj_RADTODEG * GetCameraField(CAMERA_FIELD_ROTATION), 0)
		CameraSetupSetDestPosition(theCam, GetUnitX(u), GetUnitY(u), 0)
		CameraSetupApplyForceDuration(theCam, true, 0)
		ClearSelection()
		SelectUnit(u, true)
	end
	DestroyTimerDialog(td)
	t = nil
	u = nil
	td = nil
end

---@return boolean
function Trig_Hero_Dead_Conditions()
	return (IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO) and IsUnitIllusion(GetDyingUnit()) == false and GetPlayerId(GetOwningPlayer(GetDyingUnit())) <= 8 and GetOwningPlayer(GetDyingUnit()) ~= Player($F) and GetOwningPlayer(GetDyingUnit()) ~= Player($B)) ~= nil
end

function Trig_Hero_Dead_Actions()
	local t = CreateTimer() ---@type timer
	local td = CreateTimerDialog(t) ---@type timerdialog
	local h = GetHandleId(t) ---@type number integer
	local u = GetDyingUnit() ---@type unit
	local p = GetOwningPlayer(u) ---@type player
	local pnumber = GetPlayerId(p) + 1 ---@type number integer
	local tmb = CreateTimer() ---@type timer
	local htmb = GetHandleId(tmb) ---@type number integer
	local time = 5. + (2. * GetHeroLevel(u)) ---@type number real
	if LoadReal(udg_hash, GetHandleId(u), FourCC('t')) > .0 then
		time = R2I(time * (1. - LoadReal(udg_hash, GetHandleId(u), FourCC('t'))))
		SaveReal(udg_hash, GetHandleId(u), FourCC('t'), .0)
	end
	time = time * (1. - HaveAnyTimeTalisman())
	SaveUnitHandle(udg_hash, h, 1, u)
	SaveTimerDialogHandle(udg_hash, h, 2, td)
	if pnumber <= 9 then
		udg_MultiBoard_Player_Deaths_Count[pnumber] = udg_MultiBoard_Player_Deaths_Count[pnumber] + 1
		MultiboardSetItemValueBJ(udg_MultiBoard, 4, udg_PlayerNumberInMB[pnumber], udg_ColorString[21] .. I2S(udg_MultiBoard_Player_Deaths_Count[pnumber]) .. "|r")
	end
	TimerStart(t, time, false, Trig_Hero_Dead_Timer_Actions)
	TimerDialogDisplay(td, false)
	TimerDialogSetTitle(td, "Respawn in:")
	if (GetLocalPlayer() == p) then
		TimerDialogDisplay(td, true)
		TimerDialogSetTitleColor(td, $FF, $E6, 80, 65)
		TimerDialogSetTimeColor(td, $FF, 45, 45, 20)
	end
	if (IsPlayerInForce(GetLocalPlayer(), udg_IGRAET)) then
		DisplayTimedTextToPlayer(GetLocalPlayer(), .0, .0, 10., "Герой " .. udg_Hero_Player_Color_String[pnumber] .. GetUnitName(u) .. "|r (" .. udg_ColorString[pnumber] .. GetPlayerName(p) .. "|r) погибает!!!")
	end
	udg_Hero_Respawn_Time[pnumber] = R2I(time)
	SaveReal(udg_hash, htmb, 1, time)
	SaveInteger(udg_hash, htmb, 2, pnumber)
	TimerStart(tmb, 1., true, Trig_Hero_Dead_MultiBoard_Check_Actions)
	u = nil
	t = nil
	tmb = nil
	td = nil
end

function InitTrig_Hero_Dead()
	local index = 0 ---@type number integer
	gg_trg_Hero_Dead = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Hero_Dead, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Hero_Dead, Condition(Trig_Hero_Dead_Conditions))
	TriggerAddAction(gg_trg_Hero_Dead, Trig_Hero_Dead_Actions)
end

function Trig_Duel_Checking_On_HighGround_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero1 = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local hero2 = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local x1 = GetUnitX(hero1) ---@type number real
	local y1 = GetUnitY(hero1) ---@type number real
	local x2 = GetUnitX(hero2) ---@type number real
	local y2 = GetUnitY(hero2) ---@type number real
	local h2 = LoadInteger(udg_hash, h, 3) ---@type number integer
	if LoadBoolean(udg_hash, h2, $D) == false then
		if not ((GetRectMinX(gg_rct_Hero_Arena) <= x1) and (x1 <= GetRectMaxX(gg_rct_Hero_Arena)) and (GetRectMinY(gg_rct_Hero_Arena) <= y1) and (y1 <= GetRectMaxY(gg_rct_Hero_Arena))) then
			SetUnitPosition(hero1, 2000., 2950.)
			if (GetLocalPlayer() == GetOwningPlayer(hero1)) then
				PanCameraToTimed(2000., 2950., .0)
			end
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", 2000., 2950.))
		end
		if not ((GetRectMinX(gg_rct_Hero_Arena) <= x2) and (x2 <= GetRectMaxX(gg_rct_Hero_Arena)) and (GetRectMinY(gg_rct_Hero_Arena) <= y2) and (y2 <= GetRectMaxY(gg_rct_Hero_Arena))) then
			SetUnitPosition(hero2, 2000., 2950.)
			if (GetLocalPlayer() == GetOwningPlayer(hero2)) then
				PanCameraToTimed(2000., 2950., .0)
			end
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", 2000., 2950.))
		end
	else
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	hero1 = nil
	hero2 = nil
end

function Trig_Duel_Timer_Dialog_Destroy_2sec_wait_Actions()
	local t2secwait = GetExpiredTimer() ---@type timer
	ExecuteFunc("Trig_Hero_Death_On_Duel_2secwait_Actions")
	DestroyTimer(t2secwait)
	t2secwait = nil
end

function Trig_Duel_Timer_Dialog_Destroy_Actions()
	local rct = gg_rct_Hero_Arena ---@type rect
	local h = GetHandleId(rct) ---@type number integer
	local t = GetExpiredTimer() ---@type timer
	local ht = GetHandleId(t) ---@type number integer
	local td = LoadTimerDialogHandle(udg_hash, ht, 1) ---@type timerdialog
	local t2secwait = CreateTimer() ---@type timer
	local counterduel = LoadInteger(udg_hash, h, $A) ---@type number integer
	local hero1 = udg_herounit[LoadInteger(udg_hash, h, counterduel)] ---@type unit
	local hero2 = udg_herounit[LoadInteger(udg_hash, h, counterduel + 1)] ---@type unit
	local pw = GetOwningPlayer(hero1) ---@type player
	local pd = GetOwningPlayer(hero2) ---@type player
	local gold = $96 + (udg_Nomer_samoi_volni * 60) ---@type number integer
	local xp = 300 + (udg_Nomer_samoi_volni * FourCC('d')) ---@type number integer
	if LoadBoolean(udg_hash, h, $D) == false then
		SaveBoolean(udg_hash, h, $D, true)
		DestroyTimerDialog(td)
		CinematicFadeBJ(1, 2.5, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
		TimerStart(t2secwait, 2.5, false, Trig_Duel_Timer_Dialog_Destroy_2sec_wait_Actions)
		SetUnitInvulnerable(hero1, true)
		SetUnitInvulnerable(hero2, true)
		if IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS) then
			DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Дуэль закончилась вничью")
		end
		if (GetLocalPlayer() == pw) then
			DisplayTextToPlayer(pw, .0, .0, "Дуэль закончилась вничью, ваш герой получaeт |cFFFFFF00" .. I2S(xp) .. " опыта|r и |cFFFFFF00" .. I2S(gold) .. " золота|r")
		end
		AddHeroXP(hero1, xp, false)
		SetPlayerState(pw, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(pw, PLAYER_STATE_RESOURCE_GOLD) + gold)
		if (GetLocalPlayer() == pd) then
			DisplayTextToPlayer(pw, .0, .0, "Дуэль закончилась вничью, ваш герой получaeт |cFFFFFF00" .. I2S(xp) .. " опыта|r и |cFFFFFF00" .. I2S(gold) .. " золота|r")
		end
		AddHeroXP(hero2, xp, false)
		SetPlayerState(pd, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(pd, PLAYER_STATE_RESOURCE_GOLD) + gold)
	end
	rct = nil
	DestroyTimer(t)
	t = nil
	FlushChildHashtable(udg_hash, ht)
	td = nil
	t2secwait = nil
	hero1 = nil
	hero2 = nil
	pw = nil
	pd = nil
end

function Trig_Duel_Start_Fight_Actions()
	local rct = gg_rct_Hero_Arena ---@type rect
	local h = GetHandleId(rct) ---@type number integer
	local counterduel = LoadInteger(udg_hash, h, $A) ---@type number integer
	local hero1 = udg_herounit[LoadInteger(udg_hash, h, counterduel)] ---@type unit
	local hero2 = udg_herounit[LoadInteger(udg_hash, h, counterduel + 1)] ---@type unit
	local t = CreateTimer() ---@type timer
	local td = CreateTimerDialog(t) ---@type timerdialog
	local ht = GetHandleId(t) ---@type number integer
	local t2 ---@type timer
	local h2 ---@type number integer
	SoundForPlayer(GetOwningPlayer(hero1), 4)
	SoundForPlayer(GetOwningPlayer(hero2), 4)
	TimerDialogSetTitle(td, "Дуэль:")
	TimerDialogDisplay(td, true)
	TimerDialogSetTitleColor(td, $FF, $E6, 80, 65)
	TimerDialogSetTimeColor(td, $FF, 0, 0, 20)
	SaveTimerDialogHandle(udg_hash, ht, 1, td)
	SaveTimerHandle(udg_hash, h, $D, t)
	SaveTimerDialogHandle(udg_hash, h, $E, td)
	if hero1 ~= nil and hero2 ~= nil then
		hero1 = udg_herounit[LoadInteger(udg_hash, h, counterduel)]
		hero2 = udg_herounit[LoadInteger(udg_hash, h, counterduel + 1)]
		PauseUnit(hero1, false)
		PauseUnit(hero2, false)
		IssueTargetOrderById(hero1, $D000F, hero2)
		IssueTargetOrderById(hero2, $D000F, hero1)
		t2 = CreateTimer()
		h2 = GetHandleId(t2)
		SaveUnitHandle(udg_hash, h2, 1, hero1)
		SaveUnitHandle(udg_hash, h2, 2, hero2)
		SaveInteger(udg_hash, h2, 3, h)
		TimerStart(t2, .5, true, Trig_Duel_Checking_On_HighGround_Actions)
		TimerStart(t, 120., false, Trig_Duel_Timer_Dialog_Destroy_Actions)
	end
	DestroyTimer(GetExpiredTimer())
	rct = nil
	hero1 = nil
	hero2 = nil
	t = nil
	td = nil
end

function Trig_Duel_TextTag_Size_Increase_Actions()
	local ttxt = GetExpiredTimer() ---@type timer
	local httxt = GetHandleId(ttxt) ---@type number integer
	local rct = gg_rct_Hero_Arena ---@type rect
	local txt = LoadTextTagHandle(udg_hash, httxt, 1) ---@type texttag
	local count = LoadInteger(udg_hash, httxt, 2) ---@type number integer
	if count <= 2 then
		if count == 0 then
			SetTextTagText(txt, "2", .05)
		end
		if count == 1 then
			SetTextTagText(txt, "1", .05)
		end
		if count == 2 then
			SetTextTagText(txt, "FIGHT!", .05)
			SetTextTagPos(txt, GetRectCenterX(rct) - 80., GetRectCenterY(rct), .0)
		end
		count = count + 1
		SaveInteger(udg_hash, httxt, 2, count)
	else
		DestroyTextTag(txt)
		DestroyTimer(ttxt)
		FlushChildHashtable(udg_hash, httxt)
	end
	ttxt = nil
	rct = nil
	txt = nil
end

function Trig_Duel_Round_Actions()
	local rct = gg_rct_Hero_Arena ---@type rect
	local x = GetRectCenterX(rct) ---@type number real
	local y = GetRectCenterY(rct) ---@type number real
	local h = GetHandleId(rct) ---@type number integer
	local counterduel = LoadInteger(udg_hash, h, $A) ---@type number integer
	local maxplayers = LoadInteger(udg_hash, h, $B) ---@type number integer
	local endduels = LoadBoolean(udg_hash, h, $C) ---@type boolean
	local t = CreateTimer() ---@type timer
	local ht = GetHandleId(t) ---@type number integer
	local number1 ---@type number integer
	local number2 ---@type number integer
	local hero1 ---@type unit
	local hero2 ---@type unit
	local i = 1 ---@type number integer
	local xc ---@type number real
	local yc ---@type number real
	local txt ---@type texttag
	local ttxt ---@type timer
	local perekluchatel = 0 ---@type number real
	local p1 ---@type player
	local p2 ---@type player
	local gruppa ---@type group
	if maxplayers >= counterduel + 1 then
		number1 = LoadInteger(udg_hash, h, counterduel)
		number2 = LoadInteger(udg_hash, h, counterduel + 1)
		hero1 = udg_herounit[number1]
		hero2 = udg_herounit[number2]
		SaveBoolean(udg_hash, h, $D, false)
		txt = CreateTextTag()
		ttxt = CreateTimer()
		SetTextTagText(txt, "3", .05)
		SetTextTagColor(txt, $FF, 0, 0, 0)
		SetTextTagPos(txt, x, y, .0)
		SetTextTagPermanent(txt, false)
		SetTextTagLifespan(txt, 1215752191.)
		SetTextTagFadepoint(txt, .0)
		SaveTextTagHandle(udg_hash, GetHandleId(ttxt), 1, txt)
		SaveInteger(udg_hash, GetHandleId(ttxt), 2, 0)
		TimerStart(ttxt, 1., true, Trig_Duel_TextTag_Size_Increase_Actions)
		p1 = GetOwningPlayer(hero1)
		p2 = GetOwningPlayer(hero2)
		if (IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS)) then
			DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Дуэль №" .. udg_ColorString[20] .. I2S(R2I((counterduel / 2) + 1)) .. "|r: " .. udg_ColorString[GetPlayerId(p1) + 1] .. GetPlayerName(p1) .. "|r против " .. udg_ColorString[GetPlayerId(p2) + 1] .. GetPlayerName(p2) .. "|r")
		end
		ShowUnit(hero1, true)
		ShowUnit(hero2, true)
		SetUnitPosition(hero1, x + 500. * Cos(180. * bj_DEGTORAD), y)
		SetUnitPosition(hero2, x + 500. * Cos(.0 * bj_DEGTORAD), y)
		PauseUnit(hero1, true)
		PauseUnit(hero2, true)
		SetUnitFacing(hero1, .0)
		SetUnitFacing(hero2, 180.)
		SetUnitState(hero1, UNIT_STATE_LIFE, $540BE3FF)
		SetUnitState(hero1, UNIT_STATE_MANA, $540BE3FF)
		SetUnitState(hero2, UNIT_STATE_LIFE, $540BE3FF)
		SetUnitState(hero2, UNIT_STATE_MANA, $540BE3FF)
		if (GetLocalPlayer() == GetOwningPlayer(hero1)) then
			ClearSelection()
			SelectUnit(hero1, true)
			PanCameraToTimed(x, y, .0)
		end
		if (GetLocalPlayer() == GetOwningPlayer(hero2)) then
			ClearSelection()
			SelectUnit(hero2, true)
			PanCameraToTimed(x, y, .0)
		end
		gruppa = CreateGroup()
		GroupEnumUnitsInRect(gruppa, gg_rct_Hero_Arena, nil)
		KillSummonsAndIllusions(gruppa)
		SetPlayerAllianceStateBJ(Player(number1 - 1), Player(number2 - 1), 0)
		SetPlayerAllianceStateBJ(Player(number2 - 1), Player(number1 - 1), 0)
		TimerStart(t, 4., false, Trig_Duel_Start_Fight_Actions)
	else
		DisableTrigger(gg_trg_Hero_Death_On_Duel)
		if IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS) then
			DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Все дуэли завершены, спасибо героям за участие!!!")
		end
		while(true) do
			if (i > 9) then break end
			hero1 = udg_herounit[i]
			if perekluchatel >= 0 then
				perekluchatel = -perekluchatel
				perekluchatel = perekluchatel - 50.
			else
				perekluchatel = -perekluchatel
				perekluchatel = perekluchatel + 50.
			end
			xc = GetRectCenterX(gg_rct_Respawn_Heroes) + perekluchatel
			yc = GetRectCenterY(gg_rct_Respawn_Heroes)
			SetUnitPosition(hero1, xc, yc)
			SetUnitFacing(hero1, 270.)
			SetUnitState(hero1, UNIT_STATE_LIFE, $540BE3FF)
			SetUnitState(hero1, UNIT_STATE_MANA, $540BE3FF)
			ShowUnit(hero1, true)
			DestroyFogModifier(LoadFogModifierHandle(udg_hash, h, 20 + i))
			if (GetLocalPlayer() == GetOwningPlayer(hero1)) then
				ResetToGameCamera(.0)
				PanCameraToTimed(xc, yc, .0)
				ClearSelection()
				SelectUnit(hero1, true)
			end
			i = i + 1
		end
		StartTimerBJ(udg_Timer_Nomera_Volni, false, 75.)
		CreateTimerDialogBJ(udg_Timer_Nomera_Volni, ("Волна № |cFFFF0000" .. (I2S(udg_Nomer_samoi_volni) .. "|r")))
		udg_TimerDialog_Nomera_Volni = bj_lastCreatedTimerDialog
		TimerDialogSetTimeColorBJ(udg_TimerDialog_Nomera_Volni, FourCC('d'), 90., 30., 20.)
		udg_Is_Fast_Wave_Start_On_Off = true
		FlushChildHashtable(udg_hash, h)
		EnableTrigger(gg_trg_Hero_Dead)
	end
	rct = nil
	t = nil
	hero1 = nil
	hero2 = nil
	txt = nil
	ttxt = nil
end

function Trig_Duel_WaitBeforeActions_Actions()
	local rct = gg_rct_Hero_Arena ---@type rect
	local x = GetRectCenterX(rct) ---@type number real
	local y = GetRectCenterY(rct) ---@type number real
	local i = 0 ---@type number integer
	while(true) do
		if (i > 8) then break end
		if (GetLocalPlayer() == Player(i)) then
			ResetToGameCamera(.0)
			PanCameraToTimed(x, y, .0)
		end
		i = i + 1
	end
	ExecuteFunc("Trig_Duel_Round_Actions")
	DestroyTimer(GetExpiredTimer())
	rct = nil
end

function Trig_Start_Duel_Actions()
	local i = 1 ---@type number integer
	local schetchik = 0 ---@type number integer
	local number ---@type number integer
	local random = 0 ---@type number integer
	local maksint ---@type number integer
	local playernumber ---@type number integer
	local g = CreateGroup() ---@type group
	local t = CreateTimer() ---@type timer
	local p1 ---@type player
	local p2 ---@type player
	local emptyplayernumber ---@type number integer
	local rct = gg_rct_Hero_Arena ---@type rect
	local x = GetRectCenterX(rct) ---@type number real
	local y = GetRectCenterY(rct) ---@type number real
	local h = GetHandleId(rct) ---@type number integer
	GroupEnumUnitsInRange(g, .0, .0, 9999999., nil)
	KillSummonsAndIllusions(g)
	while(true) do
		if (i > 9) then break end
		if udg_herounit[i] ~= nil then
			ReviveHero(udg_herounit[i], .0, .0, false)
			ShowUnit(udg_herounit[i], false)
			schetchik = schetchik + 1
			number[schetchik] = schetchik
			playernumber[schetchik] = i
		end
		i = i + 1
	end
	maksint = schetchik
	schetchik = schetchik
	emptyplayernumber = schetchik
	while(true) do
		if (schetchik <= 0) then break end
		random = GetRandomInt(1, maksint)
		if number[random] == random then
			SaveInteger(udg_hash, h, random, playernumber[schetchik])
			bj_lastCreatedFogModifier = CreateFogModifierRect(Player(playernumber[schetchik] - 1), FOG_OF_WAR_VISIBLE, rct, true, false)
			FogModifierStart(bj_lastCreatedFogModifier)
			SaveFogModifierHandle(udg_hash, h, 20 + random, bj_lastCreatedFogModifier)
			if (GetLocalPlayer() == Player(playernumber[schetchik] - 1)) then
				PanCameraToTimed(x, y, .0)
			end
			if random == maksint and (emptyplayernumber ~= 2 and emptyplayernumber ~= 4 and emptyplayernumber ~= 6 and emptyplayernumber ~= 8) then
				if (GetLocalPlayer() == Player(playernumber[schetchik] - 1)) then
					DisplayTextToPlayer(Player(playernumber[schetchik] - 1), .0, .0, "К сожалению, вы не поучавствуете в дуэли, так как вам не хватило противника, но вы все равно получаете |cFFFFFF00" .. I2S($C8 + (udg_Nomer_samoi_volni * FourCC('x'))) .. " опыта|r и |cFFFFFF00" .. I2S(FourCC('d') + (udg_Nomer_samoi_volni * 60)) .. " золота|r")
				end
				AddHeroXP(udg_herounit[playernumber[schetchik]], $C8 + (udg_Nomer_samoi_volni * FourCC('x')), false)
				SetPlayerState(Player(playernumber[schetchik] - 1), PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(Player(playernumber[schetchik] - 1), PLAYER_STATE_RESOURCE_GOLD) + FourCC('d') + (udg_Nomer_samoi_volni * 60))
			end
			schetchik = schetchik - 1
			number[random] = 0
		end
	end
	if (IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS)) then
		DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 10., "Список Дуэлей:")
		SoundForPlayer(GetLocalPlayer(), 5)
	end
	schetchik = 1
	while(true) do
		if (LoadInteger(udg_hash, h, schetchik) == 0 or LoadInteger(udg_hash, h, schetchik + 1) == 0) then break end
		p1 = Player(LoadInteger(udg_hash, h, schetchik) - 1)
		p2 = Player(LoadInteger(udg_hash, h, schetchik + 1) - 1)
		if (IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS)) then
			DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "Дуэль №" .. udg_ColorString[20] .. I2S(R2I((schetchik / 2) + 1)) .. "|r: " .. udg_ColorString[GetPlayerId(p1) + 1] .. GetPlayerName(p1) .. "|r против " .. udg_ColorString[GetPlayerId(p2) + 1] .. GetPlayerName(p2) .. "|r")
		end
		schetchik = schetchik + 2
		p1 = nil
		p2 = nil
	end
	CinematicFadeBJ(1, .0, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	CinematicFadeBJ(0, 3., "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	DisableTrigger(gg_trg_Hero_Dead)
	SaveInteger(udg_hash, h, $A, 1)
	SaveInteger(udg_hash, h, $B, maksint)
	SaveBoolean(udg_hash, h, $C, false)
	SaveBoolean(udg_hash, h, $D, false)
	EnableTrigger(gg_trg_Hero_Death_On_Duel)
	TimerStart(t, 3., false, Trig_Duel_WaitBeforeActions_Actions)
	t = nil
	rct = nil
end

function InitTrig_Start_Duel()
	gg_trg_Start_Duel = CreateTrigger()
	TriggerAddAction(gg_trg_Start_Duel, Trig_Start_Duel_Actions)
end

function Trig_Hero_Death_On_Duel_2secwait_Actions()
	local rct = gg_rct_Hero_Arena ---@type rect
	local h = GetHandleId(rct) ---@type number integer
	local t = GetExpiredTimer() ---@type timer
	local ht = GetHandleId(t) ---@type number integer
	local counterduel = LoadInteger(udg_hash, h, $A) ---@type number integer
	local winner = LoadUnitHandle(udg_hash, ht, 1) ---@type unit
	local defeater = LoadUnitHandle(udg_hash, ht, 2) ---@type unit
	local hero1 = udg_herounit[LoadInteger(udg_hash, h, counterduel)] ---@type unit
	local hero2 = udg_herounit[LoadInteger(udg_hash, h, counterduel + 1)] ---@type unit
	local x = GetRectCenterX(gg_rct_Respawn_Heroes) ---@type number real
	local y = GetRectCenterY(gg_rct_Respawn_Heroes) ---@type number real
	local tdialog = LoadTimerHandle(udg_hash, h, $D) ---@type timer
	local htdialog = GetHandleId(tdialog) ---@type number integer
	local td = LoadTimerDialogHandle(udg_hash, h, $E) ---@type timerdialog
	local g = CreateGroup() ---@type group
	SetUnitInvulnerable(hero1, false)
	SetUnitInvulnerable(hero2, false)
	ReviveHero(defeater, x, y, false)
	SetUnitPosition(winner, x, y)
	ShowUnit(hero1, false)
	ShowUnit(hero2, false)
	SetPlayerAllianceStateBJ(GetOwningPlayer(hero1), GetOwningPlayer(hero2), 3)
	SetPlayerAllianceStateBJ(GetOwningPlayer(hero2), GetOwningPlayer(hero1), 3)
	CinematicFadeBJ(0, 1.5, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
	GroupEnumUnitsInRange(g, GetRectCenterX(gg_rct_Hero_Arena), GetRectCenterY(gg_rct_Hero_Arena), 1500., nil)
	KillSummonsAndIllusions(g)
	counterduel = counterduel + 2
	SaveInteger(udg_hash, h, $A, counterduel)
	ExecuteFunc("Trig_Duel_Round_Actions")
	DestroyTimerDialog(td)
	DestroyTimer(tdialog)
	rct = nil
	DestroyTimer(t)
	t = nil
	FlushChildHashtable(udg_hash, ht)
	winner = nil
	defeater = nil
	hero1 = nil
	hero2 = nil
	tdialog = nil
	td = nil
end

function Trig_Hero_Death_On_Duel_Actions()
	local rct = gg_rct_Hero_Arena ---@type rect
	local h = GetHandleId(rct) ---@type number integer
	local counterduel = LoadInteger(udg_hash, h, $A) ---@type number integer
	local t = CreateTimer() ---@type timer
	local ht = GetHandleId(t) ---@type number integer
	local pw = GetOwningPlayer(GetKillingUnit()) ---@type player
	local winner = udg_herounit[GetPlayerId(pw) + 1] ---@type unit
	local pd = GetOwningPlayer(GetDyingUnit()) ---@type player
	local defeater = udg_herounit[GetPlayerId(pd) + 1] ---@type unit
	local gold ---@type number integer
	local xp ---@type number integer
	if pw ~= nil then
		if LoadBoolean(udg_hash, h, $D) == false then
			SaveBoolean(udg_hash, h, $D, true)
			SetUnitInvulnerable(GetKillingUnit(), true)
			SaveUnitHandle(udg_hash, ht, 1, winner)
			SaveUnitHandle(udg_hash, ht, 2, defeater)
			CinematicFadeBJ(1, 2.5, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 1)
			TimerStart(t, 2.5, false, Trig_Hero_Death_On_Duel_2secwait_Actions)
			if IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS) then
				DisplayTextToPlayer(GetLocalPlayer(), .0, .0, udg_ColorString[GetPlayerId(pw) + 1] .. GetPlayerName(pw) .. "|r Победил в дуэле " .. udg_ColorString[GetPlayerId(pd) + 1] .. GetPlayerName(pd) .. "|r")
			end
			gold = 300 + (udg_Nomer_samoi_volni * FourCC('d'))
			xp = 600 + (udg_Nomer_samoi_volni * $AF)
			if (GetLocalPlayer() == pw) then
				DisplayTextToPlayer(pw, .0, .0, "За победу в дуэле ваш герой получает |cFFFFFF00" .. I2S(xp) .. " опыта|r и |cFFFFFF00" .. I2S(gold) .. " золота|r")
			end
			AddHeroXP(winner, xp, true)
			SetPlayerState(pw, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(pw, PLAYER_STATE_RESOURCE_GOLD) + gold)
			gold = FourCC('d') + (udg_Nomer_samoi_volni * 60)
			xp = $C8 + (udg_Nomer_samoi_volni * FourCC('x'))
			if (GetLocalPlayer() == pd) then
				DisplayTextToPlayer(pw, .0, .0, "За участие в дуэле ваш герой получает |cFFFFFF00" .. I2S(xp) .. " опыта|r и |cFFFFFF00" .. I2S(gold) .. " золота|r")
			end
			AddHeroXP(defeater, xp, false)
			SetPlayerState(pd, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(pd, PLAYER_STATE_RESOURCE_GOLD) + gold)
		end
	end
	rct = nil
	t = nil
	winner = nil
	pw = nil
	defeater = nil
	pd = nil
end

---@return boolean
function Trig_Hero_Death_On_Duel_Conditions()
	return (IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO) and IsUnitIllusion(GetTriggerUnit()) == false and GetPlayerId(GetOwningPlayer(GetKillingUnit())) <= 8 and GetPlayerId(GetOwningPlayer(GetDyingUnit())) <= 8 and LoadInteger(udg_hash, GetHandleId(gg_rct_Hero_Arena), $A) > 0) ~= nil
end

function InitTrig_Hero_Death_On_Duel()
	local index = 0 ---@type number integer
	gg_trg_Hero_Death_On_Duel = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Hero_Death_On_Duel, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Hero_Death_On_Duel, Condition(Trig_Hero_Death_On_Duel_Conditions))
	TriggerAddAction(gg_trg_Hero_Death_On_Duel, Trig_Hero_Death_On_Duel_Actions)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func002001001001002()
	return (GetUnitTypeId(GetFilterUnit()) ~= FourCC('h00U'))
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func002001()
	return (IsUnitGroupDeadBJ(GetUnitsOfPlayerMatching(Player(9), Condition(Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func002001001001002))))
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func003001001001002()
	return (GetUnitTypeId(GetFilterUnit()) ~= FourCC('h00U'))
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func003001()
	return (IsUnitGroupDeadBJ(GetUnitsOfPlayerMatching(Player($A), Condition(Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func003001001001002))))
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func004001001001002001()
	return (GetUnitTypeId(GetFilterUnit()) ~= FourCC('h00U'))
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func004001001001002002()
	return (GetUnitTypeId(GetFilterUnit()) ~= FourCC('h009'))
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func004001001001002()
	return GetBooleanAnd(Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func004001001001002001(), Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func004001001001002002())
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func004001()
	return (IsUnitGroupDeadBJ(GetUnitsOfPlayerMatching(Player($B), Condition(Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func004001001001002))))
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func034Func005Func002C()
	return (udg_Bonus_Gold_ChestGold[(1 + GetPlayerId(GetEnumPlayer()))] == 0)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func034Func005C()
	return (1 == 0) and (UnitHasItemOfTypeBJ(udg_herounit[(1 + GetPlayerId(GetEnumPlayer()))], FourCC('I00V')))
end

function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func034A()
	AddHeroXPSwapped((80 + (FourCC('x') * udg_Nomer_samoi_volni)), udg_herounit[(1 + GetPlayerId(GetEnumPlayer()))], true)
	SetPlayerStateBJ(GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD, (GetPlayerState(GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD) + (FourCC('x') + (80 * udg_Nomer_samoi_volni))))
	SoundForPlayer(GetEnumPlayer(), 2)
	if (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func034Func005C()) then
		if (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func034Func005Func002C()) then
			udg_Bonus_Gold_ChestGold[(1 + GetPlayerId(GetEnumPlayer()))] = 60
			SetPlayerStateBJ(GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD, (GetPlayerState(GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD) + udg_Bonus_Gold_ChestGold[(1 + GetPlayerId(GetEnumPlayer()))]))
		else
			udg_Bonus_Gold_ChestGold[(1 + GetPlayerId(GetEnumPlayer()))] = (udg_Bonus_Gold_ChestGold[(1 + GetPlayerId(GetEnumPlayer()))] + 40)
			SetPlayerStateBJ(GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD, (GetPlayerState(GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD) + udg_Bonus_Gold_ChestGold[(1 + GetPlayerId(GetEnumPlayer()))]))
		end
		CreateTexttag(udg_ColorString[23] .. "+" .. I2S(udg_Bonus_Gold_ChestGold[GetPlayerId(GetEnumPlayer()) + 1]) .. "|r", .031, $FF, GetUnitX(udg_herounit[GetPlayerId(GetEnumPlayer()) + 1]) - 15., GetUnitY(udg_herounit[GetPlayerId(GetEnumPlayer()) + 1]), .0, .0, .04, 4.5)
	end
end

function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func036A()
	udg_Temp_Real[1] = GetUnitStateSwap(UNIT_STATE_LIFE, GetEnumUnit())
	SetUnitMaxState(GetEnumUnit(), UNIT_STATE_MAX_LIFE, $AF)
	SetWidgetLife(GetEnumUnit(), udg_Temp_Real[1])
	SetWidgetLife(GetEnumUnit(), (GetUnitStateSwap(UNIT_STATE_LIFE, GetEnumUnit()) + (130. + (25. * I2R(udg_Nomer_samoi_volni)))))
	SetArmorAbilityLevel(GetEnumUnit(), 4)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001Func001Func001Func003Func001Func003C()
	return (udg_Nomer_samoi_volni == 6) and (udg_Fire_Boss_Turn_On == false)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001Func001Func001Func003Func001C()
	return (udg_Nomer_samoi_volni == 2) or (udg_Nomer_samoi_volni == 7) or (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001Func001Func001Func003Func001Func003C())
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001Func001Func001Func003C()
	return (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001Func001Func001Func003Func001C())
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001Func001Func001C()
	return (udg_Nomer_samoi_volni == 3)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001Func001C()
	return (udg_Nomer_samoi_volni == $B)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001C()
	return (udg_Nomer_samoi_volni == 6)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001C()
	return (udg_Nomer_samoi_volni == 5)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func002C()
	return (udg_Nomer_samoi_volni == 4) or (udg_Nomer_samoi_volni == 8) or (udg_Nomer_samoi_volni == $A)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045C()
	return (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func002C())
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001C()
	return (udg_Integer_kreeps_system_check == 7)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001Func001C()
	return (udg_Integer_kreeps_system_check == 6)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001Func001C()
	return (udg_Integer_kreeps_system_check == 5)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001Func001C()
	return (udg_Integer_kreeps_system_check == 4)
end

---@return boolean
function Trig_Timer_Check_Func002Func001Func001C()
	return (udg_Integer_kreeps_system_check == 3)
end

---@return boolean
function Trig_Timer_Check_Func002Func001C()
	return (udg_Integer_kreeps_system_check == 2)
end

---@return boolean
function Trig_Timer_Check_Func002C()
	return (udg_Integer_kreeps_system_check == 1)
end

function Trig_Timer_Check_Actions()
	udg_Integer_kreeps_system_check = (udg_Integer_kreeps_system_check + 1)
	if (Trig_Timer_Check_Func002C()) then
		udg_number_of_otriad_mobs = (udg_number_of_otriad_mobs + 1)
		StartTimerBJ(udg_Timer_Check_Forkreep_system, false, (udg_Time_Before_Creeps_Spawn * 2.))
	else
		if (Trig_Timer_Check_Func002Func001C()) then
			udg_number_of_otriad_mobs = (udg_number_of_otriad_mobs + 1)
			StartTimerBJ(udg_Timer_Check_Forkreep_system, false, (udg_Time_Before_Creeps_Spawn * 1.))
		else
			if (Trig_Timer_Check_Func002Func001Func001C()) then
				udg_number_of_otriad_mobs = (udg_number_of_otriad_mobs - 1)
				StartTimerBJ(udg_Timer_Check_Forkreep_system, false, (udg_Time_Before_Creeps_Spawn * 2.))
			else
				if (Trig_Timer_Check_Func002Func001Func001Func001C()) then
					udg_number_of_otriad_mobs = (udg_number_of_otriad_mobs + 1)
					StartTimerBJ(udg_Timer_Check_Forkreep_system, false, (udg_Time_Before_Creeps_Spawn * 1.))
				else
					if (Trig_Timer_Check_Func002Func001Func001Func001Func001C()) then
						udg_number_of_otriad_mobs = (udg_number_of_otriad_mobs - 1)
						StartTimerBJ(udg_Timer_Check_Forkreep_system, false, (udg_Time_Before_Creeps_Spawn * 2.))
					else
						if (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001C()) then
							udg_number_of_otriad_mobs = (udg_number_of_otriad_mobs + 2)
							StartTimerBJ(udg_Timer_Check_Forkreep_system, false, (udg_Time_Before_Creeps_Spawn * 1.))
						else
							if (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001C()) then
								PauseTimerBJ(true, udg_TimerMobsAttackBase)
								while(true) do
									if ((Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func002001())) then break end
									TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 1))
								end
								while(true) do
									if ((Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func003001())) then break end
									TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 1))
								end
								while(true) do
									if ((Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func004001())) then break end
									TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 1))
								end
								udg_Temp_Location[1] = GetRectCenter(gg_rct_Portal_3_up_Start)
								PlaySoundAtPointBJ(udg_Game_Sound[$F], 100., udg_Temp_Location[1], .0)
								RemoveLocation(udg_Temp_Location[1])
								udg_Temp_Location[1] = nil
								udg_Temp_Location[1] = GetRectCenter(gg_rct_Portal_2_down_right_Start)
								PlaySoundAtPointBJ(udg_Game_Sound[$F], 100., udg_Temp_Location[1], .0)
								RemoveLocation(udg_Temp_Location[1])
								udg_Temp_Location[1] = nil
								udg_Temp_Location[1] = GetRectCenter(gg_rct_Portal_1_down_left_Start)
								PlaySoundAtPointBJ(udg_Game_Sound[$F], 100., udg_Temp_Location[1], .0)
								RemoveLocation(udg_Temp_Location[1])
								udg_Temp_Location[1] = nil
								SetAttackAbilityLevel(udg_Dammy_Portal[1], 50)
								SetAttackAbilityLevel(udg_Dammy_Portal[2], 50)
								SetAttackAbilityLevel(udg_Dammy_Portal[3], 50)
								DisableTrigger(gg_trg_TeleportStuckedCreeps)
								DisableTrigger(gg_trg_go_mochiytb_portal)
								DisableTrigger(gg_trg_Periodic_Rune_Creation)
								udg_Arrow_Pointer_Guide_Count = CountPlayersInForceBJ(udg_IGRAET)
								bj_forLoopAIndex = 1
								bj_forLoopAIndexEnd = CountPlayersInForceBJ(udg_IGRAET)
								while(true) do
									if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
									CreateNUnitsAtLoc(1, FourCC('h00U'), Player($F), Location(I2R(udg_Arrow_Pointer_Guide_X[bj_forLoopAIndex]), I2R(udg_Arrow_Pointer_Guide_Y[bj_forLoopAIndex])), I2R(udg_Arrow_Pointer_Guide_Angle[bj_forLoopAIndex]))
									udg_Arrow_Pointer_Guide_Unit[bj_forLoopAIndex] = bj_lastCreatedUnit
									AddSpecialEffectTargetUnitBJ("origin", bj_lastCreatedUnit, "Effects\\Arrow - Chapter Browse - Rotated.mdx")
									udg_Arrow_Pointer_Guide_Effect[bj_forLoopAIndex] = bj_lastCreatedEffect
									bj_forLoopAIndex = bj_forLoopAIndex + 1
								end
								bj_forLoopAIndex = 1
								bj_forLoopAIndexEnd = 9
								while(true) do
									if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
									SetWidgetLife(udg_herounit[bj_forLoopAIndex], GetUnitStateSwap(UNIT_STATE_MAX_LIFE, udg_herounit[bj_forLoopAIndex]))
									SetUnitManaBJ(udg_herounit[bj_forLoopAIndex], GetUnitStateSwap(UNIT_STATE_MAX_MANA, udg_herounit[bj_forLoopAIndex]))
									bj_forLoopAIndex = bj_forLoopAIndex + 1
								end
								DisplayTextToForce(bj_FORCE_ALL_PLAYERS, "|cff99ccffВНИМАНИЕ!|r")
								DisplayTextToForce(bj_FORCE_ALL_PLAYERS, ("За успешное прохождение волны герои получают |cFFFFDC00" .. (I2S((FourCC('x') + (80 * udg_Nomer_samoi_volni))) .. (" золота|r и |cFFFFDC00" .. (I2S((80 + (FourCC('x') * udg_Nomer_samoi_volni))) .. " опыта|r!!!")))))
								ForForce(udg_IGRAET, Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func034A)
								DisplayTextToForce(bj_FORCE_ALL_PLAYERS, ("Стражам-заклинателям восстановлено|cff99ccff " .. (I2S(($82 + (25 * udg_Nomer_samoi_volni))) .. " |rздоровья. А их защита и максимальный запас здоровье повышены на |cff99ccff4|r и |cff99ccff175|r соответсвенно.")))
								ForGroupBJ(udg_PortalCastersMagi, Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func036A)
								ShowAndFlushAllPlayerDamage(false)
								udg_Time_Before_Creeps_Spawn = (udg_Time_Before_Creeps_Spawn - 1.)
								udg_number_of_otriad_mobs = 0
								udg_Integer_kreeps_system_check = 0
								udg_Nomer_samoi_volni = (udg_Nomer_samoi_volni + 1)
								SetDoodadAnimationRect(bj_mapInitialPlayableArea, FourCC('D01A'), "Stand", false)
								if (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045C()) then
									TimerToFunction(50., "Дуэли Героев", Trig_Start_Duel_Actions)
								else
									if (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001C()) then
										TimerToFunction(70., "Золотая Поляна", Trig_Nachalo_Eiti_aren_Actions)
									else
										if (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001C()) then
											TimerToFunction(50., "Битва с Боссом", Trig_BossStart_Actions)
										else
											if (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001Func001C()) then
												TimerToFunction(90., "Битва с Боссом", Trig_IceBoss_Actions)
											else
												if (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001Func001Func001C()) then
													TimerToFunction(40., "Битва с Беорнами", Trig_Start_Beorn_Den_Actions)
												else
													StartTimerBJ(udg_Timer_Nomera_Volni, false, 60.)
													if (Trig_Timer_Check_Func002Func001Func001Func001Func001Func001Func001Func045Func001Func001Func001Func001Func003C()) then
														StartTimerBJ(udg_Timer_Hint_About_Fast_Start, false, 15.)
													end
													CreateTimerDialogBJ(udg_Timer_Nomera_Volni, ("Волна № |cFFFF0000" .. (I2S(udg_Nomer_samoi_volni) .. "|r")))
													udg_TimerDialog_Nomera_Volni = bj_lastCreatedTimerDialog
													TimerDialogSetTimeColorBJ(udg_TimerDialog_Nomera_Volni, FourCC('d'), 90., 30., 20.)
													udg_Is_Fast_Wave_Start_On_Off = true
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

function InitTrig_Timer_Check()
	gg_trg_Timer_Check = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_Timer_Check, udg_Timer_Check_Forkreep_system)
	TriggerAddAction(gg_trg_Timer_Check, Trig_Timer_Check_Actions)
end

---@return boolean
function Trig_go_mochiytb_portal_Filter()
	return ((GetOwningPlayer(GetFilterUnit()) == Player(9)) or (GetOwningPlayer(GetFilterUnit()) == Player($A)) or (GetOwningPlayer(GetFilterUnit()) == Player($B)))
end

function Trig_go_mochiytb_portal_Actions()
	local g = CreateGroup() ---@type group
	local g2 ---@type group
	local Picked ---@type unit
	local rct = gg_rct_Portal_baza ---@type rect
	local x = GetRectCenterX(rct) ---@type number real
	local y = GetRectCenterY(rct) ---@type number real
	local order ---@type number integer
	local orderId ---@type number integer
	orderId = $D0004
	if (orderId ~= 0) then
	else
		orderId = UnitId("stop")
		if (orderId ~= 0) then
		end
	end
	g2 = CreateGroup()
	GroupEnumUnitsInRect(g2, rct, nil)
	GroupEnumUnitsInRect(g, bj_mapInitialPlayableArea, Condition(Trig_go_mochiytb_portal_Filter))
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		order = GetUnitCurrentOrder(Picked)
		if (IsUnitInGroup(Picked, g2) == false) then
			if (order == orderId) or order == 0 then
				IssuePointOrderById(Picked, $D000F, x, y)
			end
		end
		GroupRemoveUnit(g, Picked)
	end
	GroupClear(g2)
	DestroyGroup(g2)
	g2 = nil
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	rct = nil
end

function InitTrig_go_mochiytb_portal()
	gg_trg_go_mochiytb_portal = CreateTrigger()
	DisableTrigger(gg_trg_go_mochiytb_portal)
	TriggerRegisterTimerEvent(gg_trg_go_mochiytb_portal, 2., true)
	TriggerAddAction(gg_trg_go_mochiytb_portal, Trig_go_mochiytb_portal_Actions)
end

function Trig_Start_game_Actions()
	RemoveAllGuardPositions(Player($B))
	udg_Nomer_samoi_volni = 1
	udg_Time_Before_Creeps_Spawn = 21.
	StartTimerBJ(udg_Timer_Nomera_Volni, false, 180.)
	CreateTimerDialogBJ(bj_lastStartedTimer, ("Волна № |cFFFF0000" .. (I2S(udg_Nomer_samoi_volni) .. "|r")))
	udg_TimerDialog_Nomera_Volni = bj_lastCreatedTimerDialog
	TimerDialogSetTimeColorBJ(udg_TimerDialog_Nomera_Volni, FourCC('d'), 90., 30., 20.)
	udg_Is_Fast_Wave_Start_On_Off = true
	udg_Wave_Unit_tape[1] = FourCC('u001')
	udg_Wave_Unit_tape[2] = FourCC('u002')
	udg_Wave_Unit_tape[3] = FourCC('u003')
	udg_Wave_Unit_tape[4] = FourCC('n00K')
	udg_Wave_Unit_tape[5] = FourCC('n00H')
	udg_Wave_Unit_tape[6] = FourCC('n00P')
	udg_Wave_Unit_tape[7] = FourCC('u005')
	udg_Wave_Unit_tape[8] = FourCC('n00O')
	udg_Wave_Unit_tape[9] = FourCC('u006')
	udg_Wave_Unit_tape[$A] = FourCC('u004')
	udg_Wave_Unit_tape[$B] = FourCC('u007')
	udg_Wave_Unit_tape[$C] = FourCC('u008')
	udg_Wave_Unit_tape[$D] = FourCC('u00D')
	udg_Wave_Unit_tape[$E] = FourCC('n00R')
	udg_Wave_Unit_tape[$F] = FourCC('n00U')
	udg_Wave_Unit_tape[16] = FourCC('n00V')
	udg_Wave_Unit_tape[17] = FourCC('u009')
	udg_Wave_Unit_tape[18] = FourCC('u00B')
	udg_Wave_Unit_tape[19] = FourCC('u00A')
	udg_Wave_Unit_tape[20] = FourCC('u00C')
	udg_Wave_Unit_tape[21] = FourCC('u00E')
	udg_Wave_Unit_tape[22] = FourCC('n013')
	udg_Wave_Unit_tape[23] = FourCC('n014')
	udg_Wave_Unit_tape[24] = FourCC('n015')
	udg_Wave_Unit_tape[25] = FourCC('n016')
	udg_Wave_Unit_tape[26] = FourCC('n017')
	udg_Wave_Unit_tape[27] = FourCC('n018')
	udg_Wave_Unit_tape[28] = FourCC('n019')
	udg_Wave_Unit_tape[29] = FourCC('n01A')
	udg_Wave_Unit_tape[30] = FourCC('n01B')
	udg_Wave_Unit_tape[31] = FourCC('n01E')
	udg_Wave_Unit_tape[32] = FourCC('n01C')
	udg_Wave_Unit_tape[33] = FourCC('n003')
	udg_Wave_Unit_tape[34] = FourCC('n00D')
	udg_Wave_Unit_tape[35] = FourCC('n008')
	udg_Wave_Unit_tape[36] = FourCC('n009')
	udg_Wave_Unit_tape[37] = FourCC('n00F')
	udg_Wave_Unit_tape[38] = FourCC('n00I')
	udg_Wave_Unit_tape[39] = FourCC('n00G')
	udg_Wave_Unit_tape[40] = FourCC('n00E')
	TriggerExecute(gg_trg_Init_System_Receiving_Experience_for_Creeps)
	TriggerExecute(gg_trg_Init_System_Receiving_Gold_for_Creeps)
end

function InitTrig_Start_game()
	gg_trg_Start_game = CreateTrigger()
	TriggerAddAction(gg_trg_Start_game, Trig_Start_game_Actions)
end

function Trig_StartWave_Func007A()
	SoundForPlayer(GetEnumPlayer(), 3)
end

function Trig_StartWave_Actions()
	DestroyTimerDialog(udg_TimerDialog_Nomera_Volni)
	udg_Is_Fast_Wave_Start_On_Off = false
	udg_Count_Players_Fast_Wave_Start = 0
	bj_forLoopAIndex = 1
	bj_forLoopAIndexEnd = 16
	while(true) do
		if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
		udg_Is_Player_Fast_Wave_Start[bj_forLoopAIndex] = false
		bj_forLoopAIndex = bj_forLoopAIndex + 1
	end
	DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 5., ("Волна №|cFFFF0000" .. (I2S(udg_Nomer_samoi_volni) .. " |rначалась!!!")))
	ForForce(udg_IGRAET, Trig_StartWave_Func007A)
	EnableTrigger(gg_trg_go_mochiytb_portal)
	EnableTrigger(gg_trg_Periodic_Rune_Creation)
	StartTimerBJ(udg_Timer_Check_Forkreep_system, false, .0)
	StartTimerBJ(udg_TimerMobsAttackBase, false, .1)
	EnableTrigger(gg_trg_TeleportStuckedCreeps)
	udg_Wave_Progress_for_MultiBoard = 0
	MultiboardSetItemValueBJ(udg_MultiBoard, 3, (udg_CountPlayers + 3), "|Cfffed3120|r|cFF969696/|r|Cfffed3129|r")
	MultiboardSetTitleText(udg_MultiBoard, ("Последние Стражи" .. (" (Волна " .. (udg_ColorString[20] .. (I2S(udg_Nomer_samoi_volni) .. ("|r из " .. (udg_ColorString[20] .. "10|r)")))))))
	SetDoodadAnimationRect(bj_mapInitialPlayableArea, FourCC('D01A'), "Stand Work", false)
	ShowAndFlushAllPlayerDamage(true)
	udg_Temp_Location[1] = GetRectCenter(gg_rct_Portal_3_up_Start)
	PlaySoundAtPointBJ(udg_Game_Sound[$E], 100., udg_Temp_Location[1], .0)
	RemoveLocation(udg_Temp_Location[1])
	udg_Temp_Location[1] = nil
	udg_Temp_Location[1] = GetRectCenter(gg_rct_Portal_2_down_right_Start)
	PlaySoundAtPointBJ(udg_Game_Sound[$E], 100., udg_Temp_Location[1], .0)
	RemoveLocation(udg_Temp_Location[1])
	udg_Temp_Location[1] = nil
	udg_Temp_Location[1] = GetRectCenter(gg_rct_Portal_1_down_left_Start)
	PlaySoundAtPointBJ(udg_Game_Sound[$E], 100., udg_Temp_Location[1], .0)
	RemoveLocation(udg_Temp_Location[1])
	udg_Temp_Location[1] = nil
	bj_forLoopAIndex = 1
	bj_forLoopAIndexEnd = CountPlayersInForceBJ(udg_IGRAET)
	while(true) do
		if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
		SetUnitAnimation(udg_Rune_On_Base_Dummy[bj_forLoopAIndex], "Stand Alternate")
		bj_forLoopAIndex = bj_forLoopAIndex + 1
	end
	bj_forLoopAIndex = 1
	bj_forLoopAIndexEnd = udg_Arrow_Pointer_Guide_Count
	while(true) do
		if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
		DestroyEffect(udg_Arrow_Pointer_Guide_Effect[bj_forLoopAIndex])
		KillUnit(udg_Arrow_Pointer_Guide_Unit[bj_forLoopAIndex])
		bj_forLoopAIndex = bj_forLoopAIndex + 1
	end
	StartTimerBJ(udg_TimerShowAndFlushAllPlayerDmg, false, 10000.)
end

function InitTrig_StartWave()
	gg_trg_StartWave = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_StartWave, udg_Timer_Nomera_Volni)
	TriggerAddAction(gg_trg_StartWave, Trig_StartWave_Actions)
end

function Trig_MobsAttackBase_Actions()
	local wavenumber = udg_Nomer_samoi_volni ---@type number integer
	local players = CountPlayersInForceBJ(udg_IGRAET) ---@type number integer
	local count = 2 ---@type number integer
	local count2 = 1 ---@type number integer
	local count3 = 3 ---@type number integer
	local mobscount ---@type number integer
	local mobscount2 ---@type number integer
	local mobscount3 ---@type number integer
	local numbergroup = udg_number_of_otriad_mobs ---@type number integer
	local difficultlevel ---@type number integer
	local xc = GetRectCenterX(gg_rct_cast_magi) ---@type number real
	local yc = GetRectCenterY(gg_rct_cast_magi) ---@type number real
	local rct ---@type rect
	local x ---@type number real
	local y ---@type number real
	local x1type ---@type number real
	local y1type ---@type number real
	local x2type ---@type number real
	local y2type ---@type number real
	local x3type ---@type number real
	local y3type ---@type number real
	local angle ---@type number real
	local mob ---@type unit
	local lopa = 1 ---@type number integer
	local lopb = 1 ---@type number integer
	local id1 = udg_Wave_Unit_tape[(4 * wavenumber) - 3] ---@type number integer
	local id2 = udg_Wave_Unit_tape[(4 * wavenumber) - 2] ---@type number integer
	local id3 = udg_Wave_Unit_tape[(4 * wavenumber) - 1] ---@type number integer
	local mobsrandom ---@type number integer
	local multiplayers ---@type number integer
	local dist = .0 ---@type number real
	local perekluchatel = 1 ---@type number integer
	local p ---@type player
	local dammi ---@type unit
	if numbergroup == 3 then
		count = count * 2
		count2 = count2 * 2
	end
	if players >= 1 and players <= 2 then
		multiplayers[1] = 1
	end
	if players >= 3 and players <= 4 then
		multiplayers[1] = 2
	end
	if players >= 5 and players <= 9 then
		multiplayers[1] = 3
	end
	if players >= 2 and players <= 3 then
		multiplayers[2] = 1
	end
	if players >= 4 and players <= 5 then
		multiplayers[2] = 2
	end
	if players >= 6 and players <= 9 then
		multiplayers[2] = 3
	end
	if players >= 7 and players <= 9 then
		multiplayers[3] = (players - 6)
	end
	if (udg_Integer_Creep_On_Line_Spawn[1] ~= 0) or (udg_Integer_Creep_On_Line_Spawn[2] ~= 0) or (udg_Integer_Creep_On_Line_Spawn[3] ~= 0) then
		multiplayers[1] = udg_Integer_Creep_On_Line_Spawn[1]
		multiplayers[2] = udg_Integer_Creep_On_Line_Spawn[2]
		multiplayers[3] = udg_Integer_Creep_On_Line_Spawn[3]
	end
	mobsrandom = 0
	if count * multiplayers[1] > 0 then
		mobscount[1] = (count * multiplayers[1]) + mobsrandom
		mobscount2[1] = (count2 * multiplayers[1]) + mobsrandom
		mobscount3[1] = (count3 * multiplayers[1]) + mobsrandom
		udg_Temp_Location[1] = GetRectCenter(gg_rct_Portal_3_up_Start)
		PlaySoundAtPointBJ(udg_Game_Sound[16], 100., udg_Temp_Location[1], .0)
		RemoveLocation(udg_Temp_Location[1])
		udg_Temp_Location[1] = nil
	end
	if count * multiplayers[2] > 0 then
		mobscount[2] = (count * multiplayers[2]) + mobsrandom
		mobscount2[2] = (count2 * multiplayers[2]) + mobsrandom
		mobscount3[2] = (count3 * multiplayers[2]) + mobsrandom
		udg_Temp_Location[1] = GetRectCenter(gg_rct_Portal_2_down_right_Start)
		PlaySoundAtPointBJ(udg_Game_Sound[16], 100., udg_Temp_Location[1], .0)
		RemoveLocation(udg_Temp_Location[1])
		udg_Temp_Location[1] = nil
	end
	if count * multiplayers[3] > 0 then
		mobscount[3] = (count * multiplayers[3]) + mobsrandom
		mobscount2[3] = (count2 * multiplayers[3]) + mobsrandom
		mobscount3[3] = (count3 * multiplayers[3]) + mobsrandom
		udg_Temp_Location[1] = GetRectCenter(gg_rct_Portal_1_down_left_Start)
		PlaySoundAtPointBJ(udg_Game_Sound[16], 100., udg_Temp_Location[1], .0)
		RemoveLocation(udg_Temp_Location[1])
		udg_Temp_Location[1] = nil
	end
	rct[1] = gg_rct_Portal_3_up_Start
	rct[2] = gg_rct_Portal_2_down_right_Start
	rct[3] = gg_rct_Portal_1_down_left_Start
	x[1] = GetRectCenterX(rct[1])
	x[2] = GetRectCenterX(rct[2])
	x[3] = GetRectCenterX(rct[3])
	y[1] = GetRectCenterY(rct[1])
	y[2] = GetRectCenterY(rct[2])
	y[3] = GetRectCenterY(rct[3])
	angle[1] = -90.
	angle[2] = 123.
	angle[3] = 50.
	x1type[1] = x[1] + 150. * Cos(angle[1] * bj_DEGTORAD)
	x1type[2] = x[2] + 150. * Cos(angle[2] * bj_DEGTORAD)
	x1type[3] = x[3] + 150. * Cos(angle[3] * bj_DEGTORAD)
	y1type[1] = y[1] + 150. * Sin(angle[1] * bj_DEGTORAD)
	y1type[2] = y[2] + 150. * Sin(angle[2] * bj_DEGTORAD)
	y1type[3] = y[3] + 150. * Sin(angle[3] * bj_DEGTORAD)
	if wavenumber == FourCC('d') then
		mobscount[1] = R2I((mobscount[1] * 1.5) + .5)
		mobscount[2] = R2I((mobscount[2] * 1.5) + .5)
		mobscount[3] = R2I((mobscount[3] * 1.5) + .5)
		mobscount2[1] = R2I((mobscount2[1] * 1.5) + .5)
		mobscount2[2] = R2I((mobscount2[2] * 1.5) + .5)
		mobscount2[3] = R2I((mobscount2[3] * 1.5) + .5)
		mobscount3[1] = R2I((mobscount3[1] * 1.5) + .5)
		mobscount3[2] = R2I((mobscount3[2] * 1.5) + .5)
		mobscount3[3] = R2I((mobscount3[3] * 1.5) + .5)
	end
	if wavenumber == FourCC('d') then
		mobscount[1] = R2I((mobscount[1] / 2.) + .5)
		mobscount[2] = R2I((mobscount[2] / 2.) + .5)
		mobscount[3] = R2I((mobscount[3] / 2.) + .5)
		mobscount2[1] = R2I((mobscount2[1] / 2.) + .5)
		mobscount2[2] = R2I((mobscount2[2] / 2.) + .5)
		mobscount2[3] = R2I((mobscount2[3] / 2.) + .5)
		mobscount3[1] = R2I((mobscount3[1] / 2.) + .5)
		mobscount3[2] = R2I((mobscount3[2] / 2.) + .5)
		mobscount3[3] = R2I((mobscount3[3] / 2.) + .5)
	end
	p[1] = Player(9)
	p[2] = Player($A)
	p[3] = Player($B)
	while(true) do
		if (lopa > 3) then break end
		if mobscount[lopa] > 0 then
			dammi = CreateUnit(Player($B), FourCC('h00U'), x1type[lopa], y1type[lopa], .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
			SetUnitScale(dammi, 2., 2., 2.)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Demon\\DarkPortal\\DarkPortalTarget.mdl", dammi, "origin"))
			dammi = nil
			while(true) do
				if (lopb > mobscount[lopa]) then break end
				if perekluchatel == 1 then
					perekluchatel = -1
				else
					if perekluchatel == -1 then
						perekluchatel = 1
					end
				end
				dist = dist + 32.
				mob = CreateUnit(p[lopa], id1, x1type[lopa] + dist * Cos((angle[lopa] + perekluchatel * 90.) * bj_DEGTORAD), y1type[lopa] + dist * Sin((angle[lopa] + perekluchatel * 90.) * bj_DEGTORAD), angle[lopa])
				udg_count = udg_count + 1
				IssuePointOrderById(mob, $D000F, xc, yc)
				SaveBoolean(udg_hash, GetHandleId(mob), 83, true)
				mob = nil
				lopb = lopb + 1
			end
		end
		dist = .0
		lopb = 1
		lopa = lopa + 1
	end
	lopa = 1
	lopb = 1
	if numbergroup >= 1 then
		x2type[1] = x[1] + 60. * Cos(angle[1] * bj_DEGTORAD)
		x2type[2] = x[2] + 60. * Cos(angle[2] * bj_DEGTORAD)
		x2type[3] = x[3] + 60. * Cos(angle[3] * bj_DEGTORAD)
		y2type[1] = y[1] + 60. * Sin(angle[1] * bj_DEGTORAD)
		y2type[2] = y[2] + 60. * Sin(angle[2] * bj_DEGTORAD)
		y2type[3] = y[3] + 60. * Sin(angle[3] * bj_DEGTORAD)
		while(true) do
			if (lopa > 3) then break end
			while(true) do
				if (lopb > mobscount2[lopa]) then break end
				if perekluchatel == 1 then
					perekluchatel = -1
				else
					if perekluchatel == -1 then
						perekluchatel = 1
					end
				end
				dist = dist + 30.
				mob = CreateUnit(p[lopa], id2, x2type[lopa] + dist * Cos((angle[lopa] + perekluchatel * 90.) * bj_DEGTORAD), y2type[lopa] + dist * Sin((angle[lopa] + perekluchatel * 90.) * bj_DEGTORAD), angle[lopa])
				udg_count = udg_count + 1
				SaveBoolean(udg_hash, GetHandleId(mob), 83, true)
				IssuePointOrderById(mob, $D000F, xc, yc)
				mob = nil
				lopb = lopb + 1
			end
			dist = .0
			lopb = 1
			lopa = lopa + 1
		end
		lopa = 1
		lopb = 1
	end
	if numbergroup == 2 then
		while(true) do
			if (lopa > 3) then break end
			while(true) do
				if (lopb > mobscount3[lopa]) then break end
				udg_count = udg_count + 1
				mob = CreateUnit(p[lopa], id3, x[lopa] - 25. * Cos(angle[lopa] * bj_DEGTORAD), y[lopa] - 25. * Sin(angle[lopa] * bj_DEGTORAD), angle[lopa])
				IssuePointOrderById(mob, $D000F, xc, yc)
				SaveBoolean(udg_hash, GetHandleId(mob), 83, true)
				mob = nil
				lopb = lopb + 1
			end
			lopb = 1
			lopa = lopa + 1
		end
		lopa = 1
		lopb = 1
	end
	if numbergroup == 3 then
		if (IsPlayerInForce(GetLocalPlayer(), udg_IGRAET)) then
			DisplayTextToPlayer(GetLocalPlayer(), 0, 0, "|cFFFF0000БОСС!!!|r")
			SoundForPlayer(GetLocalPlayer(), 6)
		end
		while(true) do
			if (lopa > 3) then break end
			if mobscount[lopa] > 0 then
				udg_count = udg_count + 1
				mob = CreateUnit(p[lopa], udg_Wave_Unit_tape[4 * wavenumber], x[lopa] - 25. * Cos(angle[lopa] * bj_DEGTORAD), y[lopa] - 25. * Sin(angle[lopa] * bj_DEGTORAD), angle[lopa])
				IssuePointOrderById(mob, $D000F, xc, yc)
				SaveBoolean(udg_hash, GetHandleId(mob), 83, true)
				mob = nil
			end
			lopa = lopa + 1
		end
		lopa = 1
	end
	p[1] = nil
	p[2] = nil
	p[3] = nil
	mob = nil
	dammi = nil
	udg_Wave_Progress_for_MultiBoard = udg_Wave_Progress_for_MultiBoard + 1
	MultiboardSetItemValueBJ(udg_MultiBoard, 3, (udg_CountPlayers + 3), (("|Cfffed312" .. I2S(udg_Wave_Progress_for_MultiBoard)) .. "|r|cFF969696/|r|Cfffed3129|r"))
	StartTimerBJ(udg_TimerMobsAttackBase, false, udg_Time_Before_Creeps_Spawn)
end

function InitTrig_MobsAttackBase()
	gg_trg_MobsAttackBase = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_MobsAttackBase, udg_TimerMobsAttackBase)
	TriggerAddAction(gg_trg_MobsAttackBase, Trig_MobsAttackBase_Actions)
end

---@return boolean
function Trig_Filter_TeleportStuckedCreeps_Actions()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405 and IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(GetFilterUnit()) ~= FourCC('h00U') and GetUnitTypeId(GetFilterUnit()) ~= FourCC('n01M') and GetUnitTypeId(GetFilterUnit()) ~= FourCC('h00C')) and (GetOwningPlayer(GetFilterUnit()) == Player(9) or GetOwningPlayer(GetFilterUnit()) == Player($A) or GetOwningPlayer(GetFilterUnit()) == Player($B))) ~= nil
end

function Trig_TeleportStuckedCreeps_Actions()
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local h ---@type number integer
	local x ---@type number real
	local y ---@type number real
	local dist1 = .0 ---@type number real
	local dist2 = .0 ---@type number real
	local dist3 = .0 ---@type number real
	local x1 = GetRectCenterX(gg_rct_Portal_3_up_Start) ---@type number real
	local y1 = GetRectCenterY(gg_rct_Portal_3_up_Start) ---@type number real
	local x2 = GetRectCenterX(gg_rct_Portal_2_down_right_Start) ---@type number real
	local y2 = GetRectCenterY(gg_rct_Portal_2_down_right_Start) ---@type number real
	local x3 = GetRectCenterX(gg_rct_Portal_1_down_left_Start) ---@type number real
	local y3 = GetRectCenterY(gg_rct_Portal_1_down_left_Start) ---@type number real
	local xt ---@type number real
	local yt ---@type number real
	local xload = .0 ---@type number real
	local yload = .0 ---@type number real
	local i = 0 ---@type number integer
	GroupEnumUnitsInRect(g, bj_mapInitialPlayableArea, Filter(Trig_Filter_TeleportStuckedCreeps_Actions))
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		h = GetHandleId(Picked)
		x = GetUnitX(Picked)
		y = GetUnitY(Picked)
		i = LoadInteger(udg_hash, h, FourCC('k'))
		i = i + 2
		SaveInteger(udg_hash, h, FourCC('k'), i)
		if i >= 20 and udg_IsGameEnd == false then
			dist1 = SquareRoot(((x - x1) * (x - x1)) + ((y - y1) * (y - y1)))
			dist2 = SquareRoot(((x - x2) * (x - x2)) + ((y - y2) * (y - y2)))
			dist3 = SquareRoot(((x - x3) * (x - x3)) + ((y - y3) * (y - y3)))
			if (dist1 < dist2) and (dist1 < dist3) then
				xt = x1
				yt = y1
			else
				if (dist2 < dist3) then
					xt = x2
					yt = y2
				else
					xt = x3
					yt = y3
				end
			end
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", x, y))
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", xt, yt))
			SetUnitPosition(Picked, xt, yt)
			SaveInteger(udg_hash, h, FourCC('k'), 0)
		end
		xload = LoadReal(udg_hash, h, FourCC('l'))
		yload = LoadReal(udg_hash, h, FourCC('m'))
		dist1 = SquareRoot((x - xload) * (x - xload)) + ((y - yload) * (y - yload))
		if dist1 > 500. then
			SaveReal(udg_hash, h, FourCC('l'), x)
			SaveReal(udg_hash, h, FourCC('m'), y)
			SaveInteger(udg_hash, h, FourCC('k'), 0)
		end
		GroupRemoveUnit(g, Picked)
	end
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
end

function InitTrig_TeleportStuckedCreeps()
	gg_trg_TeleportStuckedCreeps = CreateTrigger()
	DisableTrigger(gg_trg_TeleportStuckedCreeps)
	TriggerRegisterTimerEvent(gg_trg_TeleportStuckedCreeps, 2., true)
	TriggerAddAction(gg_trg_TeleportStuckedCreeps, Trig_TeleportStuckedCreeps_Actions)
end

function Trig_vhodit_v_zony_Actions()
	IssueImmediateOrderById(GetEnteringUnit(), $D0004)
end

---@return boolean
function Trig_vhodit_v_zony_Conditions()
	return GetOwningPlayer(GetEnteringUnit()) == Player($B)
end

function InitTrig_vhodit_v_zony()
	local rectRegion = CreateRegion() ---@type region
	gg_trg_vhodit_v_zony = CreateTrigger()
	RegionAddRect(rectRegion, gg_rct_cast_magi)
	TriggerRegisterEnterRegion(gg_trg_vhodit_v_zony, rectRegion, nil)
	TriggerAddCondition(gg_trg_vhodit_v_zony, Condition(Trig_vhodit_v_zony_Conditions))
	TriggerAddAction(gg_trg_vhodit_v_zony, Trig_vhodit_v_zony_Actions)
end

function Trig_Add_Gold_System_Receiving_Gold_for_Creeps_AddGoldAssists_Actions()
	local p = GetEnumPlayer() ---@type player
	local pnumber = GetPlayerId(p) + 1 ---@type number integer
	local goldassist = udg_Temp_Integer[1] ---@type number integer
	local angle = udg_Temp_Real[3] ---@type number real
	local x = udg_Temp_Real[1] ---@type number real
	local y = udg_Temp_Real[2] ---@type number real
	local txt = CreateTextTag() ---@type texttag
	if CountItemOfTypeOnUnit(udg_herounit[pnumber], FourCC('I00V')) > 0 then
		goldassist = goldassist * 2
	end
	SetTextTagText(txt, udg_ColorString[23] .. "+" .. I2S(goldassist) .. "|r", .023)
	SetTextTagColor(txt, $FF, $FF, $FF, $FF)
	SetTextTagPos(txt, x - 15., y, .0)
	SetTextTagVelocity(txt, .0, .035)
	SetTextTagPermanent(txt, false)
	SetTextTagLifespan(txt, 2.75)
	SetTextTagFadepoint(txt, 2.75)
	if GetLocalPlayer() == p then
		SetTextTagVisibility(txt, true)
	else
		SetTextTagVisibility(txt, false)
	end
	SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + goldassist)
	if pnumber <= 9 then
		udg_MultiBoard_Player_Assist_Count[pnumber] = udg_MultiBoard_Player_Assist_Count[pnumber] + 1
		MultiboardSetItemValueBJ(udg_MultiBoard, 5, udg_PlayerNumberInMB[pnumber], udg_ColorString[24] .. I2S(udg_MultiBoard_Player_Assist_Count[pnumber]) .. "|r")
	end
	txt = nil
	p = nil
end

function Trig_Add_Gold_System_Receiving_Gold_for_Creeps_Actions()
	local creep = GetDyingUnit() ---@type unit
	local killer = GetKillingUnit() ---@type unit
	local p = GetOwningPlayer(killer) ---@type player
	local pnumber = GetPlayerId(p) + 1 ---@type number integer
	local mingold = LoadInteger(udg_hash, GetUnitTypeId(creep), 70) ---@type number integer
	local maxgold = LoadInteger(udg_hash, GetUnitTypeId(creep), 71) ---@type number integer
	local gold = GetRandomInt(mingold, maxgold) ---@type number integer
	local players = LoadForceHandle(udg_hash, GetHandleId(creep), 72) ---@type force
	local angle = .0 ---@type number real
	local countplayers = 0 ---@type number integer
	local assistgold = 0 ---@type number integer
	local x = GetUnitX(creep) ---@type number real
	local y = GetUnitY(creep) ---@type number real
	local normalmob = LoadBoolean(udg_hash, GetHandleId(creep), 83) ---@type boolean
	local txt = CreateTextTag() ---@type texttag
	if gold > 0 and LoadBoolean(udg_hash, GetHandleId(creep), 85) == false then
		if normalmob == false then
			gold = R2I((gold / 2) + .5)
		end
		ForceRemovePlayer(players, p)
		countplayers = CountPlayersInForceBJ(players)
		if countplayers ~= 0 then
			assistgold = R2I((.2 + .05 * countplayers) * gold + .5)
			angle = (360. / countplayers)
		end
		gold = gold - assistgold
		if countplayers ~= 0 then
			assistgold = R2I(assistgold / countplayers)
		end
		if assistgold <= 0 then
			assistgold = 1
		end
		SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + gold)
		SetTextTagText(txt, udg_ColorString[23] .. "+" .. I2S(gold) .. "|r", .025)
		SetTextTagColor(txt, $FF, $FF, $FF, $FF)
		SetTextTagPos(txt, x - 15., y, .0)
		SetTextTagVelocity(txt, .0, .035)
		SetTextTagPermanent(txt, false)
		SetTextTagLifespan(txt, 3.5)
		SetTextTagFadepoint(txt, 3.5 / 2)
		if (GetLocalPlayer() == p) then
			SetTextTagVisibility(txt, true)
		else
			SetTextTagVisibility(txt, false)
		end
		txt = nil
		if pnumber <= 9 then
			udg_MultiBoard_Player_Kills_Count[pnumber] = udg_MultiBoard_Player_Kills_Count[pnumber] + 1
			MultiboardSetItemValueBJ(udg_MultiBoard, 3, udg_PlayerNumberInMB[pnumber], udg_ColorString[20] .. I2S(udg_MultiBoard_Player_Kills_Count[pnumber]) .. "|r")
		end
		udg_Temp_Integer[1] = assistgold
		udg_Temp_Real[1] = x
		udg_Temp_Real[2] = y
		udg_Temp_Real[3] = angle
		udg_Temp_Real[4] = angle
		ForForce(players, Trig_Add_Gold_System_Receiving_Gold_for_Creeps_AddGoldAssists_Actions)
	end
	ForceClear(players)
	DestroyForce(players)
	creep = nil
	killer = nil
	p = nil
	players = nil
end

---@return boolean
function Trig_Add_Gold_System_Receiving_Gold_for_Creeps_Conditions()
	return IsUnitIllusion(GetDyingUnit()) == false and GetUnitAbilityLevel(GetDyingUnit(), FourCC('Aloc')) <= 0 and GetUnitTypeId(GetDyingUnit()) ~= FourCC('h00U') and (GetOwningPlayer(GetDyingUnit()) == Player(9) or GetOwningPlayer(GetDyingUnit()) == Player($A) or GetOwningPlayer(GetDyingUnit()) == Player($B))
end

function InitTrig_Add_Gold_System_Receiving_Gold_for_Creeps()
	local index = 0 ---@type number integer
	gg_trg_Add_Gold_System_Receiving_Gold_for_Creeps = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Add_Gold_System_Receiving_Gold_for_Creeps, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Add_Gold_System_Receiving_Gold_for_Creeps, Condition(Trig_Add_Gold_System_Receiving_Gold_for_Creeps_Conditions))
	TriggerAddAction(gg_trg_Add_Gold_System_Receiving_Gold_for_Creeps, Trig_Add_Gold_System_Receiving_Gold_for_Creeps_Actions)
end

function Trig_Init_System_Receiving_Gold_for_Creeps_Actions()
	local factor = .25 ---@type number real
	local factorwave ---@type number real
	local wavenumber ---@type number integer
	local goldconstmin ---@type number integer
	local goldconstmax ---@type number integer
	local goldmin ---@type number integer
	local goldmax ---@type number integer
	goldconstmin[1] = $A
	goldconstmax[1] = $D
	goldconstmin[2] = 8
	goldconstmax[2] = $C
	goldconstmin[3] = $D
	goldconstmax[3] = 20
	goldconstmin[4] = FourCC('x')
	goldconstmax[4] = $D2
	SaveInteger(udg_hash, FourCC('n01D'), 70, 20)
	SaveInteger(udg_hash, FourCC('n01D'), 71, 24)
	SaveInteger(udg_hash, FourCC('u00F'), 70, 19)
	SaveInteger(udg_hash, FourCC('u00F'), 71, 26)
	SaveInteger(udg_hash, FourCC('u00H'), 70, 54)
	SaveInteger(udg_hash, FourCC('u00H'), 71, 70)
	SaveInteger(udg_hash, FourCC('n011'), 70, 20)
	SaveInteger(udg_hash, FourCC('n011'), 71, 24)
	SaveInteger(udg_hash, FourCC('n00T'), 70, $D)
	SaveInteger(udg_hash, FourCC('n00T'), 71, $F)
	SaveInteger(udg_hash, FourCC('n00X'), 70, 6)
	SaveInteger(udg_hash, FourCC('n00X'), 71, 7)
	SaveInteger(udg_hash, FourCC('n00Z'), 70, $D)
	SaveInteger(udg_hash, FourCC('n00Z'), 71, 19)
	SaveInteger(udg_hash, FourCC('u00G'), 70, 30)
	SaveInteger(udg_hash, FourCC('u00G'), 71, 35)
	SaveInteger(udg_hash, FourCC('n00L'), 70, 30)
	SaveInteger(udg_hash, FourCC('n00L'), 71, 35)
	SaveInteger(udg_hash, FourCC('n00M'), 70, $C)
	SaveInteger(udg_hash, FourCC('n00M'), 71, 16)
	SaveInteger(udg_hash, FourCC('n00N'), 70, 50)
	SaveInteger(udg_hash, FourCC('n00N'), 71, 60)
	SaveInteger(udg_hash, FourCC('n00A'), 70, 40)
	SaveInteger(udg_hash, FourCC('n00A'), 71, 50)
	wavenumber = 1
	factorwave = 1. + (factor * (wavenumber - 1))
	goldmin[1] = R2I((goldconstmin[1] * factorwave) + .5)
	goldmax[1] = R2I((goldconstmax[1] * factorwave) + .5)
	goldmin[2] = R2I((goldconstmin[2] * factorwave) + .5)
	goldmax[2] = R2I((goldconstmax[2] * factorwave) + .5)
	goldmin[3] = R2I((goldconstmin[3] * factorwave) + .5)
	goldmax[3] = R2I((goldconstmax[3] * factorwave) + .5)
	goldmin[4] = R2I((goldconstmin[4] * factorwave) + .5)
	goldmax[4] = R2I((goldconstmax[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[1], 70, goldmin[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[1], 71, goldmax[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[2], 70, goldmin[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[2], 71, goldmax[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[3], 70, goldmin[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[3], 71, goldmax[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[4], 70, goldmin[4])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[4], 71, goldmax[4])
	wavenumber = 2
	factorwave = 1. + (factor * (wavenumber - 1))
	goldmin[1] = R2I((goldconstmin[1] * factorwave) + .5)
	goldmax[1] = R2I((goldconstmax[1] * factorwave) + .5)
	goldmin[2] = R2I((goldconstmin[2] * factorwave) + .5)
	goldmax[2] = R2I((goldconstmax[2] * factorwave) + .5)
	goldmin[3] = R2I((goldconstmin[3] * factorwave) + .5)
	goldmax[3] = R2I((goldconstmax[3] * factorwave) + .5)
	goldmin[4] = R2I((goldconstmin[4] * factorwave) + .5)
	goldmax[4] = R2I((goldconstmax[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[5], 70, goldmin[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[5], 71, goldmax[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[6], 70, goldmin[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[6], 71, goldmax[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[7], 70, goldmin[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[7], 71, goldmax[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[8], 70, goldmin[4])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[8], 71, goldmax[4])
	wavenumber = 3
	factorwave = 1. + (factor * (wavenumber - 1))
	goldmin[1] = R2I((goldconstmin[1] * factorwave) + .5)
	goldmax[1] = R2I((goldconstmax[1] * factorwave) + .5)
	goldmin[2] = R2I((goldconstmin[2] * factorwave) + .5)
	goldmax[2] = R2I((goldconstmax[2] * factorwave) + .5)
	goldmin[3] = R2I((goldconstmin[3] * factorwave) + .5)
	goldmax[3] = R2I((goldconstmax[3] * factorwave) + .5)
	goldmin[4] = R2I((goldconstmin[4] * factorwave) + .5)
	goldmax[4] = R2I((goldconstmax[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[9], 70, goldmin[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[9], 71, goldmax[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$A], 70, goldmin[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$A], 71, goldmax[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$B], 70, goldmin[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$B], 71, goldmax[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$C], 70, goldmin[4])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$C], 71, goldmax[4])
	wavenumber = 4
	factorwave = 1. + (factor * (wavenumber - 1))
	goldmin[1] = R2I((goldconstmin[1] * factorwave) + .5)
	goldmax[1] = R2I((goldconstmax[1] * factorwave) + .5)
	goldmin[2] = R2I((goldconstmin[2] * factorwave) + .5)
	goldmax[2] = R2I((goldconstmax[2] * factorwave) + .5)
	goldmin[3] = R2I((goldconstmin[3] * factorwave) + .5)
	goldmax[3] = R2I((goldconstmax[3] * factorwave) + .5)
	goldmin[4] = R2I((goldconstmin[4] * factorwave) + .5)
	goldmax[4] = R2I((goldconstmax[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$D], 70, goldmin[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$D], 71, goldmax[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$E], 70, goldmin[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$E], 71, goldmax[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$F], 70, goldmin[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$F], 71, goldmax[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[16], 70, goldmin[4])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[16], 71, goldmax[4])
	wavenumber = 5
	factorwave = 1. + (factor * (wavenumber - 1))
	goldmin[1] = R2I((goldconstmin[1] * factorwave) + .5)
	goldmax[1] = R2I((goldconstmax[1] * factorwave) + .5)
	goldmin[2] = R2I((goldconstmin[2] * factorwave) + .5)
	goldmax[2] = R2I((goldconstmax[2] * factorwave) + .5)
	goldmin[3] = R2I((goldconstmin[3] * factorwave) + .5)
	goldmax[3] = R2I((goldconstmax[3] * factorwave) + .5)
	goldmin[4] = R2I((goldconstmin[4] * factorwave) + .5)
	goldmax[4] = R2I((goldconstmax[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[17], 70, goldmin[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[17], 71, goldmax[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[18], 70, goldmin[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[18], 71, goldmax[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[19], 70, goldmin[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[19], 71, goldmax[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[20], 70, goldmin[4])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[20], 71, goldmax[4])
	wavenumber = 6
	factorwave = 1. + (factor * (wavenumber - 1))
	goldmin[1] = R2I((goldconstmin[1] * factorwave) + .5)
	goldmax[1] = R2I((goldconstmax[1] * factorwave) + .5)
	goldmin[2] = R2I((goldconstmin[2] * factorwave) + .5)
	goldmax[2] = R2I((goldconstmax[2] * factorwave) + .5)
	goldmin[3] = R2I((goldconstmin[3] * factorwave) + .5)
	goldmax[3] = R2I((goldconstmax[3] * factorwave) + .5)
	goldmin[4] = R2I((goldconstmin[4] * factorwave) + .5)
	goldmax[4] = R2I((goldconstmax[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[21], 70, goldmin[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[21], 71, goldmax[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[22], 70, goldmin[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[22], 71, goldmax[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[23], 70, goldmin[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[23], 71, goldmax[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[24], 70, goldmin[4])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[24], 71, goldmax[4])
	wavenumber = 7
	factorwave = 1. + (factor * (wavenumber - 1))
	goldmin[1] = R2I((goldconstmin[1] * factorwave) + .5)
	goldmax[1] = R2I((goldconstmax[1] * factorwave) + .5)
	goldmin[2] = R2I((goldconstmin[2] * factorwave) + .5)
	goldmax[2] = R2I((goldconstmax[2] * factorwave) + .5)
	goldmin[3] = R2I((goldconstmin[3] * factorwave) + .5)
	goldmax[3] = R2I((goldconstmax[3] * factorwave) + .5)
	goldmin[4] = R2I((goldconstmin[4] * factorwave) + .5)
	goldmax[4] = R2I((goldconstmax[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[25], 70, goldmin[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[25], 71, goldmax[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[26], 70, goldmin[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[26], 71, goldmax[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[27], 70, goldmin[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[27], 71, goldmax[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[28], 70, goldmin[4])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[28], 71, goldmax[4])
	wavenumber = 8
	factorwave = 1. + (factor * (wavenumber - 1))
	goldmin[1] = R2I((goldconstmin[1] * factorwave) + .5)
	goldmax[1] = R2I((goldconstmax[1] * factorwave) + .5)
	goldmin[2] = R2I((goldconstmin[2] * factorwave) + .5)
	goldmax[2] = R2I((goldconstmax[2] * factorwave) + .5)
	goldmin[3] = R2I((goldconstmin[3] * factorwave) + .5)
	goldmax[3] = R2I((goldconstmax[3] * factorwave) + .5)
	goldmin[4] = R2I((goldconstmin[4] * factorwave) + .5)
	goldmax[4] = R2I((goldconstmax[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[29], 70, goldmin[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[29], 71, goldmax[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[30], 70, goldmin[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[30], 71, goldmax[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[31], 70, goldmin[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[31], 71, goldmax[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[32], 70, goldmin[4])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[32], 71, goldmax[4])
	wavenumber = 9
	factorwave = 1. + (factor * (wavenumber - 1))
	goldmin[1] = R2I((goldconstmin[1] * factorwave) + .5)
	goldmax[1] = R2I((goldconstmax[1] * factorwave) + .5)
	goldmin[2] = R2I((goldconstmin[2] * factorwave) + .5)
	goldmax[2] = R2I((goldconstmax[2] * factorwave) + .5)
	goldmin[3] = R2I((goldconstmin[3] * factorwave) + .5)
	goldmax[3] = R2I((goldconstmax[3] * factorwave) + .5)
	goldmin[4] = R2I((goldconstmin[4] * factorwave) + .5)
	goldmax[4] = R2I((goldconstmax[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[33], 70, goldmin[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[33], 71, goldmax[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[34], 70, goldmin[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[34], 71, goldmax[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[35], 70, goldmin[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[35], 71, goldmax[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[36], 70, goldmin[4])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[36], 71, goldmax[4])
	wavenumber = $A
	factorwave = 1. + (factor * (wavenumber - 1))
	goldmin[1] = R2I((goldconstmin[1] * factorwave) + .5)
	goldmax[1] = R2I((goldconstmax[1] * factorwave) + .5)
	goldmin[2] = R2I((goldconstmin[2] * factorwave) + .5)
	goldmax[2] = R2I((goldconstmax[2] * factorwave) + .5)
	goldmin[3] = R2I((goldconstmin[3] * factorwave) + .5)
	goldmax[3] = R2I((goldconstmax[3] * factorwave) + .5)
	goldmin[4] = R2I((goldconstmin[4] * factorwave) + .5)
	goldmax[4] = R2I((goldconstmax[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[37], 70, goldmin[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[37], 71, goldmax[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[38], 70, goldmin[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[38], 71, goldmax[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[39], 70, goldmin[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[39], 71, goldmax[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[40], 70, goldmin[4])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[40], 71, goldmax[4])
end

function InitTrig_Init_System_Receiving_Gold_for_Creeps()
	gg_trg_Init_System_Receiving_Gold_for_Creeps = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Init_System_Receiving_Gold_for_Creeps, 3., false)
	TriggerAddAction(gg_trg_Init_System_Receiving_Gold_for_Creeps, Trig_Init_System_Receiving_Gold_for_Creeps_Actions)
end

function Trig_Init_System_Receiving_Experience_for_Creeps_Actions()
	local factor = .75 ---@type number real
	local factorwave ---@type number real
	local wavenumber ---@type number integer
	local xpconst ---@type number integer
	local xp ---@type number integer
	xpconst[1] = 8
	xpconst[2] = 7
	xpconst[3] = $D
	xpconst[4] = $87
	SaveInteger(udg_hash, FourCC('n01D'), 82, 50)
	SaveInteger(udg_hash, FourCC('u00F'), 82, 35)
	SaveInteger(udg_hash, FourCC('u00H'), 82, FourCC('h'))
	SaveInteger(udg_hash, FourCC('n011'), 82, 30)
	SaveInteger(udg_hash, FourCC('n00T'), 82, 24)
	SaveInteger(udg_hash, FourCC('n00X'), 82, 8)
	SaveInteger(udg_hash, FourCC('n00Z'), 82, 40)
	SaveInteger(udg_hash, FourCC('u00G'), 82, 52)
	SaveInteger(udg_hash, FourCC('n00A'), 82, 70)
	wavenumber = 1
	factorwave = 1. + (factor * (wavenumber - 1))
	xp[1] = R2I((xpconst[1] * factorwave) + .5)
	xp[2] = R2I((xpconst[2] * factorwave) + .5)
	xp[3] = R2I((xpconst[3] * factorwave) + .5)
	xp[4] = R2I((xpconst[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[1], 82, xp[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[2], 82, xp[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[3], 82, xp[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[4], 82, xp[4])
	wavenumber = 2
	factorwave = 1. + (factor * (wavenumber - 1))
	xp[1] = R2I((xpconst[1] * factorwave) + .5)
	xp[2] = R2I((xpconst[2] * factorwave) + .5)
	xp[3] = R2I((xpconst[3] * factorwave) + .5)
	xp[4] = R2I((xpconst[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[5], 82, xp[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[6], 82, xp[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[7], 82, xp[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[8], 82, xp[4])
	wavenumber = 3
	factorwave = 1. + (factor * (wavenumber - 1))
	xp[1] = R2I((xpconst[1] * factorwave) + .5)
	xp[2] = R2I((xpconst[2] * factorwave) + .5)
	xp[3] = R2I((xpconst[3] * factorwave) + .5)
	xp[4] = R2I((xpconst[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[9], 82, xp[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$A], 82, xp[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$B], 82, xp[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$C], 82, xp[4])
	wavenumber = 4
	factorwave = 1. + (factor * (wavenumber - 1))
	xp[1] = R2I((xpconst[1] * factorwave) + .5)
	xp[2] = R2I((xpconst[2] * factorwave) + .5)
	xp[3] = R2I((xpconst[3] * factorwave) + .5)
	xp[4] = R2I((xpconst[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$D], 82, xp[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$E], 82, xp[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[$F], 82, xp[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[16], 82, xp[4])
	wavenumber = 5
	factorwave = 1. + (factor * (wavenumber - 1))
	xp[1] = R2I((xpconst[1] * factorwave) + .5)
	xp[2] = R2I((xpconst[2] * factorwave) + .5)
	xp[3] = R2I((xpconst[3] * factorwave) + .5)
	xp[4] = R2I((xpconst[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[17], 82, xp[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[18], 82, xp[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[19], 82, xp[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[20], 82, xp[4])
	wavenumber = 6
	factorwave = 1. + (factor * (wavenumber - 1))
	xp[1] = R2I((xpconst[1] * factorwave) + .5)
	xp[2] = R2I((xpconst[2] * factorwave) + .5)
	xp[3] = R2I((xpconst[3] * factorwave) + .5)
	xp[4] = R2I((xpconst[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[21], 82, xp[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[22], 82, xp[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[23], 82, xp[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[24], 82, xp[4])
	wavenumber = 7
	factorwave = 1. + (factor * (wavenumber - 1))
	xp[1] = R2I((xpconst[1] * factorwave) + .5)
	xp[2] = R2I((xpconst[2] * factorwave) + .5)
	xp[3] = R2I((xpconst[3] * factorwave) + .5)
	xp[4] = R2I((xpconst[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[25], 82, xp[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[26], 82, xp[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[27], 82, xp[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[28], 82, xp[4])
	wavenumber = 8
	factorwave = 1. + (factor * (wavenumber - 1))
	xp[1] = R2I((xpconst[1] * factorwave) + .5)
	xp[2] = R2I((xpconst[2] * factorwave) + .5)
	xp[3] = R2I((xpconst[3] * factorwave) + .5)
	xp[4] = R2I((xpconst[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[29], 82, xp[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[30], 82, xp[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[31], 82, xp[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[32], 82, xp[4])
	wavenumber = 9
	factorwave = 1. + (factor * (wavenumber - 1))
	xp[1] = R2I((xpconst[1] * factorwave) + .5)
	xp[2] = R2I((xpconst[2] * factorwave) + .5)
	xp[3] = R2I((xpconst[3] * factorwave) + .5)
	xp[4] = R2I((xpconst[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[33], 82, xp[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[34], 82, xp[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[35], 82, xp[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[36], 82, xp[4])
	wavenumber = $A
	factorwave = 1. + (factor * (wavenumber - 1))
	xp[1] = R2I((xpconst[1] * factorwave) + .5)
	xp[2] = R2I((xpconst[2] * factorwave) + .5)
	xp[3] = R2I((xpconst[3] * factorwave) + .5)
	xp[4] = R2I((xpconst[4] * factorwave) + .5)
	SaveInteger(udg_hash, udg_Wave_Unit_tape[37], 82, xp[1])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[38], 82, xp[2])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[39], 82, xp[3])
	SaveInteger(udg_hash, udg_Wave_Unit_tape[40], 82, xp[4])
end

function InitTrig_Init_System_Receiving_Experience_for_Creeps()
	gg_trg_Init_System_Receiving_Experience_for_Creeps = CreateTrigger()
	TriggerAddAction(gg_trg_Init_System_Receiving_Experience_for_Creeps, Trig_Init_System_Receiving_Experience_for_Creeps_Actions)
end

---@return boolean
function Trig_Add_Experience_System_Receiving_Experience_for_Creeps_Condition_Actions()
	return (GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405 and IsUnitIllusion(GetFilterUnit()) == false and IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) and IsUnitEnemy(GetFilterUnit(), udg_Temp_Player[1])) ~= nil
end

function Trig_Add_Experience_System_Receiving_Experience_for_Creeps_Actions()
	local creep = GetDyingUnit() ---@type unit
	local xp = LoadInteger(udg_hash, GetUnitTypeId(creep), 82) ---@type number integer
	local g = CreateGroup() ---@type group
	local count ---@type number integer
	local Picked ---@type unit
	local normalmob = LoadBoolean(udg_hash, GetHandleId(creep), 83) ---@type boolean
	if xp > 0 then
		udg_Temp_Player[1] = GetOwningPlayer(creep)
		GroupEnumUnitsInRange(g, GetUnitX(creep), GetUnitY(creep), 1200., Filter(Trig_Add_Experience_System_Receiving_Experience_for_Creeps_Condition_Actions))
		count = CountUnitsInGroup(g)
		if normalmob == false then
			xp = R2I((xp / 2) + .5)
		end
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			AddHeroXP(Picked, R2I((xp / count) + .5), true)
			GroupRemoveUnit(g, Picked)
		end
	end
	creep = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
end

---@return boolean
function Trig_Add_Experience_System_Receiving_Experience_for_Creeps_Conditions()
	return IsUnitIllusion(GetDyingUnit()) == false and GetUnitAbilityLevel(GetDyingUnit(), FourCC('Aloc')) <= 0 and GetUnitTypeId(GetDyingUnit()) ~= FourCC('h00U') and (GetOwningPlayer(GetDyingUnit()) == Player(9) or GetOwningPlayer(GetDyingUnit()) == Player($A) or GetOwningPlayer(GetDyingUnit()) == Player($B))
end

function InitTrig_Add_Experience_System_Receiving_Experience_for_Creeps()
	local index = 0 ---@type number integer
	gg_trg_Add_Experience_System_Receiving_Experience_for_Creeps = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Add_Experience_System_Receiving_Experience_for_Creeps, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Add_Experience_System_Receiving_Experience_for_Creeps, Condition(Trig_Add_Experience_System_Receiving_Experience_for_Creeps_Conditions))
	TriggerAddAction(gg_trg_Add_Experience_System_Receiving_Experience_for_Creeps, Trig_Add_Experience_System_Receiving_Experience_for_Creeps_Actions)
end

function Trig_Init_Potion_System_Actions()
	udg_Potion_Effect[1] = "war3mapImported\\Item_Potion_TinyGreen.mdl"
	udg_Potion_Type[1] = "life"
	udg_Potion_Heal_Amount[1] = 80
	udg_Potion_Size[1] = 1.2
	udg_Potion_Effect[2] = "war3mapImported\\Item_Potion_TinyBlue.mdl"
	udg_Potion_Type[2] = "mana"
	udg_Potion_Heal_Amount[2] = 55
	udg_Potion_Size[2] = 1.2
	udg_Potion_Effect[3] = "war3mapImported\\Item_Potion_SmallGreen.mdl"
	udg_Potion_Type[3] = "life"
	udg_Potion_Heal_Amount[3] = $A0
	udg_Potion_Size[3] = 1.35
	udg_Potion_Effect[4] = "war3mapImported\\Item_Potion_SmallBlue.mdl"
	udg_Potion_Type[4] = "mana"
	udg_Potion_Heal_Amount[4] = FourCC('x')
	udg_Potion_Size[4] = 1.35
	udg_Potion_Effect[5] = "war3mapImported\\Item_Potion_BigGreen.mdl"
	udg_Potion_Type[5] = "life"
	udg_Potion_Heal_Amount[5] = 305
	udg_Potion_Size[5] = 1.4
	udg_Potion_Effect[6] = "war3mapImported\\Item_Potion_BigBlue.mdl"
	udg_Potion_Type[6] = "mana"
	udg_Potion_Heal_Amount[6] = $DC
	udg_Potion_Size[6] = 1.4
	udg_Potion_Effect[7] = "war3mapImported\\Item_Potion_LargeGreen.mdl"
	udg_Potion_Type[7] = "life"
	udg_Potion_Heal_Amount[7] = 555
	udg_Potion_Size[7] = 1.55
	udg_Potion_Effect[8] = "war3mapImported\\Item_Potion_LargeBlue.mdl"
	udg_Potion_Type[8] = "mana"
	udg_Potion_Heal_Amount[8] = 405
	udg_Potion_Size[8] = 1.55
end

function InitTrig_Init_Potion_System()
	gg_trg_Init_Potion_System = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Init_Potion_System, 1., false)
	TriggerAddAction(gg_trg_Init_Potion_System, Trig_Init_Potion_System_Actions)
end

---@return boolean
function Trig_Mob_Dead_Create_Potion_Conditions()
	return ((GetOwningPlayer(GetDyingUnit()) == Player($B) or GetOwningPlayer(GetDyingUnit()) == Player($A) or GetOwningPlayer(GetDyingUnit()) == Player(9)) and GetRandomInt(1, FourCC('d')) <= 8 and IsUnitType(GetDyingUnit(), UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(GetDyingUnit()) ~= FourCC('h00U') and IsUnitIllusion(GetDyingUnit()) == false and IsUnitType(GetDyingUnit(), UNIT_TYPE_SUMMONED) == false) ~= nil
end

function Trig_Mob_Dead_Create_Potion_Actions()
	local minint ---@type number integer
	local maxint ---@type number integer
	local numberwave = udg_Nomer_samoi_volni ---@type number integer
	if numberwave >= 1 and numberwave <= 3 then
		minint = 1
	end
	if numberwave >= 4 and numberwave <= 6 then
		minint = 3
	end
	if numberwave >= 7 and numberwave <= 9 then
		minint = 5
	end
	if numberwave >= $A then
		minint = 7
	end
	if numberwave == 1 then
		maxint = 2
	end
	if numberwave >= 2 and numberwave <= 4 then
		maxint = 4
	end
	if numberwave >= 5 and numberwave <= 7 then
		maxint = 6
	end
	if numberwave >= 8 then
		maxint = 8
	end
	CreatePotion(GetUnitX(GetDyingUnit()), GetUnitY(GetDyingUnit()), minint, maxint)
end

function InitTrig_Mob_Dead_Create_Potion()
	local index = 0 ---@type number integer
	gg_trg_Mob_Dead_Create_Potion = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Mob_Dead_Create_Potion, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Mob_Dead_Create_Potion, Condition(Trig_Mob_Dead_Create_Potion_Conditions))
	TriggerAddAction(gg_trg_Mob_Dead_Create_Potion, Trig_Mob_Dead_Create_Potion_Actions)
end

---@return boolean
function Trig_Check_Potion_Picked_Up_Conditions()
	return (GetUnitState(GetEnteringUnit(), UNIT_STATE_LIFE) > .405 and IsUnitType(GetEnteringUnit(), UNIT_TYPE_HERO) and GetPlayerId(GetOwningPlayer(GetEnteringUnit())) <= 8) ~= nil
end

function Trig_Check_Potion_Picked_Up_Actions()
	local reg = GetTriggeringRegion() ---@type region
	local hero = GetEnteringUnit() ---@type unit
	local dammi = LoadUnitHandle(udg_hash, GetHandleId(reg), 1) ---@type unit
	local rct = LoadRectHandle(udg_hash, GetHandleId(reg), 2) ---@type rect
	local potionindex = LoadInteger(udg_hash, GetHandleId(dammi), 1) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, GetHandleId(dammi), 2) ---@type effect
	local healtype = udg_Potion_Type[potionindex] ---@type string
	local heal = udg_Potion_Heal_Amount[potionindex] ---@type number integer
	local x = GetUnitX(hero) ---@type number real
	local y = GetUnitY(hero) ---@type number real
	local xp = GetUnitState(hero, UNIT_STATE_LIFE) ---@type number real
	local xpmax = GetUnitState(hero, UNIT_STATE_MAX_LIFE) ---@type number real
	local mp = GetUnitState(hero, UNIT_STATE_MANA) ---@type number real
	local mpmax = GetUnitState(hero, UNIT_STATE_MAX_MANA) ---@type number real
	local txt ---@type texttag
	local vel = .0221875 ---@type number real
	local angle = 45. + GetRandomReal(.0, 90.) ---@type number real
	local xvel = vel * Cos(angle * bj_DEGTORAD) ---@type number real
	local yvel = vel * Sin(angle * bj_DEGTORAD) ---@type number real
	local hil = false ---@type boolean
	if healtype == "life" and (xp < xpmax) then
		SetUnitState(hero, UNIT_STATE_LIFE, xp + heal)
		DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Heal\\HealTarget.mdl", hero, "origin"), 2.)
		txt = CreateTextTag()
		SetTextTagText(txt, "|cFF00DC00+" .. I2S(heal) .. "|r", .03)
		hil = true
	end
	if healtype == "mana" and (mp < mpmax) then
		SetUnitState(hero, UNIT_STATE_MANA, mp + heal)
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl", hero, "origin"))
		txt = CreateTextTag()
		SetTextTagText(txt, "|c000347FC+" .. I2S(heal) .. "|r", .03)
		hil = true
	end
	if hil then
		KillUnit(dammi)
		DestroyEffect(ef)
		SetTextTagPos(txt, x, y, .0)
		SetTextTagColor(txt, 0, 0, 0, $C8)
		SetTextTagVelocity(txt, xvel, yvel)
		SetTextTagLifespan(txt, 3.)
		SetTextTagFadepoint(txt, .0)
		SetTextTagPermanent(txt, false)
		FlushChildHashtable(udg_hash, GetHandleId(reg))
		FlushChildHashtable(udg_hash, GetHandleId(dammi))
		RemoveRect(rct)
		RemoveRegion(reg)
	end
	reg = nil
	hero = nil
	dammi = nil
	rct = nil
	ef = nil
	txt = nil
end

function InitTrig_Check_Potion_Picked_Up()
	gg_trg_Check_Potion_Picked_Up = CreateTrigger()
	TriggerAddCondition(gg_trg_Check_Potion_Picked_Up, Condition(Trig_Check_Potion_Picked_Up_Conditions))
	TriggerAddAction(gg_trg_Check_Potion_Picked_Up, Trig_Check_Potion_Picked_Up_Actions)
end

function Trig_InitSystem_ForGroup()
	SetPlayerAbilityAvailable(GetEnumPlayer(), FourCC('A66B'), false)
end

function Trig_InitSystem_Actions()
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	ForForce(bj_FORCE_ALL_PLAYERS, Trig_InitSystem_ForGroup)
	GroupEnumUnitsInRect(g, bj_mapInitialPlayableArea, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitType(Picked, UNIT_TYPE_STRUCTURE) ~= true then
			GroupAddUnit(udg_DamageGroup, Picked)
			UnitAddAbility(Picked, FourCC('A66B'))
			UnitMakeAbilityPermanent(Picked, true, FourCC('A66B'))
			UnitMakeAbilityPermanent(Picked, true, FourCC('A666'))
			TriggerRegisterUnitEvent(gg_trg_AddDamage, Picked, EVENT_UNIT_DAMAGED)
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	DestroyGroup(g)
	g = nil
end

function InitTrig_InitSystem()
	gg_trg_InitSystem = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_InitSystem, .01, false)
	TriggerAddAction(gg_trg_InitSystem, Trig_InitSystem_Actions)
end

---@return boolean
function Trig_EnterUnit_Conditions()
	return IsUnitInGroup(GetEnteringUnit(), udg_DamageGroup) == false
end

function Trig_EnterUnit_Actions()
	local u = GetEnteringUnit() ---@type unit
	if GetUnitTypeId(u) ~= FourCC('h00U') and IsUnitType(u, UNIT_TYPE_STRUCTURE) ~= true and GetUnitTypeId(u) ~= FourCC('h00C') then
		GroupAddUnit(udg_DamageGroup, u)
		UnitAddAbility(u, FourCC('A66B'))
		UnitMakeAbilityPermanent(u, true, FourCC('A66B'))
		UnitMakeAbilityPermanent(u, true, FourCC('A666'))
		TriggerRegisterUnitEvent(gg_trg_AddDamage, u, EVENT_UNIT_DAMAGED)
	end
	u = nil
end

function InitTrig_EnterUnit()
	local rectRegion = CreateRegion() ---@type region
	gg_trg_EnterUnit = CreateTrigger()
	RegionAddRect(rectRegion, GetWorldBounds())
	TriggerRegisterEnterRegion(gg_trg_EnterUnit, rectRegion, nil)
	TriggerAddCondition(gg_trg_EnterUnit, Condition(Trig_EnterUnit_Conditions))
	TriggerAddAction(gg_trg_EnterUnit, Trig_EnterUnit_Actions)
end

function Trig_Remove_Bonus_Marshal_Armor_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	SetUnitLifeAndManaRegeneration(damaged, "life", -1)
	SetArmorAbilityLevel(damaged, -1)
	SaveInteger(udg_hash, GetHandleId(damaged), $99, LoadInteger(udg_hash, GetHandleId(damaged), $99) - 1)
	t = CreateTimer()
	h = GetHandleId(t)
	SaveUnitHandle(udg_hash, h, 1, damaged)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	damaged = nil
end

function Trig_Remove_ASBonus_Double_Attack_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damager = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	DestroyEffect(LoadEffectHandle(udg_hash, h, 2))
	DestroyEffect(LoadEffectHandle(udg_hash, h, 3))
	UnitRemoveAbility(damager, FourCC('A0P4'))
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	damager = nil
end

function Trig_Remove_Lightning_From_Staff_Of_Lightning_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local Picked = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local wait = LoadInteger(udg_hash, h, 2) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 3) ---@type unit
	local l = LoadLightningHandle(udg_hash, h, 4) ---@type lightning
	local locr = GetUnitLoc(damaged) ---@type location
	local locd = GetUnitLoc(Picked) ---@type location
	wait = wait - 1
	SaveInteger(udg_hash, h, 2, wait)
	MoveLightningEx(l, true, GetUnitX(damaged), GetUnitY(damaged), GetUnitFlyHeight(damaged) + 25. + GetLocationZ(locr), GetUnitX(Picked), GetUnitY(Picked), GetUnitFlyHeight(Picked) + 25. + GetLocationZ(locd))
	if wait <= 0 then
		DestroyLightning(l)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	Picked = nil
	damaged = nil
	l = nil
	RemoveLocation(locr)
	RemoveLocation(locd)
	locr = nil
	locd = nil
end

function Trig_Beorn_Rage_Remove_Effects_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local ef ---@type effect
	ef = LoadEffectHandle(udg_hash, h, 2)
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 3)
	DestroyEffect(ef)
	ef = nil
	SaveBoolean(udg_hash, GetHandleId(damaged), $84, false)
	SetAttackSpeedAbilityLevel(damaged, -50)
	SetAttackAbilityLevel(damaged, -$A)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	damaged = nil
	t = nil
end

function Trig_Blood_Bow_Remove_Effects_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local attackspeed = LoadInteger(udg_hash, h, 1) ---@type number integer
	local damager = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local ef = LoadEffectHandle(udg_hash, h, 3) ---@type effect
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 4)
	DestroyEffect(ef)
	ef = nil
	SetAttackSpeedAbilityLevel(damager, -attackspeed)
	SetAttackAbilityLevel(damager, -R2I(attackspeed / 2))
	SaveInteger(udg_hash, GetHandleId(damager), $82, 0)
	SaveTimerHandle(udg_hash, GetHandleId(damager), $81, nil)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	damager = nil
	t = nil
end

function Trig_Moon_Chackrum_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damager = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, $C) ---@type unit
	local count = LoadInteger(udg_hash, h, 3) ---@type number integer
	local glaive = LoadUnitHandle(udg_hash, h, $A) ---@type unit
	local target2 ---@type unit
	local damage ---@type number real
	local damagemagic ---@type number real
	local gdamage ---@type group
	local height ---@type number real
	local ef ---@type effect
	local x = GetUnitX(glaive) ---@type number real
	local y = GetUnitY(glaive) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local xorb ---@type number real
	local yorb ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y))) ---@type number real
	local p ---@type player
	local g ---@type group
	local grup ---@type group
	local Picked ---@type unit
	local remove = false ---@type boolean
	local reselect = false ---@type boolean
	local orb2 ---@type unit
	local ef2 ---@type effect
	local night ---@type boolean
	local str ---@type string
	local resist ---@type number real
	if GetUnitState(target, UNIT_STATE_LIFE) > .405 then
		xorb = x + 27. * Cos(angle * bj_DEGTORAD)
		yorb = y + 27. * Sin(angle * bj_DEGTORAD)
		SetUnitPosition(glaive, xorb, yorb)
		dist = SquareRoot((xt - xorb) * (xt - xorb) + (yt - yorb) * (yt - yorb))
		SetUnitFacing(glaive, angle)
		if dist < 21. then
			SetUnitPosition(glaive, xt, yt)
			p = GetOwningPlayer(damager)
			gdamage = LoadGroupHandle(udg_hash, h, 9)
			night = LoadBoolean(udg_hash, h, 4)
			SetUnitPosition(glaive, xt, yt)
			if GetUnitState(target, UNIT_STATE_LIFE) > .0 and IsUnitType(target, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(target) ~= FourCC('h00U') and GetUnitTypeId(target) ~= FourCC('uplg') then
				damage = LoadReal(udg_hash, h, 2)
				damagemagic = LoadReal(udg_hash, h, 20)
				resist = LoadReal(udg_hash, h, 21)
				damage = damage * resist
				damagemagic = damagemagic * resist
				SaveReal(udg_hash, h, 2, damage)
				SaveReal(udg_hash, h, 20, damagemagic)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl", target, "chest"))
				UnitDamageTarget(damager, target, ConvertMagicAndChaosDamageInClear(target, damagemagic, damage), false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				if night then
					DestroyEffect(AddSpecialEffectTarget("Effects\\SoundTrauma.mdl", target, "chest"))
				end
				GroupAddUnit(gdamage, target)
			end
			count = count - 1
			SaveInteger(udg_hash, h, 3, count)
			SaveGroupHandle(udg_hash, h, 9, gdamage)
			reselect = true
			p = nil
			gdamage = nil
		end
	end
	if count > 0 and reselect then
		grup = CreateGroup()
		p = GetOwningPlayer(damager)
		g = CreateGroup()
		GroupEnumUnitsInRange(g, xt, yt, 350., nil)
		gdamage = LoadGroupHandle(udg_hash, h, 9)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitInGroup(Picked, gdamage) == false and IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') and GetUnitTypeId(Picked) ~= FourCC('uplg') then
				GroupAddUnit(grup, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		RandomUnitFromGroup(1, grup)
		target2 = FirstOfGroup(udg_GroupRandomUnitFromGroup)
		p = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		if target2 ~= nil then
			x = GetUnitX(glaive)
			y = GetUnitY(glaive)
			xt = GetUnitX(target2)
			yt = GetUnitY(target2)
			dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y)))
			angle = bj_RADTODEG * Atan2((yt - y), (xt - x))
			p = GetOwningPlayer(damager)
			ef = LoadEffectHandle(udg_hash, h, $B)
			DestroyEffect(ef)
			ef = nil
			orb2 = CreateUnit(p, FourCC('h00U'), x, y, angle)
			RemoveUnit(glaive)
			glaive = nil
			if night then
				str = "Effects\\BlueGlaivie.mdl"
				SetUnitScale(orb2, .6, .6, .6)
			else
				str = "Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl"
			end
			ef2 = AddSpecialEffectTarget(str, orb2, "origin")
			DestroyEffect(AddSpecialEffectTarget(str, target2, "chest"))
			UnitAddAbility(orb2, FourCC('Amrf'))
			UnitRemoveAbility(orb2, FourCC('Amrf'))
			SetUnitFlyHeight(orb2, 45., .0)
			SaveUnitHandle(udg_hash, h, $A, orb2)
			SaveEffectHandle(udg_hash, h, $B, ef2)
			SaveUnitHandle(udg_hash, h, $C, target2)
			p = nil
			orb2 = nil
			ef2 = nil
			target2 = nil
		else
			remove = true
		end
		target2 = nil
		p = nil
		gdamage = nil
	end
	if count <= 0 or (GetUnitState(target, UNIT_STATE_LIFE) < .405) then
		remove = true
	end
	if remove then
		RemoveUnit(glaive)
		glaive = nil
		ef = LoadEffectHandle(udg_hash, h, $B)
		DestroyEffect(ef)
		ef = nil
		gdamage = LoadGroupHandle(udg_hash, h, 9)
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		gdamage = nil
		DestroyTimer(t)
		Picked = nil
		FlushChildHashtable(udg_hash, h)
	end
	t = nil
	damager = nil
	glaive = nil
	target = nil
end

function Trig_Stone_Armor_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster ---@type unit
	local dammi = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local wait2 = LoadInteger(udg_hash, h, 3) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 4) ---@type unit
	local damage ---@type number real
	local height ---@type number real
	local ef ---@type effect
	local x = GetUnitX(dammi) ---@type number real
	local y = GetUnitY(dammi) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2(yt - y, xt - x) ---@type number real
	local dist ---@type number real
	local destroy = false ---@type boolean
	if GetUnitState(target, UNIT_STATE_LIFE) > .405 then
		wait2 = wait2 - 1
		SaveInteger(udg_hash, h, 3, wait2)
		if wait2 == 0 then
			height = LoadReal(udg_hash, h, 6)
			SetUnitFlyHeight(dammi, .0, height * 3.33)
		end
		x = x + 24. * Cos(angle * bj_DEGTORAD)
		y = y + 24. * Sin(angle * bj_DEGTORAD)
		SetUnitFacing(dammi, GetUnitFacing(dammi) + 30.)
		if IsTerrainPathable(x, y, PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(dammi, x, y)
		end
		dist = SquareRoot((xt - x) * (xt - x) + (yt - y) * (yt - y))
		if dist < 25. then
			caster = LoadUnitHandle(udg_hash, h, 1)
			damage = LoadReal(udg_hash, h, 5)
			destroy = true
			SetUnitFlyHeight(dammi, GetUnitFlyHeight(target) + 50., .0)
			SetUnitPosition(dammi, xt, yt)
			UnitDamageTarget(caster, target, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", target, "chest"))
			DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", GetUnitX(target), GetUnitY(target)))
			MoveUnit(target, .3, 600., 900., angle, .0, true)
			caster = nil
		end
	else
		destroy = true
	end
	if destroy then
		RemoveUnit(dammi)
		ef = LoadEffectHandle(udg_hash, h, 7)
		DestroyEffect(ef)
		ef = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	target = nil
	dammi = nil
end

function Trig_IsMinimapPingGuardsAttacked_Refresh_Actions()
	local t = GetExpiredTimer() ---@type timer
	udg_IsMinimapPingGuardsAttacked = false
	DestroyTimer(t)
	t = nil
end

function Trig_Archimagus_Armor_Timer_Death_Denial_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local hd = GetHandleId(damaged) ---@type number integer
	local ef ---@type effect
	if LoadBoolean(udg_hash, hd, FourCC('f')) then
		ef = AddSpecialEffectTarget("Effects\\MagicShieldBlue.mdx", damaged, "origin")
		SaveEffectHandle(udg_hash, hd, FourCC('g'), ef)
		SaveReal(udg_hash, hd, FourCC('i'), (500. + (GetHeroInt(damaged, true) * 3.)))
	end
	SaveReal(udg_hash, hd, FourCC('h'), .0)
	SaveBoolean(udg_hash, hd, FourCC('j'), false)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	damaged = nil
	t = nil
	ef = nil
end

function Trig_Cuirass_of_Invulnerable_Timer_Death_Denial_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local hd = GetHandleId(damaged) ---@type number integer
	local ef ---@type effect
	if LoadBoolean(udg_hash, hd, 94) then
		ef = AddSpecialEffectTarget("Effects\\PurpleSphere.mdx", damaged, "chest")
		SaveEffectHandle(udg_hash, hd, 95, ef)
	end
	SaveBoolean(udg_hash, hd, $A2, false)
	SaveReal(udg_hash, hd, 96, .0)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	damaged = nil
	t = nil
	ef = nil
end

function Trig_Wind_Bow_Remove_Attack_Speed_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local attackspeed = LoadInteger(udg_hash, h, 1) ---@type number integer
	local damager = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local ef = LoadEffectHandle(udg_hash, h, 3) ---@type effect
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 4)
	DestroyEffect(ef)
	ef = nil
	SetAttackSpeedAbilityLevel(damager, -attackspeed)
	SaveTimerHandle(udg_hash, GetHandleId(damager), 92, nil)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	damager = nil
	t = nil
end

function Trig_Pancir_Iachera_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local dammi = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local wait = LoadInteger(udg_hash, h, 3) ---@type number integer
	local angle = LoadReal(udg_hash, h, 4) ---@type number real
	local damage ---@type number real
	local stuntime ---@type number real
	local ef ---@type effect
	local x = GetUnitX(dammi) ---@type number real
	local y = GetUnitY(dammi) ---@type number real
	local xnew = x + 24. * Cos(angle * bj_DEGTORAD) ---@type number real
	local ynew = y + 24. * Sin(angle * bj_DEGTORAD) ---@type number real
	local p = GetOwningPlayer(damaged) ---@type player
	local Picked ---@type unit
	local g = CreateGroup() ---@type group
	local destroy = false ---@type boolean
	wait = wait - 1
	SaveInteger(udg_hash, h, 3, wait)
	if wait > 0 then
		if IsTerrainPathable(xnew, ynew, PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(dammi, xnew, ynew)
		end
		GroupEnumUnitsInRange(g, xnew, ynew, 100., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				damage = LoadReal(udg_hash, h, 5)
				stuntime = LoadReal(udg_hash, h, 6)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FireBallMissile\\FireBallMissile.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl", Picked, "chest"))
				UnitDamageTarget(damaged, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				StunUnitTimed(Picked, stuntime)
				destroy = true
			end
			GroupRemoveUnit(g, Picked)
		end
	else
		destroy = true
	end
	if destroy then
		ef = LoadEffectHandle(udg_hash, h, 7)
		DestroyEffect(ef)
		ef = nil
		KillUnit(dammi)
		dammi = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	damaged = nil
	t = nil
	dammi = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	p = nil
	Picked = nil
end

function Trig_Pancir_Iachera_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damager = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	SetAttackAbilityLevel(damager, $E)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	damager = nil
end

function Trig_Spirit_of_Absorption_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damager = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damage = LoadReal(udg_hash, h, 2) ---@type number real
	local manaburn = LoadReal(udg_hash, h, 3) ---@type number real
	local wait = LoadInteger(udg_hash, h, 4) ---@type number integer
	local dammi = LoadUnitHandle(udg_hash, h, 5) ---@type unit
	local gdamage = LoadGroupHandle(udg_hash, h, 6) ---@type group
	local ef ---@type effect
	local x = GetUnitX(dammi) ---@type number real
	local y = GetUnitY(dammi) ---@type number real
	local p = GetOwningPlayer(damager) ---@type player
	local Picked ---@type unit
	local g = CreateGroup() ---@type group
	wait = wait - 1
	SaveInteger(udg_hash, h, 4, wait)
	if wait > 0 then
		GroupEnumUnitsInRange(g, x, y, 100., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and (IsUnitInGroup(Picked, udg_PortalCastersMagi) == false) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Feedback\\ArcaneTowerAttack.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\OrbOfDeath\\OrbOfDeathMissile.mdl", Picked, "chest"))
				UnitDamageTarget(damager, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				SetUnitState(Picked, UNIT_STATE_MANA, GetUnitState(Picked, UNIT_STATE_MANA) - manaburn)
				GroupAddUnit(gdamage, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		SaveGroupHandle(udg_hash, h, 6, gdamage)
	else
		SetUnitTimeScale(dammi, 1.)
		ef = LoadEffectHandle(udg_hash, h, 7)
		DestroyEffect(ef)
		ef = nil
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\OrbOfDeath\\OrbOfDeathMissile.mdl", x, y))
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\OrbOfDeath\\AnnihilationMissile.mdl", x, y))
		RemoveUnit(dammi)
		dammi = nil
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	damager = nil
	t = nil
	dammi = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	gdamage = nil
	p = nil
	Picked = nil
end

function Trig_Triple_Strike_Move_And_Attack_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damager = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damaged = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local wait = LoadInteger(udg_hash, h, 4) ---@type number integer
	local lvl = LoadInteger(udg_hash, h, $A) ---@type number integer
	local xdr = GetUnitX(damager) ---@type number real
	local ydr = GetUnitY(damager) ---@type number real
	local xdd = GetUnitX(damaged) ---@type number real
	local ydd = GetUnitY(damaged) ---@type number real
	local angle = (LoadReal(udg_hash, h, 5)) + 120. ---@type number real
	local x = xdd + 100. * Cos(angle * bj_DEGTORAD) ---@type number real
	local y = ydd + 100. * Sin(angle * bj_DEGTORAD) ---@type number real
	local g ---@type group
	local Picked ---@type unit
	local p ---@type player
	SaveReal(udg_hash, h, 5, angle)
	wait = wait + 1
	SaveInteger(udg_hash, h, 4, wait)
	if wait <= 4 then
		damage = (damage * (.3 + .1 * lvl))
		if wait == 3 then
			SetUnitX(damager, x)
			SetUnitY(damager, y)
			SetUnitFacing(damager, angle + 180.)
			SaveReal(udg_hash, h, 8, xdd)
			SaveReal(udg_hash, h, 9, ydd)
			SetUnitTimeScale(damager, 1.4)
			SetUnitAnimationByIndex(damager, 3)
			TimerStart(t, .6, false, Trig_Triple_Strike_Move_And_Attack_Actions)
		end
		if wait == 4 then
			g = CreateGroup()
			GroupEnumUnitsInRange(g, LoadReal(udg_hash, h, 8), LoadReal(udg_hash, h, 9), 200., nil)
			p = GetOwningPlayer(damager)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					UnitDamageTarget(damager, Picked, damage + (30 * lvl), false, false, ATTACK_TYPE_MELEE, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", Picked, "chest"))
				end
				GroupRemoveUnit(g, Picked)
			end
			DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile.mdl", LoadReal(udg_hash, h, 8), LoadReal(udg_hash, h, 9)))
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl", LoadReal(udg_hash, h, 8), LoadReal(udg_hash, h, 9)))
			TimerStart(t, .0, false, Trig_Triple_Strike_Move_And_Attack_Actions)
		end
		if wait < 3 then
			if GetRandomInt(1, 2) == 1 then
				SetUnitAnimationByIndex(damager, 8)
			else
				SetUnitAnimationByIndex(damager, 2)
			end
			SetUnitX(damager, x)
			SetUnitY(damager, y)
			SetUnitFacing(damager, angle + 180.)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", damager, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", damaged, "chest"))
			UnitDamageTarget(damager, damaged, damage, true, false, ATTACK_TYPE_MELEE, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
		end
	else
		SaveBoolean(udg_hash, GetHandleId(damager), 61, false)
		DestroyEffect(LoadEffectHandle(udg_hash, h, 6))
		DestroyEffect(LoadEffectHandle(udg_hash, h, 7))
		SetUnitInvulnerable(damager, false)
		SetUnitPathing(damager, true)
		SetUnitAnimation(damager, "Stand")
		SetUnitTimeScale(damager, 1.)
		SetUnitTurnSpeed(damager, GetUnitDefaultTurnSpeed(damager))
		IssueImmediateOrderById(damager, $D0004)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	damager = nil
	damaged = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
	p = nil
end

function Trig_Damage_Unit_With_Wait_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damager = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local str = LoadStr(udg_hash, h, 4) ---@type string
	if str == "phys" then
		UnitDamageTarget(damager, damaged, damage, false, false, ATTACK_TYPE_MELEE, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
	end
	if str == "magic" then
		UnitDamageTarget(damager, damaged, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
	end
	if str == "clear" then
		UnitDamageTarget(damager, damaged, damage, false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
	end
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	damaged = nil
	damager = nil
end

function Trig_Make_Unit_UnInvulnerable_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	SetUnitInvulnerable(damaged, false)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	damaged = nil
end

function Trig_Hil_Unit_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local hil = LoadReal(udg_hash, h, 2) ---@type number real
	SetUnitState(damaged, UNIT_STATE_LIFE, GetUnitState(damaged, UNIT_STATE_LIFE) + hil)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	damaged = nil
end

function Trig_Trolls_Evasion_Salto_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local i = LoadInteger(udg_hash, h, 2) ---@type number integer
	if i == 0 then
		SaveInteger(udg_hash, h, 2, 1)
		TimerStart(t, .5, false, Trig_Trolls_Evasion_Salto_Actions)
		SetUnitTimeScale(damaged, 1.75)
	else
		PauseUnit(damaged, false)
		SetUnitTimeScale(damaged, 1.)
		if GetUnitState(damaged, UNIT_STATE_LIFE) > .405 then
			SetUnitAnimation(damaged, "Stand")
		end
		SetUnitInvulnerable(damaged, false)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	damaged = nil
end

function Trig_Dark_Crypt_Fiend_Attack_Unbuff_Dispel_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	SetArmorAbilityLevel(damaged, 2)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	damaged = nil
end

function Trig_Varmosar_Lightning_Destroy_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local l = LoadLightningHandle(udg_hash, h, 1) ---@type lightning
	DestroyLightning(l)
	l = nil
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
end

function Trig_AddDamage_Refresh_Creep_Assists_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local pr = LoadPlayerHandle(udg_hash, h, 1) ---@type player
	local players = LoadForceHandle(udg_hash, h, 2) ---@type force
	local hdd = LoadInteger(udg_hash, h, 3) ---@type number integer
	ForceRemovePlayer(players, pr)
	SaveForceHandle(udg_hash, hdd, 72, players)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	pr = nil
	players = nil
end

function Trig_AddDamage_Refresh_Magic_Damage_Handle_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hdd = LoadInteger(udg_hash, h, 1) ---@type number integer
	SaveBoolean(udg_hash, hdd, $9D, false)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
end

function Trig_AddDamage_Refresh_Handle_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hdd = LoadInteger(udg_hash, h, 2) ---@type number integer
	SaveInteger(udg_hash, hdd, $AA, 0)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
end

function Trig_AddDamage_Actions()
	local damager = GetEventDamageSource() ---@type unit
	local damaged = GetTriggerUnit() ---@type unit
	local damage = GetEventDamage() ---@type number real
	local hdr = GetHandleId(damager) ---@type number integer
	local hdd = GetHandleId(damaged) ---@type number integer
	local xr = GetUnitX(damager) ---@type number real
	local yr = GetUnitY(damager) ---@type number real
	local xd = GetUnitX(damaged) ---@type number real
	local yd = GetUnitY(damaged) ---@type number real
	local pr = GetOwningPlayer(damager) ---@type player
	local pd = GetOwningPlayer(damaged) ---@type player
	local locr ---@type location
	local locd ---@type location
	local dammi ---@type unit
	local Picked ---@type unit
	local u ---@type unit
	local l ---@type lightning
	local t ---@type timer
	local h ---@type number integer
	local t2 ---@type timer
	local h2 ---@type number integer
	local t3 ---@type timer
	local h3 ---@type number integer
	local txt ---@type texttag
	local i ---@type number integer
	local lvl ---@type number integer
	local count ---@type number integer
	local ef ---@type effect
	local angle ---@type number real
	local r1 ---@type number real
	local r2 ---@type number real
	local r3 ---@type number real
	local r4 ---@type number real
	local str ---@type string
	local g ---@type group
	local g2 ---@type group
	local players ---@type force
	local bool ---@type boolean
	local dist ---@type number real
	local b ---@type boolean
	local p ---@type player
	local gdamagefromdamager ---@type group
	local gdamagefromdamaged ---@type group
	local random ---@type number integer
	local melee ---@type boolean
	local physical = false ---@type boolean
	local loadphysical = false ---@type boolean
	if 1 == 2 then
		t = CreateTimer()
		h = GetHandleId(t)
		SaveInteger(udg_hash, h, 2, hdd)
		TimerStart(t, .0, false, Trig_AddDamage_Refresh_Handle_Actions)
		t = nil
	end
	if (GetUnitAbilityLevel(damaged, FourCC('B00M')) > 0 or GetUnitAbilityLevel(damaged, FourCC('B00L')) > 0) then
		if GetUnitAbilityLevel(GetTriggerUnit(), FourCC('B00M')) > 0 then
			melee = true
		else
			melee = false
		end
		physical = true
		UnitRemoveAbility(GetTriggerUnit(), FourCC('B00M'))
		UnitRemoveAbility(GetTriggerUnit(), FourCC('B00L'))
	end
	gdamagefromdamager = CreateGroup()
	gdamagefromdamaged = CreateGroup()
	if damage >= .01 and physical then
		if GetUnitTypeId(damager) == FourCC('N00W') then
			t = CreateTimer()
			h = GetHandleId(t)
			locr = GetUnitLoc(damager)
			locd = GetUnitLoc(damaged)
			l = AddLightningEx("CLPB", true, xr, yr, GetUnitFlyHeight(damager) + 125. + GetLocationZ(locr), xd, yd, GetUnitFlyHeight(damaged) + 30. + GetLocationZ(locd))
			SaveLightningHandle(udg_hash, h, 1, l)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", damaged, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\ChimaeraLightningMissile\\ChimaeraLightningMissile.mdl", damaged, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Effects\\OrbOfLightning.mdx", damaged, "origin"))
			TimerStart(t, .3, false, Trig_Varmosar_Lightning_Destroy_Actions)
			l = nil
			RemoveLocation(locr)
			RemoveLocation(locd)
			locr = nil
			locd = nil
			t = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A051')) > 0 and GetRandomInt(1, 4) == 1 then
			g = CreateGroup()
			GroupEnumUnitsInRange(g, xd, yd, 250., nil)
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", xd, yd))
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, pr) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					UnitDamageTarget(damager, Picked, 100. + 25 * CountPlayersInForceBJ(udg_IGRAET), false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					StunUnitTimed(Picked, 1.)
				end
				GroupRemoveUnit(g, Picked)
			end
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			Picked = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A06Z')) > 0 and GetRandomInt(1, FourCC('d')) <= 8 and LoadInteger(udg_hash, GetHandleId(damager), 64) < (GetUnitAbilityLevel(damager, FourCC('A06Z')) + 2) then
			dammi = CreateUnit(pr, udg_spirits_of_water[GetUnitAbilityLevel(damager, FourCC('A06Z'))], xd, yd, GetRandomReal(0, 360))
			SaveUnitHandle(udg_hash, GetHandleId(dammi), 63, damager)
			SaveInteger(udg_hash, GetHandleId(damager), 64, LoadInteger(udg_hash, GetHandleId(damager), 64) + 1)
		end
		if GetUnitAbilityLevel(damager, FourCC('A07J')) > 0 and GetRandomInt(1, FourCC('d')) <= $A and LoadInteger(udg_hash, hdr, FourCC('z')) <= $E then
			SetAttackAbilityLevel(damager, 2)
			SetUnitMaxState(damager, UNIT_STATE_MAX_LIFE, 20)
			SaveInteger(udg_hash, hdr, FourCC('z'), LoadInteger(udg_hash, hdr, FourCC('z')) + 1)
			if LoadInteger(udg_hash, hdr, FourCC('z')) == $F then
				ef = AddSpecialEffectTarget("war3mapImported\\s_WateryAura.mdx", damager, "origin")
				SaveEffectHandle(udg_hash, hdr, FourCC('{'), ef)
				ef = nil
			end
		end
		if GetUnitTypeId(damager) == FourCC('u00D') and IsUnitType(damaged, UNIT_TYPE_MAGIC_IMMUNE) == false and IsUnitIllusion(damager) == false and GetRandomInt(1, $A) == 1 then
			dammi = CreateUnit(pr, FourCC('h00U'), xr, yr, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
			UnitAddAbility(dammi, FourCC('A08R'))
			IssuePointOrderById(dammi, $D00FA, xd, yd)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AvengerMissile\\AvengerMissile.mdl", damaged, "chest"))
			if GetUnitAbilityLevel(damaged, FourCC('A087')) <= 0 then
				UnitAddAbility(damaged, FourCC('A087'))
				UnitAddAbility(damaged, FourCC('A0AH'))
				UnitAddAbility(damaged, FourCC('A0AG'))
				UnitAddAbility(damaged, FourCC('A0D8'))
				UnitAddAbility(damaged, FourCC('A0AT'))
				UnitAddAbility(damaged, FourCC('A0AS'))
			end
			SetArmorAbilityLevel(damaged, -2)
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			TimerStart(t, 10., false, Trig_Dark_Crypt_Fiend_Attack_Unbuff_Dispel_Actions)
			t = nil
			dammi = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0EO')) > 0 then
			h = GetHandleId(damager)
			lvl = LoadInteger(udg_hash, h, 52)
			i = LoadInteger(udg_hash, h, 53)
			if lvl + i <= 30 * GetUnitAbilityLevel(damager, FourCC('A0EN')) - 5 then
				lvl = lvl + i
				SetHeroAgi(damager, GetHeroAgi(damager, false) + i, true)
				ProgressBarAddPercentComplete(LoadUnitHandle(udg_hash, GetHandleId(damager), FourCC('u')), (i * 100. / (30 * GetUnitAbilityLevel(damager, FourCC('A0EN')) - 5)))
				SaveInteger(udg_hash, h, 52, lvl)
			else
				SetHeroAgi(damager, GetHeroAgi(damager, false) - lvl + (30 * GetUnitAbilityLevel(damager, FourCC('A0EN'))) - 5, true)
				lvl = 30 * GetUnitAbilityLevel(damager, FourCC('A0EN')) - 5
				SaveInteger(udg_hash, h, 52, lvl)
			end
		end
		if GetUnitTypeId(damaged) == FourCC('n00U') and IsUnitType(damager, UNIT_TYPE_MAGIC_IMMUNE) == false and GetRandomInt(1, 4) == 1 then
			dammi = CreateUnit(pd, FourCC('h00U'), xd, yd, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
			UnitAddAbility(dammi, FourCC('A0E0'))
			IssueTargetOrderById(dammi, $D007F, damager)
		end
		if GetUnitAbilityLevel(damager, FourCC('A08V')) > 0 and IsUnitType(damaged, UNIT_TYPE_MAGIC_IMMUNE) == false and GetRandomInt(1, FourCC('d')) <= 6 then
			dammi = CreateUnit(pr, FourCC('h00U'), xr, yr, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
			UnitAddAbility(dammi, FourCC('A08Z'))
			IssueTargetOrderById(dammi, $D00CB, damaged)
			dammi = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0E4')) > 0 and IsUnitType(damaged, UNIT_TYPE_MAGIC_IMMUNE) == false and GetRandomInt(1, FourCC('d')) <= $F then
			dammi = CreateUnit(pr, FourCC('h00U'), xr, yr, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
			UnitAddAbility(dammi, FourCC('A092'))
			IssueTargetOrderById(dammi, $D006B, damaged)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilSpecialArt.mdl", damaged, "chest"))
		end
		if GetUnitAbilityLevel(damaged, FourCC('A0E5')) > 0 and GetRandomInt(1, 5) == 1 and 1 == 2 then
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			SaveInteger(udg_hash, h, 2, 0)
			if IsTerrainPathable(xd + 50. * Cos((180. + bj_RADTODEG * Atan2(yr - yd, xr - xd)) * bj_DEGTORAD), yd + 50. * Sin((180. + bj_RADTODEG * Atan2(yr - yd, xr - xd)) * bj_DEGTORAD), PATHING_TYPE_WALKABILITY) == false then
				SetUnitX(damaged, xd + 50. * Cos((180. + bj_RADTODEG * Atan2(yr - yd, xr - xd)) * bj_DEGTORAD))
				SetUnitY(damaged, yd + 50. * Sin((180. + bj_RADTODEG * Atan2(yr - yd, xr - xd)) * bj_DEGTORAD))
			end
			DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl", xd + 50. * Cos((180. + bj_RADTODEG * Atan2(yr - yd, xr - xd)) * bj_DEGTORAD), yd + 50. * Sin((180. + bj_RADTODEG * Atan2(yr - yd, xr - xd)) * bj_DEGTORAD)))
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\CarrionSwarm\\CarrionSwarmDamage.mdl", xd + 50. * Cos((180. + bj_RADTODEG * Atan2(yr - yd, xr - xd)) * bj_DEGTORAD), yd + 50. * Sin((180. + bj_RADTODEG * Atan2(yr - yd, xr - xd)) * bj_DEGTORAD)))
			SetUnitFacing(damaged, bj_RADTODEG * Atan2(yr - yd, xr - xd))
			PauseUnit(damaged, true)
			SetUnitTimeScale(damaged, 10.)
			SetUnitAnimationByIndex(damaged, 2)
			txt = CreateTextTag()
			SetTextTagText(txt, "|cFFFF0000miss!|r", .0275)
			SetTextTagPos(txt, xd, yd, .0)
			SetTextTagColor(txt, 0, 0, 0, $C8)
			SetTextTagVelocity(txt, .0221875 * Cos(45. + GetRandomReal(.0, 90.) * bj_DEGTORAD), .0221875 * Sin(45. + GetRandomReal(.0, 90.) * bj_DEGTORAD))
			SetTextTagLifespan(txt, 3.)
			SetTextTagFadepoint(txt, .0)
			SetTextTagPermanent(txt, false)
			TimerStart(t, .04, false, Trig_Trolls_Evasion_Salto_Actions)
			t = nil
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			SaveReal(udg_hash, h, 2, damage)
			if GetUnitState(damaged, UNIT_STATE_LIFE) < damage then
				SetUnitInvulnerable(damaged, true)
			else
				TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			end
			t = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A09E')) > 0 and GetRandomInt(1, 2) == 1 then
			h = GetHandleId(damager)
			i = 0
			i = LoadInteger(udg_hash, h, 54)
			if i <= 0 then
				i = 1
				ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Bloodlust\\BloodlustTarget.mdl", damager, "hand, left")
				SaveEffectHandle(udg_hash, h, 55, ef)
				ef = nil
				ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Bloodlust\\BloodlustTarget.mdl", damager, "hand, right")
				SaveEffectHandle(udg_hash, h, 56, ef)
				ef = nil
			end
			if i <= 8 and i > 0 then
				i = i + 1
				SaveInteger(udg_hash, h, 54, i)
				SetAttackAbilityLevel(damager, 6)
			end
			if i == 8 then
				i = i + $A
				SaveInteger(udg_hash, h, 54, i)
				ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\TrollBerserk\\HeadhunterWEAPONSLeft.mdl", damager, "overhead")
				SaveEffectHandle(udg_hash, h, 57, ef)
				IssueImmediateOrderById(damager, $D0084)
				ef = nil
			end
		end
		if GetUnitAbilityLevel(damaged, FourCC('A0ET')) > 0 and LoadBoolean(udg_hash, GetHandleId(damaged), 1) then
			lvl = GetUnitAbilityLevel(damaged, FourCC('A0EU'))
			r1 = .03 * GetUnitAbilityLevel(damaged, FourCC('A0ET')) + .05
			r2 = GetUnitFacing(damaged)
			angle = (Atan2(GetUnitY(damaged) - GetUnitY(damager), GetUnitX(damaged) - GetUnitX(damager)) * bj_RADTODEG) + 360.
			if (angle <= (r2 + 240.) and angle >= (r2 + 120.)) then
				r1 = r1 * 2
				if lvl > 0 and GetRandomReal(0, FourCC('d')) <= ($B + lvl * 4) then
					r1 = 1.
					r3 = damage + ((.05 + (.05 * lvl)) * GetHeroStr(damaged, true))
					CreateTexttag("" .. SubString(R2S(r3), 0, StringLength(R2S(r3)) - 2), .023, FourCC('x'), xd, yd, .0, .0, .035, 3.5)
					GroupAddUnit(gdamagefromdamaged, damager)
					SaveReal(udg_hash, hdr, $A0, LoadReal(udg_hash, hdr, $A0) + r3)
					dammi = CreateUnit(pd, FourCC('h00U'), xd, yd, .0)
					UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
					UnitAddAbility(dammi, FourCC('A0EV'))
					IssueTargetOrderById(dammi, $D007F, damager)
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Defend\\DefendCaster.mdl", damaged, "origin"))
				end
			end
			SetUnitState(damaged, UNIT_STATE_LIFE, GetUnitState(damaged, UNIT_STATE_LIFE) + damage * r1)
		end
		if GetUnitAbilityLevel(damager, FourCC('A0F3')) > 0 then
			u = udg_herounit[GetPlayerId(pr) + 1]
			if LoadInteger(udg_hash, GetHandleId(u), 60) < GetUnitAbilityLevel(damager, FourCC('A0F3')) + 1 and GetUnitAbilityLevel(damager, FourCC('Aloc')) <= 0 and ((GetRandomInt(1, FourCC('d')) < 3 + (2 * GetUnitAbilityLevel(damager, FourCC('A0F3'))) and IsUnitIllusion(damager) == false) or ((GetRandomInt(1, FourCC('d')) < 2 + GetUnitAbilityLevel(damager, FourCC('A0F3')) and IsUnitIllusion(damager)))) then
				dammi = CreateUnit(pr, FourCC('h00U'), xr, yr, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0AY'))
				SetUnitAbilityLevel(dammi, FourCC('A0AY'), 1 + GetUnitAbilityLevel(u, FourCC('A0F2')))
				IssueTargetOrderById(dammi, $D0132, damager)
				SaveBoolean(udg_hash, GetHandleId(dammi), 3, false)
			end
		end
		if GetUnitAbilityLevel(damager, FourCC('B01P')) >= 1 then
			UnitRemoveAbility(damager, FourCC('B01P'))
			UnitRemoveAbility(damager, FourCC('A0GY'))
		end
		if GetUnitAbilityLevel(damaged, FourCC('B01P')) >= 1 and GetUnitAbilityLevel(damaged, FourCC('A0GY')) < 1 then
			UnitAddAbility(damaged, FourCC('A0GY'))
		end
		if GetUnitAbilityLevel(damaged, FourCC('A09Y')) == 1 then
			PauseUnit(damaged, false)
			UnitRemoveAbility(damaged, FourCC('A09Y'))
			dammi = CreateUnit(GetOwningPlayer(damaged), FourCC('h013'), xr, yr, 0)
			UnitAddAbility(dammi, FourCC('A0HF'))
			SetUnitAbilityLevel(dammi, FourCC('A0HF'), GetUnitAbilityLevel(damaged, FourCC('A0GZ')))
			IssueTargetOrderById(dammi, $D02B6, damager)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), .5)
		end
		if GetUnitAbilityLevel(damager, FourCC('B03I')) > 0 and GetRandomInt(1, FourCC('d')) <= 20 then
			dammi = CreateUnit(GetOwningPlayer(damager), FourCC('h013'), xr, yr, 0)
			UnitAddAbility(dammi, FourCC('A0HK'))
			IssueTargetOrderById(dammi, $D0062, damaged)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.5)
			UnitRemoveAbility(damager, FourCC('B03I'))
		end
		if GetUnitAbilityLevel(damager, FourCC('A0FF')) > 0 and GetRandomInt(1, FourCC('d')) <= (8 + 2 * GetUnitAbilityLevel(damager, FourCC('A0FF'))) and IsUnitIllusion(damager) == false and LoadBoolean(udg_hash, hdr, 61) == false and GetUnitState(damaged, UNIT_STATE_LIFE) > .405 then
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damager)
			SaveUnitHandle(udg_hash, h, 2, damaged)
			SaveReal(udg_hash, h, 3, damage)
			SaveInteger(udg_hash, h, 4, 0)
			SaveReal(udg_hash, h, 5, bj_RADTODEG * Atan2(yr - yd, xr - xd))
			SaveBoolean(udg_hash, hdr, 61, true)
			SaveInteger(udg_hash, h, $A, GetUnitAbilityLevel(damager, FourCC('A0FF')))
			UnitPeriodicPostionMove(damager, .02, 1.2)
			SetUnitInvulnerable(damager, true)
			SetUnitPathing(damager, false)
			SetUnitAnimationByIndex(damager, 2)
			SetUnitTimeScale(damager, 4.)
			SetUnitTurnSpeed(damager, 3.)
			if GetRandomInt(1, 2) == 1 then
				SetUnitAnimationByIndex(damager, 8)
			else
				SetUnitAnimationByIndex(damager, 2)
			end
			ef = AddSpecialEffectTarget("Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile_mini.mdl", damager, "weapon")
			SaveEffectHandle(udg_hash, h, 6, ef)
			ef = nil
			ef = AddSpecialEffectTarget("Abilities\\Weapons\\ZigguratMissile\\ZigguratMissile.mdl", damager, "weapon")
			SaveEffectHandle(udg_hash, h, 7, ef)
			ef = nil
			TimerStart(t, .2, true, Trig_Triple_Strike_Move_And_Attack_Actions)
			t = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0GH')) > 0 and GetRandomInt(1, FourCC('d')) <= 40 and IsUnitIllusion(damager) == false then
			angle = bj_RADTODEG * Atan2(yd - yr, xd - xr)
			r1 = 200.
			r2 = 100.
			r3 = xr + 50. * Cos(angle * bj_DEGTORAD)
			r4 = yr + 50. * Sin(angle * bj_DEGTORAD)
			g = CreateGroup()
			dammi = CreateUnit(pr, FourCC('h01P'), r3, r4, angle)
			SetUnitVertexColor(dammi, $DC, $DC, $DC, FourCC('d'))
			SetUnitAnimation(dammi, "stand")
			SetUnitTimeScale(dammi, 1.5)
			SetUnitAnimationByIndex(dammi, 1)
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damager)
			SaveReal(udg_hash, h, 2, r1)
			SaveReal(udg_hash, h, 3, r2)
			SaveInteger(udg_hash, h, 4, 66)
			SaveUnitHandle(udg_hash, h, 5, dammi)
			SaveGroupHandle(udg_hash, h, 6, g)
			ef = AddSpecialEffectTarget("Abilities\\Spells\\Human\\Feedback\\ArcaneTowerAttack.mdl", dammi, "chest")
			SaveEffectHandle(udg_hash, h, 7, ef)
			ef = nil
			MoveUnit(dammi, 2., 400., .0, angle, .0, true)
			TimerStart(t, .03, true, Trig_Spirit_of_Absorption_Actions)
			t = nil
			dammi = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A09O')) > 0 and IsUnitType(damaged, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitState(damaged, UNIT_STATE_MAX_MANA) > .0 then
			GroupAddUnit(gdamagefromdamager, damaged)
			SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + 15.)
			SetUnitState(damaged, UNIT_STATE_MANA, GetUnitState(damaged, UNIT_STATE_MANA) - 15.)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Feedback\\ArcaneTowerAttack.mdl", damaged, "origin"))
		end
		r1 = LoadReal(udg_hash, hdr, 68)
		if GetUnitAbilityLevel(damager, FourCC('A0H2')) > 0 and r1 > 0 then
			r2 = r1 - damage
			r3 = GetUnitState(damaged, UNIT_STATE_LIFE)
			SaveReal(udg_hash, hdr, 68, r2)
			if r2 < .0 then
				r2 = damage
				UnitRemoveAbility(damager, FourCC('A0H2'))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DevourMagic\\DevourMagicBirthMissile.mdl", damager, "hand,right"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DevourMagic\\DevourMagicBirthMissile.mdl", damager, "hand,left"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DevourMagic\\DevourMagicBirthMissile.mdl", damager, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DevourMagic\\DevourMagicBirthMissile.mdl", damager, "weapon"))
			end
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayDamage.mdl", damaged, "chest"))
			if damage >= r3 then
				SetUnitInvulnerable(damaged, true)
				TimerStart(t, .0, false, Trig_Make_Unit_UnInvulnerable_Actions)
			else
				SaveReal(udg_hash, h, 2, damage)
				TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			end
			t = nil
		end
		if GetUnitAbilityLevel(damaged, FourCC('A0HN')) > 0 and GetRandomInt(1, FourCC('d')) <= 40 then
			r1 = damage / 2
			r2 = GetUnitState(damaged, UNIT_STATE_LIFE)
			r3 = SquareRoot((xr - xd) * (xr - xd) + (yr - yd) * (yr - yd))
			if damage >= r2 and r1 < r2 then
				t = CreateTimer()
				h = GetHandleId(t)
				SaveUnitHandle(udg_hash, h, 1, damaged)
				SetUnitInvulnerable(damaged, true)
				TimerStart(t, .0, false, Trig_Make_Unit_UnInvulnerable_Actions)
				GroupAddUnit(gdamagefromdamager, damaged)
				SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + r1)
			end
			if damage < r2 then
				t = CreateTimer()
				h = GetHandleId(t)
				SaveUnitHandle(udg_hash, h, 1, damaged)
				SaveReal(udg_hash, h, 2, r1)
				TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			end
			t = nil
			t = CreateTimer()
			h = GetHandleId(t)
			if r3 <= 225. then
				GroupAddUnit(gdamagefromdamaged, damager)
				SaveReal(udg_hash, hdr, $A0, LoadReal(udg_hash, hdr, $A0) + 50.)
				SaveUnitHandle(udg_hash, h, 1, damager)
				SetAttackAbilityLevel(damager, -$E)
				TimerStart(t, 10., false, Trig_Pancir_Iachera_Actions)
				StunUnitTimed(damager, 1.45)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SearingArrow\\SearingArrowMissile.mdl", damager, "weapon"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SearingArrow\\SearingArrowMissile.mdl", damager, "hand,right"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SearingArrow\\SearingArrowMissile.mdl", damager, "hand,left"))
			else
				angle = bj_RADTODEG * Atan2(yr - yd, xr - xd)
				dammi = CreateUnit(pd, FourCC('h00U'), GetUnitX(damaged), GetUnitY(damaged), angle)
				SetUnitFlyHeight(dammi, 50., .0)
				SetUnitFacing(dammi, angle)
				ef = AddSpecialEffectTarget("Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl", dammi, "chest")
				SaveUnitHandle(udg_hash, h, 1, damaged)
				SaveUnitHandle(udg_hash, h, 2, dammi)
				SaveInteger(udg_hash, h, 3, 50)
				SaveReal(udg_hash, h, 4, angle)
				SaveReal(udg_hash, h, 5, 250.)
				SaveReal(udg_hash, h, 6, 1.45)
				SaveEffectHandle(udg_hash, h, 7, ef)
				TimerStart(t, .03, true, Trig_Pancir_Iachera_Periodic_Actions)
				ef = nil
				dammi = nil
			end
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FireBallMissile\\FireBallMissile.mdl", damager, "chest"))
			t = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A00K')) > 0 and IsUnitType(damaged, UNIT_TYPE_MAGIC_IMMUNE) == false then
			dammi = CreateUnit(pr, FourCC('h00U'), xr, yr, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
			UnitAddAbility(dammi, FourCC('A01T'))
			IssueTargetOrderById(dammi, $D0102, damaged)
			dammi = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0AW')) > 0 and IsUnitType(damaged, UNIT_TYPE_MAGIC_IMMUNE) == false and ($B + (3 * GetUnitAbilityLevel(damager, FourCC('A0AW')))) >= GetRandomInt(1, FourCC('d')) then
			GroupAddUnit(gdamagefromdamager, damaged)
			SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + (15. + ($A * GetUnitAbilityLevel(damager, FourCC('A0AW')))))
			StunUnitTimed(damaged, .4 + (.2 * GetUnitAbilityLevel(damager, FourCC('A0AW'))))
		end
		if GetUnitAbilityLevel(damager, FourCC('A0HV')) > 0 and GetRandomInt(1, FourCC('d')) <= 18 then
			r1 = (damage * .7) + 20.
			GroupAddUnit(gdamagefromdamager, damaged)
			SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + r1)
			CreateTexttag(udg_ColorString[1] .. I2S(R2I(r1 + damage)) .. "!|r", .025, $FF, xd - 18., yd + 15., .0, .0, .035, 3.5)
		end
		if GetUnitAbilityLevel(damager, FourCC('A0K0')) > 0 and GetRandomInt(1, FourCC('d')) <= $F then
			r1 = (damage * .7) + 10.
			UnitDamageTarget(damager, damaged, r1, false, false, ATTACK_TYPE_MELEE, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			CreateTexttag(udg_ColorString[1] .. I2S(R2I(r1 + damage)) .. "!|r", .025, $FF, xd - 18., yd + 15., .0, .0, .035, 3.5)
		end
		r1 = GetUnitState(damaged, UNIT_STATE_LIFE)
		r2 = GetUnitState(damaged, UNIT_STATE_MAX_LIFE)
		if (GetUnitAbilityLevel(damager, FourCC('A0I1')) > 0 and (r2 * .3) > r1) or (GetUnitAbilityLevel(damager, FourCC('A0I3')) > 0 and (r2 * .4) > r1) or (GetUnitAbilityLevel(damager, FourCC('A0I2')) > 0 and (r2 * .5) > r1) then
			if (GetUnitAbilityLevel(damager, FourCC('A0I1'))) > 0 then
				r3 = 18.
			end
			if (GetUnitAbilityLevel(damager, FourCC('A0I3'))) > 0 then
				r3 = 27.
			end
			if (GetUnitAbilityLevel(damager, FourCC('A0I2'))) > 0 then
				r3 = 36.
			end
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Critters\\Albatross\\CritterBloodAlbatross.mdl", damaged, "chest"))
			GroupAddUnit(gdamagefromdamager, damaged)
			SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + r3)
		end
		if (GetUnitAbilityLevel(damager, FourCC('A0I5')) > 0 and GetRandomInt(1, FourCC('d')) <= 20) or (GetUnitAbilityLevel(damager, FourCC('A0I4')) > 0 and GetRandomInt(1, FourCC('d')) <= 25) or (GetUnitAbilityLevel(damager, FourCC('A0I6')) > 0 and GetRandomInt(1, FourCC('d')) <= 30) then
			if (GetUnitAbilityLevel(damager, FourCC('A0I6'))) > 0 then
				lvl = 3
			end
			if (GetUnitAbilityLevel(damager, FourCC('A0I4'))) > 0 then
				lvl = 2
			end
			if (GetUnitAbilityLevel(damager, FourCC('A0I5'))) > 0 then
				lvl = 1
			end
			dammi = CreateUnit(pr, FourCC('h00U'), xd, yd, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
			UnitAddAbility(dammi, FourCC('A0HX'))
			SetUnitAbilityLevel(dammi, FourCC('A0HX'), lvl)
			IssueTargetOrderById(dammi, $D006B, damaged)
			dammi = nil
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl", damaged, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPriest.mdl", damaged, "origin"))
		end
		if (GetUnitAbilityLevel(damager, FourCC('A0IA')) > 0 and GetRandomInt(1, FourCC('d')) <= 22) then
			GroupAddUnit(gdamagefromdamager, damaged)
			SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + (25. + (.3 * GetHeroStr(damager, true))))
			StunUnitTimed(damaged, 1.25)
		end
		if GetUnitAbilityLevel(damager, FourCC('A0J2')) >= 1 then
			GroupAddUnit(gdamagefromdamager, damaged)
			SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + (.5 * GetHeroStr(damager, true)))
			DestroyEffect(AddSpecialEffectTarget("Effects\\AxeEffect.mdl", damaged, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Effects\\AxeEffect.mdl", damaged, "origin"))
			DestroyEffect(AddSpecialEffect("Effects\\AxeEffect.mdl", xd, yd))
		end
		if GetUnitAbilityLevel(damager, FourCC('A0JH')) >= 1 then
			dammi = CreateUnit(pr, FourCC('h00U'), xr, yr, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
			UnitAddAbility(dammi, FourCC('A0J3'))
			IssueTargetOrderById(dammi, $D006B, damaged)
			dammi = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0JI')) >= 1 then
			t = LoadTimerHandle(udg_hash, hdr, 92)
			if t ~= nil then
				i = LoadInteger(udg_hash, GetHandleId(t), 1)
				if i <= 58 then
					i = i + 2
					SetAttackSpeedAbilityLevel(damager, 2)
					SaveInteger(udg_hash, GetHandleId(t), 1, i)
				else
					ef = LoadEffectHandle(udg_hash, GetHandleId(t), 3)
					if ef == nil then
						ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Tornado\\Tornado_Target.mdl", damager, "weapon")
						SaveEffectHandle(udg_hash, GetHandleId(t), 3, ef)
						ef = nil
						ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Tornado\\Tornado_Target.mdl", damager, "chest")
						SaveEffectHandle(udg_hash, GetHandleId(t), 4, ef)
					end
					ef = nil
				end
			else
				t = CreateTimer()
				SaveTimerHandle(udg_hash, hdr, 92, t)
				SetAttackSpeedAbilityLevel(damager, 2)
				SaveInteger(udg_hash, GetHandleId(t), 1, 2)
				SaveUnitHandle(udg_hash, GetHandleId(t), 2, damager)
			end
			TimerStart(t, 15., false, Trig_Wind_Bow_Remove_Attack_Speed_Actions)
			t = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0LE')) >= 1 then
			r1 = .15 * damage
			str = LoadStr(udg_hash, GetUnitTypeId(damager), 70)
			if str == "str" then
				r2 = GetHeroStr(damager, true) / 2
			end
			if str == "agi" then
				r2 = GetHeroAgi(damager, true) / 2
			end
			if str == "int" then
				r2 = GetHeroInt(damager, true) / 2
			end
			r3 = 150. + r2
			g = CreateGroup()
			GroupEnumUnitsInRange(g, xd, yd, r3, nil)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Cleave\\CleaveDamageTarget.mdl", damaged, "chest"))
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, pr) and Picked ~= damaged and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					GroupAddUnit(gdamagefromdamager, Picked)
					SaveReal(udg_hash, GetHandleId(Picked), $9F, LoadReal(udg_hash, GetHandleId(Picked), $9F) + r1)
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Cleave\\CleaveDamageTarget.mdl", Picked, "chest"))
				end
				GroupRemoveUnit(g, Picked)
			end
			GroupClear(g)
			DestroyGroup(g)
			g = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0LI')) >= 1 then
			r1 = .25 * damage
			str = LoadStr(udg_hash, GetUnitTypeId(damager), 70)
			if str == "str" then
				r2 = GetHeroStr(damager, true) / 1.75
			end
			if str == "agi" then
				r2 = GetHeroAgi(damager, true) / 1.75
			end
			if str == "int" then
				r2 = GetHeroInt(damager, true) / 1.75
			end
			r3 = 150. + r2
			g = CreateGroup()
			GroupEnumUnitsInRange(g, xd, yd, r3, nil)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Cleave\\CleaveDamageTarget.mdl", damaged, "chest"))
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, pr) and Picked ~= damaged and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					GroupAddUnit(gdamagefromdamager, Picked)
					SaveReal(udg_hash, GetHandleId(Picked), $9F, LoadReal(udg_hash, GetHandleId(Picked), $9F) + r1)
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Cleave\\CleaveDamageTarget.mdl", Picked, "chest"))
				end
				GroupRemoveUnit(g, Picked)
			end
			GroupClear(g)
			DestroyGroup(g)
			g = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0LJ')) >= 1 and GetRandomInt(1, FourCC('d')) <= 30 then
			r1 = .5 * GetHeroStr(damager, true)
			g = CreateGroup()
			GroupEnumUnitsInRange(g, xd, yd, 150., nil)
			while(true) do
				Picked = FirstOfGroup(g)
				if IsUnitEnemy(Picked, pr) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					GroupAddUnit(gdamagefromdamager, Picked)
					SaveReal(udg_hash, GetHandleId(Picked), $9E, LoadReal(udg_hash, GetHandleId(Picked), $9E) + r1)
					DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Undead\\UndeadBlood\\UndeadBloodGhoul.mdl", Picked, "origin"))
					StunUnitTimed(Picked, .75)
				end
				GroupRemoveUnit(g, Picked)
			end
			GroupClear(g)
			DestroyGroup(g)
			g = nil
		end
		if (GetUnitAbilityLevel(damager, FourCC('A0LP')) > 0 and GetRandomInt(1, FourCC('d')) <= 25) then
			if GetUnitState(damaged, UNIT_STATE_LIFE) < GetUnitState(damaged, UNIT_STATE_MAX_LIFE) * .5 then
				r1 = (damage * 3.4) + 80.
				CreateTexttag(udg_ColorString[1] .. I2S(R2I(r1 + damage)) .. "!|r", .03, $FF, xd - 18., yd + 15., .0, .0, .035, 3.5)
			else
				r1 = (damage * 1.2) + 40.
				CreateTexttag(udg_ColorString[1] .. I2S(R2I(r1 + damage)) .. "!|r", .025, $FF, xd - 18., yd + 15., .0, .0, .035, 3.5)
			end
			GroupAddUnit(gdamagefromdamager, damaged)
			SaveReal(udg_hash, hdd, $9F, LoadReal(udg_hash, hdd, $9F) + r1)
			dammi = CreateUnit(pr, FourCC('h00U'), xd, yd, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
			UnitAddAbility(dammi, FourCC('A0LQ'))
			IssueTargetOrderById(dammi, $D006B, damaged)
			dammi = nil
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodSorceress.mdl", damaged, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Other\\HumanBloodCinematicEffect\\HumanBloodCinematicEffect.mdl", damaged, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl", damaged, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPeasant.mdl", damaged, "origin"))
		end
		if LoadBoolean(udg_hash, hdr, 99) then
			r1 = (GetUnitState(damager, UNIT_STATE_LIFE) - GetUnitState(damaged, UNIT_STATE_LIFE)) / 10.
			if r1 < 0 then
				r1 = -r1
			end
			r1 = r1 + R2I(GetHeroStr(damager, true) * .75)
			if r1 > 150. then
				r1 = 150.
			end
			GroupAddUnit(gdamagefromdamager, damaged)
			SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + r1)
			DestroyEffectWithWait(AddSpecialEffectTarget("Effects\\BloodBreathDamage.mdx", damaged, "origin"), .35)
			DestroyEffectWithWait(AddSpecialEffectTarget("Effects\\BloodElementalMisile.mdx", damaged, "origin"), .35)
		end
		if GetUnitAbilityLevel(damager, FourCC('A0M8')) > 0 then
			if LoadBoolean(udg_hash, hdr, FourCC('q')) == false then
				r1 = LoadReal(udg_hash, hdr, FourCC('p'))
				r2 = 360. + (GetUnitAbilityLevel(damager, FourCC('A0M8')) * 40.)
				r1 = r1 + damage
				ProgressBarAddPercentComplete(LoadUnitHandle(udg_hash, GetHandleId(damager), FourCC('v')), (damage * 100. / r2))
				if r1 >= r2 then
					SaveBoolean(udg_hash, hdr, FourCC('q'), true)
					SaveReal(udg_hash, hdr, FourCC('p'), .0)
					ef = AddSpecialEffectTarget("Abilities\\Spells\\Human\\slow\\slowtarget.mdl", damager, "weapon")
					SaveEffectHandle(udg_hash, hdr, FourCC('r'), ef)
					ef = nil
					ef = AddSpecialEffectTarget("Effects\\LifeHigh.mdx", damager, "weapon")
					SaveEffectHandle(udg_hash, hdr, FourCC('s'), ef)
					ef = nil
				else
					SaveReal(udg_hash, hdr, FourCC('p'), r1)
				end
			else
				RemoveUnit(LoadUnitHandle(udg_hash, GetHandleId(damager), FourCC('v')))
				AddProgressBar(damager, 235. + (3. * GetUnitAbilityLevel(damager, FourCC('A0M8'))), (.9 + .05 * GetUnitAbilityLevel(damager, FourCC('A0M8'))), 1., true, false, FourCC('v'), $F8, $9A, 0)
				g = CreateGroup()
				GroupEnumUnitsInRange(g, xd, yd, 250., nil)
				lvl = GetUnitAbilityLevel(damager, FourCC('A0M8'))
				r3 = damage * (.25 + (.25 * lvl))
				r1 = (25 + (lvl * $A)) + (GetHeroStr(damager, true) * (.3 + (.2 * lvl)))
				r2 = (25 + (lvl * $A)) + (GetHeroInt(damager, true) * (.3 + (.2 * lvl)))
				GroupAddUnit(gdamagefromdamager, damaged)
				SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + r3)
				dammi = CreateUnit(pr, FourCC('h00U'), xd, yd, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 3.)
				SetUnitScale(dammi, .5, .5, .5)
				SetUnitPathing(dammi, false)
				SetUnitX(dammi, xd)
				SetUnitY(dammi, yd)
				DestroyEffect(AddSpecialEffectTarget("Effects\\LightNova.mdl", dammi, "origin"))
				dammi = nil
				DestroyEffect(AddSpecialEffectTarget("Effects\\DivineRage.mdx", damager, "weapon"))
				ef = LoadEffectHandle(udg_hash, hdr, FourCC('r'))
				DestroyEffect(ef)
				ef = nil
				ef = LoadEffectHandle(udg_hash, hdr, FourCC('s'))
				DestroyEffect(ef)
				ef = nil
				SaveBoolean(udg_hash, hdr, FourCC('q'), false)
				while(true) do
					Picked = FirstOfGroup(g)
					if (Picked == nil) then break end
					if IsUnitEnemy(Picked, pr) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
						GroupAddUnit(gdamagefromdamager, Picked)
						SaveReal(udg_hash, GetHandleId(Picked), $9E, LoadReal(udg_hash, GetHandleId(Picked), $9E) + r1)
						DestroyEffect(AddSpecialEffectTarget("Effects\\DivineRage.mdx", Picked, "origin"))
						dammi = CreateUnit(pr, FourCC('h00U'), xd, yd, .0)
						UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
						UnitAddAbility(dammi, FourCC('A0M9'))
						IssueTargetOrderById(dammi, $D006B, Picked)
						dammi = nil
					end
					if IsUnitAlly(Picked, pr) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
						SetUnitState(Picked, UNIT_STATE_LIFE, GetUnitState(Picked, UNIT_STATE_LIFE) + r2)
						DestroyEffect(AddSpecialEffectTarget("Effects\\MegaHeal.mdx", Picked, "origin"))
						DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Heal\\HealTarget.mdl", Picked, "origin"), 2.)
					end
					GroupRemoveUnit(g, Picked)
				end
				Picked = nil
			end
			GroupClear(g)
			DestroyGroup(g)
			g = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0JA')) >= 1 and GetRandomInt(1, FourCC('d')) <= 20 and GetUnitAbilityLevel(damaged, FourCC('A0JC')) < 1 then
			dammi = CreateUnit(pr, FourCC('h013'), xr, yr, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.5)
			UnitAddAbility(dammi, FourCC('A0JD'))
			IssueTargetOrderById(dammi, $D006B, damaged)
			dammi = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0K3')) > 0 and GetRandomInt(1, FourCC('d')) <= $F and IsUnitIllusion(damager) == false then
			r1 = (.3 * GetHeroStr(damager, true))
			g = CreateGroup()
			GroupEnumUnitsInRange(g, xr, yr, 250., nil)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, pr) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false then
					GroupAddUnit(gdamagefromdamager, Picked)
					SaveReal(udg_hash, GetHandleId(Picked), $9E, LoadReal(udg_hash, GetHandleId(Picked), $9E) + r1)
				end
				GroupRemoveUnit(g, Picked)
			end
			GroupClear(g)
			DestroyGroup(g)
			g = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0K4')) > 0 and GetRandomInt(1, FourCC('d')) <= 30 and IsUnitIllusion(damager) == false then
			r1 = (.6 * GetHeroStr(damager, true))
			g = CreateGroup()
			GroupEnumUnitsInRange(g, xr, yr, 300., nil)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, pr) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false then
					GroupAddUnit(gdamagefromdamager, Picked)
					SaveReal(udg_hash, GetHandleId(Picked), $9E, LoadReal(udg_hash, GetHandleId(Picked), $9E) + r1)
				end
				GroupRemoveUnit(g, Picked)
			end
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			Picked = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0K4')) > 0 and GetRandomInt(1, FourCC('d')) <= $F and IsUnitIllusion(damager) == false then
			g = CreateGroup()
			GroupEnumUnitsInRange(g, xr, yr, 270., nil)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, pr) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false then
					StunUnitTimed(Picked, 1.)
				end
				GroupRemoveUnit(g, Picked)
			end
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			Picked = nil
		end
		if GetUnitAbilityLevel(damaged, FourCC('A0MK')) > 0 and IsUnitType(damager, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitState(damaged, UNIT_STATE_LIFE) > .405 and damage > .0 and GetRandomInt(1, FourCC('d')) <= ($C + (3 * GetUnitAbilityLevel(damaged, FourCC('A0MK')))) then
			lvl = GetUnitAbilityLevel(damaged, FourCC('A0MK'))
			r1 = SquareRoot((xr - xd) * (xr - xd) + (yr - yd) * (yr - yd))
			r2 = (5. + 5. * lvl) + (r1 / (34. - 4. * lvl))
			r3 = .1 + .15 * lvl
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			SaveReal(udg_hash, h, 2, (r3 * damage))
			TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			t = nil
			t = CreateTimer()
			h = GetHandleId(t)
			angle = bj_RADTODEG * Atan2(yr - yd, xr - xd)
			dammi = CreateUnit(pd, FourCC('h00E'), GetUnitX(damaged), GetUnitY(damaged), angle)
			SetUnitFlyHeight(dammi, 50., .0)
			SetUnitFlyHeight(dammi, 200., r1)
			SetUnitFacing(dammi, angle)
			SetUnitScale(dammi, 1.5, 1.5, 1.5)
			ef = AddSpecialEffectTarget("Effects\\StoneSmall.mdl", dammi, "chest")
			SaveUnitHandle(udg_hash, h, 1, damaged)
			SaveUnitHandle(udg_hash, h, 2, dammi)
			SaveInteger(udg_hash, h, 3, R2I(r1 / 40))
			SaveUnitHandle(udg_hash, h, 4, damager)
			SaveReal(udg_hash, h, 5, r2)
			SaveReal(udg_hash, h, 6, (r1 / 3))
			SaveEffectHandle(udg_hash, h, 7, ef)
			TimerStart(t, .03, true, Trig_Stone_Armor_Periodic_Actions)
			ef = nil
			dammi = nil
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", damaged, "chest"))
			t = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0N7')) > 0 and IsUnitIllusion(damager) == false and IsUnitType(damaged, UNIT_TYPE_MAGIC_IMMUNE) == false then
			r1 = (GetUnitState(damager, UNIT_STATE_MAX_MANA) / 25.)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SpiritOfVengeanceMissile\\SpiritOfVengeanceMissile.mdl", damaged, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\ManaFlare\\ManaFlareMissile.mdl", damaged, "chest"))
			GroupAddUnit(gdamagefromdamager, damaged)
			SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + r1)
		end
		if GetUnitAbilityLevel(damager, FourCC('A0ND')) > 0 and IsUnitIllusion(damager) == false then
			g = CreateGroup()
			g2 = CreateGroup()
			GroupEnumUnitsInRange(g, xd, yd, 150., nil)
			GroupRemoveUnit(g, damaged)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, pr) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false then
					GroupAddUnit(g2, Picked)
				end
				GroupRemoveUnit(g, Picked)
			end
			Picked = nil
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			RandomUnitFromGroup(2, g2)
			g = CreateGroup()
			GroupAddGroup(udg_GroupRandomUnitFromGroup, g)
			r1 = (GetUnitState(damager, UNIT_STATE_MAX_MANA) / 20.)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				GroupAddUnit(gdamagefromdamager, Picked)
				SaveReal(udg_hash, GetHandleId(Picked), $9E, LoadReal(udg_hash, GetHandleId(Picked), $9E) + r1)
				DestroyEffect(AddSpecialEffectTarget("Effects\\FlameBomb.mdx", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIfb\\AIfbSpecialArt.mdl", Picked, "chest"))
				GroupRemoveUnit(g, Picked)
			end
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			Picked = nil
		end
		if (GetUnitAbilityLevel(damaged, FourCC('A0NJ')) > 0 or GetUnitAbilityLevel(damaged, FourCC('A0NK')) > 0 or GetUnitAbilityLevel(damaged, FourCC('A0NL')) > 0) and (GetUnitAbilityLevel(damaged, FourCC('A0IT')) <= 0 and GetUnitAbilityLevel(damaged, FourCC('A0J8')) <= 0) and IsUnitType(damager, UNIT_TYPE_MAGIC_IMMUNE) == false then
			if GetUnitAbilityLevel(damaged, FourCC('A0NJ')) > 0 then
				r1 = damage * .1 + 10.
			end
			if GetUnitAbilityLevel(damaged, FourCC('A0NK')) > 0 then
				r1 = damage * .15 + 12.
			end
			if GetUnitAbilityLevel(damaged, FourCC('A0NL')) > 0 then
				r1 = damage * .2 + 14.
			end
			GroupAddUnit(gdamagefromdamaged, damager)
			SaveReal(udg_hash, hdr, $A1, LoadReal(udg_hash, hdr, $A1) + r1)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\ThornsAura\\ThornsAuraDamage.mdl", damager, "overhead"))
		end
		if GetUnitAbilityLevel(damager, FourCC('A08G')) > 0 and GetRandomInt(1, FourCC('d')) <= 20 then
			r1 = (damage * .5)
			GroupAddUnit(gdamagefromdamager, damaged)
			SaveReal(udg_hash, hdd, $9F, LoadReal(udg_hash, hdd, $9F) + r1 + 10.)
			CreateTexttag(udg_ColorString[1] .. I2S(R2I(r1 + damage)) .. "!|r", .022, $FF, xd - 18., yd + 15., .0, .0, .035, 3.5)
		end
		if GetUnitAbilityLevel(damager, FourCC('A0NI')) > 0 and IsUnitIllusion(damager) == false and IsUnitType(damaged, UNIT_TYPE_MAGIC_IMMUNE) == false then
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIfb\\AIfbSpecialArt.mdl", damaged, "chest"))
		end
		if GetUnitAbilityLevel(damager, FourCC('A0NS')) > 0 then
			lvl = GetUnitAbilityLevel(damager, FourCC('A0NS'))
			r1 = damage
			r2 = .0
			if lvl == 1 or lvl == 2 then
				i = 1
			end
			if lvl == 3 or lvl == 4 then
				i = 2
			end
			if lvl == 5 or lvl == 6 then
				i = 3
			end
			if GetFloatGameState(GAME_STATE_TIME_OF_DAY) < 6. or GetFloatGameState(GAME_STATE_TIME_OF_DAY) > 18. then
				r2 = (GetHeroAgi(damager, true) + GetHeroInt(damager, true)) / 3
				str = "Effects\\BlueGlaivie.mdl"
				r4 = .6
				b = true
			else
				str = "Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl"
				r4 = 1.
				b = false
			end
			t = CreateTimer()
			h = GetHandleId(t)
			SaveReal(udg_hash, h, 21, .6)
			if LoadBoolean(udg_hash, hdr, $7F) then
				i = i * 2
			end
			if LoadBoolean(udg_hash, hdr, $80) then
				SaveReal(udg_hash, h, 21, .8)
			end
			SaveUnitHandle(udg_hash, h, 1, damager)
			SaveReal(udg_hash, h, 2, r1)
			SaveReal(udg_hash, h, 20, r2)
			SaveInteger(udg_hash, h, 3, i)
			SaveBoolean(udg_hash, h, 4, b)
			if b then
				DestroyEffect(AddSpecialEffectTarget("Effects\\SoundTrauma.mdl", damaged, "chest"))
				GroupAddUnit(gdamagefromdamager, damaged)
				SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + r2)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl", damaged, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Effects\\BlueGlaivie.mdl", damaged, "chest"))
			end
			g = nil
			g2 = nil
			g = CreateGroup()
			g2 = CreateGroup()
			GroupEnumUnitsInRange(g, xd, yd, 350., nil)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if damaged ~= Picked and IsUnitEnemy(Picked, pr) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') and GetUnitTypeId(Picked) ~= FourCC('uplg') then
					GroupAddUnit(g2, Picked)
				end
				GroupRemoveUnit(g, Picked)
			end
			Picked = nil
			RandomUnitFromGroup(1, g2)
			u = FirstOfGroup(udg_GroupRandomUnitFromGroup)
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			if u ~= nil then
				r1 = GetUnitX(u)
				r2 = GetUnitY(u)
				dist = SquareRoot(((r1 - xd) * (r1 - xd)) + ((r2 - yd) * (r2 - yd)))
				angle = bj_RADTODEG * Atan2((r2 - yd), (r1 - xd))
				dammi = CreateUnit(pr, FourCC('h00U'), xd, yd, angle)
				SetUnitScale(dammi, r4, r4, r4)
				ef = AddSpecialEffectTarget(str, dammi, "origin")
				UnitAddAbility(dammi, FourCC('Amrf'))
				UnitRemoveAbility(dammi, FourCC('Amrf'))
				SetUnitFlyHeight(dammi, 45., .0)
				g = CreateGroup()
				GroupAddUnit(g, damaged)
				SaveGroupHandle(udg_hash, h, 9, g)
				SaveUnitHandle(udg_hash, h, $A, dammi)
				SaveEffectHandle(udg_hash, h, $B, ef)
				SaveUnitHandle(udg_hash, h, $C, u)
				TimerStart(t, .03, true, Trig_Moon_Chackrum_Periodic_Actions)
				ef = nil
				dammi = nil
				t = nil
				u = nil
				g = nil
			else
				DestroyTimer(t)
				FlushChildHashtable(udg_hash, h)
				t = nil
			end
		end
		if GetUnitAbilityLevel(damager, FourCC('A0O0')) >= 1 then
			dammi = CreateUnit(pr, FourCC('h00U'), xr, yr, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
			UnitAddAbility(dammi, FourCC('A0O2'))
			IssueTargetOrderById(dammi, $D006B, damaged)
			dammi = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0OE')) >= 1 and GetRandomInt(1, FourCC('d')) <= 20 then
			StunUnitTimed(damaged, 1.)
			GroupAddUnit(gdamagefromdamager, damaged)
			SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + 15.)
		end
		if GetUnitAbilityLevel(damager, FourCC('A0O1')) >= 1 then
			t = LoadTimerHandle(udg_hash, hdr, $81)
			if t ~= nil then
				i = LoadInteger(udg_hash, GetHandleId(t), 1)
				if i <= 58 then
					i = i + 2
					SetAttackSpeedAbilityLevel(damager, 2)
					SetAttackAbilityLevel(damager, 1)
					SaveInteger(udg_hash, GetHandleId(t), 1, i)
					SaveInteger(udg_hash, hdr, $82, i)
				else
					ef = LoadEffectHandle(udg_hash, GetHandleId(t), 3)
					if ef == nil then
						ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Tornado\\Tornado_Target.mdl", damager, "weapon")
						SaveEffectHandle(udg_hash, GetHandleId(t), 3, ef)
						ef = nil
						ef = AddSpecialEffectTarget("Effects\\Spellorb.mdl", damager, "origin")
						SaveEffectHandle(udg_hash, GetHandleId(t), 4, ef)
					end
					ef = nil
				end
			else
				t = CreateTimer()
				SaveTimerHandle(udg_hash, hdr, $81, t)
				SetAttackSpeedAbilityLevel(damager, 2)
				SetAttackAbilityLevel(damager, 1)
				SaveInteger(udg_hash, hdr, $82, 2)
				SaveInteger(udg_hash, GetHandleId(t), 1, 2)
				SaveUnitHandle(udg_hash, GetHandleId(t), 2, damager)
			end
			TimerStart(t, 15., false, Trig_Blood_Bow_Remove_Effects_Actions)
			t = nil
		end
		if LoadBoolean(udg_hash, hdd, $84) == false and GetUnitAbilityLevel(damaged, FourCC('A0OB')) >= 1 and (GetUnitState(damaged, UNIT_STATE_LIFE) <= GetUnitState(damaged, UNIT_STATE_MAX_LIFE) * .5) then
			SaveBoolean(udg_hash, hdd, $84, true)
			SetAttackSpeedAbilityLevel(damaged, 50)
			SetAttackAbilityLevel(damaged, $A)
			t = CreateTimer()
			ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\TrollBerserk\\HeadhunterWEAPONSLeft.mdl", damaged, "overhead")
			SaveEffectHandle(udg_hash, GetHandleId(t), 2, ef)
			ef = nil
			ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Bloodlust\\BloodlustTarget.mdl", damaged, "hand,left")
			SaveEffectHandle(udg_hash, GetHandleId(t), 3, ef)
			ef = nil
			SaveUnitHandle(udg_hash, GetHandleId(t), 1, damaged)
			TimerStart(t, 7., false, Trig_Beorn_Rage_Remove_Effects_Actions)
			t = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A0OJ')) >= 1 then
			u = LoadUnitHandle(udg_hash, hdr, $85)
			if u == nil then
				u = damaged
				ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Bloodlust\\BloodlustTarget.mdl", damaged, "overhead")
				SaveEffectHandle(udg_hash, hdr, $87, ef)
				ef = nil
			end
			i = 0
			i = LoadInteger(udg_hash, hdr, $86)
			if damaged == u then
				if i < $A then
					i = i + 1
				end
			else
				if i >= 4 then
					if i == $A then
						i = 9
					end
					SetAttackSpeedAbilityLevel(damager, -20 * (i - 3))
				end
				i = 0
				ef = LoadEffectHandle(udg_hash, hdr, $87)
				DestroyEffect(ef)
				ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Bloodlust\\BloodlustTarget.mdl", damaged, "overhead")
				SaveEffectHandle(udg_hash, hdr, $87, ef)
				ef = nil
			end
			if i > 3 and i < $A then
				SetAttackSpeedAbilityLevel(damager, 20)
			end
			SaveUnitHandle(udg_hash, hdr, $85, damaged)
			SaveInteger(udg_hash, hdr, $86, i)
		end
		if GetUnitAbilityLevel(damager, FourCC('A0O1')) >= 1 then
			r1 = LoadInteger(udg_hash, hdr, $82) * damage * .15 * .01
			SetUnitState(damager, UNIT_STATE_LIFE, GetUnitState(damager, UNIT_STATE_LIFE) + r1)
		end
		if GetUnitAbilityLevel(damager, FourCC('A0OZ')) > 0 and IsUnitIllusion(damager) == false then
			i = LoadInteger(udg_hash, hdr, $8F)
			b = false
			i = i + 1
			if i == 3 then
				ef = AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", damager, "weapon")
				SaveEffectHandle(udg_hash, hdr, $90, ef)
				ef = nil
			end
			if i == 4 then
				i = 0
				b = true
			end
			SaveInteger(udg_hash, hdr, $8F, i)
			if b then
				DestroyEffect(LoadEffectHandle(udg_hash, hdr, $90))
				r1 = (damage * 1.) + GetHeroInt(damager, true)
				GroupAddUnit(gdamagefromdamager, damaged)
				SaveReal(udg_hash, hdd, $9E, LoadReal(udg_hash, hdd, $9E) + GetHeroInt(damager, true))
				SaveReal(udg_hash, hdd, $9F, LoadReal(udg_hash, hdd, $9F) + (damage * 1.))
				CreateTexttag(udg_ColorString[2] .. I2S(R2I(r1 + damage)) .. "!|r", .025, $FF, xd - 18., yd + 15., .0, .0, .035, 3.5)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", damaged, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\LightningBolt\\LightningBoltMissile.mdl", damaged, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", damaged, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldBuff.mdl", damaged, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Purge\\PurgeBuffTarget.mdl", damaged, "chest"))
				g = CreateGroup()
				g2 = CreateGroup()
				GroupEnumUnitsInRange(g, xd, yd, 300., nil)
				GroupRemoveUnit(g, damaged)
				while(true) do
					Picked = FirstOfGroup(g)
					if (Picked == nil) then break end
					if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, pr) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false then
						GroupAddUnit(g2, Picked)
					end
					GroupRemoveUnit(g, Picked)
				end
				Picked = nil
				GroupClear(g)
				DestroyGroup(g)
				g = nil
				RandomUnitFromGroup(3, g2)
				g = CreateGroup()
				GroupAddGroup(udg_GroupRandomUnitFromGroup, g)
				r1 = 100. + (GetUnitState(damager, UNIT_STATE_MAX_MANA) / 15.)
				while(true) do
					Picked = FirstOfGroup(g)
					if (Picked == nil) then break end
					t = CreateTimer()
					h = GetHandleId(t)
					SaveUnitHandle(udg_hash, h, 1, Picked)
					SaveInteger(udg_hash, h, 2, $F)
					SaveUnitHandle(udg_hash, h, 3, damaged)
					locr = GetUnitLoc(damaged)
					locd = GetUnitLoc(Picked)
					l = AddLightningEx("CLPB", true, xd, yd, GetUnitFlyHeight(damaged) + 25. + GetLocationZ(locr), GetUnitX(Picked), GetUnitY(Picked), GetUnitFlyHeight(Picked) + 25. + GetLocationZ(locd))
					SaveLightningHandle(udg_hash, h, 4, l)
					l = nil
					RemoveLocation(locr)
					locr = nil
					RemoveLocation(locd)
					locd = nil
					TimerStart(t, .04, true, Trig_Remove_Lightning_From_Staff_Of_Lightning_Actions)
					GroupAddUnit(gdamagefromdamager, Picked)
					SaveReal(udg_hash, GetHandleId(Picked), $9E, LoadReal(udg_hash, GetHandleId(Picked), $9E) + r1)
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", Picked, "chest"))
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\LightningBolt\\LightningBoltMissile.mdl", Picked, "chest"))
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", Picked, "origin"))
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldBuff.mdl", Picked, "chest"))
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Purge\\PurgeBuffTarget.mdl", Picked, "chest"))
					GroupRemoveUnit(g, Picked)
					t = nil
				end
				GroupClear(g)
				DestroyGroup(g)
				g = nil
				GroupClear(g2)
				DestroyGroup(g2)
				g2 = nil
				Picked = nil
			end
		end
		if GetUnitAbilityLevel(damager, FourCC('A0P3')) > 0 and LoadTimerHandle(udg_hash, hdr, $92) ~= nil and IsUnitIllusion(damager) == false then
			DestroyEffect(LoadEffectHandle(udg_hash, GetHandleId(LoadTimerHandle(udg_hash, hdr, $92)), 2))
			DestroyEffect(LoadEffectHandle(udg_hash, GetHandleId(LoadTimerHandle(udg_hash, hdr, $92)), 3))
			UnitRemoveAbility(damager, FourCC('A0P4'))
			r1 = damage * .5
			g = CreateGroup()
			GroupEnumUnitsInRange(g, xd, yd, 150., nil)
			GroupRemoveUnit(g, damaged)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, pr) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false then
					GroupAddUnit(gdamagefromdamager, Picked)
					SaveReal(udg_hash, GetHandleId(Picked), $9F, LoadReal(udg_hash, GetHandleId(Picked), $9F) + r1)
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl", Picked, "chest"))
					DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPeasant.mdl", Picked, "origin"))
					DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Critters\\Albatross\\CritterBloodAlbatross.mdl", Picked, "origin"))
				end
				GroupRemoveUnit(g, Picked)
			end
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			Picked = nil
			FlushChildHashtable(udg_hash, GetHandleId(LoadTimerHandle(udg_hash, hdr, $92)))
			DestroyTimer(LoadTimerHandle(udg_hash, hdr, $92))
		end
		if GetUnitAbilityLevel(damager, FourCC('A0P3')) > 0 and GetRandomInt(1, FourCC('d')) <= ($A + 5 * GetUnitAbilityLevel(damager, FourCC('A0P3'))) and IsUnitIllusion(damager) == false then
			SaveInteger(udg_hash, hdr, $91, 1)
			t = LoadTimerHandle(udg_hash, hdr, $92)
			if t == nil then
				t = CreateTimer()
				h = GetHandleId(t)
				SaveTimerHandle(udg_hash, hdr, $92, t)
				UnitAddAbility(damager, FourCC('A0P4'))
				SaveUnitHandle(udg_hash, h, 1, damager)
				SaveEffectHandle(udg_hash, h, 2, AddSpecialEffectTarget("Effects\\CosmicTouch.MDX", damager, "weapon"))
				SaveEffectHandle(udg_hash, h, 3, AddSpecialEffectTarget("Effects\\CosmicTouch.MDX", damager, "overhead"))
			end
			TimerStart(t, 1., false, Trig_Remove_ASBonus_Double_Attack_Actions)
			t = nil
		end
		if GetUnitAbilityLevel(damaged, FourCC('A0P9')) > 0 and IsUnitIllusion(damaged) == false then
			i = LoadInteger(udg_hash, hdd, $98)
			lvl = LoadInteger(udg_hash, hdd, $99)
			if lvl > 0 and (IsUnitType(damager, UNIT_TYPE_MAGIC_IMMUNE) == false) then
				GroupAddUnit(gdamagefromdamaged, damager)
				SaveReal(udg_hash, hdr, $A0, LoadReal(udg_hash, hdr, $A0) + I2R(lvl))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl", damager, "chest"))
			end
			i = i + 1
			if i == 5 then
				i = 0
				if lvl < GetUnitAbilityLevel(damaged, FourCC('A0P9')) * 5 then
					lvl = lvl + 1
					SaveInteger(udg_hash, hdd, $99, lvl)
					t = CreateTimer()
					h = GetHandleId(t)
					SaveUnitHandle(udg_hash, h, 1, damaged)
					SetUnitLifeAndManaRegeneration(damaged, "life", 1)
					SetArmorAbilityLevel(damaged, 1)
					TimerStart(t, 5. * GetUnitAbilityLevel(damaged, FourCC('A0P9')), false, Trig_Remove_Bonus_Marshal_Armor_Actions)
					t = nil
				end
			end
			SaveInteger(udg_hash, hdd, $98, i)
			t = nil
		end
		if GetUnitAbilityLevel(damager, FourCC('A09L')) > 0 then
			i = LoadInteger(udg_hash, hdr, $A7)
			b = false
			i = i + 1
			if i == 2 then
				ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\TrollBerserk\\HeadhunterWEAPONSLeft.mdl", damager, "hand,left")
				SaveEffectHandle(udg_hash, hdr, $A8, ef)
				ef = nil
				ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\TrollBerserk\\HeadhunterWEAPONSRight.mdl", damager, "weapon,right")
				SaveEffectHandle(udg_hash, hdr, $A9, ef)
				ef = nil
			end
			if i == 3 then
				i = 0
				b = true
			end
			SaveInteger(udg_hash, hdr, $A7, i)
			if b then
				DestroyEffect(LoadEffectHandle(udg_hash, hdr, $A8))
				DestroyEffect(LoadEffectHandle(udg_hash, hdr, $A9))
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HeroBloodElfBlood.mdl", damaged, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl", damaged, "origin"))
				r1 = damage * 2.
				GroupAddUnit(gdamagefromdamager, damaged)
				SaveReal(udg_hash, hdd, $9F, LoadReal(udg_hash, hdd, $9F) + r1)
				CreateTexttag(udg_ColorString[1] .. I2S(R2I(r1 + damage)) .. "!|r", .031, $FF, xd - 18., yd + 15., .0, .0, .035, 3.5)
				dammi = CreateUnit(pr, FourCC('h00U'), xd, yd, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
				UnitAddAbility(dammi, FourCC('A0F8'))
				IssueTargetOrderById(dammi, $D006B, damaged)
				dammi = nil
			end
		end
		if GetUnitAbilityLevel(damager, FourCC('A0GS')) > 0 then
			r1 = GetUnitFacing(damaged)
			r2 = (Atan2(yr - yd, xr - xd) * bj_RADTODEG)
			r3 = r2 + 360.
			dist = SquareRoot((xd - xr) * (xd - xr) + (yd - yr) * (yd - yr))
			if ((r1 < r2 + 60.) and (r1 > r2 - 60.)) or ((r1 < r3 + 60.) and (r1 > r3 - 60.)) and dist <= 175. then
				UnitDamageTarget(damager, damaged, GetHeroAgi(damager, true) * .6, false, false, ATTACK_TYPE_MELEE, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Critters\\Albatross\\CritterBloodAlbatross.mdl", damaged, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\GargoyleMissile\\GargoyleMissile.mdl", damaged, "chest"))
			end
		end
		if GetUnitAbilityLevel(damager, FourCC('A0QT')) >= 1 and GetRandomInt(0, FourCC('d')) <= (7 + GetUnitAbilityLevel(damager, FourCC('A0QT')) * 3) then
			r1 = (GetUnitAbilityLevel(damager, FourCC('A0QT')) * .05 + .15) * damage
			StunUnitTimed(damaged, 1.5)
			g = CreateGroup()
			if LoadBoolean(udg_hash, hdr, $B3) == false then
				GroupEnumUnitsInRange(g, xd, yd, 150., nil)
			else
				GroupEnumUnitsInRange(g, xd, yd, 225., nil)
				r1 = ((GetUnitAbilityLevel(damager, FourCC('A0QT')) * .05 + .15) * damage) + GetHeroAgi(damager, true) * .75
			end
			GroupRemoveUnit(g, damaged)
			DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\SteamTank\\SteamTankImpact.mdl", xd, yd))
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, pr) and Picked ~= damaged and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\GyroCopter\\GyroCopterMissile.mdl", Picked, "origin"))
					StunUnitTimed(Picked, .25)
					GroupAddUnit(gdamagefromdamager, Picked)
					SaveReal(udg_hash, GetHandleId(Picked), $9F, LoadReal(udg_hash, GetHandleId(Picked), $9F) + r1)
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\GyroCopter\\GyroCopterImpact.mdl", Picked, "chest"))
				end
				GroupRemoveUnit(g, Picked)
			end
			GroupClear(g)
			DestroyGroup(g)
			g = nil
		end
		if GetUnitAbilityLevel(damaged, FourCC('A0OW')) > 0 then
			if damage > 7 then
				r1 = 7
			end
			if damage <= 7 then
				r1 = damage
			end
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			SaveReal(udg_hash, h, 2, r1)
			TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			t = nil
		end
		if GetUnitAbilityLevel(damaged, FourCC('A0K7')) > 0 and GetRandomInt(1, FourCC('d')) <= 20 and GetUnitAbilityLevel(damaged, FourCC('A0K9')) < 1 then
			dammi = CreateUnit(pd, FourCC('h013'), xr, yr, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
			UnitAddAbility(dammi, FourCC('A0K8'))
			IssueTargetOrderById(dammi, $D006B, damaged)
			dammi = nil
		end
		if GetUnitAbilityLevel(damaged, FourCC('B03P')) > 0 then
			UnitDamageTarget(damaged, damager, (GetRandomReal(20., 50.)), false, false, ATTACK_TYPE_MELEE, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\Immolation\\ImmolationDamage.mdl", damager, "chest"))
		end
	end
	if damage >= .01 then
		if LoadReal(udg_hash, hdd, 65) > .0 and LoadEffectHandle(udg_hash, hdd, 66) ~= nil then
			r1 = LoadReal(udg_hash, hdd, 65)
			if (r1 - damage) > .0 then
				r2 = damage
			else
				r2 = r1
				ef = LoadEffectHandle(udg_hash, hdd, 66)
				DestroyEffect(ef)
				ef = nil
			end
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			SaveReal(udg_hash, h, 2, r2)
			TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			SaveReal(udg_hash, hdd, 65, r1 - damage)
			t = nil
		end
		if GetUnitAbilityLevel(damaged, FourCC('A07U')) > 0 and GetRandomInt(1, FourCC('d')) <= 30 then
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			r2 = damage * .2
			if GetUnitState(damaged, UNIT_STATE_LIFE) <= damage then
				SetUnitInvulnerable(damaged, true)
				TimerStart(t, .0, false, Trig_Make_Unit_UnInvulnerable_Actions)
			else
				SaveReal(udg_hash, h, 2, damage)
				TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			end
			dammi = CreateUnit(Player($F), FourCC('h00U'), xd, yd, bj_RADTODEG * Atan2(yr - yd, xr - xd))
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SpiritOfVengeanceMissile\\SpiritOfVengeanceMissile.mdl", damager, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\SpellShieldAmulet\\SpellShieldCaster.mdl", dammi, "origin"))
			dammi = nil
			if IsUnitType(damager, UNIT_TYPE_MAGIC_IMMUNE) == false then
				GroupAddUnit(gdamagefromdamaged, damager)
				SaveReal(udg_hash, hdr, $A0, LoadReal(udg_hash, hdr, $A0) + r2)
			end
			t = nil
		end
		if damage > .0 and (pd == Player(9) or pd == Player($A) or pd == Player($B)) then
			players = LoadForceHandle(udg_hash, hdd, 72)
			if players == nil then
				players = CreateForce()
			end
			if IsPlayerInForce(pr, players) == false then
				ForceAddPlayer(players, pr)
			end
			t = nil
			t = LoadTimerHandle(udg_hash, hdd, 73 + GetPlayerId(pr))
			if t == nil then
				t = CreateTimer()
			end
			SaveTimerHandle(udg_hash, hdd, 73 + GetPlayerId(pr), t)
			h = GetHandleId(t)
			SavePlayerHandle(udg_hash, h, 1, pr)
			SaveForceHandle(udg_hash, h, 2, players)
			SaveInteger(udg_hash, h, 3, hdd)
			TimerStart(t, 7., false, Trig_AddDamage_Refresh_Creep_Assists_Actions)
			SaveForceHandle(udg_hash, hdd, 72, players)
			players = nil
			t = nil
		end
		if damage > 5. and GetUnitAbilityLevel(damaged, FourCC('A09G')) > 0 and GetRandomInt(1, FourCC('d')) <= 25 then
			SetUnitState(damaged, UNIT_STATE_LIFE, GetUnitState(damaged, UNIT_STATE_LIFE) + 25.)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayDamage.mdl", damaged, "chest"))
		end
		if damage > 10. and GetUnitAbilityLevel(damaged, FourCC('A09K')) > 0 and GetRandomInt(1, FourCC('d')) <= 40 then
			SetUnitState(damaged, UNIT_STATE_LIFE, GetUnitState(damaged, UNIT_STATE_LIFE) + 25. + (damage / 3))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\SpellSteal\\SpellStealMissile.mdl", damaged, "chest"))
		end
		if LoadReal(udg_hash, hdd, 86) > .0 and LoadEffectHandle(udg_hash, hdd, 87) ~= nil then
			r1 = LoadReal(udg_hash, hdd, 86)
			r3 = GetUnitState(damaged, UNIT_STATE_LIFE)
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			if (r1 - damage) > .0 then
				r2 = damage
			else
				r2 = r1
				ef = LoadEffectHandle(udg_hash, hdd, 87)
				DestroyEffect(ef)
				ef = nil
				SaveEffectHandle(udg_hash, hdd, 87, nil)
			end
			if r3 <= damage and (r1 + r3 - damage) > .0 then
				SetUnitInvulnerable(damaged, true)
				TimerStart(t, .0, false, Trig_Make_Unit_UnInvulnerable_Actions)
				if r1 <= damage then
					t2 = CreateTimer()
					h2 = GetHandleId(t2)
					SaveUnitHandle(udg_hash, h2, 1, damaged)
					SaveUnitHandle(udg_hash, h2, 2, damager)
					SaveReal(udg_hash, h2, 3, (damage - r1))
					SaveStr(udg_hash, h2, 4, "clear")
					TimerStart(t2, .0, false, Trig_Damage_Unit_With_Wait_Actions)
					t2 = nil
				end
			end
			if r3 > damage then
				SaveReal(udg_hash, h, 2, r2)
				TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			end
			SaveReal(udg_hash, hdd, 86, r1 - damage)
			t = nil
		end
		if (GetUnitAbilityLevel(damaged, FourCC('A0IT')) > 0 or GetUnitAbilityLevel(damaged, FourCC('A0J8')) > 0) and IsUnitType(damager, UNIT_TYPE_MAGIC_IMMUNE) == false then
			if GetUnitAbilityLevel(damaged, FourCC('A0IT')) > 0 then
				r1 = damage * .2 + 20.
			end
			if GetUnitAbilityLevel(damaged, FourCC('A0J8')) > 0 then
				r1 = damage * .3 + 30.
			end
			GroupAddUnit(gdamagefromdamaged, damager)
			SaveReal(udg_hash, hdr, $A1, LoadReal(udg_hash, hdr, $A1) + r1)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\ThornsAura\\ThornsAuraDamage.mdl", damager, "overhead"))
		end
		if LoadBoolean(udg_hash, hdd, 94) and LoadBoolean(udg_hash, hdd, $A2) == false and LoadEffectHandle(udg_hash, hdd, 95) ~= nil and (GetUnitState(damaged, UNIT_STATE_LIFE) <= damage or GetUnitState(damaged, UNIT_STATE_LIFE) <= GetUnitState(damaged, UNIT_STATE_MAX_LIFE) * .02) then
			ef = LoadEffectHandle(udg_hash, hdd, 95)
			DestroyEffect(ef)
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			SetUnitInvulnerable(damaged, true)
			TimerStart(t, .0, false, Trig_Make_Unit_UnInvulnerable_Actions)
			SetUnitState(damaged, UNIT_STATE_LIFE, GetUnitState(damaged, UNIT_STATE_MAX_LIFE) * .5)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl", damaged, "origin"))
			SaveEffectHandle(udg_hash, hdd, 95, nil)
			SaveReal(udg_hash, hdd, 96, 60.)
			SaveBoolean(udg_hash, hdd, $A2, true)
			t2 = CreateTimer()
			h2 = GetHandleId(t2)
			SaveUnitHandle(udg_hash, h2, 1, damaged)
			TimerStart(t2, 60., false, Trig_Cuirass_of_Invulnerable_Timer_Death_Denial_Actions)
			ef = nil
			t = nil
			t2 = nil
		end
		if LoadReal(udg_hash, hdd, FourCC('i')) > .0 and LoadBoolean(udg_hash, hdd, FourCC('f')) then
			r1 = LoadReal(udg_hash, hdd, FourCC('i'))
			r3 = GetUnitState(damaged, UNIT_STATE_LIFE)
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			SaveBoolean(udg_hash, hdd, FourCC('j'), true)
			if (r1 - damage) > .0 then
				r2 = damage
			else
				r2 = r1
				ef = LoadEffectHandle(udg_hash, hdd, FourCC('g'))
				DestroyEffect(ef)
				ef = nil
				SaveEffectHandle(udg_hash, hdd, FourCC('g'), nil)
				t3 = CreateTimer()
				h3 = GetHandleId(t3)
				SaveUnitHandle(udg_hash, h3, 1, damaged)
				SaveReal(udg_hash, hdd, FourCC('h'), 45.)
				TimerStart(t3, 45., false, Trig_Archimagus_Armor_Timer_Death_Denial_Actions)
				g = CreateGroup()
				GroupEnumUnitsInRange(g, xd, yd, 500., nil)
				SetUnitState(damaged, UNIT_STATE_MANA, GetUnitState(damaged, UNIT_STATE_MANA) + ((50 + GetHeroInt(damaged, true) * .5)))
				while(true) do
					Picked = FirstOfGroup(g)
					if (Picked == nil) then break end
					if IsUnitAlly(Picked, pd) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
						SetUnitState(Picked, UNIT_STATE_MANA, GetUnitState(Picked, UNIT_STATE_MANA) + ((50 + GetHeroInt(damaged, true) * .5)))
						DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl", Picked, "origin"))
					end
					GroupRemoveUnit(g, Picked)
				end
				GroupClear(g)
				DestroyGroup(g)
				g = nil
				Picked = nil
			end
			if r3 <= damage and (r1 + r3 - damage) > .0 then
				SetUnitInvulnerable(damaged, true)
				TimerStart(t, .0, false, Trig_Make_Unit_UnInvulnerable_Actions)
				if r1 <= damage then
					t2 = CreateTimer()
					h2 = GetHandleId(t2)
					SaveUnitHandle(udg_hash, h2, 1, damaged)
					SaveUnitHandle(udg_hash, h2, 2, damager)
					SaveReal(udg_hash, h2, 3, (damage - r1))
					SaveStr(udg_hash, h2, 4, "clear")
					TimerStart(t2, .0, false, Trig_Damage_Unit_With_Wait_Actions)
					t2 = nil
				end
			end
			if r3 > damage then
				SaveReal(udg_hash, h, 2, r2)
				TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			end
			SaveReal(udg_hash, hdd, FourCC('i'), r1 - damage)
			t = nil
		end
		if LoadReal(udg_hash, hdd, FourCC('n')) > .0 and LoadUnitHandle(udg_hash, hdd, FourCC('o')) ~= nil then
			r2 = damage * LoadReal(udg_hash, hdd, FourCC('n'))
			r3 = GetUnitState(damaged, UNIT_STATE_LIFE)
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			GroupAddUnit(gdamagefromdamager, LoadUnitHandle(udg_hash, hdd, FourCC('o')))
			SaveReal(udg_hash, GetHandleId(LoadUnitHandle(udg_hash, hdd, FourCC('o'))), $9E, LoadReal(udg_hash, GetHandleId(LoadUnitHandle(udg_hash, hdd, FourCC('o'))), $9E) + (r2) / 2)
			if (r3 <= damage) and (r2 + r3 - damage) > .0 then
				SetUnitInvulnerable(damaged, true)
				TimerStart(t, .0, false, Trig_Make_Unit_UnInvulnerable_Actions)
			end
			if r3 > damage then
				SaveReal(udg_hash, h, 2, r2)
				TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			end
			t = nil
		end
		if LoadReal(udg_hash, hdd, $93) > .0 and LoadTimerHandle(udg_hash, hdd, $95) ~= nil then
			r1 = LoadReal(udg_hash, hdd, $93)
			if (r1 - damage) > .0 then
				r2 = damage
			else
				r2 = r1
				g = CreateGroup()
				u = LoadUnitHandle(udg_hash, hdd, $97)
				p = GetOwningPlayer(u)
				r3 = LoadReal(udg_hash, hdd, $96)
				DestroyEffect(AddSpecialEffect("Effects\\LightNova.mdl", GetUnitX(damaged), GetUnitY(damaged)))
				udg_Temp_Integer[$A] = 0
				udg_Temp_Integer[$B] = 0
				DestroyEffect(AddSpecialEffectTarget("Effects\\DivineRage.mdx", damaged, "origin"))
				GroupEnumUnitsInRange(g, GetUnitX(damaged), GetUnitY(damaged), 500., nil)
				while(true) do
					Picked = FirstOfGroup(g)
					if (Picked == nil) then break end
					if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
						DestroyEffect(AddSpecialEffectTarget("Effects\\DivineRage.mdx", Picked, "origin"))
						UnitDamageTarget(u, Picked, r3, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					end
					GroupRemoveUnit(g, Picked)
				end
				t2 = LoadTimerHandle(udg_hash, hdd, $95)
				h2 = GetHandleId(t2)
				ef = LoadEffectHandle(udg_hash, h2, 4)
				DestroyEffect(ef)
				ef = nil
				ef = LoadEffectHandle(udg_hash, h2, 5)
				DestroyEffect(ef)
				ef = nil
				ef = LoadEffectHandle(udg_hash, h2, 6)
				DestroyEffect(ef)
				ef = nil
				SetAttackSpeedAbilityLevel(damaged, -LoadInteger(udg_hash, GetHandleId(damaged), $94))
				FlushChildHashtable(udg_hash, h2)
				DestroyTimer(t2)
				t2 = nil
				u = nil
				p = nil
				DestroyGroup(g)
				g = nil
			end
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			SaveReal(udg_hash, h, 2, r2)
			TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			SaveReal(udg_hash, hdd, $93, r1 - damage)
			t = nil
		end
		if LoadBoolean(udg_hash, hdd, $A5) and LoadTimerHandle(udg_hash, hdd, $A6) ~= nil then
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			if GetUnitState(damaged, UNIT_STATE_LIFE) > damage then
				SaveReal(udg_hash, h, 2, damage)
				TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			end
			if GetUnitState(damaged, UNIT_STATE_LIFE) <= damage then
				SetUnitInvulnerable(damaged, true)
				TimerStart(t, .0, false, Trig_Make_Unit_UnInvulnerable_Actions)
			end
			t = nil
		end
		if udg_IsBeronsFightWin and (GetUnitTypeId(damaged) == FourCC('h01K') or GetUnitTypeId(damaged) == FourCC('e002') or GetUnitTypeId(damaged) == FourCC('n00Y') or GetUnitTypeId(damaged) == FourCC('o003')) then
			r2 = damage
			r3 = GetUnitState(damaged, UNIT_STATE_LIFE)
			t = CreateTimer()
			h = GetHandleId(t)
			SaveUnitHandle(udg_hash, h, 1, damaged)
			if (r3 <= damage) then
				SetUnitInvulnerable(damaged, true)
				TimerStart(t, .0, false, Trig_Make_Unit_UnInvulnerable_Actions)
			end
			if r3 > damage then
				SaveReal(udg_hash, h, 2, r2 * .3)
				TimerStart(t, .0, false, Trig_Hil_Unit_Actions)
			end
			t = nil
		end
		if IsUnitAlly(damaged, Player($B)) or IsUnitAlly(damager, Player($B)) then
			if IsUnitAlly(damaged, Player($B)) then
				dammi = damaged
			else
				dammi = damager
			end
			if IsUnitIllusion(dammi) == false and GetUnitState(dammi, UNIT_STATE_LIFE) > .405 and GetUnitTypeId(dammi) ~= FourCC('h00U') then
				SaveInteger(udg_hash, GetHandleId(dammi), FourCC('k'), 0)
			end
		end
		if pd == Player($F) and damage > .0 and IsUnitIllusion(damaged) == false and udg_IsMinimapPingGuardsAttacked == false and (GetUnitTypeId(damaged) == FourCC('h01K') or GetUnitTypeId(damaged) == FourCC('e002') or GetUnitTypeId(damaged) == FourCC('n00Y') or GetUnitTypeId(damaged) == FourCC('o003')) then
			if (IsPlayerInForce(GetLocalPlayer(), udg_IGRAET)) then
				DisplayTextToPlayer(GetLocalPlayer(), .0, .0, "|cff99ccffВНИМАНИЕ!!!|r")
				DisplayTextToPlayer(GetLocalPlayer(), .0, .0, "|cffff0000Стражи-Чародеи атакованы!!!|r")
				PingMinimapEx(xd, yd, 3., $FE, 0, 0, true)
			end
			udg_IsMinimapPingGuardsAttacked = true
			t = CreateTimer()
			TimerStart(t, 6., false, Trig_IsMinimapPingGuardsAttacked_Refresh_Actions)
			t = nil
		end
		if damage > .0 then
			i = GetPlayerId(pr)
			if GetPlayerId(pr) <= 8 then
				udg_Player_Taken_Damage_Current[i] = udg_Player_Taken_Damage_Current[i] + damage
				udg_Player_Taken_Damage_All[i] = udg_Player_Taken_Damage_All[i] + damage
			end
			i = GetPlayerId(pd)
			if GetPlayerId(pd) <= 8 then
				udg_Player_Received_Damage_Current[i] = udg_Player_Received_Damage_Current[i] + damage
			end
		end
	end
	while(true) do
		Picked = FirstOfGroup(gdamagefromdamaged)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			UnitDamageTarget(damaged, Picked, ConvertMagicAndChaosDamageInClear(Picked, LoadReal(udg_hash, GetHandleId(Picked), $A0), LoadReal(udg_hash, GetHandleId(Picked), $A1)), false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			SaveReal(udg_hash, GetHandleId(Picked), $A0, .0)
			SaveReal(udg_hash, GetHandleId(Picked), $A1, .0)
		end
		GroupRemoveUnit(gdamagefromdamaged, Picked)
	end
	Picked = nil
	GroupClear(gdamagefromdamaged)
	DestroyGroup(gdamagefromdamaged)
	gdamagefromdamaged = nil
	while(true) do
		Picked = FirstOfGroup(gdamagefromdamager)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			UnitDamageTarget(damager, Picked, ConvertMagicAndChaosDamageInClear(Picked, LoadReal(udg_hash, GetHandleId(Picked), $9E), LoadReal(udg_hash, GetHandleId(Picked), $9F)), false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			SaveReal(udg_hash, GetHandleId(Picked), $9E, .0)
			SaveReal(udg_hash, GetHandleId(Picked), $9F, .0)
		end
		GroupRemoveUnit(gdamagefromdamager, Picked)
	end
	Picked = nil
	GroupClear(gdamagefromdamager)
	DestroyGroup(gdamagefromdamager)
	gdamagefromdamager = nil
	damager = nil
	damaged = nil
	pr = nil
	pd = nil
	dammi = nil
	u = nil
	l = nil
	t = nil
	txt = nil
	ef = nil
	g = nil
end

---@return boolean
function Trig_Del_Conditions()
	return GetEventDamage() > .0
end

function InitTrig_AddDamage()
	gg_trg_AddDamage = CreateTrigger()
	TriggerAddCondition(gg_trg_AddDamage, Condition(Trig_Del_Conditions))
	TriggerAddAction(gg_trg_AddDamage, Trig_AddDamage_Actions)
end

function Trig_TimeTalisman_Remove_Bonuses_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local as = LoadInteger(udg_hash, h, 2) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 5) ---@type effect
	SetAttackSpeedAbilityLevel(target, -as)
	SaveBoolean(udg_hash, GetHandleId(target), $B1, false)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	DestroyEffect(ef)
	target = nil
	ef = nil
	t = nil
end

function Trig_TimeTalisman_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local id = GetSpellAbilityId() ---@type number integer
	local ef ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local as ---@type number integer
	local dammi ---@type unit
	dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), GetUnitX(caster), GetUnitY(caster), .0)
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
	UnitAddAbility(dammi, FourCC('A0QQ'))
	IssueTargetOrderById(dammi, $D0085, target)
	dammi = nil
	if id == FourCC('A0QI') then
		as = 30
	end
	if id == FourCC('A0QM') then
		as = 45
	end
	if id == FourCC('A0QN') then
		as = 60
	end
	if id == FourCC('A0QO') then
		as = 75
	end
	if id == FourCC('A0QP') then
		as = 90
	end
	if LoadBoolean(udg_hash, GetHandleId(target), $B1) == false then
		ef = AddSpecialEffectTarget("Punishment_Missle.mdx", target, "chest")
		SaveBoolean(udg_hash, GetHandleId(target), $B1, true)
		SetAttackSpeedAbilityLevel(target, as)
		SaveUnitHandle(udg_hash, h, 1, target)
		SaveInteger(udg_hash, h, 2, as)
		SaveEffectHandle(udg_hash, h, 5, ef)
		TimerStart(t, 10., false, Trig_TimeTalisman_Remove_Bonuses_Actions)
		ef = nil
	else
		SimError(GetOwningPlayer(caster), "На этого воина уже наложено заклинание: 'Обгоняя Время'.")
	end
	caster = nil
	target = nil
	t = nil
end

---@return boolean
function Trig_TimeTalisman_Conditions()
	return (GetSpellAbilityId() == FourCC('A0QI') or GetSpellAbilityId() == FourCC('A0QM') or GetSpellAbilityId() == FourCC('A0QN') or GetSpellAbilityId() == FourCC('A0QO') or GetSpellAbilityId() == FourCC('A0QP'))
end

function InitTrig_TimeTalisman()
	local index = 0 ---@type number integer
	gg_trg_TimeTalisman = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_TimeTalisman, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_TimeTalisman, Condition(Trig_TimeTalisman_Conditions))
	TriggerAddAction(gg_trg_TimeTalisman, Trig_TimeTalisman_Actions)
end

function Trig_Take_Paladin_Armor_Periodic_Wave_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local dammi = LoadUnitHandle(udg_hash, h, 4) ---@type unit
	local x ---@type number real
	local y ---@type number real
	local xt ---@type number real
	local yt ---@type number real
	local angle ---@type number real
	local dist ---@type number real
	local heal ---@type number real
	local ef ---@type effect
	x = GetUnitX(dammi)
	y = GetUnitY(dammi)
	xt = GetUnitX(target)
	yt = GetUnitY(target)
	angle = bj_RADTODEG * Atan2(yt - y, xt - x)
	x = x + 17. * Cos(angle * bj_DEGTORAD)
	y = y + 17. * Sin(angle * bj_DEGTORAD)
	SetUnitPosition(dammi, x, y)
	dist = SquareRoot((xt - x) * (xt - x) + (yt - y) * (yt - y))
	if dist < 23. or GetUnitState(target, UNIT_STATE_LIFE) < .405 then
		SetUnitScale(dammi, .6, .6, .6)
		ef = LoadEffectHandle(udg_hash, h, 3)
		DestroyEffect(ef)
		ef = nil
		if GetUnitState(target, UNIT_STATE_LIFE) > .405 then
			heal = LoadReal(udg_hash, h, 2)
			SetUnitState(target, UNIT_STATE_LIFE, GetUnitState(target, UNIT_STATE_LIFE) + heal)
			DestroyEffect(AddSpecialEffectTarget("Effects\\MegaHeal.mdx", target, "origin"))
			DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Heal\\HealTarget.mdl", target, "origin"), 2.)
		else
			DestroyEffect(AddSpecialEffect("Effects\\HolyPhoenixMissle.mdx", x, y))
		end
		RemoveUnit(dammi)
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	end
	t = nil
	target = nil
	dammi = nil
end

function Trig_Take_Paladin_Armor_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local regen = LoadInteger(udg_hash, h, 2) ---@type number integer
	local armor = LoadItemHandle(udg_hash, h, 3) ---@type item
	local newregen = R2I(GetUnitState(hero, UNIT_STATE_MAX_LIFE) * .01) ---@type number integer
	local heal ---@type number real
	local t2 ---@type timer
	local h2 ---@type number integer
	local target ---@type unit
	local g ---@type group
	local grup ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	local ef ---@type effect
	if armor ~= LoadItemHandle(udg_hash, GetHandleId(hero), $AD) or UnitHasItem(hero, armor) == false then
		SetUnitLifeAndManaRegeneration(hero, "life", -LoadInteger(udg_hash, h, 2))
		SaveInteger(udg_hash, h, 2, 0)
	end
	if UnitHasItem(hero, armor) == false then
		SaveItemHandle(udg_hash, GetHandleId(hero), $AD, GetItemOfTypeFromUnitBJ(hero, FourCC('I02P')))
	end
	if GetUnitState(hero, UNIT_STATE_LIFE) > .405 and CountItemOfTypeOnUnit(hero, FourCC('I02P')) > 0 and armor == LoadItemHandle(udg_hash, GetHandleId(hero), $AD) then
		if regen ~= newregen then
			SetUnitLifeAndManaRegeneration(hero, "life", -regen)
			SetUnitLifeAndManaRegeneration(hero, "life", newregen)
			SaveInteger(udg_hash, h, 2, newregen)
		end
		g = CreateGroup()
		grup = CreateGroup()
		GroupEnumUnitsInRange(g, GetUnitX(hero), GetUnitY(hero), 750., nil)
		GroupRemoveUnit(g, hero)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitAlly(Picked, GetOwningPlayer(hero)) and (GetUnitState(Picked, UNIT_STATE_LIFE) < .99 * GetUnitState(Picked, UNIT_STATE_MAX_LIFE)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(grup, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		RandomUnitFromGroup(1, grup)
		GroupAddGroup(udg_GroupRandomUnitFromGroup, g)
		target = FirstOfGroup(udg_GroupRandomUnitFromGroup)
		if target == nil then
			target = hero
		end
		if target ~= nil then
			t2 = CreateTimer()
			h2 = GetHandleId(t2)
			heal = 200. + GetHeroStr(hero, true)
			dammi = CreateUnit(GetOwningPlayer(hero), FourCC('h00U'), GetUnitX(hero), GetUnitY(hero), (bj_RADTODEG * Atan2(GetUnitY(target) - GetUnitY(hero), GetUnitX(target) - GetUnitX(hero))))
			UnitAddAbility(dammi, FourCC('Amrf'))
			UnitRemoveAbility(dammi, FourCC('Amrf'))
			SetUnitFlyHeight(dammi, 50., .0)
			ef = AddSpecialEffectTarget("Effects\\HolyPhoenixMissle.mdx", dammi, "chest")
			SaveUnitHandle(udg_hash, h2, 1, target)
			SaveReal(udg_hash, h2, 2, heal)
			SaveEffectHandle(udg_hash, h2, 3, ef)
			SaveUnitHandle(udg_hash, h2, 4, dammi)
			TimerStart(t2, .03, true, Trig_Take_Paladin_Armor_Periodic_Wave_Move_Actions)
			ef = nil
			dammi = nil
			t2 = nil
		end
		GroupClear(g)
		DestroyGroup(g)
		g = nil
	end
	if CountItemOfTypeOnUnit(hero, FourCC('I02P')) <= 0 then
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	end
	armor = nil
	t = nil
	hero = nil
end

function Trig_Take_Paladin_Armor_Actions()
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local regen = 0 ---@type number integer
	local hero = GetTriggerUnit() ---@type unit
	SaveUnitHandle(udg_hash, h, 1, hero)
	SaveInteger(udg_hash, h, 2, regen)
	SaveItemHandle(udg_hash, h, 3, GetManipulatedItem())
	SaveItemHandle(udg_hash, GetHandleId(hero), $AD, GetManipulatedItem())
	TimerStart(t, 5., true, Trig_Take_Paladin_Armor_Periodic_Actions)
	t = nil
	hero = nil
end

---@return boolean
function Trig_Take_Paladin_Armor_Conditions()
	return (GetItemTypeId(GetManipulatedItem()) == FourCC('I02P'))
end

function InitTrig_Take_Paladin_Armor()
	local index = 0 ---@type number integer
	gg_trg_Take_Paladin_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Take_Paladin_Armor, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Take_Paladin_Armor, Condition(Trig_Take_Paladin_Armor_Conditions))
	TriggerAddAction(gg_trg_Take_Paladin_Armor, Trig_Take_Paladin_Armor_Actions)
end

---@return boolean
function Trig_Take_Archimagus_Staff_Conditions()
	return GetItemTypeId(GetManipulatedItem()) == FourCC('I04V')
end

function Trig_Take_Archimagus_Staff_Remove_Recipe_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local it = LoadItemHandle(udg_hash, h, 1) ---@type item
	local staff = LoadItemHandle(udg_hash, h, 2) ---@type item
	if staff ~= nil then
		UnitAddItem(LoadUnitHandle(udg_hash, h, 3), staff)
	end
	RemoveItem(it)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	it = nil
	t = nil
end

function Trig_Take_Archimagus_Staff_Actions()
	local it = GetManipulatedItem() ---@type item
	local id = GetItemTypeId(it) ---@type number integer
	local hero = GetManipulatingUnit() ---@type unit
	local heroid = GetUnitTypeId(hero) ---@type number integer
	local staff ---@type item
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	if heroid == FourCC('H00Q') then
		staff = CreateItem(FourCC('I01Y'), GetUnitX(hero), GetUnitY(hero))
		UnitAddItem(hero, staff)
		SetItemUserData(staff, GetPlayerId(GetOwningPlayer(hero)) + 1)
	end
	if heroid == FourCC('O001') then
		staff = CreateItem(FourCC('I01Z'), GetUnitX(hero), GetUnitY(hero))
		UnitAddItem(hero, staff)
		SetItemUserData(staff, GetPlayerId(GetOwningPlayer(hero)) + 1)
	end
	if heroid == FourCC('E003') then
		staff = CreateItem(FourCC('I020'), GetUnitX(hero), GetUnitY(hero))
		UnitAddItem(hero, staff)
		SetItemUserData(staff, GetPlayerId(GetOwningPlayer(hero)) + 1)
	end
	if heroid == FourCC('E001') then
		staff = CreateItem(FourCC('I024'), GetUnitX(hero), GetUnitY(hero))
		UnitAddItem(hero, staff)
		SetItemUserData(staff, GetPlayerId(GetOwningPlayer(hero)) + 1)
	end
	if heroid == FourCC('N00W') then
		staff = CreateItem(FourCC('I025'), GetUnitX(hero), GetUnitY(hero))
		UnitAddItem(hero, staff)
		SetItemUserData(staff, GetPlayerId(GetOwningPlayer(hero)) + 1)
	end
	if heroid == FourCC('H01I') then
		staff = CreateItem(FourCC('I028'), GetUnitX(hero), GetUnitY(hero))
		UnitAddItem(hero, staff)
		SetItemUserData(staff, GetPlayerId(GetOwningPlayer(hero)) + 1)
	end
	SaveItemHandle(udg_hash, h, 1, it)
	if staff ~= nil then
		SaveItemHandle(udg_hash, h, 2, staff)
		SaveUnitHandle(udg_hash, h, 3, hero)
	end
	TimerStart(t, .01, false, Trig_Take_Archimagus_Staff_Remove_Recipe_Actions)
	it = nil
	hero = nil
end

function InitTrig_Take_Archimagus_Staff()
	local index = 0 ---@type number integer
	gg_trg_Take_Archimagus_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Take_Archimagus_Staff, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Take_Archimagus_Staff, Condition(Trig_Take_Archimagus_Staff_Conditions))
	TriggerAddAction(gg_trg_Take_Archimagus_Staff, Trig_Take_Archimagus_Staff_Actions)
end

function Trig_Lost_Charged_Staff_of_Lightning_Actions()
	local hero = GetTriggerUnit() ---@type unit
	local h = GetHandleId(hero) ---@type number integer
	local i = LoadInteger(udg_hash, h, $8F) ---@type number integer
	if i == 3 then
		DestroyEffect(LoadEffectHandle(udg_hash, h, $90))
	end
	SaveInteger(udg_hash, h, $8F, 0)
end

---@return boolean
function Trig_Lost_Charged_Staff_of_Lightning_Conditions()
	return (GetItemTypeId(GetManipulatedItem()) == FourCC('I01W') and IsUnitType(GetManipulatingUnit(), UNIT_TYPE_HERO)) ~= nil
end

function InitTrig_Lost_Charged_Staff_of_Lightning()
	local index = 0 ---@type number integer
	gg_trg_Lost_Charged_Staff_of_Lightning = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Lost_Charged_Staff_of_Lightning, Player(index), EVENT_PLAYER_UNIT_DROP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Lost_Charged_Staff_of_Lightning, Condition(Trig_Lost_Charged_Staff_of_Lightning_Conditions))
	TriggerAddAction(gg_trg_Lost_Charged_Staff_of_Lightning, Trig_Lost_Charged_Staff_of_Lightning_Actions)
end

function Trig_Blood_Bow_Actions()
	local killer = GetKillingUnit() ---@type unit
	SetUnitState(killer, UNIT_STATE_LIFE, GetUnitState(killer, UNIT_STATE_LIFE) + (GetUnitState(GetDyingUnit(), UNIT_STATE_MAX_LIFE) * .1))
	DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPriest.mdl", killer, "chest"))
	killer = nil
end

---@return boolean
function Trig_Blood_Bow_Conditions()
	return GetUnitAbilityLevel(GetKillingUnit(), FourCC('A0O0')) >= 1
end

function InitTrig_Blood_Bow()
	local index = 0 ---@type number integer
	gg_trg_Blood_Bow = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Blood_Bow, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Blood_Bow, Condition(Trig_Blood_Bow_Conditions))
	TriggerAddAction(gg_trg_Blood_Bow, Trig_Blood_Bow_Actions)
end

function Trig_Balance_Ring_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local hp = GetUnitState(caster, UNIT_STATE_LIFE) ---@type number real
	local hp2 ---@type number real
	local removehp = 200. ---@type number real
	local healmp = 150. ---@type number real
	if (GetUnitState(caster, UNIT_STATE_MANA) < (GetUnitState(caster, UNIT_STATE_MAX_MANA) * .5)) then
		if hp > removehp then
			hp2 = removehp
		else
			hp2 = hp - 1.
		end
		SetUnitState(caster, UNIT_STATE_LIFE, hp - hp2)
		SetUnitState(caster, UNIT_STATE_MANA, GetUnitState(caster, UNIT_STATE_MANA) + 250.)
	else
		if hp > removehp then
			hp2 = removehp
		else
			hp2 = hp - 1.
		end
		SetUnitState(caster, UNIT_STATE_LIFE, hp - hp2)
		SetUnitState(caster, UNIT_STATE_MANA, GetUnitState(caster, UNIT_STATE_MANA) + 150.)
	end
	DestroyEffect(AddSpecialEffectTarget("Effects\\RefreshingSurge.mdl", caster, "origin"))
	caster = nil
end

---@return boolean
function Trig_Balance_Ring_Conditions()
	return GetSpellAbilityId() == FourCC('A0NQ')
end

function InitTrig_Balance_Ring()
	local index = 0 ---@type number integer
	gg_trg_Balance_Ring = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Balance_Ring, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Balance_Ring, Condition(Trig_Balance_Ring_Conditions))
	TriggerAddAction(gg_trg_Balance_Ring, Trig_Balance_Ring_Actions)
end

function Trig_Armageddon_Staff_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 37) ---@type unit
	local damage = LoadReal(udg_hash, h, 38) ---@type number real
	local wait = LoadInteger(udg_hash, h, 39) ---@type number integer
	local angle = LoadReal(udg_hash, h, 40) ---@type number real
	local gdamage = LoadGroupHandle(udg_hash, h, 41) ---@type group
	local p = GetOwningPlayer(caster) ---@type player
	local gdammi = CreateGroup() ---@type group
	local g = CreateGroup() ---@type group
	local dammiangle ---@type number real
	local xdammi ---@type number real
	local ydammi ---@type number real
	local Picked ---@type unit
	local dammi ---@type unit
	local lopa = 1 ---@type number integer
	local ef ---@type effect
	local anglestep ---@type number real
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 39, wait)
		while(true) do
			if (lopa > $A) then break end
			dammi = LoadUnitHandle(udg_hash, h, lopa)
			dammiangle = LoadReal(udg_hash, h, lopa + 20)
			anglestep = LoadReal(udg_hash, h, lopa + 50)
			if dammiangle < -45. then
				anglestep = -anglestep
				SaveReal(udg_hash, h, lopa + 50, anglestep)
			end
			if dammiangle > 45. then
				anglestep = -anglestep
				SaveReal(udg_hash, h, lopa + 50, anglestep)
			end
			dammiangle = dammiangle + anglestep
			xdammi = GetUnitX(dammi) + 16. * Cos((angle + dammiangle) * bj_DEGTORAD)
			ydammi = GetUnitY(dammi) + 16. * Sin((angle + dammiangle) * bj_DEGTORAD)
			SetUnitPosition(dammi, xdammi, ydammi)
			SetUnitFacing(dammi, angle + dammiangle)
			GroupEnumUnitsInRange(gdammi, xdammi, ydammi, 125., nil)
			GroupAddGroup(gdammi, g)
			SaveReal(udg_hash, h, lopa + 20, dammiangle)
			dammi = nil
			lopa = lopa + 1
		end
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitInGroup(Picked, gdamage) == false and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0NE'))
				IssueTargetOrderById(dammi, $D02B6, Picked)
				dammi = nil
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIfb\\AIfbSpecialArt.mdl", Picked, "chest"))
				GroupAddUnit(gdamage, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		SaveGroupHandle(udg_hash, h, 41, gdamage)
	else
		while(true) do
			if (lopa > $A) then break end
			dammi = LoadUnitHandle(udg_hash, h, lopa)
			ef = LoadEffectHandle(udg_hash, h, lopa + $A)
			KillUnit(dammi)
			DestroyEffect(ef)
			lopa = lopa + 1
			dammi = nil
			ef = nil
		end
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		GroupClear(gdamage)
		DestroyGroup(gdamage)
	end
	t = nil
	caster = nil
	gdamage = nil
	p = nil
	GroupClear(gdammi)
	DestroyGroup(gdammi)
	gdammi = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
end

function Trig_Armageddon_Staff_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local loc ---@type location
	local xt ---@type number real
	local yt ---@type number real
	local dammi ---@type unit
	local ef ---@type effect
	local xdammi ---@type number real
	local ydammi ---@type number real
	local lopa = 1 ---@type number integer
	local gdamage = CreateGroup() ---@type group
	local angle ---@type number real
	local count = $A ---@type number integer
	local damage = 335. + GetHeroInt(caster, true) ---@type number real
	local wait = 50 ---@type number integer
	local dammidist = -300. ---@type number real
	local dammiangle ---@type number real
	if GetSpellTargetUnit() == nil then
		loc = GetSpellTargetLoc()
		xt = GetLocationX(loc)
		yt = GetLocationY(loc)
		RemoveLocation(loc)
		loc = nil
	else
		xt = GetUnitX(GetSpellTargetUnit())
		yt = GetUnitY(GetSpellTargetUnit())
	end
	angle = bj_RADTODEG * Atan2(yt - y, xt - x)
	while(true) do
		if (lopa > count) then break end
		dammiangle = GetRandomReal(-45., 45.)
		xdammi = x + dammidist * Cos((angle - 90.) * bj_DEGTORAD)
		ydammi = y + dammidist * Sin((angle - 90.) * bj_DEGTORAD)
		dammi = CreateUnit(p, FourCC('h00U'), xdammi, ydammi, dammiangle)
		UnitAddAbility(dammi, FourCC('Amrf'))
		UnitRemoveAbility(dammi, FourCC('Amrf'))
		SetUnitFlyHeight(dammi, 50., .0)
		ef = AddSpecialEffectTarget("Effects\\SunfireMissile.mdl", dammi, "chest")
		SaveUnitHandle(udg_hash, h, lopa, dammi)
		SaveEffectHandle(udg_hash, h, lopa + $A, ef)
		SaveReal(udg_hash, h, lopa + 20, dammiangle)
		SaveReal(udg_hash, h, lopa + 50, 3.6)
		dammidist = dammidist + 70.
		lopa = lopa + 1
		dammi = nil
		ef = nil
	end
	SaveUnitHandle(udg_hash, h, 37, caster)
	SaveReal(udg_hash, h, 38, damage)
	SaveInteger(udg_hash, h, 39, wait)
	SaveReal(udg_hash, h, 40, angle)
	SaveGroupHandle(udg_hash, h, 41, gdamage)
	TimerStart(t, .03, true, Trig_Armageddon_Staff_Periodic_Actions)
	caster = nil
	p = nil
	t = nil
	gdamage = nil
end

---@return boolean
function Trig_Armageddon_Staff_Conditions()
	return GetSpellAbilityId() == FourCC('A0NC')
end

function InitTrig_Armageddon_Staff()
	local index = 0 ---@type number integer
	gg_trg_Armageddon_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Armageddon_Staff, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Armageddon_Staff, Condition(Trig_Armageddon_Staff_Conditions))
	TriggerAddAction(gg_trg_Armageddon_Staff, Trig_Armageddon_Staff_Actions)
end

function Trig_Sargeras_Crown_Remove_Bonuses_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local bonusstr = LoadInteger(udg_hash, h, 2) ---@type number integer
	local bonusagi = LoadInteger(udg_hash, h, 3) ---@type number integer
	local bonusint = LoadInteger(udg_hash, h, 4) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 5) ---@type effect
	SetHeroStr(target, GetHeroStr(target, false) - bonusstr, true)
	SetHeroAgi(target, GetHeroAgi(target, false) - bonusagi, true)
	SetHeroInt(target, GetHeroInt(target, false) - bonusint, true)
	SaveBoolean(udg_hash, GetHandleId(target), FourCC('}'), false)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	DestroyEffect(ef)
	target = nil
	ef = nil
	t = nil
end

function Trig_Sargeras_Crown_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local agi = GetHeroAgi(target, true) ---@type number integer
	local id = GetSpellAbilityId() ---@type number integer
	local bonus = .0 ---@type number real
	local time = .0 ---@type number real
	local ef ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local bonusstr ---@type number integer
	local bonusagi ---@type number integer
	local bonusint ---@type number integer
	if id == FourCC('A0N2') then
		bonus = .3
		time = 7.
	end
	if id == FourCC('A0N3') then
		bonus = .5
		time = 9.
	end
	if id == FourCC('A0N4') then
		bonus = .7
		time = 11.
	end
	if LoadBoolean(udg_hash, GetHandleId(target), FourCC('}')) == false then
		ef = AddSpecialEffectTarget("Effects\\HolyBlessing.mdl", target, "origin")
		SaveBoolean(udg_hash, GetHandleId(target), FourCC('}'), true)
		bonusstr = R2I(GetHeroStr(target, true) * bonus)
		bonusagi = R2I(GetHeroAgi(target, true) * bonus)
		bonusint = R2I(GetHeroInt(target, true) * bonus)
		SetHeroStr(target, GetHeroStr(target, false) + bonusstr, true)
		SetHeroAgi(target, GetHeroAgi(target, false) + bonusagi, true)
		SetHeroInt(target, GetHeroInt(target, false) + bonusint, true)
		SaveUnitHandle(udg_hash, h, 1, target)
		SaveInteger(udg_hash, h, 2, bonusstr)
		SaveInteger(udg_hash, h, 3, bonusagi)
		SaveInteger(udg_hash, h, 4, bonusint)
		SaveEffectHandle(udg_hash, h, 5, ef)
		TimerStart(t, time, false, Trig_Sargeras_Crown_Remove_Bonuses_Actions)
		ef = nil
	else
		SimError(GetOwningPlayer(caster), "На этого героя уже наложено Благославление Саргераса.")
	end
	caster = nil
	target = nil
	t = nil
end

---@return boolean
function Trig_Sargeras_Crown_Conditions()
	return (GetSpellAbilityId() == FourCC('A0N2') or GetSpellAbilityId() == FourCC('A0N3') or GetSpellAbilityId() == FourCC('A0N4'))
end

function InitTrig_Sargeras_Crown()
	local index = 0 ---@type number integer
	gg_trg_Sargeras_Crown = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Sargeras_Crown, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Sargeras_Crown, Condition(Trig_Sargeras_Crown_Conditions))
	TriggerAddAction(gg_trg_Sargeras_Crown, Trig_Sargeras_Crown_Actions)
end

function Trig_Lost_Sargeras_Crown_Actions()
	local hero = GetTriggerUnit() ---@type unit
	local h = GetHandleId(hero) ---@type number integer
	local id = GetItemTypeId(GetManipulatedItem()) ---@type number integer
	local bonus = 0 ---@type number integer
	local smainstat = LoadStr(udg_hash, GetUnitTypeId(hero), 70) ---@type string
	if id == FourCC('I008') then
		bonus = $F
	end
	if id == FourCC('I009') then
		bonus = 30
	end
	if id == FourCC('I00L') then
		bonus = 45
	end
	if smainstat == "str" then
		SetHeroStr(hero, GetHeroStr(hero, false) - bonus, true)
	end
	if smainstat == "agi" then
		SetHeroAgi(hero, GetHeroAgi(hero, false) - bonus, true)
	end
	if smainstat == "int" then
		SetHeroInt(hero, GetHeroInt(hero, false) - bonus, true)
	end
	hero = nil
end

---@return boolean
function Trig_Lost_Sargeras_Crown_Conditions()
	return ((GetItemTypeId(GetManipulatedItem()) == FourCC('I008') or GetItemTypeId(GetManipulatedItem()) == FourCC('I009') or GetItemTypeId(GetManipulatedItem()) == FourCC('I00L')) and IsUnitType(GetManipulatingUnit(), UNIT_TYPE_HERO)) ~= nil
end

function InitTrig_Lost_Sargeras_Crown()
	local index = 0 ---@type number integer
	gg_trg_Lost_Sargeras_Crown = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Lost_Sargeras_Crown, Player(index), EVENT_PLAYER_UNIT_DROP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Lost_Sargeras_Crown, Condition(Trig_Lost_Sargeras_Crown_Conditions))
	TriggerAddAction(gg_trg_Lost_Sargeras_Crown, Trig_Lost_Sargeras_Crown_Actions)
end

function Trig_Take_Sargeras_Crown_Actions()
	local hero = GetTriggerUnit() ---@type unit
	local h = GetHandleId(hero) ---@type number integer
	local id = GetItemTypeId(GetManipulatedItem()) ---@type number integer
	local bonus = 0 ---@type number integer
	local smainstat = LoadStr(udg_hash, GetUnitTypeId(hero), 70) ---@type string
	if id == FourCC('I008') then
		bonus = $F
	end
	if id == FourCC('I009') then
		bonus = 30
	end
	if id == FourCC('I00L') then
		bonus = 45
	end
	if smainstat == "str" then
		SetHeroStr(hero, GetHeroStr(hero, false) + bonus, true)
	end
	if smainstat == "agi" then
		SetHeroAgi(hero, GetHeroAgi(hero, false) + bonus, true)
	end
	if smainstat == "int" then
		SetHeroInt(hero, GetHeroInt(hero, false) + bonus, true)
	end
	hero = nil
end

---@return boolean
function Trig_Take_Sargeras_Crown_Conditions()
	return ((GetItemTypeId(GetManipulatedItem()) == FourCC('I008') or GetItemTypeId(GetManipulatedItem()) == FourCC('I009') or GetItemTypeId(GetManipulatedItem()) == FourCC('I00L')) and IsUnitType(GetManipulatingUnit(), UNIT_TYPE_HERO)) ~= nil
end

function InitTrig_Take_Sargeras_Crown()
	local index = 0 ---@type number integer
	gg_trg_Take_Sargeras_Crown = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Take_Sargeras_Crown, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Take_Sargeras_Crown, Condition(Trig_Take_Sargeras_Crown_Conditions))
	TriggerAddAction(gg_trg_Take_Sargeras_Crown, Trig_Take_Sargeras_Crown_Actions)
end

function Trig_Lost_Archimagus_Armor_Actions()
	local hero = GetTriggerUnit() ---@type unit
	local h = GetHandleId(hero) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, FourCC('g')) ---@type effect
	DestroyEffect(ef)
	SaveBoolean(udg_hash, h, FourCC('f'), false)
	SaveEffectHandle(udg_hash, h, FourCC('g'), nil)
	hero = nil
	ef = nil
end

---@return boolean
function Trig_Lost_Archimagus_Armor_Conditions()
	return GetItemTypeId(GetManipulatedItem()) == FourCC('I05A') and CountItemOfTypeOnUnit(GetTriggerUnit(), FourCC('I05A')) == 1
end

function InitTrig_Lost_Archimagus_Armor()
	local index = 0 ---@type number integer
	gg_trg_Lost_Archimagus_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Lost_Archimagus_Armor, Player(index), EVENT_PLAYER_UNIT_DROP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Lost_Archimagus_Armor, Condition(Trig_Lost_Archimagus_Armor_Conditions))
	TriggerAddAction(gg_trg_Lost_Archimagus_Armor, Trig_Lost_Archimagus_Armor_Actions)
end

function Trig_Take_Archimagus_Armor_Actions()
	local hero = GetTriggerUnit() ---@type unit
	local h = GetHandleId(hero) ---@type number integer
	local ef ---@type effect
	if LoadReal(udg_hash, h, FourCC('h')) < 1. then
		ef = AddSpecialEffectTarget("Effects\\MagicShieldBlue.mdx", hero, "origin")
		SaveBoolean(udg_hash, h, FourCC('f'), true)
		SaveEffectHandle(udg_hash, h, FourCC('g'), ef)
		if LoadBoolean(udg_hash, h, FourCC('j')) == false then
			SaveReal(udg_hash, GetHandleId(hero), FourCC('i'), (500. + (GetHeroInt(hero, true) * 3.)))
		end
	end
	hero = nil
	ef = nil
end

---@return boolean
function Trig_Take_Archimagus_Armor_Conditions()
	return GetItemTypeId(GetManipulatedItem()) == FourCC('I05A') and CountItemOfTypeOnUnit(GetTriggerUnit(), FourCC('I05A')) == 1
end

function InitTrig_Take_Archimagus_Armor()
	local index = 0 ---@type number integer
	gg_trg_Take_Archimagus_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Take_Archimagus_Armor, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Take_Archimagus_Armor, Condition(Trig_Take_Archimagus_Armor_Conditions))
	TriggerAddAction(gg_trg_Take_Archimagus_Armor, Trig_Take_Archimagus_Armor_Actions)
end

function Trig_Sorcerers_Talisman_Cast_Actions()
	udg_Temp_Unit = GetSpellTargetUnit()
end

---@return boolean
function Trig_Sorcerers_Talisman_Cast_Conditions()
	return GetSpellAbilityId() == FourCC('A0LW') or GetSpellAbilityId() == FourCC('A0LZ') or GetSpellAbilityId() == FourCC('A0M0') or GetSpellAbilityId() == FourCC('A0M1')
end

function InitTrig_Sorcerers_Talisman_Cast()
	local index = 0 ---@type number integer
	gg_trg_Sorcerers_Talisman_Cast = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Sorcerers_Talisman_Cast, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Sorcerers_Talisman_Cast, Condition(Trig_Sorcerers_Talisman_Cast_Conditions))
	TriggerAddAction(gg_trg_Sorcerers_Talisman_Cast, Trig_Sorcerers_Talisman_Cast_Actions)
end

function Trig_Sorcerers_Talisman_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local ef ---@type effect
	local ally = LoadBoolean(udg_hash, h, 4) ---@type boolean
	local heal = LoadReal(udg_hash, h, 5) ---@type number real
	local damage = LoadReal(udg_hash, h, 6) ---@type number real
	local wait = LoadInteger(udg_hash, h, 7) ---@type number integer
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 7, wait)
		if ally and GetUnitState(target, UNIT_STATE_LIFE) > .405 then
			SetUnitState(target, UNIT_STATE_LIFE, GetUnitState(target, UNIT_STATE_LIFE) + heal)
		else
			if IsUnitType(target, UNIT_TYPE_MAGIC_IMMUNE) == false then
				UnitDamageTarget(caster, target, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			end
		end
	else
		DestroyTimer(t)
		ef = LoadEffectHandle(udg_hash, h, 3)
		DestroyEffect(ef)
		FlushChildHashtable(udg_hash, h)
	end
	t = nil
	caster = nil
	target = nil
end

function Trig_Sorcerers_Talisman_Actions()
	local caster = GetManipulatingUnit() ---@type unit
	local target = udg_Temp_Unit ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local lvl ---@type number integer
	local it = GetManipulatedItem() ---@type item
	local charges = GetItemCharges(it) ---@type number integer
	local id = GetItemTypeId(it) ---@type number integer
	local ef ---@type effect
	local ally ---@type boolean
	local heal ---@type number real
	local damage ---@type number real
	local wait ---@type number integer
	if charges ~= 0 then
		SetItemCharges(it, charges + 1)
	end
	if charges == 0 then
		SetItemCharges(it, 1)
	end
	if GetItemCharges(it) <= 7 then
		SimError(p, "Для Применения необходимо минимум 8 душ.")
	else
		if id == FourCC('I055') then
			lvl = 1
		end
		if id == FourCC('I056') then
			lvl = 2
		end
		if id == FourCC('I057') then
			lvl = 3
		end
		if id == FourCC('I058') then
			lvl = 4
		end
		wait = 8 - lvl
		heal = (125. + (75. * lvl)) / wait
		damage = (200. + (100. * lvl)) / wait
		SetItemCharges(it, GetItemCharges(it) - 8)
		if IsUnitEnemy(target, p) and IsUnitType(target, UNIT_TYPE_STRUCTURE) == false and IsUnitType(target, UNIT_TYPE_MAGIC_IMMUNE) == false then
			ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl", target, "overhead")
			ally = false
		end
		if IsUnitAlly(target, p) and IsUnitType(target, UNIT_TYPE_STRUCTURE) == false and IsUnitType(target, UNIT_TYPE_MAGIC_IMMUNE) == false then
			ef = AddSpecialEffectTarget("Abilities\\Spells\\Items\\StaffOfSanctuary\\Staff_Sanctuary_Target.mdl", target, "chest")
			ally = true
		end
		DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\EtherealForm\\SpiritWalkerChange.mdl", caster, "origin"), 2.5)
		DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\EtherealForm\\SpiritWalkerChange.mdl", target, "origin"), 3.)
		SaveUnitHandle(udg_hash, h, 1, caster)
		SaveUnitHandle(udg_hash, h, 2, target)
		SaveEffectHandle(udg_hash, h, 3, ef)
		SaveBoolean(udg_hash, h, 4, ally)
		SaveReal(udg_hash, h, 5, heal)
		SaveReal(udg_hash, h, 6, damage)
		SaveInteger(udg_hash, h, 7, wait)
		TimerStart(t, 1., true, Trig_Sorcerers_Talisman_Periodic_Actions)
	end
	caster = nil
	target = nil
	p = nil
	t = nil
	it = nil
	ef = nil
end

---@return boolean
function Trig_Sorcerers_Talisman_Conditions()
	return GetItemTypeId(GetManipulatedItem()) == FourCC('I055') or GetItemTypeId(GetManipulatedItem()) == FourCC('I056') or GetItemTypeId(GetManipulatedItem()) == FourCC('I057') or GetItemTypeId(GetManipulatedItem()) == FourCC('I058')
end

function InitTrig_Sorcerers_Talisman()
	local index = 0 ---@type number integer
	gg_trg_Sorcerers_Talisman = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Sorcerers_Talisman, Player(index), EVENT_PLAYER_UNIT_USE_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Sorcerers_Talisman, Condition(Trig_Sorcerers_Talisman_Conditions))
	TriggerAddAction(gg_trg_Sorcerers_Talisman, Trig_Sorcerers_Talisman_Actions)
end

---@return boolean
function Trig_Sorcerers_Talisman_Dead_Unit_Condition_Actions()
	return GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405 and GetUnitTypeId(GetFilterUnit()) ~= FourCC('h00U') and IsUnitEnemy(udg_Temp_Unit, GetOwningPlayer(GetFilterUnit())) and (CountItemOfTypeOnUnit(GetFilterUnit(), FourCC('I055')) >= 1 or CountItemOfTypeOnUnit(GetFilterUnit(), FourCC('I056')) >= 1 or CountItemOfTypeOnUnit(GetFilterUnit(), FourCC('I057')) >= 1 or CountItemOfTypeOnUnit(GetFilterUnit(), FourCC('I058')) >= 1)
end

function Trig_Sorcerers_Talisman_Dead_Unit_Actions()
	local enemy = GetDyingUnit() ---@type unit
	local x = GetUnitX(enemy) ---@type number real
	local y = GetUnitY(enemy) ---@type number real
	local g = CreateGroup() ---@type group
	local dammi = CreateUnit(GetOwningPlayer(enemy), FourCC('h00U'), x, y, .0) ---@type unit
	local talisman ---@type item
	local lop = 1 ---@type number integer
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
	udg_Temp_Unit = enemy
	GroupEnumUnitsInRange(g, x, y, 1200., Filter(Trig_Sorcerers_Talisman_Dead_Unit_Condition_Actions))
	FilterMostNearUnit(g, dammi)
	if udg_Unit_FilterMostNearUnit ~= nil and SquareRoot(((GetUnitX(udg_Unit_FilterMostNearUnit) - x) * (GetUnitX(udg_Unit_FilterMostNearUnit) - x)) + ((GetUnitY(udg_Unit_FilterMostNearUnit) - y) * (GetUnitY(udg_Unit_FilterMostNearUnit) - y))) <= 1200. then
		talisman = UnitItemInSlot(udg_Unit_FilterMostNearUnit, 0)
		while(true) do
			if (lop > 5) then break end
			if ((GetItemTypeId(talisman) == FourCC('I055') and GetItemCharges(talisman) < 24) or (GetItemTypeId(talisman) == FourCC('I056') and GetItemCharges(talisman) < 32) or (GetItemTypeId(talisman) == FourCC('I057') and GetItemCharges(talisman) < 40) or (GetItemTypeId(talisman) == FourCC('I058') and GetItemCharges(talisman) < 48)) then
				SetItemCharges(talisman, GetItemCharges(talisman) + 1)
				lop = 6
			else
				talisman = UnitItemInSlot(udg_Unit_FilterMostNearUnit, lop)
			end
			lop = lop + 1
		end
	end
	enemy = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	talisman = nil
end

---@return boolean
function Trig_Sorcerers_Talisman_Dead_Unit_Condition()
	return GetUnitTypeId(GetDyingUnit()) ~= FourCC('h00U')
end

function InitTrig_Sorcerers_Talisman_Dead_Unit()
	local index = 0 ---@type number integer
	gg_trg_Sorcerers_Talisman_Dead_Unit = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Sorcerers_Talisman_Dead_Unit, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Sorcerers_Talisman_Dead_Unit, Condition(Trig_Sorcerers_Talisman_Dead_Unit_Condition))
	TriggerAddAction(gg_trg_Sorcerers_Talisman_Dead_Unit, Trig_Sorcerers_Talisman_Dead_Unit_Actions)
end

function Trig_Orc_Banner_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gmain = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local bonushp = LoadInteger(udg_hash, h, 3) ---@type number integer
	local bonusa = LoadInteger(udg_hash, h, 4) ---@type number integer
	local bonusstat = LoadInteger(udg_hash, h, 5) ---@type number integer
	local lvl = LoadInteger(udg_hash, h, 6) ---@type number integer
	local it = LoadItemHandle(udg_hash, h, 7) ---@type item
	local g = CreateGroup() ---@type group
	local g2 = CreateGroup() ---@type group
	local p = GetOwningPlayer(hero) ---@type player
	local Picked ---@type unit
	local s ---@type string
	local x = GetUnitX(hero) ---@type number real
	local y = GetUnitY(hero) ---@type number real
	local dest = false ---@type boolean
	local tdest = false ---@type boolean
	if UnitHasItem(hero, it) then
		if GetItemTypeId(it) == FourCC('I052') and LoadInteger(udg_hash, GetHandleId(hero), FourCC('e')) == 2 then
			dest = true
		end
		if dest == false then
			GroupEnumUnitsInRange(g, GetUnitX(hero), GetUnitY(hero), 800., nil)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitAlly(Picked, p) and IsUnitInGroup(Picked, gmain) == false and (LoadInteger(udg_hash, GetHandleId(Picked), FourCC('e')) == 0 or (LoadInteger(udg_hash, GetHandleId(Picked), FourCC('e')) == 1 and lvl == 2)) and IsUnitType(Picked, UNIT_TYPE_HERO) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					SetAttackAbilityLevel(Picked, bonusa)
					SetUnitMaxState(Picked, UNIT_STATE_MAX_LIFE, bonushp)
					s = LoadStr(udg_hash, GetUnitTypeId(Picked), 70)
					if s == "str" then
						SetHeroStr(Picked, GetHeroStr(Picked, false) + bonusstat, true)
					end
					if s == "agi" then
						SetHeroAgi(Picked, GetHeroAgi(Picked, false) + bonusstat, true)
					end
					if s == "int" then
						SetHeroInt(Picked, GetHeroInt(Picked, false) + bonusstat, true)
					end
					SaveInteger(udg_hash, GetHandleId(Picked), FourCC('e'), lvl)
					GroupAddUnit(gmain, Picked)
				end
				GroupRemoveUnit(g, Picked)
			end
			Picked = nil
			GroupAddGroup(gmain, g2)
			while(true) do
				Picked = FirstOfGroup(g2)
				if (Picked == nil) then break end
				if SquareRoot((x - GetUnitX(Picked)) * (x - GetUnitX(Picked)) + (y - GetUnitY(Picked)) * (y - GetUnitY(Picked))) > 800. then
					SetAttackAbilityLevel(Picked, -bonusa)
					SetUnitMaxState(Picked, UNIT_STATE_MAX_LIFE, -bonushp)
					s = LoadStr(udg_hash, GetUnitTypeId(Picked), 70)
					if s == "str" then
						SetHeroStr(Picked, GetHeroStr(Picked, false) - bonusstat, true)
					end
					if s == "agi" then
						SetHeroAgi(Picked, GetHeroAgi(Picked, false) - bonusstat, true)
					end
					if s == "int" then
						SetHeroInt(Picked, GetHeroInt(Picked, false) - bonusstat, true)
					end
					if LoadInteger(udg_hash, GetHandleId(Picked), FourCC('e')) == lvl then
						SaveInteger(udg_hash, GetHandleId(Picked), FourCC('e'), 0)
					end
					GroupRemoveUnit(gmain, Picked)
				end
				GroupRemoveUnit(g2, Picked)
			end
			Picked = nil
		end
		SaveGroupHandle(udg_hash, h, 2, gmain)
	else
		dest = true
	end
	if dest then
		while(true) do
			Picked = FirstOfGroup(gmain)
			if (Picked == nil) then break end
			SetAttackAbilityLevel(Picked, -bonusa)
			SetUnitMaxState(Picked, UNIT_STATE_MAX_LIFE, -bonushp)
			s = LoadStr(udg_hash, GetUnitTypeId(Picked), 70)
			if s == "str" then
				SetHeroStr(Picked, GetHeroStr(Picked, false) - bonusstat, true)
			end
			if s == "agi" then
				SetHeroAgi(Picked, GetHeroAgi(Picked, false) - bonusstat, true)
			end
			if s == "int" then
				SetHeroInt(Picked, GetHeroInt(Picked, false) - bonusstat, true)
			end
			if LoadInteger(udg_hash, GetHandleId(Picked), FourCC('e')) == lvl then
				SaveInteger(udg_hash, GetHandleId(Picked), FourCC('e'), 0)
			end
			GroupRemoveUnit(gmain, Picked)
		end
	end
	if UnitHasItem(hero, it) == false then
		GroupClear(gmain)
		DestroyGroup(gmain)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	else
		SaveGroupHandle(udg_hash, h, 2, gmain)
	end
	t = nil
	hero = nil
	gmain = nil
	it = nil
	p = nil
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(g2)
	DestroyGroup(g2)
	g2 = nil
end

function Trig_Orc_Banner_Actions()
	local hero = GetTriggerUnit() ---@type unit
	local g = CreateGroup() ---@type group
	local gmain = CreateGroup() ---@type group
	local p = GetOwningPlayer(hero) ---@type player
	local Picked ---@type unit
	local bonushp ---@type number integer
	local bonusa ---@type number integer
	local bonusstat ---@type number integer
	local lvl ---@type number integer
	local it = GetManipulatedItem() ---@type item
	local s ---@type string
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	if GetItemTypeId(it) == FourCC('I052') then
		bonushp = $AF
		bonusa = 20
		bonusstat = 7
		lvl = 1
	else
		bonushp = $FA
		bonusa = 30
		bonusstat = $A
		lvl = 2
	end
	GroupEnumUnitsInRange(g, GetUnitX(hero), GetUnitY(hero), 800., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitAlly(Picked, p) and (LoadInteger(udg_hash, GetHandleId(Picked), FourCC('e')) == 0 or (LoadInteger(udg_hash, GetHandleId(Picked), FourCC('e')) == 1 and lvl == 2)) and IsUnitType(Picked, UNIT_TYPE_HERO) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			SetAttackAbilityLevel(Picked, bonusa)
			SetUnitMaxState(Picked, UNIT_STATE_MAX_LIFE, bonushp)
			s = LoadStr(udg_hash, GetUnitTypeId(Picked), 70)
			if s == "str" then
				SetHeroStr(Picked, GetHeroStr(Picked, false) + bonusstat, true)
			end
			if s == "agi" then
				SetHeroAgi(Picked, GetHeroAgi(Picked, false) + bonusstat, true)
			end
			if s == "int" then
				SetHeroInt(Picked, GetHeroInt(Picked, false) + bonusstat, true)
			end
			SaveInteger(udg_hash, GetHandleId(Picked), FourCC('e'), lvl)
			GroupAddUnit(gmain, Picked)
		end
		GroupRemoveUnit(g, Picked)
	end
	SaveUnitHandle(udg_hash, h, 1, hero)
	SaveGroupHandle(udg_hash, h, 2, gmain)
	SaveInteger(udg_hash, h, 3, bonushp)
	SaveInteger(udg_hash, h, 4, bonusa)
	SaveInteger(udg_hash, h, 5, bonusstat)
	SaveInteger(udg_hash, h, 6, lvl)
	SaveItemHandle(udg_hash, h, 7, it)
	TimerStart(t, .3, true, Trig_Orc_Banner_Periodic_Actions)
	hero = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	gmain = nil
	p = nil
	Picked = nil
	it = nil
	t = nil
end

---@return boolean
function Trig_Orc_Banner_Conditions()
	return (GetItemTypeId(GetManipulatedItem()) == FourCC('I052') or (GetItemTypeId(GetManipulatedItem()) == FourCC('I053')))
end

function InitTrig_Orc_Banner()
	local index = 0 ---@type number integer
	gg_trg_Orc_Banner = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Orc_Banner, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Orc_Banner, Condition(Trig_Orc_Banner_Conditions))
	TriggerAddAction(gg_trg_Orc_Banner, Trig_Orc_Banner_Actions)
end

function Trig_Devil_Axe_Remove_Stregnth_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local strenght = LoadInteger(udg_hash, GetHandleId(caster), FourCC('d')) ---@type number integer
	local ef ---@type effect
	SetHeroStr(caster, GetHeroStr(caster, false) - strenght, true)
	ef = LoadEffectHandle(udg_hash, h, 2)
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 3)
	DestroyEffect(ef)
	ef = nil
	SaveBoolean(udg_hash, GetHandleId(caster), 99, false)
	SaveInteger(udg_hash, GetHandleId(caster), FourCC('d'), 0)
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	caster = nil
end

function Trig_Devil_Axe_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), GetUnitX(caster), GetUnitY(caster), .0) ---@type unit
	local ef ---@type effect
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
	UnitAddAbility(dammi, FourCC('A0LT'))
	IssueTargetOrderById(dammi, $D00F1, caster)
	SaveUnitHandle(udg_hash, h, 1, caster)
	ef = AddSpecialEffectTarget("Effects\\EvilMissileofShadowyDOOMV2.mdx", caster, "weapon")
	SaveEffectHandle(udg_hash, h, 2, ef)
	ef = nil
	ef = AddSpecialEffectTarget("Effects\\BloodCloudTarget.mdx", caster, "overhead")
	SaveEffectHandle(udg_hash, h, 3, ef)
	ef = nil
	SaveBoolean(udg_hash, GetHandleId(caster), 99, true)
	TimerStart(t, 30., false, Trig_Devil_Axe_Remove_Stregnth_Actions)
	caster = nil
	t = nil
	dammi = nil
end

---@return boolean
function Trig_Devil_Axe_Conditions()
	return GetSpellAbilityId() == FourCC('A0LS')
end

function InitTrig_Devil_Axe()
	local index = 0 ---@type number integer
	gg_trg_Devil_Axe = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Devil_Axe, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Devil_Axe, Condition(Trig_Devil_Axe_Conditions))
	TriggerAddAction(gg_trg_Devil_Axe, Trig_Devil_Axe_Actions)
end

function Trig_Devil_Axe_Kill_Unit_Actions()
	SetHeroStr(GetKillingUnit(), GetHeroStr(GetKillingUnit(), false) + 3, true)
	SetUnitState(GetKillingUnit(), UNIT_STATE_LIFE, GetUnitState(GetKillingUnit(), UNIT_STATE_LIFE) + (GetUnitState(GetDyingUnit(), UNIT_STATE_MAX_LIFE) * .15))
	DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPeasant.mdl", GetUnitX(GetDyingUnit()), GetUnitY(GetDyingUnit())))
	DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodSorceress.mdl", GetUnitX(GetDyingUnit()), GetUnitY(GetDyingUnit())))
	DestroyEffectWithWait(AddSpecialEffectTarget("Effects\\BloodBreathDamage.mdx", GetKillingUnit(), "origin"), 2.)
	SaveInteger(udg_hash, GetHandleId(GetKillingUnit()), FourCC('d'), LoadInteger(udg_hash, GetHandleId(GetKillingUnit()), FourCC('d')) + 3)
end

---@return boolean
function Trig_Devil_Axe_Kill_Unit_Conditions()
	return LoadBoolean(udg_hash, GetHandleId(GetKillingUnit()), 99)
end

function InitTrig_Devil_Axe_Kill_Unit()
	local index = 0 ---@type number integer
	gg_trg_Devil_Axe_Kill_Unit = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Devil_Axe_Kill_Unit, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Devil_Axe_Kill_Unit, Condition(Trig_Devil_Axe_Kill_Unit_Conditions))
	TriggerAddAction(gg_trg_Devil_Axe_Kill_Unit, Trig_Devil_Axe_Kill_Unit_Actions)
end

function Trig_Tokugawas_Katan_Kill_Unit_Actions()
	SetHeroAgi(GetKillingUnit(), GetHeroAgi(GetKillingUnit(), false) + 1, true)
end

---@return boolean
function Trig_Tokugawas_Katan_Kill_Unit_Conditions()
	return LoadBoolean(udg_hash, GetHandleId(GetKillingUnit()), 98) and GetRandomInt(1, FourCC('d')) <= 20
end

function InitTrig_Tokugawas_Katan_Kill_Unit()
	local index = 0 ---@type number integer
	gg_trg_Tokugawas_Katan_Kill_Unit = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Tokugawas_Katan_Kill_Unit, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Tokugawas_Katan_Kill_Unit, Condition(Trig_Tokugawas_Katan_Kill_Unit_Conditions))
	TriggerAddAction(gg_trg_Tokugawas_Katan_Kill_Unit, Trig_Tokugawas_Katan_Kill_Unit_Actions)
end

function Trig_Tokugawas_Katan_Remove_Agi_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local bonus = LoadInteger(udg_hash, h, 2) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 3) ---@type effect
	local ef2 = LoadEffectHandle(udg_hash, h, 4) ---@type effect
	local clearagi = GetHeroAgi(caster, false) ---@type number integer
	SetHeroAgi(caster, clearagi - bonus, true)
	SaveBoolean(udg_hash, GetHandleId(caster), 98, false)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	DestroyEffect(ef)
	DestroyEffect(ef2)
	caster = nil
	ef = nil
	ef2 = nil
	t = nil
end

function Trig_Tokugawas_Katan_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local agi = GetHeroAgi(caster, true) ---@type number integer
	local clearagi = GetHeroAgi(caster, false) ---@type number integer
	local bonus = R2I(agi * .7) ---@type number integer
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\AcidBomb\\BottleImpact.mdl", caster, "weapon") ---@type effect
	local ef2 = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Drain\\DrainCaster.mdl", caster, "head") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetHeroAgi(caster, clearagi + bonus, true)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveInteger(udg_hash, h, 2, bonus)
	SaveEffectHandle(udg_hash, h, 3, ef)
	SaveEffectHandle(udg_hash, h, 4, ef2)
	SaveBoolean(udg_hash, GetHandleId(caster), 98, true)
	TimerStart(t, 8., false, Trig_Tokugawas_Katan_Remove_Agi_Actions)
	caster = nil
	ef = nil
	ef2 = nil
	t = nil
end

---@return boolean
function Trig_Tokugawas_Katan_Conditions()
	return GetSpellAbilityId() == FourCC('A0LO')
end

function InitTrig_Tokugawas_Katan()
	local index = 0 ---@type number integer
	gg_trg_Tokugawas_Katan = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Tokugawas_Katan, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Tokugawas_Katan, Condition(Trig_Tokugawas_Katan_Conditions))
	TriggerAddAction(gg_trg_Tokugawas_Katan, Trig_Tokugawas_Katan_Actions)
end

function Trig_Kings_Armor_Remove_Buffs_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local g = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local count = LoadInteger(udg_hash, h, 3) ---@type number integer
	local ef ---@type effect
	local Picked ---@type unit
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		SetArmorAbilityLevel(Picked, -$F)
		SetAttackSpeedAbilityLevel(Picked, -(20 + LoadInteger(udg_hash, GetHandleId(Picked), 97)))
		SetUnitLifeAndManaRegeneration(Picked, "life", -25)
		ef = LoadEffectHandle(udg_hash, h, count)
		DestroyEffect(ef)
		ef = nil
		count = count - 1
		GroupRemoveUnit(g, Picked)
	end
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	t = nil
	caster = nil
end

function Trig_Kings_Armor_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local armor = $F ---@type number integer
	local hpregen = 25 ---@type number integer
	local as = 20 ---@type number integer
	local asbonus ---@type number integer
	local g = CreateGroup() ---@type group
	local g2 = CreateGroup() ---@type group
	local Picked ---@type unit
	local ef ---@type effect
	local dammi ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local count = $A ---@type number integer
	DestroyEffect(AddSpecialEffectTarget("Effects\\BattleCryCaster.mdl", caster, "origin"))
	GroupEnumUnitsInRange(g, x, y, 750., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitAlly(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
			UnitAddAbility(dammi, FourCC('A0LD'))
			IssueTargetOrderById(dammi, $D0062, Picked)
			dammi = nil
			SetArmorAbilityLevel(Picked, armor)
			asbonus = R2I((R2I((1. - GetUnitState(Picked, UNIT_STATE_LIFE) / GetUnitState(Picked, UNIT_STATE_MAX_LIFE)) / .1) * 8))
			SetAttackSpeedAbilityLevel(Picked, as + asbonus)
			SetUnitLifeAndManaRegeneration(Picked, "life", hpregen)
			count = count + 1
			ef = AddSpecialEffectTarget("Abilities\\Spells\\Human\\InnerFire\\InnerFireTarget.mdl", Picked, "overhead")
			SaveEffectHandle(udg_hash, h, count, ef)
			ef = nil
			SaveInteger(udg_hash, GetHandleId(Picked), 97, asbonus)
			GroupAddUnit(g2, Picked)
		end
		GroupRemoveUnit(g, Picked)
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, g2)
	SaveInteger(udg_hash, h, 3, count)
	TimerStart(t, 10., false, Trig_Kings_Armor_Remove_Buffs_Actions)
	caster = nil
	p = nil
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g2 = nil
	t = nil
end

---@return boolean
function Trig_Kings_Armor_Conditions()
	return GetSpellAbilityId() == FourCC('A0LC')
end

function InitTrig_Kings_Armor()
	local index = 0 ---@type number integer
	gg_trg_Kings_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Kings_Armor, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Kings_Armor, Condition(Trig_Kings_Armor_Conditions))
	TriggerAddAction(gg_trg_Kings_Armor, Trig_Kings_Armor_Actions)
end

function Trig_Steel_Bib_Remove_Buffs_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Defend\\DefendCaster.mdl", caster, "origin"))
	SetArmorAbilityLevel(caster, -20)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	caster = nil
end

function Trig_Steel_Bib_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, .0) ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
	UnitAddAbility(dammi, FourCC('A0L5'))
	IssueTargetOrderById(dammi, $D006B, caster)
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Defend\\DefendCaster.mdl", caster, "origin"))
	SetArmorAbilityLevel(caster, 20)
	SaveUnitHandle(udg_hash, h, 1, caster)
	TimerStart(t, 7., false, Trig_Steel_Bib_Remove_Buffs_Actions)
	caster = nil
	dammi = nil
	t = nil
end

---@return boolean
function Trig_Steel_Bib_Conditions()
	return GetSpellAbilityId() == FourCC('A0L4')
end

function InitTrig_Steel_Bib()
	local index = 0 ---@type number integer
	gg_trg_Steel_Bib = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Steel_Bib, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Steel_Bib, Condition(Trig_Steel_Bib_Conditions))
	TriggerAddAction(gg_trg_Steel_Bib, Trig_Steel_Bib_Actions)
end

function Trig_Archimagus_Staff_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 20) ---@type unit
	local damage = LoadReal(udg_hash, h, 21) ---@type number real
	local wait = LoadInteger(udg_hash, h, 22) ---@type number integer
	local angle = LoadReal(udg_hash, h, 23) ---@type number real
	local gdamage = LoadGroupHandle(udg_hash, h, 24) ---@type group
	local dammiangle = LoadReal(udg_hash, h, 25) ---@type number real
	local dist = LoadReal(udg_hash, h, 27) ---@type number real
	local xt = LoadReal(udg_hash, h, 28) ---@type number real
	local yt = LoadReal(udg_hash, h, 29) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local gdammi = CreateGroup() ---@type group
	local g = CreateGroup() ---@type group
	local xdammi ---@type number real
	local ydammi ---@type number real
	local Picked ---@type unit
	local dammi ---@type unit
	local lopa = 1 ---@type number integer
	local ef ---@type effect
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 22, wait)
		dammiangle = dammiangle + 7.2
		dist = dist - 5.5
		SaveReal(udg_hash, h, 25, dammiangle)
		SaveReal(udg_hash, h, 27, dist)
		while(true) do
			if (lopa > 5) then break end
			dammi = LoadUnitHandle(udg_hash, h, lopa)
			xdammi = xt + dist * Cos((dammiangle + (72. * (lopa - 1))) * bj_DEGTORAD)
			ydammi = yt + dist * Sin((dammiangle + (72. * (lopa - 1))) * bj_DEGTORAD)
			SetUnitPosition(dammi, xdammi, ydammi)
			SetUnitFacing(dammi, dammiangle + (72. * (lopa - 1)))
			GroupEnumUnitsInRange(gdammi, xdammi, ydammi, 100., nil)
			GroupAddGroup(gdammi, g)
			lopa = lopa + 1
			dammi = nil
			ef = nil
		end
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitAlly(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitInGroup(Picked, gdamage) == false and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				SetUnitState(Picked, UNIT_STATE_MANA, GetUnitState(Picked, UNIT_STATE_MANA) + 125.)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\ReplenishMana\\ReplenishManaCaster.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl", Picked, "origin"))
				GroupAddUnit(gdamage, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		SaveGroupHandle(udg_hash, h, 24, gdamage)
	else
		while(true) do
			if (lopa > 5) then break end
			dammi = LoadUnitHandle(udg_hash, h, lopa)
			ef = LoadEffectHandle(udg_hash, h, lopa + 5)
			KillUnit(dammi)
			DestroyEffect(ef)
			lopa = lopa + 1
			dammi = nil
			ef = nil
		end
		GroupEnumUnitsInRange(g, xt, yt, 275., nil)
		dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
		SetUnitScale(dammi, 4., 4., 1.)
		DestroyEffect(AddSpecialEffectTarget("Effects\\Fireworksblue.mdl", dammi, "chest"))
		DestroyEffect(AddSpecialEffectTarget("Effects\\Fireworksblue.mdl", dammi, "chest"))
		dammi = nil
		DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\NightElf\\NEDeathMedium\\NEDeath.mdl", xt, yt))
		DestroyEffect(AddSpecialEffect("Effects\\MagicStomp.mdl", xt, yt))
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				DestroyEffect(AddSpecialEffectTarget("Effects\\Fireworksblue.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\ManaFlare\\ManaFlareBoltImpact.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\DragonHawkMissile\\DragonHawkMissile.mdl", Picked, "chest"))
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		GroupClear(gdamage)
		DestroyGroup(gdamage)
	end
	t = nil
	caster = nil
	gdamage = nil
	p = nil
	GroupClear(gdammi)
	DestroyGroup(gdammi)
	gdammi = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
end

function Trig_Archimagus_Staff_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi ---@type unit
	local ef ---@type effect
	local xdammi ---@type number real
	local ydammi ---@type number real
	local lopa = 1 ---@type number integer
	local gdamage = CreateGroup() ---@type group
	local angle ---@type number real
	local dammiangle = -72. ---@type number real
	local damage = 100. + GetHeroInt(caster, true) * 1.75 ---@type number real
	local wait = 50 ---@type number integer
	angle = bj_RADTODEG * Atan2(yt - y, xt - x)
	while(true) do
		if (lopa > 5) then break end
		xdammi = xt + 275. * Cos((angle + dammiangle) * bj_DEGTORAD)
		ydammi = yt + 275. * Sin((angle + dammiangle) * bj_DEGTORAD)
		dammiangle = dammiangle + 72.
		dammi = CreateUnit(p, FourCC('h00U'), xdammi, ydammi, dammiangle)
		UnitAddAbility(dammi, FourCC('Amrf'))
		UnitRemoveAbility(dammi, FourCC('Amrf'))
		SetUnitFlyHeight(dammi, 50., .0)
		ef = AddSpecialEffectTarget("Effects\\Magic Missile.mdl", dammi, "chest")
		SaveUnitHandle(udg_hash, h, lopa, dammi)
		SaveEffectHandle(udg_hash, h, lopa + 5, ef)
		lopa = lopa + 1
		dammi = nil
		ef = nil
	end
	SaveUnitHandle(udg_hash, h, 20, caster)
	SaveReal(udg_hash, h, 21, damage)
	SaveInteger(udg_hash, h, 22, wait)
	SaveReal(udg_hash, h, 23, angle)
	SaveGroupHandle(udg_hash, h, 24, gdamage)
	SaveReal(udg_hash, h, 25, .0)
	SaveReal(udg_hash, h, 27, 275.)
	SaveReal(udg_hash, h, 28, xt)
	SaveReal(udg_hash, h, 29, yt)
	TimerStart(t, .03, true, Trig_Archimagus_Staff_Periodic_Actions)
	caster = nil
	p = nil
	t = nil
	gdamage = nil
	RemoveLocation(loc)
	loc = nil
end

---@return boolean
function Trig_Archimagus_Staff_Conditions()
	return GetSpellAbilityId() == FourCC('A0L1')
end

function InitTrig_Archimagus_Staff()
	local index = 0 ---@type number integer
	gg_trg_Archimagus_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Archimagus_Staff, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Archimagus_Staff, Condition(Trig_Archimagus_Staff_Conditions))
	TriggerAddAction(gg_trg_Archimagus_Staff, Trig_Archimagus_Staff_Actions)
end

function Trig_Isidors_Scepter_Add_Mana_Caster_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	SetUnitState(caster, UNIT_STATE_MANA, GetUnitState(caster, UNIT_STATE_MANA) + 175.)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	caster = nil
end

function Trig_Isidors_Scepter_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local heal = 200. + (GetHeroInt(caster, true) * 3.) ---@type number real
	local mana = 175. ---@type number real
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", x, y))
	GroupEnumUnitsInRange(g, x, y, 350., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitAlly(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			SetUnitState(Picked, UNIT_STATE_LIFE, GetUnitState(Picked, UNIT_STATE_LIFE) + heal)
			if Picked ~= caster then
				SetUnitState(Picked, UNIT_STATE_MANA, GetUnitState(Picked, UNIT_STATE_MANA) + mana)
			end
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", Picked, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl", Picked, "origin"))
			DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Heal\\HealTarget.mdl", Picked, "origin"), 2.)
		end
		GroupRemoveUnit(g, Picked)
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	TimerStart(t, .0, false, Trig_Isidors_Scepter_Add_Mana_Caster_Actions)
	caster = nil
	p = nil
	RemoveLocation(loc)
	loc = nil
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	t = nil
end

---@return boolean
function Trig_Isidors_Scepter_Conditions()
	return GetSpellAbilityId() == FourCC('A0L0')
end

function InitTrig_Isidors_Scepter()
	local index = 0 ---@type number integer
	gg_trg_Isidors_Scepter = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Isidors_Scepter, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Isidors_Scepter, Condition(Trig_Isidors_Scepter_Conditions))
	TriggerAddAction(gg_trg_Isidors_Scepter, Trig_Isidors_Scepter_Actions)
end

function Trig_Detached_Shield_Use_Remove_Agr_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local g = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local damage = LoadInteger(udg_hash, h, 4) ---@type number integer
	local armor = LoadInteger(udg_hash, h, 5) ---@type number integer
	local ef ---@type effect
	local Picked ---@type unit
	SetUnitLifeAndManaRegeneration(caster, "life", -35)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		SetAttackAbilityLevel(Picked, damage)
		SetArmorAbilityLevel(Picked, armor)
		ef = LoadEffectHandle(udg_hash, GetHandleId(Picked), 89)
		DestroyEffect(ef)
		ef = nil
		SaveEffectHandle(udg_hash, GetHandleId(Picked), 89, nil)
		GroupRemoveUnit(g, Picked)
	end
	ef = LoadEffectHandle(udg_hash, h, 3)
	DestroyEffect(ef)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	caster = nil
	DestroyGroup(g)
	GroupClear(g)
	g = nil
	ef = nil
	Picked = nil
end

function Trig_Detached_Shield_Use_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local g = CreateGroup() ---@type group
	local g2 = CreateGroup() ---@type group
	local Picked ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef ---@type effect
	local damage = 20 ---@type number integer
	local armor = 8 ---@type number integer
	SetUnitLifeAndManaRegeneration(caster, "life", 35)
	GroupEnumUnitsInRange(g, x, y, 450., nil)
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\BattleRoar\\RoarCaster.mdl", x, y))
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		ef = LoadEffectHandle(udg_hash, GetHandleId(Picked), 89)
		if ef == nil and GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and IsUnitEnemy(Picked, p) and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			GroupAddUnit(g2, Picked)
			IssueTargetOrderById(Picked, $D000F, caster)
			SetAttackAbilityLevel(Picked, -damage)
			SetArmorAbilityLevel(Picked, -armor)
			ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\TrollBerserk\\HeadhunterWEAPONSLeft.mdl", Picked, "overhead")
			SaveEffectHandle(udg_hash, GetHandleId(Picked), 89, ef)
			ef = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\HowlOfTerror\\HowlTarget.mdl", caster, "chest")
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, g2)
	SaveEffectHandle(udg_hash, h, 3, ef)
	SaveInteger(udg_hash, h, 4, damage)
	SaveInteger(udg_hash, h, 5, armor)
	TimerStart(t, 7., false, Trig_Detached_Shield_Use_Remove_Agr_Actions)
	caster = nil
	p = nil
	DestroyGroup(g)
	GroupClear(g)
	g = nil
	g2 = nil
	Picked = nil
	t = nil
	ef = nil
end

---@return boolean
function Trig_Detached_Shield_Use_Conditions()
	return GetSpellAbilityId() == FourCC('A0IV')
end

function InitTrig_Detached_Shield_Use()
	local index = 0 ---@type number integer
	gg_trg_Detached_Shield_Use = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Detached_Shield_Use, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Detached_Shield_Use, Condition(Trig_Detached_Shield_Use_Conditions))
	TriggerAddAction(gg_trg_Detached_Shield_Use, Trig_Detached_Shield_Use_Actions)
end

function Trig_Cuirass_of_Invulnerable_Use2_Remove_Agr_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local g = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local damage = LoadInteger(udg_hash, h, 4) ---@type number integer
	local armor = LoadInteger(udg_hash, h, 5) ---@type number integer
	local ef ---@type effect
	local Picked ---@type unit
	SetUnitLifeAndManaRegeneration(caster, "life", -75)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		SetAttackAbilityLevel(Picked, damage)
		SetArmorAbilityLevel(Picked, armor)
		ef = LoadEffectHandle(udg_hash, GetHandleId(Picked), 89)
		DestroyEffect(ef)
		ef = nil
		SaveEffectHandle(udg_hash, GetHandleId(Picked), 89, nil)
		GroupRemoveUnit(g, Picked)
	end
	ef = LoadEffectHandle(udg_hash, h, 3)
	DestroyEffect(ef)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	caster = nil
	DestroyGroup(g)
	GroupClear(g)
	g = nil
	ef = nil
	Picked = nil
end

function Trig_Cuirass_of_Invulnerable_Use2_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local g = CreateGroup() ---@type group
	local g2 = CreateGroup() ---@type group
	local Picked ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef ---@type effect
	local damage = 30 ---@type number integer
	local armor = $D ---@type number integer
	SetUnitLifeAndManaRegeneration(caster, "life", 75)
	GroupEnumUnitsInRange(g, x, y, 500., nil)
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\BattleRoar\\RoarCaster.mdl", x, y))
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		ef = LoadEffectHandle(udg_hash, GetHandleId(Picked), 89)
		if ef == nil and GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and IsUnitEnemy(Picked, p) and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			GroupAddUnit(g2, Picked)
			IssueTargetOrderById(Picked, $D000F, caster)
			SetAttackAbilityLevel(Picked, -damage)
			SetArmorAbilityLevel(Picked, -armor)
			ef = AddSpecialEffectTarget("Effects\\RedZapMissle.mdl", Picked, "overhead")
			SaveEffectHandle(udg_hash, GetHandleId(Picked), 89, ef)
			ef = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	ef = AddSpecialEffectTarget("Effects\\Duel.mdx", caster, "overhead")
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, g2)
	SaveEffectHandle(udg_hash, h, 3, ef)
	SaveInteger(udg_hash, h, 4, damage)
	SaveInteger(udg_hash, h, 5, armor)
	TimerStart(t, 8., false, Trig_Cuirass_of_Invulnerable_Use2_Remove_Agr_Actions)
	caster = nil
	p = nil
	DestroyGroup(g)
	GroupClear(g)
	g = nil
	g2 = nil
	Picked = nil
	t = nil
	ef = nil
end

---@return boolean
function Trig_Cuirass_of_Invulnerable_Use2_Conditions()
	return GetSpellAbilityId() == FourCC('A0JT')
end

function InitTrig_Cuirass_of_Invulnerable_Use2()
	local index = 0 ---@type number integer
	gg_trg_Cuirass_of_Invulnerable_Use2 = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Cuirass_of_Invulnerable_Use2, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Cuirass_of_Invulnerable_Use2, Condition(Trig_Cuirass_of_Invulnerable_Use2_Conditions))
	TriggerAddAction(gg_trg_Cuirass_of_Invulnerable_Use2, Trig_Cuirass_of_Invulnerable_Use2_Actions)
end

function Trig_Lost_Cuirass_of_Invulnerable_Actions()
	local hero = GetTriggerUnit() ---@type unit
	local h = GetHandleId(hero) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 95) ---@type effect
	DestroyEffect(ef)
	SaveBoolean(udg_hash, h, 94, true)
	SaveEffectHandle(udg_hash, h, 95, nil)
	hero = nil
	ef = nil
end

---@return boolean
function Trig_Lost_Cuirass_of_Invulnerable_Conditions()
	return GetItemTypeId(GetManipulatedItem()) == FourCC('I048') and CountItemOfTypeOnUnit(GetTriggerUnit(), FourCC('I048')) == 1
end

function InitTrig_Lost_Cuirass_of_Invulnerable()
	local index = 0 ---@type number integer
	gg_trg_Lost_Cuirass_of_Invulnerable = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Lost_Cuirass_of_Invulnerable, Player(index), EVENT_PLAYER_UNIT_DROP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Lost_Cuirass_of_Invulnerable, Condition(Trig_Lost_Cuirass_of_Invulnerable_Conditions))
	TriggerAddAction(gg_trg_Lost_Cuirass_of_Invulnerable, Trig_Lost_Cuirass_of_Invulnerable_Actions)
end

function Trig_Take_Cuirass_of_Invulnerable_Actions()
	local hero = GetTriggerUnit() ---@type unit
	local h = GetHandleId(hero) ---@type number integer
	local ef ---@type effect
	if LoadReal(udg_hash, h, 96) < 1. then
		ef = AddSpecialEffectTarget("Effects\\PurpleSphere.mdx", hero, "chest")
		SaveBoolean(udg_hash, h, 94, true)
		SaveEffectHandle(udg_hash, h, 95, ef)
	end
	hero = nil
	ef = nil
end

---@return boolean
function Trig_Take_Cuirass_of_Invulnerable_Conditions()
	return GetItemTypeId(GetManipulatedItem()) == FourCC('I048') and CountItemOfTypeOnUnit(GetTriggerUnit(), FourCC('I048')) == 1
end

function InitTrig_Take_Cuirass_of_Invulnerable()
	local index = 0 ---@type number integer
	gg_trg_Take_Cuirass_of_Invulnerable = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Take_Cuirass_of_Invulnerable, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Take_Cuirass_of_Invulnerable, Condition(Trig_Take_Cuirass_of_Invulnerable_Conditions))
	TriggerAddAction(gg_trg_Take_Cuirass_of_Invulnerable, Trig_Take_Cuirass_of_Invulnerable_Actions)
end

function Trig_Fire_Staff_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 7) ---@type unit
	local damage = LoadReal(udg_hash, h, 8) ---@type number real
	local wait = LoadInteger(udg_hash, h, 9) ---@type number integer
	local angle = LoadReal(udg_hash, h, $A) ---@type number real
	local gdamage = LoadGroupHandle(udg_hash, h, $B) ---@type group
	local dammiangle = LoadReal(udg_hash, h, $C) ---@type number real
	local anglestep = LoadReal(udg_hash, h, $D) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local gdammi = CreateGroup() ---@type group
	local g = CreateGroup() ---@type group
	local xdammi ---@type number real
	local ydammi ---@type number real
	local Picked ---@type unit
	local dammi ---@type unit
	local lopa = 1 ---@type number integer
	local ef ---@type effect
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 9, wait)
		dammiangle = dammiangle - anglestep
		if dammiangle < -45. then
			anglestep = -anglestep
			SaveReal(udg_hash, h, $D, anglestep)
		end
		if dammiangle > 45. then
			anglestep = -anglestep
			SaveReal(udg_hash, h, $D, anglestep)
		end
		SaveReal(udg_hash, h, $C, dammiangle)
		dammi = LoadUnitHandle(udg_hash, h, 1)
		xdammi = GetUnitX(dammi) + 15. * Cos((angle + dammiangle) * bj_DEGTORAD)
		ydammi = GetUnitY(dammi) + 15. * Sin((angle + dammiangle) * bj_DEGTORAD)
		SetUnitPosition(dammi, xdammi, ydammi)
		GroupEnumUnitsInRange(gdammi, xdammi, ydammi, 125., nil)
		GroupAddGroup(gdammi, g)
		dammi = nil
		dammiangle = -dammiangle
		dammi = LoadUnitHandle(udg_hash, h, 3)
		xdammi = GetUnitX(dammi) + 15. * Cos((angle + dammiangle) * bj_DEGTORAD)
		ydammi = GetUnitY(dammi) + 15. * Sin((angle + dammiangle) * bj_DEGTORAD)
		SetUnitPosition(dammi, xdammi, ydammi)
		GroupEnumUnitsInRange(gdammi, xdammi, ydammi, 125., nil)
		GroupAddGroup(gdammi, g)
		dammi = nil
		dammi = LoadUnitHandle(udg_hash, h, 2)
		xdammi = GetUnitX(dammi) + 13.2 * Cos(angle * bj_DEGTORAD)
		ydammi = GetUnitY(dammi) + 13.2 * Sin(angle * bj_DEGTORAD)
		SetUnitPosition(dammi, xdammi, ydammi)
		GroupEnumUnitsInRange(gdammi, xdammi, ydammi, 125., nil)
		GroupAddGroup(gdammi, g)
		dammi = nil
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitInGroup(Picked, gdamage) == false and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0JK'))
				IssueTargetOrderById(dammi, $D02B6, Picked)
				dammi = nil
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIfb\\AIfbSpecialArt.mdl", Picked, "chest"))
				GroupAddUnit(gdamage, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		SaveGroupHandle(udg_hash, h, $B, gdamage)
	else
		while(true) do
			if (lopa > 3) then break end
			dammi = LoadUnitHandle(udg_hash, h, lopa)
			ef = LoadEffectHandle(udg_hash, h, lopa + 3)
			KillUnit(dammi)
			DestroyEffect(ef)
			lopa = lopa + 1
			dammi = nil
			ef = nil
		end
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		GroupClear(gdamage)
		DestroyGroup(gdamage)
	end
	t = nil
	caster = nil
	gdamage = nil
	p = nil
	GroupClear(gdammi)
	DestroyGroup(gdammi)
	gdammi = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
end

function Trig_Fire_Staff_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local loc ---@type location
	local xt ---@type number real
	local yt ---@type number real
	local dammi ---@type unit
	local ef ---@type effect
	local xdammi ---@type number real
	local ydammi ---@type number real
	local lopa = 1 ---@type number integer
	local gdamage = CreateGroup() ---@type group
	local angle ---@type number real
	local dammiangle = -90. ---@type number real
	local damage = 170. ---@type number real
	local wait = 50 ---@type number integer
	if GetSpellTargetUnit() == nil then
		loc = GetSpellTargetLoc()
		xt = GetLocationX(loc)
		yt = GetLocationY(loc)
		RemoveLocation(loc)
		loc = nil
	else
		xt = GetUnitX(GetSpellTargetUnit())
		yt = GetUnitY(GetSpellTargetUnit())
	end
	angle = bj_RADTODEG * Atan2(yt - y, xt - x)
	while(true) do
		if (lopa > 3) then break end
		xdammi = x + 100. * Cos((angle + dammiangle) * bj_DEGTORAD)
		ydammi = y + 100. * Sin((angle + dammiangle) * bj_DEGTORAD)
		dammiangle = dammiangle + 90.
		dammi = CreateUnit(p, FourCC('h00U'), xdammi, ydammi, angle)
		UnitAddAbility(dammi, FourCC('Amrf'))
		UnitRemoveAbility(dammi, FourCC('Amrf'))
		SetUnitFlyHeight(dammi, 50., .0)
		ef = AddSpecialEffectTarget("Effects\\SunfireMissile.mdl", dammi, "chest")
		SaveUnitHandle(udg_hash, h, lopa, dammi)
		SaveEffectHandle(udg_hash, h, lopa + 3, ef)
		lopa = lopa + 1
		dammi = nil
		ef = nil
	end
	SaveUnitHandle(udg_hash, h, 7, caster)
	SaveReal(udg_hash, h, 8, damage)
	SaveInteger(udg_hash, h, 9, wait)
	SaveReal(udg_hash, h, $A, angle)
	SaveGroupHandle(udg_hash, h, $B, gdamage)
	SaveReal(udg_hash, h, $C, 45.)
	SaveReal(udg_hash, h, $D, 3.6)
	TimerStart(t, .03, true, Trig_Fire_Staff_Periodic_Actions)
	caster = nil
	p = nil
	t = nil
	gdamage = nil
end

---@return boolean
function Trig_Fire_Staff_Conditions()
	return GetSpellAbilityId() == FourCC('A0JJ')
end

function InitTrig_Fire_Staff()
	local index = 0 ---@type number integer
	gg_trg_Fire_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fire_Staff, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fire_Staff, Condition(Trig_Fire_Staff_Conditions))
	TriggerAddAction(gg_trg_Fire_Staff, Trig_Fire_Staff_Actions)
end

function Trig_Demon_Axe_Remove_Stregnth_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	UnitRemoveAbility(caster, FourCC('A0J2'))
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	caster = nil
end

function Trig_Demon_Axe_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), GetUnitX(caster), GetUnitY(caster), .0) ---@type unit
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
	UnitAddAbility(dammi, FourCC('A0IW'))
	IssueTargetOrderById(dammi, $D00F1, caster)
	UnitAddAbility(caster, FourCC('A0J2'))
	SaveUnitHandle(udg_hash, h, 1, caster)
	TimerStart(t, 35., false, Trig_Demon_Axe_Remove_Stregnth_Actions)
	caster = nil
	t = nil
	dammi = nil
end

---@return boolean
function Trig_Demon_Axe_Conditions()
	return GetSpellAbilityId() == FourCC('A0J1')
end

function InitTrig_Demon_Axe()
	local index = 0 ---@type number integer
	gg_trg_Demon_Axe = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Demon_Axe, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Demon_Axe, Condition(Trig_Demon_Axe_Conditions))
	TriggerAddAction(gg_trg_Demon_Axe, Trig_Demon_Axe_Actions)
end

function Trig_Demon_Axe_Kill_Unit_Actions()
	local killer = GetKillingUnit() ---@type unit
	SetUnitAbilityLevel(killer, FourCC('A0J2'), (GetUnitAbilityLevel(killer, FourCC('A0J2')) + 1))
	killer = nil
end

---@return boolean
function Trig_Demon_Axe_Kill_Unit_Conditions()
	return GetUnitAbilityLevel(GetKillingUnit(), FourCC('A0J2')) > 0
end

function InitTrig_Demon_Axe_Kill_Unit()
	local index = 0 ---@type number integer
	gg_trg_Demon_Axe_Kill_Unit = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Demon_Axe_Kill_Unit, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Demon_Axe_Kill_Unit, Condition(Trig_Demon_Axe_Kill_Unit_Conditions))
	TriggerAddAction(gg_trg_Demon_Axe_Kill_Unit, Trig_Demon_Axe_Kill_Unit_Actions)
end

function Trig_Boots_Rescue_Remove_Effects_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	SetUnitLifeAndManaRegeneration(caster, "life", -25)
	SetUnitLifeAndManaRegeneration(target, "life", -25)
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	caster = nil
	target = nil
end

function Trig_Boots_Rescue_Destroy_Lightning_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local l = LoadLightningHandle(udg_hash, h, 1) ---@type lightning
	DestroyLightning(l)
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	l = nil
end

function Trig_Boots_Rescue_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local dammi = CreateUnit(p, FourCC('h00U'), xc, yc, .0) ---@type unit
	local dammi2 = CreateUnit(p, FourCC('h00U'), xc, yc, .0) ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local l = AddLightningEx("MBUR", true, xc, yc, 50., xt, yt, 50.) ---@type lightning
	local t2 = CreateTimer() ---@type timer
	local h2 = GetHandleId(t2) ---@type number integer
	SetUnitX(caster, xt)
	SetUnitY(caster, yt)
	SetUnitX(target, xc)
	SetUnitY(target, yc)
	SetUnitLifeAndManaRegeneration(caster, "life", 25)
	SetUnitLifeAndManaRegeneration(target, "life", 25)
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
	UnitApplyTimedLife(dammi2, FourCC('BTLF'), 1.)
	UnitAddAbility(dammi, FourCC('A0IY'))
	UnitAddAbility(dammi2, FourCC('A0IY'))
	IssueTargetOrderById(dammi, $D008E, caster)
	IssueTargetOrderById(dammi2, $D008E, target)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveUnitHandle(udg_hash, h, 2, target)
	SaveLightningHandle(udg_hash, h2, 1, l)
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\ManaBurn\\ManaBurnTarget.mdl", caster, "origin"))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\ManaBurn\\ManaBurnTarget.mdl", target, "origin"))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\MirrorImage\\MirrorImageCaster.mdl", caster, "origin"))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\MirrorImage\\MirrorImageCaster.mdl", target, "origin"))
	TimerStart(t, 6., false, Trig_Boots_Rescue_Remove_Effects_Actions)
	TimerStart(t2, .5, false, Trig_Boots_Rescue_Destroy_Lightning_Actions)
	caster = nil
	target = nil
	dammi = nil
	dammi2 = nil
	p = nil
	t = nil
	l = nil
	t2 = nil
end

---@return boolean
function Trig_Boots_Rescue_Conditions()
	return GetSpellAbilityId() == FourCC('A0JE')
end

function InitTrig_Boots_Rescue()
	local index = 0 ---@type number integer
	gg_trg_Boots_Rescue = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Boots_Rescue, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Boots_Rescue, Condition(Trig_Boots_Rescue_Conditions))
	TriggerAddAction(gg_trg_Boots_Rescue, Trig_Boots_Rescue_Actions)
end

function Trig_Astral_Staff_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local radius = 300. ---@type number real
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	GroupEnumUnitsInRange(g, x, y, radius, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
			UnitAddAbility(dammi, FourCC('A0IQ'))
			IssueTargetOrderById(dammi, $D0206, Picked)
			dammi = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	caster = nil
	p = nil
	RemoveLocation(loc)
	loc = nil
	DestroyGroup(g)
	GroupClear(g)
	g = nil
	Picked = nil
end

---@return boolean
function Trig_Astral_Staff_Conditions()
	return GetSpellAbilityId() == FourCC('A0IP')
end

function InitTrig_Astral_Staff()
	local index = 0 ---@type number integer
	gg_trg_Astral_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Astral_Staff, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Astral_Staff, Condition(Trig_Astral_Staff_Conditions))
	TriggerAddAction(gg_trg_Astral_Staff, Trig_Astral_Staff_Actions)
end

function Trig_Healer_Staff_Actions()
	local target = GetSpellTargetUnit() ---@type unit
	SetUnitState(target, UNIT_STATE_LIFE, GetUnitState(target, UNIT_STATE_LIFE) + 150. + (2. * GetHeroInt(GetSpellAbilityUnit(), true)))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", target, "origin"))
	DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Heal\\HealTarget.mdl", target, "origin"), 2.)
	target = nil
end

---@return boolean
function Trig_Healer_Staff_Conditions()
	return GetSpellAbilityId() == FourCC('A0IM')
end

function InitTrig_Healer_Staff()
	local index = 0 ---@type number integer
	gg_trg_Healer_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Healer_Staff, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Healer_Staff, Condition(Trig_Healer_Staff_Conditions))
	TriggerAddAction(gg_trg_Healer_Staff, Trig_Healer_Staff_Actions)
end

function Trig_Magic_Amulet_Remove_Shield_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local ef = LoadEffectHandle(udg_hash, h, 2) ---@type effect
	SaveReal(udg_hash, GetHandleId(caster), 86, .0)
	SaveEffectHandle(udg_hash, GetHandleId(caster), 87, nil)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	DestroyEffect(ef)
	t = nil
	caster = nil
	ef = nil
end

function Trig_Magic_Amulet_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local shield = 200. ---@type number real
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\Human\\ManaShield\\ManaShieldCaster.mdl", caster, "origin") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveReal(udg_hash, GetHandleId(caster), 86, shield)
	SaveEffectHandle(udg_hash, GetHandleId(caster), 87, ef)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveEffectHandle(udg_hash, h, 2, ef)
	TimerStart(t, 20., false, Trig_Magic_Amulet_Remove_Shield_Actions)
	caster = nil
	ef = nil
	t = nil
end

---@return boolean
function Trig_Magic_Amulet_Conditions()
	return GetSpellAbilityId() == FourCC('A0IH')
end

function InitTrig_Magic_Amulet()
	local index = 0 ---@type number integer
	gg_trg_Magic_Amulet = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Magic_Amulet, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Magic_Amulet, Condition(Trig_Magic_Amulet_Conditions))
	TriggerAddAction(gg_trg_Magic_Amulet, Trig_Magic_Amulet_Actions)
end

function Trig_Blood_Dagger_Actions()
	local killer = GetKillingUnit() ---@type unit
	SetUnitState(killer, UNIT_STATE_LIFE, GetUnitState(killer, UNIT_STATE_LIFE) + (GetUnitState(GetDyingUnit(), UNIT_STATE_MAX_LIFE) * .1))
	DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPriest.mdl", killer, "chest"))
	killer = nil
end

---@return boolean
function Trig_Blood_Dagger_Conditions()
	return GetUnitAbilityLevel(GetKillingUnit(), FourCC('A0IG')) >= 1
end

function InitTrig_Blood_Dagger()
	local index = 0 ---@type number integer
	gg_trg_Blood_Dagger = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Blood_Dagger, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Blood_Dagger, Condition(Trig_Blood_Dagger_Conditions))
	TriggerAddAction(gg_trg_Blood_Dagger, Trig_Blood_Dagger_Actions)
end

function Trig_Agility_Blade_Remove_Agi_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local bonus = LoadInteger(udg_hash, h, 2) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 3) ---@type effect
	local ef2 = LoadEffectHandle(udg_hash, h, 4) ---@type effect
	local clearagi = GetHeroAgi(caster, false) ---@type number integer
	SetHeroAgi(caster, clearagi - bonus, true)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	DestroyEffect(ef)
	DestroyEffect(ef2)
	caster = nil
	ef = nil
	ef2 = nil
	t = nil
end

function Trig_Agility_Blade_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local agi = GetHeroAgi(caster, true) ---@type number integer
	local clearagi = GetHeroAgi(caster, false) ---@type number integer
	local bonus = R2I(agi / 2) ---@type number integer
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\AcidBomb\\BottleImpact.mdl", caster, "weapon") ---@type effect
	local ef2 = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Drain\\DrainCaster.mdl", caster, "head") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetHeroAgi(caster, clearagi + bonus, true)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveInteger(udg_hash, h, 2, bonus)
	SaveEffectHandle(udg_hash, h, 3, ef)
	SaveEffectHandle(udg_hash, h, 4, ef2)
	TimerStart(t, 7., false, Trig_Agility_Blade_Remove_Agi_Actions)
	caster = nil
	ef = nil
	ef2 = nil
	t = nil
end

---@return boolean
function Trig_Agility_Blade_Conditions()
	return GetSpellAbilityId() == FourCC('A0IE')
end

function InitTrig_Agility_Blade()
	local index = 0 ---@type number integer
	gg_trg_Agility_Blade = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Agility_Blade, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Agility_Blade, Condition(Trig_Agility_Blade_Conditions))
	TriggerAddAction(gg_trg_Agility_Blade, Trig_Agility_Blade_Actions)
end

---@return boolean
function Trig_Bone_Staff_Set_Summon_Ability_Level_Func003C()
	return (GetUnitTypeId(GetSummonedUnit()) == FourCC('n01K')) or (GetUnitTypeId(GetSummonedUnit()) == FourCC('n01L'))
end

---@return boolean
function Trig_Bone_Staff_Set_Summon_Ability_Level_Conditions()
	return (Trig_Bone_Staff_Set_Summon_Ability_Level_Func003C())
end

---@return boolean
function Trig_Bone_Staff_Set_Summon_Ability_Level_Func001C()
	return (GetUnitTypeId(GetSummonedUnit()) == FourCC('n01K'))
end

---@return boolean
function Trig_Bone_Staff_Set_Summon_Ability_Level_Func002C()
	return (GetUnitTypeId(GetSummonedUnit()) == FourCC('n01L'))
end

function Trig_Bone_Staff_Set_Summon_Ability_Level_Actions()
	if (Trig_Bone_Staff_Set_Summon_Ability_Level_Func001C()) then
		SetUnitAbilityLevelSwapped(FourCC('A0B6'), GetSummonedUnit(), 2)
		SetUnitAbilityLevelSwapped(FourCC('A0AW'), GetSummonedUnit(), 2)
		SetUnitAbilityLevelSwapped(FourCC('A0AX'), GetSummonedUnit(), 2)
	end
	if (Trig_Bone_Staff_Set_Summon_Ability_Level_Func002C()) then
		SetUnitAbilityLevelSwapped(FourCC('A0B6'), GetSummonedUnit(), 3)
		SetUnitAbilityLevelSwapped(FourCC('A0AW'), GetSummonedUnit(), 3)
		SetUnitAbilityLevelSwapped(FourCC('A0AX'), GetSummonedUnit(), 3)
	end
end

function InitTrig_Bone_Staff_Set_Summon_Ability_Level()
	gg_trg_Bone_Staff_Set_Summon_Ability_Level = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Bone_Staff_Set_Summon_Ability_Level, EVENT_PLAYER_UNIT_SUMMON)
	TriggerAddCondition(gg_trg_Bone_Staff_Set_Summon_Ability_Level, Condition(Trig_Bone_Staff_Set_Summon_Ability_Level_Conditions))
	TriggerAddAction(gg_trg_Bone_Staff_Set_Summon_Ability_Level, Trig_Bone_Staff_Set_Summon_Ability_Level_Actions)
end

---@return boolean
function Trig_Novice_Amulet_Conditions()
	return (GetSpellAbilityId() == FourCC('A0AI'))
end

function Trig_Novice_Amulet_Actions()
	SetUnitManaBJ(GetSpellAbilityUnit(), (GetUnitStateSwap(UNIT_STATE_MANA, GetSpellAbilityUnit()) + 75.))
end

function InitTrig_Novice_Amulet()
	gg_trg_Novice_Amulet = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Novice_Amulet, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_Novice_Amulet, Condition(Trig_Novice_Amulet_Conditions))
	TriggerAddAction(gg_trg_Novice_Amulet, Trig_Novice_Amulet_Actions)
end

function Trig_Glove_of_Andromat_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local pnumber = GetPlayerId(p) + 1 ---@type number integer
	local id = GetUnitTypeId(target) ---@type number integer
	local gold = R2I(GetRandomInt(LoadInteger(udg_hash, id, 70), LoadInteger(udg_hash, id, 71)) * 10.) + 60 ---@type number integer
	local xp = R2I(LoadInteger(udg_hash, id, 82) * 7.) ---@type number integer
	local mana = 75. + (GetUnitState(target, UNIT_STATE_MAX_LIFE) / 2) ---@type number real
	SetUnitState(caster, UNIT_STATE_MANA, GetUnitState(caster, UNIT_STATE_MANA) + mana)
	AddHeroXP(caster, R2I(xp + .5), true)
	SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + gold)
	CreateTexttag(udg_ColorString[23] .. "+" .. I2S(gold) .. "|r", .025, $FF, xt - 15., yt, .0, .0, .035, 3.5)
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Transmute\\PileofGold.mdl", xt, yt))
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl", xt, yt))
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\DarkRitual\\DarkRitualTarget.mdl", xt, yt))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl", caster, "origin"))
	if pnumber <= 9 then
		udg_MultiBoard_Player_Kills_Count[pnumber] = udg_MultiBoard_Player_Kills_Count[pnumber] + 1
		MultiboardSetItemValueBJ(udg_MultiBoard, 3, udg_PlayerNumberInMB[pnumber], udg_ColorString[20] .. I2S(udg_MultiBoard_Player_Kills_Count[pnumber]) .. "|r")
	end
	SaveBoolean(udg_hash, GetHandleId(target), 85, true)
	SetUnitExploded(target, true)
	KillUnit(target)
	SetUnitVertexColor(target, 0, 0, 0, 0)
	PauseUnit(target, true)
	caster = nil
	target = nil
	p = nil
end

---@return boolean
function Trig_Glove_of_Andromat_Conditions()
	return GetSpellAbilityId() == FourCC('A0AN')
end

function InitTrig_Glove_of_Andromat()
	local index = 0 ---@type number integer
	gg_trg_Glove_of_Andromat = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Glove_of_Andromat, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Glove_of_Andromat, Condition(Trig_Glove_of_Andromat_Conditions))
	TriggerAddAction(gg_trg_Glove_of_Andromat, Trig_Glove_of_Andromat_Actions)
end

function Trig_Glove_of_Midas_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local dammi = LoadUnitHandle(udg_hash, h, 3) ---@type unit
	local wait2 = LoadInteger(udg_hash, h, 5) ---@type number integer
	local height = LoadReal(udg_hash, h, 6) ---@type number real
	local ef ---@type effect
	local gold ---@type number integer
	local xp ---@type number integer
	local p ---@type player
	local pnumber ---@type number integer
	local id ---@type number integer
	local x = GetUnitX(dammi) ---@type number real
	local y = GetUnitY(dammi) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2(yt - y, xt - x) ---@type number real
	local dist ---@type number real
	local destroy = false ---@type boolean
	if GetUnitState(target, UNIT_STATE_LIFE) > .405 then
		wait2 = wait2 - 1
		SaveInteger(udg_hash, h, 5, wait2)
		if wait2 == 0 then
			SetUnitFlyHeight(dammi, .0, height * 2.25)
		end
		x = x + 20. * Cos(angle * bj_DEGTORAD)
		y = y + 20. * Sin(angle * bj_DEGTORAD)
		SetUnitPosition(dammi, x, y)
		dist = SquareRoot((xt - x) * (xt - x) + (yt - y) * (yt - y))
		if dist < 21. then
			destroy = true
			id = GetUnitTypeId(target)
			p = GetOwningPlayer(caster)
			pnumber = GetPlayerId(p) + 1
			gold = R2I(GetRandomInt(LoadInteger(udg_hash, id, 70), LoadInteger(udg_hash, id, 71)) * 6.) + 40
			xp = R2I(LoadInteger(udg_hash, id, 82) * 5.)
			SetUnitPosition(dammi, xt, yt)
			AddHeroXP(caster, R2I(xp + .5), true)
			SetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(p, PLAYER_STATE_RESOURCE_GOLD) + gold)
			CreateTexttag(udg_ColorString[23] .. "+" .. I2S(gold) .. "|r", .025, $FF, xt - 15., y, .0, .0, .035, 3.5)
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Transmute\\PileofGold.mdl", xt, yt))
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Items\\AIlm\\AIlmTarget.mdl", xt, yt))
			if pnumber <= 9 then
				udg_MultiBoard_Player_Kills_Count[pnumber] = udg_MultiBoard_Player_Kills_Count[pnumber] + 1
				MultiboardSetItemValueBJ(udg_MultiBoard, 3, udg_PlayerNumberInMB[pnumber], udg_ColorString[20] .. I2S(udg_MultiBoard_Player_Kills_Count[pnumber]) .. "|r")
			end
			SaveBoolean(udg_hash, GetHandleId(target), 85, true)
			SetUnitExploded(target, true)
			KillUnit(target)
			SetUnitVertexColor(target, 0, 0, 0, 0)
			PauseUnit(target, true)
			p = nil
		end
	else
		destroy = true
	end
	if destroy then
		KillUnit(dammi)
		ef = LoadEffectHandle(udg_hash, h, 4)
		DestroyEffect(ef)
		ef = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	target = nil
	dammi = nil
end

function Trig_Glove_of_Midas_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2(yt - y, xt - x) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi ---@type unit
	local ef ---@type effect
	local dist = SquareRoot((xt - x) * (xt - x) + (yt - y) * (yt - y)) ---@type number real
	local height = dist / 3 ---@type number real
	local wait2 = R2I(dist / 40) ---@type number integer
	dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, angle)
	UnitAddAbility(dammi, FourCC('Amrf'))
	UnitRemoveAbility(dammi, FourCC('Amrf'))
	SetUnitFlyHeight(dammi, .0, .0)
	SetUnitFlyHeight(dammi, height, height * 2.25)
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Transmute\\GoldBottleMissile.mdl", dammi, "chest")
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveUnitHandle(udg_hash, h, 2, target)
	SaveUnitHandle(udg_hash, h, 3, dammi)
	SaveEffectHandle(udg_hash, h, 4, ef)
	SaveInteger(udg_hash, h, 5, wait2)
	SaveReal(udg_hash, h, 6, height)
	TimerStart(t, .03, true, Trig_Glove_of_Midas_Periodic_Actions)
	target = nil
	t = nil
	dammi = nil
	ef = nil
end

---@return boolean
function Trig_Glove_of_Midas_Conditions()
	return GetSpellAbilityId() == FourCC('A0A2')
end

function InitTrig_Glove_of_Midas()
	local index = 0 ---@type number integer
	gg_trg_Glove_of_Midas = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Glove_of_Midas, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Glove_of_Midas, Condition(Trig_Glove_of_Midas_Conditions))
	TriggerAddAction(gg_trg_Glove_of_Midas, Trig_Glove_of_Midas_Actions)
end

---@return boolean
function Trig_Heroes_more_attacked_priority_when_guards_Group_Filter()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) >= .45) and IsUnitInvulnerable(GetFilterUnit()) == false and (GetPlayerId(GetOwningPlayer(GetFilterUnit())) <= 8 and (IsPlayerEnemy(GetOwningPlayer(GetAttacker()), GetOwningPlayer(GetFilterUnit())))))
end

function Trig_Heroes_more_attacked_priority_when_guards_Actions()
	local g = CreateGroup() ---@type group
	local attacked = GetTriggerUnit() ---@type unit
	local attacker = GetAttacker() ---@type unit
	local ally ---@type unit
	GroupEnumUnitsInRange(g, GetUnitX(attacked), GetUnitY(attacked), 500., Filter(Trig_Heroes_more_attacked_priority_when_guards_Group_Filter))
	if CountUnitsInGroup(g) > 1 then
		FilterMostNearUnit(g, attacked)
		ally = udg_Unit_FilterMostNearUnit
	end
	if ally ~= nil then
		IssueTargetOrderById(attacker, $D000F, ally)
	end
	attacked = nil
	attacker = nil
	ally = nil
end

---@return boolean
function Trig_Heroes_more_attacked_priority_when_guards_Conditions()
	return ((GetUnitState(GetTriggerUnit(), UNIT_STATE_LIFE) >= .405) and (IsUnitIllusion(GetTriggerUnit()) == false) and (GetPlayerId(GetOwningPlayer(GetAttacker())) >= 9)) and (GetUnitTypeId(GetTriggerUnit()) == FourCC('e002') or GetUnitTypeId(GetTriggerUnit()) == FourCC('h01K') or GetUnitTypeId(GetTriggerUnit()) == FourCC('n00Y') or GetUnitTypeId(GetTriggerUnit()) == FourCC('o003'))
end

function InitTrig_Heroes_more_attacked_priority_when_guards()
	local index = 0 ---@type number integer
	gg_trg_Heroes_more_attacked_priority_when_guards = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Heroes_more_attacked_priority_when_guards, Player(index), EVENT_PLAYER_UNIT_ATTACKED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Heroes_more_attacked_priority_when_guards, Condition(Trig_Heroes_more_attacked_priority_when_guards_Conditions))
	TriggerAddAction(gg_trg_Heroes_more_attacked_priority_when_guards, Trig_Heroes_more_attacked_priority_when_guards_Actions)
end

function Trig_Player_Fast_Purchase_System_Actions()
	local caster = GetTriggerUnit() ---@type unit
	local pid = GetPlayerId(GetOwningPlayer(caster)) + 1 ---@type number integer
	if (GetIssuedOrderId() == $D0057) then
		udg_Boolean_Player_Fast_Purchase[pid] = true
	end
	if (GetIssuedOrderId() == $D0058) then
		udg_Boolean_Player_Fast_Purchase[pid] = false
	end
	caster = nil
end

---@return boolean
function Trig_Player_Fast_Purchase_System_Conditions()
	return GetUnitAbilityLevel(GetTriggerUnit(), FourCC('A0MG')) > 0
end

function InitTrig_Player_Fast_Purchase_System()
	local index = 0 ---@type number integer
	gg_trg_Player_Fast_Purchase_System = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Player_Fast_Purchase_System, Player(index), EVENT_PLAYER_UNIT_ISSUED_ORDER, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Player_Fast_Purchase_System, Condition(Trig_Player_Fast_Purchase_System_Conditions))
	TriggerAddAction(gg_trg_Player_Fast_Purchase_System, Trig_Player_Fast_Purchase_System_Actions)
end

function Trig_Show_hint_abount_hints_Actions()
	DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 15., "Советуем просмотреть все игровые команды в меню Инфо (|Cfffed312F9|r)")
end

function InitTrig_Show_hint_abount_hints()
	gg_trg_Show_hint_abount_hints = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Show_hint_abount_hints, 120.)
	TriggerRegisterTimerEventSingle(gg_trg_Show_hint_abount_hints, 600.)
	TriggerAddAction(gg_trg_Show_hint_abount_hints, Trig_Show_hint_abount_hints_Actions)
end

function Trig_Show_Hint_Abount_Items_Actions()
	DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 15., "|cff32cd32Подсказка:|r")
	DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 15., "По умолчанию, если вы покупаете рецепт на предмет, то при достаточном количестве золота, вы получите его сразу. В сумму требуемого золота входят ваши предметы, необходимые для сборки!!!")
end

function InitTrig_Show_Hint_Abount_Items()
	gg_trg_Show_Hint_Abount_Items = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Show_Hint_Abount_Items, 600.)
	TriggerAddAction(gg_trg_Show_Hint_Abount_Items, Trig_Show_Hint_Abount_Items_Actions)
end

function Trig_Hint_About_Random_Actions()
	DisplayTextToForce(bj_FORCE_ALL_PLAYERS, "Вы можете выбрать случайного героя, написав в чат |cff99ccff-r/-random/-р/-рандом|r, и получить дополнительно |cFFFFFF00+250|r золота.")
end

function InitTrig_Hint_About_Random()
	gg_trg_Hint_About_Random = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Hint_About_Random, 13.)
	TriggerAddAction(gg_trg_Hint_About_Random, Trig_Hint_About_Random_Actions)
end

function Trig_Show_hint_abount_reference_panel_Actions()
	DisplayTimedTextToForce(bj_FORCE_ALL_PLAYERS, 15., "Вы можете воспользоваться дополнительной информацией в Панели Справки (|Cfffed312F8|r)")
end

function InitTrig_Show_hint_abount_reference_panel()
	gg_trg_Show_hint_abount_reference_panel = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Show_hint_abount_reference_panel, 200.)
	TriggerRegisterTimerEventSingle(gg_trg_Show_hint_abount_reference_panel, 1200.)
	TriggerAddAction(gg_trg_Show_hint_abount_reference_panel, Trig_Show_hint_abount_reference_panel_Actions)
end

function Trig_Show_Ability_Learn_Actions()
	local hero = GetLearningUnit() ---@type unit
	local p = GetOwningPlayer(hero) ---@type player
	local id = GetLearnedSkill() ---@type number integer
	if IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS) and udg_System_ShowAbil_And_Items_Hint[GetPlayerId(GetLocalPlayer()) + 1] then
		DisplayTextToPlayer(GetLocalPlayer(), .0, .0, udg_ColorString[GetPlayerId(p) + 1] .. GetPlayerName(p) .. "|r изучил способность |cff99ccff" .. GetObjectName(id) .. "|r ( |cFF969696" .. I2S(GetUnitAbilityLevel(hero, id) - 1) .. "|r»»|cff99ccff" .. I2S(GetUnitAbilityLevel(hero, id)) .. "|r )")
	end
	p = nil
	hero = nil
end

---@return boolean
function Trig_Show_Ability_Learn_Conditions()
	return ((IsUnitType(GetLearningUnit(), UNIT_TYPE_HERO)) and (GetPlayerId(GetOwningPlayer(GetLearningUnit())) <= 8)) ~= nil
end

function InitTrig_Show_Ability_Learn()
	local index = 0 ---@type number integer
	gg_trg_Show_Ability_Learn = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Show_Ability_Learn, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Show_Ability_Learn, Condition(Trig_Show_Ability_Learn_Conditions))
	TriggerAddAction(gg_trg_Show_Ability_Learn, Trig_Show_Ability_Learn_Actions)
end

function Trig_System_Personal_Items_Buy_Item_Actions()
	local it = GetSoldItem() ---@type item
	local name = GetItemName(it) ---@type string
	local p ---@type player
	if GetItemType(GetSoldItem()) == ITEM_TYPE_UNKNOWN then
		p = GetOwningPlayer(GetBuyingUnit())
		SetItemUserData(it, GetPlayerId(GetOwningPlayer(GetBuyingUnit())) + 1)
		if IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS) and udg_System_ShowAbil_And_Items_Hint[GetPlayerId(GetLocalPlayer()) + 1] and GetItemType(GetSoldItem()) == ITEM_TYPE_PERMANENT then
			DisplayTextToPlayer(GetLocalPlayer(), .0, .0, udg_ColorString[GetPlayerId(p) + 1] .. GetPlayerName(p) .. "|r приобрел предмет |cff99ccff" .. name .. "|r")
		end
		if IsPlayerInForce(GetLocalPlayer(), bj_FORCE_ALL_PLAYERS) and GetLocalPlayer() == p and udg_Count_Item_Tips_Message[GetPlayerId(p) + 1] <= 2 then
			DisplayTextToPlayer(GetLocalPlayer(), .0, .0, "|cff99ccffВНИМАНИЕ|r: ЛЮБОЙ предмет (даже сборный) вы можете купить |cFFFF0000Одним Нажатием|r (при достаточном количестве золота и места).")
			udg_Count_Item_Tips_Message[GetPlayerId(p) + 1] = udg_Count_Item_Tips_Message[GetPlayerId(p) + 1] + 1
		end
		it = nil
	end
	p = nil
end

function InitTrig_System_Personal_Items_Buy_Item()
	local index = 0 ---@type number integer
	gg_trg_System_Personal_Items_Buy_Item = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_System_Personal_Items_Buy_Item, Player(index), EVENT_PLAYER_UNIT_SELL_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddAction(gg_trg_System_Personal_Items_Buy_Item, Trig_System_Personal_Items_Buy_Item_Actions)
end

function Trig_System_Personal_Items_Pick_Up_Item_Actions()
	local it = GetManipulatedItem() ---@type item
	local id = GetItemTypeId(it) ---@type number integer
	local cv = GetItemUserData(it) ---@type number integer
	local x = GetUnitX(GetManipulatingUnit()) ---@type number real
	local y = GetUnitY(GetManipulatingUnit()) ---@type number real
	if GetItemType(it) ~= ITEM_TYPE_CHARGED and GetItemType(it) ~= ITEM_TYPE_POWERUP then
		if (cv == 0) or (cv == (GetPlayerId(GetOwningPlayer(GetManipulatingUnit())) + 1)) then
		else
			SetItemPosition(it, x, y)
			SimError(GetOwningPlayer(GetManipulatingUnit()), "Вы не можете подбирать чужие предметы")
		end
	end
	it = nil
end

function InitTrig_System_Personal_Items_Pick_Up_Item()
	local index = 0 ---@type number integer
	gg_trg_System_Personal_Items_Pick_Up_Item = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_System_Personal_Items_Pick_Up_Item, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddAction(gg_trg_System_Personal_Items_Pick_Up_Item, Trig_System_Personal_Items_Pick_Up_Item_Actions)
end

---@return boolean
function Trig_no_attack_Conditions()
	return (IsUnitAlly(GetTriggerUnit(), GetOwningPlayer(GetAttacker())))
end

function Trig_no_attack_Actions()
	IssueImmediateOrderById(GetAttacker(), $D0004)
end

function InitTrig_no_attack()
	gg_trg_no_attack = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_no_attack, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_no_attack, Condition(Trig_no_attack_Conditions))
	TriggerAddAction(gg_trg_no_attack, Trig_no_attack_Actions)
end

function Trig_Select_Refrence_Panel_Actions()
	if (GetLocalPlayer() == GetTriggerPlayer()) then
		ClearSelection()
	end
end

---@return boolean
function Trig_Select_Refrence_Panel_Conditions()
	return GetUnitTypeId(GetTriggerUnit()) == FourCC('h00C') and GetTriggerPlayer() ~= GetOwningPlayer(GetTriggerUnit())
end

function InitTrig_Select_Refrence_Panel()
	local index = 0 ---@type number integer
	gg_trg_Select_Refrence_Panel = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Select_Refrence_Panel, Player(index), EVENT_PLAYER_UNIT_SELECTED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Select_Refrence_Panel, Condition(Trig_Select_Refrence_Panel_Conditions))
	TriggerAddAction(gg_trg_Select_Refrence_Panel, Trig_Select_Refrence_Panel_Actions)
end

function Trig_ShopAnimation_Actions()
	local shop = GetTriggerUnit() ---@type unit
	local id = GetUnitTypeId(shop) ---@type number integer
	local p = GetTriggerPlayer() ---@type player
	local s ---@type string
	local select = false ---@type boolean
	if ((id == FourCC('h00D')) or (id == FourCC('h000')) or (id == FourCC('h002'))) and GetLocalPlayer() == p then
		SetUnitAnimation(shop, "Stand Work")
		select = true
	end
	if (id == FourCC('h001')) and GetLocalPlayer() == p then
		SetUnitAnimation(shop, "Stand Victory")
		select = true
	end
	if (id == FourCC('h00S')) and GetLocalPlayer() == p then
		SetUnitAnimation(shop, "Stand Work")
		select = true
	end
	s = ""
	if (id == FourCC('h003')) then
		if GetLocalPlayer() == p then
			s = "Abilities\\Spells\\Human\\MagicSentry\\MagicSentryCaster.mdl"
		end
		udg_ShopEffectSelectedForPlayer[GetPlayerId(p)] = AddSpecialEffectTarget(s, shop, "overhead")
		select = true
	end
	s = ""
	if (id == FourCC('h00Y')) then
		if GetLocalPlayer() == p then
			s = "Abilities\\Spells\\Orc\\SpiritLink\\SpiritLinkZapTarget.mdl"
		end
		udg_ShopEffectSelectedForPlayer[GetPlayerId(p)] = AddSpecialEffectTarget(s, shop, "head")
		select = true
	end
	udg_ShopSelectedForPlayer[GetPlayerId(p)] = shop
	shop = nil
	p = nil
end

---@return boolean
function Trig_ShopAnimation_Conditions()
	return ((IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE)) and (udg_ShopSelectedForPlayer[GetPlayerId(GetTriggerPlayer())] ~= GetTriggerUnit())) ~= nil
end

function InitTrig_ShopAnimation()
	local index = 0 ---@type number integer
	gg_trg_ShopAnimation = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_ShopAnimation, Player(index), EVENT_PLAYER_UNIT_SELECTED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_ShopAnimation, Condition(Trig_ShopAnimation_Conditions))
	TriggerAddAction(gg_trg_ShopAnimation, Trig_ShopAnimation_Actions)
end

function Trig_ShopStopAnimation_Actions()
	local shop = GetTriggerUnit() ---@type unit
	local id = GetUnitTypeId(shop) ---@type number integer
	local p = GetTriggerPlayer() ---@type player
	if ((id == FourCC('h00D')) or (id == FourCC('h000')) or (id == FourCC('h002')) or (id == FourCC('h00S')) or (id == FourCC('h001'))) and GetLocalPlayer() == p then
		SetUnitAnimation(shop, "Stand")
	end
	if (id == FourCC('h003')) or (id == FourCC('h00Y')) then
		DestroyEffect(udg_ShopEffectSelectedForPlayer[GetPlayerId(p)])
	end
	shop = nil
	p = nil
end

---@return boolean
function Trig_ShopStopAnimation_Conditions()
	return (IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE)) ~= nil
end

function InitTrig_ShopStopAnimation()
	local index = 0 ---@type number integer
	gg_trg_ShopStopAnimation = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_ShopStopAnimation, Player(index), EVENT_PLAYER_UNIT_DESELECTED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_ShopStopAnimation, Condition(Trig_ShopStopAnimation_Conditions))
	TriggerAddAction(gg_trg_ShopStopAnimation, Trig_ShopStopAnimation_Actions)
end

function Trig_RedMarkToUnit_Periodic_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local mark = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	if GetUnitState(u, UNIT_STATE_LIFE) > .405 then
		SetUnitX(mark, GetUnitX(u))
		SetUnitY(mark, GetUnitY(u))
	else
		RemoveUnit(mark)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	u = nil
	mark = nil
end

function Trig_RedMarkToUnit_Actions()
	local u = GetEnteringUnit() ---@type unit
	local id = GetUnitTypeId(u) ---@type number integer
	local mark ---@type unit
	local t ---@type timer
	local h ---@type number integer
	if IsUnitIllusion(u) == false and ((id == FourCC('n00K')) or (id == FourCC('n00O')) or (id == FourCC('u008')) or (id == FourCC('n00V')) or (id == FourCC('u00C')) or (id == FourCC('n015')) or (id == FourCC('n019')) or (id == FourCC('n01C')) or (id == FourCC('n009')) or (id == FourCC('n00E')) or (id == FourCC('N000')) or (id == FourCC('N00J'))) then
		mark = CreateUnit(Player($B), FourCC('n01M'), GetUnitX(u), GetUnitY(u), .0)
		SetUnitPathing(mark, false)
		t = CreateTimer()
		h = GetHandleId(t)
		SaveUnitHandle(udg_hash, h, 1, u)
		SaveUnitHandle(udg_hash, h, 2, mark)
		TimerStart(t, .1, true, Trig_RedMarkToUnit_Periodic_Move_Actions)
		mark = nil
		t = nil
	end
	u = nil
end

function InitTrig_RedMarkToUnit()
	local rectRegion = CreateRegion() ---@type region
	gg_trg_RedMarkToUnit = CreateTrigger()
	RegionAddRect(rectRegion, bj_mapInitialPlayableArea)
	TriggerRegisterEnterRegion(gg_trg_RedMarkToUnit, rectRegion, nil)
	TriggerAddAction(gg_trg_RedMarkToUnit, Trig_RedMarkToUnit_Actions)
end

function Trig_UnSelectedDummyRedMark_Actions()
	if (GetLocalPlayer() == GetTriggerPlayer()) then
		ClearSelection()
	end
end

---@return boolean
function Trig_UnSelectedDummyRedMark_Conditions()
	return GetUnitTypeId(GetTriggerUnit()) == FourCC('n01M')
end

function InitTrig_UnSelectedDummyRedMark()
	local index = 0 ---@type number integer
	gg_trg_UnSelectedDummyRedMark = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_UnSelectedDummyRedMark, Player(index), EVENT_PLAYER_UNIT_SELECTED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_UnSelectedDummyRedMark, Condition(Trig_UnSelectedDummyRedMark_Conditions))
	TriggerAddAction(gg_trg_UnSelectedDummyRedMark, Trig_UnSelectedDummyRedMark_Actions)
end

function Trig_SpecEffect_on_Casters_Animation_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster1 = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local caster2 = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	if GetUnitState(caster1, UNIT_STATE_LIFE) > .405 or GetUnitState(caster2, UNIT_STATE_LIFE) > .405 then
		if GetUnitState(caster1, UNIT_STATE_LIFE) > .405 then
			SetUnitAnimation(caster1, "spell")
		else
			RemoveSavedHandle(udg_hash, h, 1)
		end
		if GetUnitState(caster2, UNIT_STATE_LIFE) > .405 then
			SetUnitAnimation(caster2, "spell")
		else
			RemoveSavedHandle(udg_hash, h, 2)
		end
	else
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster1 = nil
	caster2 = nil
end

function Trig_SpecEffect_on_Casters_Actions()
	local u ---@type unit
	local t ---@type timer
	local h ---@type number integer
	local time ---@type number real
	u[1] = gg_unit_o003_0028
	u[2] = gg_unit_h01K_0109
	u[3] = gg_unit_e002_0108
	u[4] = gg_unit_n00Y_0101
	u[5] = gg_unit_o003_0027
	u[6] = gg_unit_h01K_0100
	u[7] = gg_unit_e002_0106
	u[8] = gg_unit_n00Y_0102
	t[1] = CreateTimer()
	h[1] = GetHandleId(t[1])
	t[2] = CreateTimer()
	h[2] = GetHandleId(t[2])
	t[3] = CreateTimer()
	h[3] = GetHandleId(t[3])
	t[4] = CreateTimer()
	h[4] = GetHandleId(t[4])
	time[1] = .867
	time[2] = 1.33
	time[3] = 2.666
	time[4] = 1.167
	SaveUnitHandle(udg_hash, h[1], 1, u[1])
	SaveUnitHandle(udg_hash, h[1], 2, u[5])
	SaveReal(udg_hash, h[1], 3, time[1])
	SaveUnitHandle(udg_hash, h[2], 1, u[2])
	SaveUnitHandle(udg_hash, h[2], 2, u[6])
	SaveReal(udg_hash, h[2], 3, time[2])
	SaveUnitHandle(udg_hash, h[3], 1, u[3])
	SaveUnitHandle(udg_hash, h[3], 2, u[7])
	SaveReal(udg_hash, h[3], 3, time[3])
	SaveUnitHandle(udg_hash, h[4], 1, u[4])
	SaveUnitHandle(udg_hash, h[4], 2, u[8])
	SaveReal(udg_hash, h[4], 3, time[4])
	TimerStart(t[1], time[1], true, Trig_SpecEffect_on_Casters_Animation_Actions)
	TimerStart(t[2], time[2], true, Trig_SpecEffect_on_Casters_Animation_Actions)
	TimerStart(t[3], time[3], true, Trig_SpecEffect_on_Casters_Animation_Actions)
	TimerStart(t[4], time[4], true, Trig_SpecEffect_on_Casters_Animation_Actions)
	u[1] = nil
	u[2] = nil
	u[3] = nil
	u[4] = nil
	u[5] = nil
	u[6] = nil
	u[7] = nil
	u[8] = nil
	t[1] = nil
	t[2] = nil
	t[3] = nil
	t[4] = nil
end

function InitTrig_SpecEffect_on_Casters()
	gg_trg_SpecEffect_on_Casters = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_SpecEffect_on_Casters, .0, false)
	TriggerAddAction(gg_trg_SpecEffect_on_Casters, Trig_SpecEffect_on_Casters_Actions)
end

function Trig_PortalSpecEffects_Peridoic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dummi = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local missile = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local angle = LoadReal(udg_hash, h, 3) ---@type number real
	local wait = LoadInteger(udg_hash, h, 4) ---@type number integer
	local x = GetRectCenterX(gg_rct_cast_magi) + 310. * Cos(angle * bj_DEGTORAD) ---@type number real
	local y = GetRectCenterY(gg_rct_cast_magi) + 310. * Sin(angle * bj_DEGTORAD) ---@type number real
	if wait < 50 then
		wait = wait + 1
		SaveInteger(udg_hash, h, 4, wait)
	else
		wait = 0
		SaveInteger(udg_hash, h, 4, wait)
		DestroyEffect(AddSpecialEffectTarget("s_ShadowEruption_Rain.mdl", dummi, "origin"))
	end
	SetUnitPosition(missile, x, y)
	SetUnitFacing(missile, angle + 90.)
	angle = angle + 7.2
	SaveReal(udg_hash, h, 3, angle)
	dummi = nil
	missile = nil
	t = nil
end

function Trig_PortalSpecEffects_Actions()
	local dummi = CreateUnit(Player($F), FourCC('h00U'), GetRectCenterX(gg_rct_cast_magi) + 20., GetRectCenterY(gg_rct_cast_magi) + 30., .0) ---@type unit
	local missile = CreateUnit(Player($F), FourCC('h00U'), GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi), .0) ---@type unit
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\Undead\\OrbOfDeath\\OrbOfDeathMissile.mdl", missile, "origin") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetUnitScale(dummi, 2., 2., 2.)
	UnitAddAbility(missile, FourCC('Amrf'))
	UnitRemoveAbility(missile, FourCC('Amrf'))
	SetUnitFlyHeight(missile, 150., .0)
	SaveUnitHandle(udg_hash, h, 1, dummi)
	SaveUnitHandle(udg_hash, h, 2, missile)
	SaveReal(udg_hash, h, 3, .0)
	SaveInteger(udg_hash, h, 4, 0)
	TimerStart(t, .04, true, Trig_PortalSpecEffects_Peridoic_Actions)
	dummi = nil
	missile = nil
	ef = nil
	t = nil
end

function InitTrig_PortalSpecEffects()
	gg_trg_PortalSpecEffects = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_PortalSpecEffects, 2., false)
	TriggerAddAction(gg_trg_PortalSpecEffects, Trig_PortalSpecEffects_Actions)
end

function Trig_Gates_Start_Animation_Actions()
	SetDoodadAnimationRect(bj_mapInitialPlayableArea, FourCC('D01A'), "stand alternate", false)
end

function InitTrig_Gates_Start_Animation()
	gg_trg_Gates_Start_Animation = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Gates_Start_Animation, 2.)
	TriggerAddAction(gg_trg_Gates_Start_Animation, Trig_Gates_Start_Animation_Actions)
end

function Trig_Unstuck_15sec_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local x = GetRectCenterX(gg_rct_Respawn_Heroes) ---@type number real
	local y = GetRectCenterY(gg_rct_Respawn_Heroes) ---@type number real
	local theCam = CreateCameraSetup() ---@type camerasetup
	PauseUnit(hero, false)
	SetUnitPosition(hero, x, y)
	if GetLocalPlayer() == GetOwningPlayer(hero) then
		DisplayTextToPlayer(GetOwningPlayer(hero), 0, 0, "|cff99ccffВНИМАНИЕ!!!|r|nВаш герой отморозился и был перемещен в центр базы.")
		CameraSetupSetField(theCam, CAMERA_FIELD_TARGET_DISTANCE, GetCameraField(CAMERA_FIELD_TARGET_DISTANCE), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_FARZ, GetCameraField(CAMERA_FIELD_FARZ), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ZOFFSET, GetCameraField(CAMERA_FIELD_ZOFFSET), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ANGLE_OF_ATTACK, bj_RADTODEG * GetCameraField(CAMERA_FIELD_ANGLE_OF_ATTACK), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_FIELD_OF_VIEW, bj_RADTODEG * GetCameraField(CAMERA_FIELD_FIELD_OF_VIEW), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ROLL, bj_RADTODEG * GetCameraField(CAMERA_FIELD_ROLL), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ROTATION, bj_RADTODEG * GetCameraField(CAMERA_FIELD_ROTATION), 0)
		CameraSetupSetDestPosition(theCam, x, y, 0)
		CameraSetupApplyForceDuration(theCam, true, 0)
		ClearSelection()
		SelectUnit(hero, true)
	end
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	hero = nil
end

function Trig_PlayerEnterGameCommand_Actions()
	local p = GetTriggerPlayer() ---@type player
	local s = GetEventPlayerChatString() ---@type string
	local hero ---@type unit
	local t ---@type timer
	local Nfb ---@type boolean
	local random ---@type number integer
	if ((s == "-r") or (s == "-random") or (s == "-р") or (s == "-рандом")) and udg_Is_Player_Got_Randomed[GetPlayerId(p) + 1] == false then
		udg_Is_Player_Got_Randomed[GetPlayerId(p) + 1] = true
		random = GetRandomInt(1, udg_Total_Heroes_Count)
		udg_Hero_Randomed = CreateUnit(p, udg_Heroes_Types[udg_Heroes_Random_Data[random]], 4925., 3900., .0)
		udg_Heroes_Random_Data[random] = udg_Heroes_Random_Data[udg_Total_Heroes_Count]
		udg_Total_Heroes_Count = udg_Total_Heroes_Count - 1
		TriggerExecute(gg_trg_Pick_Hero_Upgrade)
	end
	if ((s == "-ms") or (s == "-ск") or (s == "-movespeed") or (s == "-скорость")) and udg_herounit[GetPlayerId(p) + 1] ~= nil then
		DisplayTimedTextToPlayer(p, .0, .0, 5., GetUnitName(udg_herounit[GetPlayerId(p) + 1]) .. " перемещается со скоростью = |cff99ccff" .. I2S(R2I(GetUnitMoveSpeed(udg_herounit[GetPlayerId(p) + 1]))) .. "|r")
	end
	if (s == "-c") or (s == "-о") or (s == "-clear") or (s == "-очистить") then
		if (GetLocalPlayer() == p) then
			ClearTextMessages()
		end
	end
	if (s == "-us") or (s == "-unstuck") then
		if (GetLocalPlayer() == p) then
			DisplayTextToPlayer(p, .0, .0, "|cff99ccffВНИМАНИЕ!!!|r")
			DisplayTextToPlayer(p, .0, .0, "Ваш герой заморожен, через 15 секунд он будет перемещен в центр базы.")
		end
		hero = udg_herounit[GetPlayerId(p) + 1]
		t = CreateTimer()
		PauseUnit(hero, true)
		SaveUnitHandle(udg_hash, GetHandleId(t), 1, hero)
		TimerStart(t, 15., false, Trig_Unstuck_15sec_Actions)
		hero = nil
		t = nil
	end
	if (s == "-shh") or (s == "-show hero hints") then
		Nfb = false
		if udg_System_ShowAbil_And_Items_Hint[GetPlayerId(p) + 1] then
			if GetLocalPlayer() == p then
				DisplayTextToPlayer(GetLocalPlayer(), .0, .0, "Подсказки о покупке предметов и изучении способностей отключены.")
			end
			Nfb = true
			udg_System_ShowAbil_And_Items_Hint[GetPlayerId(p) + 1] = false
		end
		if udg_System_ShowAbil_And_Items_Hint[GetPlayerId(p) + 1] == false and Nfb == false then
			if GetLocalPlayer() == p then
				DisplayTextToPlayer(GetLocalPlayer(), .0, .0, "Подсказки о покупке предметов и изучении способностей включены.")
			end
			udg_System_ShowAbil_And_Items_Hint[GetPlayerId(p) + 1] = true
		end
	end
	if (s == "-fast start") or (s == "-fs") or (s == "+") then
		if (udg_Is_Player_Fast_Wave_Start[GetPlayerId(p) + 1] == false) and (udg_Is_Fast_Wave_Start_On_Off) then
			udg_Count_Players_Fast_Wave_Start = (udg_Count_Players_Fast_Wave_Start + 1)
			udg_Is_Player_Fast_Wave_Start[GetPlayerId(p) + 1] = true
			DisplayTextToForce(bj_FORCE_ALL_PLAYERS, (udg_ColorString[GetPlayerId(p) + 1] .. (GetPlayerName(p) .. ("|r |cFF969696хочет немедленно начать волну!|r (|Cfffed312" .. (I2S(udg_Count_Players_Fast_Wave_Start) .. ("|r|cFF969696/|r|Cfffed312" .. (I2S(CountPlayersInForceBJ(udg_IGRAET)) .. "|r )")))))))
			if udg_Count_Players_Fast_Wave_Start >= CountPlayersInForceBJ(udg_IGRAET) then
				StartTimerBJ(udg_Timer_Nomera_Volni, false, 1.)
			end
		end
	end
	p = nil
end

function InitTrig_PlayerEnterGameCommand()
	local index = 0 ---@type number integer
	gg_trg_PlayerEnterGameCommand = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerChatEvent(gg_trg_PlayerEnterGameCommand, Player(index), "-", false)
		TriggerRegisterPlayerChatEvent(gg_trg_PlayerEnterGameCommand, Player(index), "+", true)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddAction(gg_trg_PlayerEnterGameCommand, Trig_PlayerEnterGameCommand_Actions)
end

function Trig_Unstuck_Ability_15sec_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local x = GetRectCenterX(gg_rct_Respawn_Heroes) ---@type number real
	local y = GetRectCenterY(gg_rct_Respawn_Heroes) ---@type number real
	local theCam = CreateCameraSetup() ---@type camerasetup
	PauseUnit(hero, false)
	SetUnitPosition(hero, x, y)
	if GetLocalPlayer() == GetOwningPlayer(hero) then
		DisplayTextToPlayer(GetOwningPlayer(hero), 0, 0, "|cff99ccffВНИМАНИЕ!!!|r|nВаш герой отморозился и был перемещен в центр базы.")
		CameraSetupSetField(theCam, CAMERA_FIELD_TARGET_DISTANCE, GetCameraField(CAMERA_FIELD_TARGET_DISTANCE), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_FARZ, GetCameraField(CAMERA_FIELD_FARZ), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ZOFFSET, GetCameraField(CAMERA_FIELD_ZOFFSET), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ANGLE_OF_ATTACK, bj_RADTODEG * GetCameraField(CAMERA_FIELD_ANGLE_OF_ATTACK), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_FIELD_OF_VIEW, bj_RADTODEG * GetCameraField(CAMERA_FIELD_FIELD_OF_VIEW), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ROLL, bj_RADTODEG * GetCameraField(CAMERA_FIELD_ROLL), 0)
		CameraSetupSetField(theCam, CAMERA_FIELD_ROTATION, bj_RADTODEG * GetCameraField(CAMERA_FIELD_ROTATION), 0)
		CameraSetupSetDestPosition(theCam, x, y, 0)
		CameraSetupApplyForceDuration(theCam, true, 0)
		ClearSelection()
		SelectUnit(hero, true)
	end
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	hero = nil
end

function Trig_PlayerUseSpellGameCommand_Actions()
	local p = GetOwningPlayer(GetSpellAbilityUnit()) ---@type player
	local id = GetSpellAbilityId() ---@type number integer
	local hero ---@type unit
	local t ---@type timer
	local cgb ---@type boolean
	if (id == FourCC('A0MD')) and udg_herounit[GetPlayerId(p) + 1] ~= nil then
		DisplayTimedTextToPlayer(p, .0, .0, 5., GetUnitName(udg_herounit[GetPlayerId(p) + 1]) .. " перемещается со скоростью = |cff99ccff" .. I2S(R2I(GetUnitMoveSpeed(udg_herounit[GetPlayerId(p) + 1]))) .. "|r")
	end
	if (id == FourCC('A0MB')) then
		if (GetLocalPlayer() == p) then
			ClearTextMessages()
		end
	end
	if (id == FourCC('A0ME')) then
		if (GetLocalPlayer() == p) then
			DisplayTextToPlayer(p, .0, .0, "|cff99ccffВНИМАНИЕ!!!|r")
			DisplayTextToPlayer(p, .0, .0, "Ваш герой заморожен, через 15 секунд он будет перемещен в центр базы.")
		end
		hero = udg_herounit[GetPlayerId(p) + 1]
		t = CreateTimer()
		PauseUnit(hero, true)
		SaveUnitHandle(udg_hash, GetHandleId(t), 1, hero)
		TimerStart(t, 15., false, Trig_Unstuck_Ability_15sec_Actions)
		hero = nil
		t = nil
	end
	if (id == FourCC('A0MF')) then
		cgb = false
		if udg_System_ShowAbil_And_Items_Hint[GetPlayerId(p) + 1] then
			if GetLocalPlayer() == p then
				DisplayTextToPlayer(GetLocalPlayer(), .0, .0, "Подсказки о покупке предметов и изучении способностей отключены.")
			end
			cgb = true
			udg_System_ShowAbil_And_Items_Hint[GetPlayerId(p) + 1] = false
		end
		if udg_System_ShowAbil_And_Items_Hint[GetPlayerId(p) + 1] == false and cgb == false then
			if GetLocalPlayer() == p then
				DisplayTextToPlayer(GetLocalPlayer(), .0, .0, "Подсказки о покупке предметов и изучении способностей включены.")
			end
			udg_System_ShowAbil_And_Items_Hint[GetPlayerId(p) + 1] = true
		end
	end
	if (id == FourCC('A0MH')) then
		if (udg_Is_Player_Fast_Wave_Start[GetPlayerId(p) + 1] == false) and (udg_Is_Fast_Wave_Start_On_Off) then
			udg_Count_Players_Fast_Wave_Start = (udg_Count_Players_Fast_Wave_Start + 1)
			udg_Is_Player_Fast_Wave_Start[GetPlayerId(p) + 1] = true
			DisplayTextToForce(bj_FORCE_ALL_PLAYERS, (udg_ColorString[GetPlayerId(p) + 1] .. (GetPlayerName(p) .. ("|r |cFF969696хочет немедленно начать волну!|r (|Cfffed312" .. (I2S(udg_Count_Players_Fast_Wave_Start) .. ("|r|cFF969696/|r|Cfffed312" .. (I2S(CountPlayersInForceBJ(udg_IGRAET)) .. "|r )")))))))
			if udg_Count_Players_Fast_Wave_Start >= CountPlayersInForceBJ(udg_IGRAET) then
				StartTimerBJ(udg_Timer_Nomera_Volni, false, 1.)
			end
		end
	end
	p = nil
end

---@return boolean
function Trig_PlayerUseSpellGameCommand_Conditions()
	return GetSpellAbilityId() == FourCC('A0MD') or GetSpellAbilityId() == FourCC('A0MB') or GetSpellAbilityId() == FourCC('A0ME') or GetSpellAbilityId() == FourCC('A0MF') or GetSpellAbilityId() == FourCC('A0MH')
end

function InitTrig_PlayerUseSpellGameCommand()
	local index = 0 ---@type number integer
	gg_trg_PlayerUseSpellGameCommand = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_PlayerUseSpellGameCommand, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_PlayerUseSpellGameCommand, Condition(Trig_PlayerUseSpellGameCommand_Conditions))
	TriggerAddAction(gg_trg_PlayerUseSpellGameCommand, Trig_PlayerUseSpellGameCommand_Actions)
end

function Trig_GuardsExorcistDead_Removes_Buffs_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local g = LoadGroupHandle(udg_hash, h, 1) ---@type group
	local Picked ---@type unit
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		DestroyEffect(LoadEffectHandle(udg_hash, GetHandleId(Picked), $83))
		SetUnitLifeAndManaRegeneration(Picked, "life", -70)
		GroupRemoveUnit(g, Picked)
	end
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
end

function Trig_GuardsExorcistDead_2and5sec_wait_Actions()
	local t = GetExpiredTimer() ---@type timer
	local lopa = 0 ---@type number integer
	while(true) do
		if (lopa > 8) then break end
		if (GetLocalPlayer() == Player(lopa)) then
			DisplayTimedTextToPlayer(GetLocalPlayer(), .0, .0, 99999., "|cff99ccffИгрa завершена. Всем игрокам огромное спасибо за участие!!!!|r")
			CreateFogModifierRadiusLocBJ(true, GetLocalPlayer(), FOG_OF_WAR_VISIBLE, GetRectCenter(gg_rct_Center_Vision), 650.)
		end
		DestroyFogModifier(udg_BaseVisionFogModifier[GetPlayerId(Player(lopa)) + 1])
		lopa = lopa + 1
	end
end

function Trig_GuardsExorcistDead_3sec_wait_Actions()
	local t = GetExpiredTimer() ---@type timer
	local lopa = 0 ---@type number integer
	local dammi = CreateUnit(Player($F), FourCC('h00U'), GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi), .0) ---@type unit
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	GroupEnumUnitsInRect(g, bj_mapInitialPlayableArea, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and GetPlayerId(GetOwningPlayer(Picked)) <= 8 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			KillUnit(Picked)
		end
		GroupRemoveUnit(g, Picked)
	end
	while(true) do
		if (lopa > 8) then break end
		if (GetLocalPlayer() == Player(lopa)) then
			ClearTextMessages()
			DisplayTimedTextToPlayer(GetLocalPlayer(), .0, .0, 99999., "|cffff0000Все стражи-чародеи погибли, вы проиграли!!!|r")
			SetCameraTargetController(dammi, .0, .0, false)
		end
		lopa = lopa + 1
	end
	t = CreateTimer()
	TimerStart(t, 2.5, false, Trig_GuardsExorcistDead_2and5sec_wait_Actions)
end

function Trig_GuardsExorcistDead_Actions()
	local t ---@type timer
	local lopa = 0 ---@type number integer
	local g ---@type group
	local g2 ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	local t1 ---@type timer
	local h1 ---@type number integer
	if (IsPlayerInForce(GetLocalPlayer(), udg_IGRAET)) then
		udg_CountGuardsExorcist = udg_CountGuardsExorcist - 1
		DisplayTextToPlayer(GetLocalPlayer(), .0, .0, "|cff99ccffВНИМАНИЕ!!!|r")
		DisplayTextToPlayer(GetLocalPlayer(), .0, .0, "|cffff0000Один Из Стражей-Чародеев погиб!!!|r В живых осталось: |cff99ccff" .. I2S(udg_CountGuardsExorcist) .. "|r")
		PingMinimapEx(GetUnitX(GetDyingUnit()), GetUnitY(GetDyingUnit()), 5., $FE, 0, 0, true)
	end
	while(true) do
		if (lopa > 8) then break end
		SetPlayerState(Player(lopa), PLAYER_STATE_RESOURCE_LUMBER, GetPlayerState(Player(lopa), PLAYER_STATE_RESOURCE_LUMBER) - 1)
		lopa = lopa + 1
	end
	if udg_CountGuardsExorcist == 4 or udg_CountGuardsExorcist == 1 then
		dammi = CreateUnit(Player(0), FourCC('h00U'), 1255., -5700., .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 5.)
		SetUnitScale(dammi, 3., 3., 3.)
		DestroyEffect(AddSpecialEffect("Effects\\TheHolyBomb.mdl", 1255., -5700.))
		DestroyEffect(AddSpecialEffect("Effects\\LightNova.mdl", 1255., -5700.))
		g = CreateGroup()
		GroupEnumUnitsInRange(g, 1255., -5700., 3000., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and Picked ~= nil and GetPlayerId(GetOwningPlayer(Picked)) >= 9 and GetPlayerId(GetOwningPlayer(Picked)) ~= $F and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				StunUnitTimed(Picked, 10.)
				DestroyEffect(AddSpecialEffectTarget("Effects\\TheHolyBomb.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Effects\\DivineRage.mdl", Picked, "origin"))
				SetUnitState(Picked, UNIT_STATE_LIFE, GetUnitState(Picked, UNIT_STATE_LIFE) * .5)
			end
			GroupRemoveUnit(g, Picked)
		end
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		Picked = nil
		g = CreateGroup()
		g2 = CreateGroup()
		GroupAddGroup(udg_PortalCastersMagi, g2)
		while(true) do
			Picked = FirstOfGroup(g2)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and Picked ~= nil then
				SetUnitLifeAndManaRegeneration(Picked, "life", 70)
				SaveEffectHandle(udg_hash, GetHandleId(Picked), $83, AddSpecialEffectTarget("Effects\\DivineBarrier.mdl", Picked, "origin"))
				GroupAddUnit(g, Picked)
			end
			GroupRemoveUnit(g2, Picked)
		end
		t1 = CreateTimer()
		h1 = GetHandleId(t1)
		SaveGroupHandle(udg_hash, h1, 1, g)
		TimerStart(t1, 10., false, Trig_GuardsExorcistDead_Removes_Buffs_Actions)
		t1 = nil
		GroupClear(g2)
		DestroyGroup(g2)
		g2 = nil
		Picked = nil
	end
	if udg_CountGuardsExorcist <= 0 then
		lopa = 0
		DisableTrigger(gg_trg_Hero_Dead)
		EnableTrigger(gg_trg_PauseUnitWhenDefeat)
		udg_IsGameEnd = true
		while(true) do
			if (lopa > 8) then break end
			if (GetLocalPlayer() == Player(lopa)) then
				PanCameraToTimed(GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi), 3.)
			end
			lopa = lopa + 1
		end
		g = CreateGroup()
		GroupEnumUnitsInRect(g, bj_mapInitialPlayableArea, nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and GetPlayerId(GetOwningPlayer(Picked)) <= 8 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				SetUnitPosition(Picked, GetRandomReal((GetRectCenterX(gg_rct_cast_magi) - 500.), (GetRectCenterX(gg_rct_cast_magi) + 500.)), GetRandomReal((GetRectCenterY(gg_rct_cast_magi) - 500.), (GetRectCenterY(gg_rct_cast_magi) + 500.)))
				DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", GetUnitX(Picked), GetUnitY(Picked)))
				PauseUnit(Picked, true)
			end
			GroupRemoveUnit(g, Picked)
		end
		t = CreateTimer()
		TimerStart(t, 3., false, Trig_GuardsExorcistDead_3sec_wait_Actions)
	end
end

---@return boolean
function Trig_GuardsExorcistDead_Conditions()
	return (GetUnitTypeId(GetDyingUnit()) == FourCC('h01K')) or (GetUnitTypeId(GetDyingUnit()) == FourCC('e002')) or (GetUnitTypeId(GetDyingUnit()) == FourCC('n00Y')) or (GetUnitTypeId(GetDyingUnit()) == FourCC('o003'))
end

function InitTrig_GuardsExorcistDead()
	local index = 0 ---@type number integer
	gg_trg_GuardsExorcistDead = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_GuardsExorcistDead, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_GuardsExorcistDead, Condition(Trig_GuardsExorcistDead_Conditions))
	TriggerAddAction(gg_trg_GuardsExorcistDead, Trig_GuardsExorcistDead_Actions)
end

---@return boolean
function Trig_PauseUnitWhenDefeat_Func001Func001C()
	return ((1 + GetPlayerId(GetOwningPlayer(GetEnumUnit()))) <= 9)
end

function Trig_PauseUnitWhenDefeat_Func001A()
	if (Trig_PauseUnitWhenDefeat_Func001Func001C()) then
		KillUnit(GetEnumUnit())
	end
end

function Trig_PauseUnitWhenDefeat_Actions()
	ForGroupBJ(GetUnitsInRectAll(bj_mapInitialPlayableArea), Trig_PauseUnitWhenDefeat_Func001A)
end

function InitTrig_PauseUnitWhenDefeat()
	gg_trg_PauseUnitWhenDefeat = CreateTrigger()
	DisableTrigger(gg_trg_PauseUnitWhenDefeat)
	TriggerRegisterTimerEventPeriodic(gg_trg_PauseUnitWhenDefeat, .05)
	TriggerAddAction(gg_trg_PauseUnitWhenDefeat, Trig_PauseUnitWhenDefeat_Actions)
end

---@return boolean
function Trig_PauseUnitWhenWin_Func001C()
	return ((1 + GetPlayerId(GetOwningPlayer(GetEnteringUnit()))) >= $A) and ((1 + GetPlayerId(GetOwningPlayer(GetEnteringUnit()))) <= $F)
end

---@return boolean
function Trig_PauseUnitWhenWin_Func002C()
	return ((1 + GetPlayerId(GetOwningPlayer(GetEnteringUnit()))) <= 9)
end

function Trig_PauseUnitWhenWin_Actions()
	if (Trig_PauseUnitWhenWin_Func001C()) then
		KillUnit(GetEnteringUnit())
	end
	if (Trig_PauseUnitWhenWin_Func002C()) then
		PauseUnit(GetEnteringUnit(), true)
	end
end

function InitTrig_PauseUnitWhenWin()
	gg_trg_PauseUnitWhenWin = CreateTrigger()
	DisableTrigger(gg_trg_PauseUnitWhenWin)
	TriggerRegisterEnterRectSimple(gg_trg_PauseUnitWhenWin, bj_mapInitialPlayableArea)
	TriggerAddAction(gg_trg_PauseUnitWhenWin, Trig_PauseUnitWhenWin_Actions)
end

function Trig_GameEndWin_Effects_Actions()
	local t = GetExpiredTimer() ---@type timer
	local x = GetRandomReal((GetRectCenterX(gg_rct_cast_magi) - 500.), (GetRectCenterX(gg_rct_cast_magi) + 500.)) ---@type number real
	local y = GetRandomReal((GetRectCenterY(gg_rct_cast_magi) - 500.), (GetRectCenterY(gg_rct_cast_magi) + 500.)) ---@type number real
	local dammi = CreateUnit(Player($F), FourCC('h00U'), x, y, .0) ---@type unit
	local dammi2 = CreateUnit(Player($F), FourCC('h00U'), x, y, .0) ---@type unit
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 11.2)
	AddSpecialEffectTarget("Effects\\Win_Fireworks.mdx", dammi, "origin")
	SetUnitScale(dammi2, 3., 3., 3.)
	DestroyEffect(AddSpecialEffectTarget("Effects\\Fireworksblue.mdl", dammi2, "origin"))
end

function Trig_GameEndWin_1and5sec_wait_Actions()
	local t = GetExpiredTimer() ---@type timer
	local lopa = 0 ---@type number integer
	while(true) do
		if (lopa > 8) then break end
		if (GetLocalPlayer() == Player(lopa)) then
			DisplayTimedTextToPlayer(GetLocalPlayer(), .0, .0, 99999., "|cff99ccffНа этом моменте альфа версия карты заканчивается!!! Игрa завершена. Всем игрокам огромное спасибо за участие!!!!|r")
		end
		lopa = lopa + 1
	end
	DestroyTimer(t)
	t = CreateTimer()
	TimerStart(t, .25, true, Trig_GameEndWin_Effects_Actions)
end

function Trig_GameEndWin_2sec_wait_Actions()
	local t = GetExpiredTimer() ---@type timer
	local lopa = 0 ---@type number integer
	local dammi = CreateUnit(Player($F), FourCC('h00U'), GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi), .0) ---@type unit
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	GroupEnumUnitsInRect(g, bj_mapInitialPlayableArea, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and GetPlayerId(GetOwningPlayer(Picked)) <= 8 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			SetUnitInvulnerable(Picked, true)
			if GetUnitTypeId(Picked) == FourCC('E004') or GetUnitTypeId(Picked) == FourCC('H01I') or GetUnitTypeId(Picked) == FourCC('N00W') or GetUnitTypeId(Picked) == FourCC('E001') then
				SetUnitAnimation(Picked, "Stand")
			else
				SetUnitAnimation(Picked, "Stand Victory")
			end
		end
		GroupRemoveUnit(g, Picked)
	end
	GroupClear(g)
	DestroyGroup(g)
	while(true) do
		if (lopa > 8) then break end
		if (GetLocalPlayer() == Player(lopa)) then
			ClearTextMessages()
			DisplayTimedTextToPlayer(GetLocalPlayer(), .0, .0, 99999., "|cff00CD00Армия Тьмы уничтожена, чародеи живы и портал открыт...Вы победили!!!!!!|r")
			SetCameraTargetController(dammi, .0, .0, false)
		end
		lopa = lopa + 1
	end
	t = CreateTimer()
	TimerStart(t, 1.5, false, Trig_GameEndWin_1and5sec_wait_Actions)
end

function Trig_GameEndWin_6and0sec_wait_Actions()
	local t ---@type timer
	local lopa ---@type number integer
	local g ---@type group
	local Picked ---@type unit
	lopa = 0
	EnableTrigger(gg_trg_PauseUnitWhenWin)
	udg_IsGameEnd = true
	while(true) do
		if (lopa > 8) then break end
		if (GetLocalPlayer() == Player(lopa)) then
			PanCameraToTimed(GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi), 2.)
		end
		lopa = lopa + 1
	end
	g = CreateGroup()
	GroupEnumUnitsInRect(g, bj_mapInitialPlayableArea, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and GetPlayerId(GetOwningPlayer(Picked)) <= 8 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			SetUnitPosition(Picked, GetRandomReal((GetRectCenterX(gg_rct_cast_magi) - 500.), (GetRectCenterX(gg_rct_cast_magi) + 500.)), GetRandomReal((GetRectCenterY(gg_rct_cast_magi) - 500.), (GetRectCenterY(gg_rct_cast_magi) + 500.)))
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl", GetUnitX(Picked), GetUnitY(Picked)))
			PauseUnit(Picked, true)
		end
		GroupRemoveUnit(g, Picked)
	end
	GroupClear(g)
	DestroyGroup(g)
	g = CreateGroup()
	GroupEnumUnitsInRect(g, bj_mapInitialPlayableArea, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and GetPlayerId(GetOwningPlayer(Picked)) >= 9 and GetPlayerId(GetOwningPlayer(Picked)) < $F and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			KillUnit(Picked)
		end
		GroupRemoveUnit(g, Picked)
	end
	GroupClear(g)
	t = CreateTimer()
	TimerStart(t, 2., false, Trig_GameEndWin_2sec_wait_Actions)
end

function Trig_GameEndWin_Actions()
	local t ---@type timer
	t = CreateTimer()
	TimerStart(t, 6., false, Trig_GameEndWin_6and0sec_wait_Actions)
end

function InitTrig_GameEndWin()
	gg_trg_GameEndWin = CreateTrigger()
	DisableTrigger(gg_trg_GameEndWin)
	TriggerAddAction(gg_trg_GameEndWin, Trig_GameEndWin_Actions)
end

function Trig_Respawn_trees_Init_AddTree()
	if GetDestructableTypeId(GetEnumDestructable()) == FourCC('ATtr') or GetDestructableTypeId(GetEnumDestructable()) == FourCC('ATtc') or GetDestructableTypeId(GetEnumDestructable()) == FourCC('ZTtw') or GetDestructableTypeId(GetEnumDestructable()) == FourCC('NTtw') or GetDestructableTypeId(GetEnumDestructable()) == FourCC('WTst') or GetDestructableTypeId(GetEnumDestructable()) == FourCC('CTtr') then
		TriggerRegisterDeathEvent(gg_trg_Respawn_trees, GetEnumDestructable())
	end
end

function Trig_Respawn_trees_Init_Actions()
	EnumDestructablesInRect(GetWorldBounds(), nil, Trig_Respawn_trees_Init_AddTree)
end

function InitTrig_Respawn_trees_Init()
	gg_trg_Respawn_trees_Init = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Respawn_trees_Init, 5., false)
	TriggerAddAction(gg_trg_Respawn_trees_Init, Trig_Respawn_trees_Init_Actions)
end

function Trig_Respawn_trees_With_Wait_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local tree = LoadDestructableHandle(udg_hash, h, 1) ---@type destructable
	DestructableRestoreLife(tree, GetDestructableMaxLife(tree), true)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	tree = nil
end

function Trig_Respawn_trees_Actions()
	local tree = GetTriggerDestructable() ---@type destructable
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveDestructableHandle(udg_hash, h, 1, tree)
	TimerStart(t, 120., false, Trig_Respawn_trees_With_Wait_Actions)
	tree = nil
	t = nil
end

function InitTrig_Respawn_trees()
	gg_trg_Respawn_trees = CreateTrigger()
	TriggerAddAction(gg_trg_Respawn_trees, Trig_Respawn_trees_Actions)
end

---@return boolean
function Trig_Day_Weather_Func003Func005C()
	return (true == false)
end

---@return boolean
function Trig_Day_Weather_Func003C()
	return (udg_Temp_Integer[1] == 1)
end

---@return boolean
function Trig_Day_Weather_Func004Func004C()
	return (true == false)
end

---@return boolean
function Trig_Day_Weather_Func004C()
	return (udg_Temp_Integer[1] == 2)
end

---@return boolean
function Trig_Day_Weather_Func005Func001C()
	return (udg_Temp_Integer[1] == 3) or (udg_Temp_Integer[1] == 4) or (udg_Temp_Integer[1] == 5)
end

---@return boolean
function Trig_Day_Weather_Func005C()
	return (Trig_Day_Weather_Func005Func001C())
end

function Trig_Day_Weather_Actions()
	RemoveWeatherEffect(udg_Weather[1])
	udg_Temp_Integer[1] = GetRandomInt(1, 5)
	if (Trig_Day_Weather_Func003C()) then
		AddWeatherEffectSaveLast(bj_mapInitialPlayableArea, FourCC('RAhr'))
		udg_Weather[1] = bj_lastCreatedWeatherEffect
		udg_Boolean_Is_Rain = true
		if (Trig_Day_Weather_Func003Func005C()) then
			StartTimerBJ(udg_Timer_Lightning_Strike_Weather, false, (17. + GetRandomReal(0, 25.)))
		end
	end
	if (Trig_Day_Weather_Func004C()) then
		AddWeatherEffectSaveLast(bj_mapInitialPlayableArea, FourCC('RAlr'))
		udg_Weather[1] = bj_lastCreatedWeatherEffect
		udg_Boolean_Is_Rain = true
		if (Trig_Day_Weather_Func004Func004C()) then
			StartTimerBJ(udg_Timer_Lightning_Strike_Weather, false, (17. + GetRandomReal(0, 25.)))
		end
	end
	if (Trig_Day_Weather_Func005C()) then
		AddWeatherEffectSaveLast(bj_mapInitialPlayableArea, FourCC('LRaa'))
		udg_Weather[1] = bj_lastCreatedWeatherEffect
		udg_Boolean_Is_Rain = false
	end
	EnableWeatherEffect(udg_Weather[1], true)
end

function InitTrig_Day_Weather()
	gg_trg_Day_Weather = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Day_Weather, EQUAL, 6.)
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Day_Weather, EQUAL, 12.)
	TriggerAddAction(gg_trg_Day_Weather, Trig_Day_Weather_Actions)
end

function Trig_Sky_Morning_Actions()
	SetSkyModel("Environment\\Sky\\LordaeronWinterSkyPink\\LordaeronWinterSkyPink.mdl")
end

function InitTrig_Sky_Morning()
	gg_trg_Sky_Morning = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Sky_Morning, EQUAL, 6.)
	TriggerAddAction(gg_trg_Sky_Morning, Trig_Sky_Morning_Actions)
end

function Trig_Sky_Day_Actions()
	SetSkyModel("Environment\\Sky\\LordaeronSummerSky\\LordaeronSummerSky.mdl")
end

function InitTrig_Sky_Day()
	gg_trg_Sky_Day = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Sky_Day, EQUAL, 12.)
	TriggerAddAction(gg_trg_Sky_Day, Trig_Sky_Day_Actions)
end

---@return boolean
function Trig_Night_Weather_Func003Func004C()
	return (true == false)
end

---@return boolean
function Trig_Night_Weather_Func003C()
	return (udg_Temp_Integer[1] == 1)
end

---@return boolean
function Trig_Night_Weather_Func004Func004C()
	return (true == false)
end

---@return boolean
function Trig_Night_Weather_Func004C()
	return (udg_Temp_Integer[1] == 2)
end

---@return boolean
function Trig_Night_Weather_Func005Func001C()
	return (udg_Temp_Integer[1] == 3) or (udg_Temp_Integer[1] == 4) or (udg_Temp_Integer[1] == 5)
end

---@return boolean
function Trig_Night_Weather_Func005C()
	return (Trig_Night_Weather_Func005Func001C())
end

function Trig_Night_Weather_Actions()
	RemoveWeatherEffect(udg_Weather[1])
	udg_Temp_Integer[1] = GetRandomInt(1, 5)
	if (Trig_Night_Weather_Func003C()) then
		AddWeatherEffectSaveLast(bj_mapInitialPlayableArea, FourCC('RAhr'))
		udg_Weather[1] = bj_lastCreatedWeatherEffect
		udg_Boolean_Is_Rain = true
		if (Trig_Night_Weather_Func003Func004C()) then
			StartTimerBJ(udg_Timer_Lightning_Strike_Weather, false, (17. + GetRandomReal(0, 25.)))
		end
	end
	if (Trig_Night_Weather_Func004C()) then
		AddWeatherEffectSaveLast(bj_mapInitialPlayableArea, FourCC('RAlr'))
		udg_Weather[1] = bj_lastCreatedWeatherEffect
		udg_Boolean_Is_Rain = true
		if (Trig_Night_Weather_Func004Func004C()) then
			StartTimerBJ(udg_Timer_Lightning_Strike_Weather, false, (17. + GetRandomReal(0, 25.)))
		end
	end
	if (Trig_Night_Weather_Func005C()) then
		AddWeatherEffectSaveLast(bj_mapInitialPlayableArea, FourCC('LRma'))
		udg_Weather[1] = bj_lastCreatedWeatherEffect
		udg_Boolean_Is_Rain = false
	end
	EnableWeatherEffect(udg_Weather[1], true)
end

function InitTrig_Night_Weather()
	gg_trg_Night_Weather = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Night_Weather, EQUAL, 18.)
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Night_Weather, EQUAL, .0)
	TriggerAddAction(gg_trg_Night_Weather, Trig_Night_Weather_Actions)
end

function Trig_Sky_Evening_Actions()
	SetSkyModel("Environment\\Sky\\LordaeronFallSky\\LordaeronFallSky.mdl")
end

function InitTrig_Sky_Evening()
	gg_trg_Sky_Evening = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Sky_Evening, EQUAL, 18.)
	TriggerAddAction(gg_trg_Sky_Evening, Trig_Sky_Evening_Actions)
end

function Trig_Sky_Night_Actions()
	SetSkyModel("Environment\\Sky\\FelwoodSky\\FelwoodSky.mdl")
end

function InitTrig_Sky_Night()
	gg_trg_Sky_Night = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Sky_Night, EQUAL, .0)
	TriggerAddAction(gg_trg_Sky_Night, Trig_Sky_Night_Actions)
end

---@return boolean
function Trig_Lightnings_Weather_Effect_Rainy_Conditions()
	return (udg_Boolean_Is_Rain)
end

function Trig_Lightnings_Weather_Effect_Rainy_Func003A()
	SoundForPlayer(GetEnumPlayer(), 17)
end

function Trig_Lightnings_Weather_Effect_Rainy_Actions()
	CinematicFadeBJ(1, 1., "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 60., 60., 65., 15.)
	CinematicFadeBJ(0, 2., "ReplaceableTextures\\CameraMasks\\White_mask.blp", 60., 60., 65., 15.)
	ForForce(bj_FORCE_ALL_PLAYERS, Trig_Lightnings_Weather_Effect_Rainy_Func003A)
	StartTimerBJ(udg_Timer_Lightning_Strike_Weather, false, (10. + GetRandomReal(20., 40.)))
end

function InitTrig_Lightnings_Weather_Effect_Rainy()
	gg_trg_Lightnings_Weather_Effect_Rainy = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_Lightnings_Weather_Effect_Rainy, udg_Timer_Lightning_Strike_Weather)
	TriggerAddCondition(gg_trg_Lightnings_Weather_Effect_Rainy, Condition(Trig_Lightnings_Weather_Effect_Rainy_Conditions))
	TriggerAddAction(gg_trg_Lightnings_Weather_Effect_Rainy, Trig_Lightnings_Weather_Effect_Rainy_Actions)
end

---@return boolean
function Trig_Periodic_Rune_Creation_Func001Func002Func002C()
	return (CountPlayersInForceBJ(udg_IGRAET) >= 1)
end

---@return boolean
function Trig_Periodic_Rune_Creation_Func001Func002C()
	return (CountPlayersInForceBJ(udg_IGRAET) >= 2)
end

---@return boolean
function Trig_Periodic_Rune_Creation_Func001C()
	return (CountPlayersInForceBJ(udg_IGRAET) >= 3)
end

---@return boolean
function Trig_Periodic_Rune_Creation_Func002Func002Func001Func002C()
	return (udg_Temp_Integer[2] == 1)
end

---@return boolean
function Trig_Periodic_Rune_Creation_Func002Func002Func001Func003C()
	return (udg_Temp_Integer[2] == 2)
end

---@return boolean
function Trig_Periodic_Rune_Creation_Func002Func002Func001Func004C()
	return (udg_Temp_Integer[2] == 3)
end

---@return boolean
function Trig_Periodic_Rune_Creation_Func002Func002Func001Func005C()
	return (udg_Temp_Integer[2] == 4)
end

---@return boolean
function Trig_Periodic_Rune_Creation_Func002Func002Func001C()
	return (udg_Is_Rune_On_Position[bj_forLoopAIndex] == false)
end

---@return boolean
function Trig_Periodic_Rune_Creation_Func002Func003C()
	return (udg_Is_Rune_On_Position[bj_forLoopAIndex] == false)
end

---@return boolean
function Trig_Periodic_Rune_Creation_Func002C()
	return (Trig_Periodic_Rune_Creation_Func002Func003C())
end

function Trig_Periodic_Rune_Creation_Actions()
	if (Trig_Periodic_Rune_Creation_Func001C()) then
		udg_Temp_Integer[4] = 3
	else
		if (Trig_Periodic_Rune_Creation_Func001Func002C()) then
			udg_Temp_Integer[4] = 2
		else
			if (Trig_Periodic_Rune_Creation_Func001Func002Func002C()) then
				udg_Temp_Integer[4] = 1
			end
		end
	end
	if (Trig_Periodic_Rune_Creation_Func002C()) then
		udg_Temp_Integer[3] = 4
		bj_forLoopAIndex = 1
		bj_forLoopAIndexEnd = udg_Temp_Integer[4]
		while(true) do
			if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
			if (Trig_Periodic_Rune_Creation_Func002Func002Func001C()) then
				udg_Temp_Integer[2] = GetRandomInt(1, udg_Temp_Integer[3])
				if (Trig_Periodic_Rune_Creation_Func002Func002Func001Func002C()) then
					CreateItemLoc(FourCC('I013'), Location(I2R(udg_Rune_Position_X[bj_forLoopAIndex]), I2R(udg_Rune_Position_Y[bj_forLoopAIndex])))
				end
				if (Trig_Periodic_Rune_Creation_Func002Func002Func001Func003C()) then
					CreateItemLoc(FourCC('I014'), Location(I2R(udg_Rune_Position_X[bj_forLoopAIndex]), I2R(udg_Rune_Position_Y[bj_forLoopAIndex])))
				end
				if (Trig_Periodic_Rune_Creation_Func002Func002Func001Func004C()) then
					CreateItemLoc(FourCC('I016'), Location(I2R(udg_Rune_Position_X[bj_forLoopAIndex]), I2R(udg_Rune_Position_Y[bj_forLoopAIndex])))
				end
				if (Trig_Periodic_Rune_Creation_Func002Func002Func001Func005C()) then
					CreateItemLoc(FourCC('I017'), Location(I2R(udg_Rune_Position_X[bj_forLoopAIndex]), I2R(udg_Rune_Position_Y[bj_forLoopAIndex])))
				end
				AddSpecialEffectLocBJ(Location(I2R(udg_Rune_Position_X[bj_forLoopAIndex]), I2R(udg_Rune_Position_Y[bj_forLoopAIndex])), "Effects\\ShadowAssault.mdx")
				DestroyEffectWithWait(bj_lastCreatedEffect, 3.)
				udg_Is_Rune_On_Position[bj_forLoopAIndex] = true
			end
			bj_forLoopAIndex = bj_forLoopAIndex + 1
		end
	end
end

function InitTrig_Periodic_Rune_Creation()
	gg_trg_Periodic_Rune_Creation = CreateTrigger()
	DisableTrigger(gg_trg_Periodic_Rune_Creation)
	TriggerRegisterTimerEventPeriodic(gg_trg_Periodic_Rune_Creation, 60.1)
	TriggerAddAction(gg_trg_Periodic_Rune_Creation, Trig_Periodic_Rune_Creation_Actions)
end

function Trig_Rune_PickedUp_End_Immunity_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	SetArmorAbilityLevel(hero, -50)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	hero = nil
end

function Trig_Rune_PickedUp_End_Damage_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damage = LoadInteger(udg_hash, h, 6) ---@type number integer
	local ef ---@type effect
	damage = 20 + 5 * GetHeroLevel(hero)
	SetAttackAbilityLevel(hero, -damage)
	ef = LoadEffectHandle(udg_hash, h, 2)
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 3)
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 4)
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 5)
	DestroyEffect(ef)
	ef = nil
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	hero = nil
end

function Trig_Rune_PickedUp_End_Regeneration_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local hp = LoadReal(udg_hash, h, 2) ---@type number real
	local mp = LoadReal(udg_hash, h, 3) ---@type number real
	SetUnitLifeAndManaRegeneration(hero, "life", R2I(-hp / 20))
	SetUnitLifeAndManaRegeneration(hero, "mana", R2I(-mp / 20))
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	hero = nil
end

function Trig_Rune_PickedUp_Actions()
	local rune = GetManipulatedItem() ---@type item
	local hero = GetManipulatingUnit() ---@type unit
	local id = GetItemTypeId(rune) ---@type number integer
	local dammi ---@type unit
	local hp ---@type number real
	local mp ---@type number real
	local t ---@type timer
	local h ---@type number integer
	local ef ---@type effect
	local damage ---@type number integer
	local x = GetUnitX(hero) ---@type number real
	local y = GetUnitY(hero) ---@type number real
	local dist1 = SquareRoot((x - udg_Rune_Position_X[1]) * (x - udg_Rune_Position_X[1]) + (y - udg_Rune_Position_Y[1]) * (y - udg_Rune_Position_Y[1])) ---@type number real
	local dist2 = SquareRoot((x - udg_Rune_Position_X[2]) * (x - udg_Rune_Position_X[2]) + (y - udg_Rune_Position_Y[2]) * (y - udg_Rune_Position_Y[2])) ---@type number real
	local dist3 = SquareRoot((x - udg_Rune_Position_X[3]) * (x - udg_Rune_Position_X[3]) + (y - udg_Rune_Position_Y[3]) * (y - udg_Rune_Position_Y[3])) ---@type number real
	local runepos = 0 ---@type number integer
	if dist1 < 500. then
		runepos = 1
	end
	if dist2 < 500. then
		runepos = 2
	end
	if dist3 < 500. then
		runepos = 3
	end
	if id == FourCC('I013') then
		t = CreateTimer()
		h = GetHandleId(t)
		dammi = CreateUnit(GetOwningPlayer(hero), FourCC('h00U'), GetUnitX(hero), GetUnitY(hero), .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
		UnitAddAbility(dammi, FourCC('A0O6'))
		IssueTargetOrderById(dammi, $D00C0, hero)
		hp = GetUnitState(hero, UNIT_STATE_MAX_LIFE)
		mp = GetUnitState(hero, UNIT_STATE_MAX_MANA)
		SetUnitLifeAndManaRegeneration(hero, "life", R2I(hp / 20))
		SetUnitLifeAndManaRegeneration(hero, "mana", R2I(mp / 20))
		SaveUnitHandle(udg_hash, h, 1, hero)
		SaveReal(udg_hash, h, 2, hp)
		SaveReal(udg_hash, h, 3, mp)
		TimerStart(t, 10., false, Trig_Rune_PickedUp_End_Regeneration_Actions)
		t = nil
		dammi = nil
	end
	if id == FourCC('I014') then
		t = CreateTimer()
		h = GetHandleId(t)
		damage = 20 + 5 * GetHeroLevel(hero)
		SetAttackAbilityLevel(hero, damage)
		SaveUnitHandle(udg_hash, h, 1, hero)
		ef = AddSpecialEffectTarget("Effects\\Prismatic Missile Fixed.mdl", hero, "hand,left")
		SaveEffectHandle(udg_hash, h, 2, ef)
		ef = nil
		ef = AddSpecialEffectTarget("Effects\\Prismatic Missile Fixed.mdl", hero, "hand,right")
		SaveEffectHandle(udg_hash, h, 3, ef)
		ef = nil
		ef = AddSpecialEffectTarget("Effects\\Prismatic Missile Fixed.mdl", hero, "weapon")
		SaveEffectHandle(udg_hash, h, 4, ef)
		ef = nil
		ef = AddSpecialEffectTarget("Effects\\Prismatic Missile Fixed.mdl", hero, "overhead")
		SaveEffectHandle(udg_hash, h, 5, ef)
		ef = nil
		SaveInteger(udg_hash, h, 6, damage)
		TimerStart(t, 20., false, Trig_Rune_PickedUp_End_Damage_Actions)
		t = nil
	end
	if id == FourCC('I016') then
		dammi = CreateUnit(GetOwningPlayer(hero), FourCC('h00U'), GetUnitX(hero), GetUnitY(hero), .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
		UnitAddAbility(dammi, FourCC('A0O7'))
		IssueTargetOrderById(dammi, $D0132, hero)
		dammi = nil
	end
	if id == FourCC('I017') then
		t = CreateTimer()
		h = GetHandleId(t)
		dammi = CreateUnit(GetOwningPlayer(hero), FourCC('h00U'), GetUnitX(hero), GetUnitY(hero), .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
		UnitAddAbility(dammi, FourCC('A0O8'))
		IssueTargetOrderById(dammi, $D00DA, hero)
		SetArmorAbilityLevel(hero, 50)
		SaveUnitHandle(udg_hash, h, 1, hero)
		TimerStart(t, 12., false, Trig_Rune_PickedUp_End_Immunity_Actions)
		t = nil
		dammi = nil
	end
	udg_Is_Rune_On_Position[runepos] = false
	RemoveItem(rune)
	hero = nil
	rune = nil
end

---@return boolean
function Trig_Rune_PickedUp_Conditions()
	return GetItemTypeId(GetManipulatedItem()) == FourCC('I013') or GetItemTypeId(GetManipulatedItem()) == FourCC('I014') or GetItemTypeId(GetManipulatedItem()) == FourCC('I016') or GetItemTypeId(GetManipulatedItem()) == FourCC('I017')
end

function InitTrig_Rune_PickedUp()
	local index = 0 ---@type number integer
	gg_trg_Rune_PickedUp = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Rune_PickedUp, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Rune_PickedUp, Condition(Trig_Rune_PickedUp_Conditions))
	TriggerAddAction(gg_trg_Rune_PickedUp, Trig_Rune_PickedUp_Actions)
end

---@return boolean
function Trig_Initialization_MultiBoard_Func002Func001C()
	return (GetPlayerSlotState(Player(-1 + (bj_forLoopAIndex))) == PLAYER_SLOT_STATE_PLAYING)
end

function Trig_Initialization_MultiBoard_Func029A()
	MultiboardSetItemValueBJ(udg_MultiBoard, 2, udg_PlayerNumberInMB[(1 + GetPlayerId(GetEnumPlayer()))], (udg_ColorString[(1 + GetPlayerId(GetEnumPlayer()))] .. (GetPlayerName(GetEnumPlayer()) .. "|r")))
	MultiboardSetItemValueBJ(udg_MultiBoard, 3, udg_PlayerNumberInMB[(1 + GetPlayerId(GetEnumPlayer()))], (udg_ColorString[20] .. ("0|r")))
	MultiboardSetItemValueBJ(udg_MultiBoard, 4, udg_PlayerNumberInMB[(1 + GetPlayerId(GetEnumPlayer()))], (udg_ColorString[21] .. ("0|r")))
	MultiboardSetItemValueBJ(udg_MultiBoard, 5, udg_PlayerNumberInMB[(1 + GetPlayerId(GetEnumPlayer()))], (udg_ColorString[24] .. ("0|r")))
	MultiboardSetItemValueBJ(udg_MultiBoard, 6, udg_PlayerNumberInMB[(1 + GetPlayerId(GetEnumPlayer()))], (udg_ColorString[22] .. ("0|r")))
	MultiboardSetItemValueBJ(udg_MultiBoard, 7, udg_PlayerNumberInMB[(1 + GetPlayerId(GetEnumPlayer()))], (udg_ColorString[23] .. ("0|r")))
end

function Trig_Initialization_MultiBoard_Actions()
	bj_forLoopAIndex = 1
	bj_forLoopAIndexEnd = 9
	while(true) do
		if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
		if (Trig_Initialization_MultiBoard_Func002Func001C()) then
			ForceAddPlayer(udg_Players_Ally_Group, Player(-1 + (bj_forLoopAIndex)))
			udg_CountPlayers = (udg_CountPlayers + 1)
			udg_PlayerNumberInMB[(1 + GetPlayerId(Player(-1 + (bj_forLoopAIndex))))] = (udg_CountPlayers + 1)
		end
		bj_forLoopAIndex = bj_forLoopAIndex + 1
	end
	CreateMultiboardBJ(7, (udg_CountPlayers + 3), "Последние Стражи")
	udg_MultiBoard = bj_lastCreatedMultiboard
	MultiboardSetItemValueBJ(udg_MultiBoard, 1, 1, "")
	MultiboardSetItemStyleBJ(udg_MultiBoard, 1, 1, false, false)
	MultiboardSetItemValueBJ(udg_MultiBoard, 2, 1, "Игрок")
	MultiboardSetItemValueBJ(udg_MultiBoard, 3, 1, (udg_ColorString[20] .. ("Убийств|r")))
	MultiboardSetItemValueBJ(udg_MultiBoard, 4, 1, (udg_ColorString[21] .. ("Cмертей|r")))
	MultiboardSetItemValueBJ(udg_MultiBoard, 5, 1, (udg_ColorString[24] .. ("Помощи|r")))
	MultiboardSetItemValueBJ(udg_MultiBoard, 6, 1, (udg_ColorString[22] .. ("Уровень|r")))
	MultiboardSetItemIconBJ(udg_MultiBoard, 7, 1, "UI\\Feedback\\Resources\\ResourceGold.blp")
	bj_forLoopAIndex = 1
	bj_forLoopAIndexEnd = (udg_CountPlayers + 3)
	while(true) do
		if (bj_forLoopAIndex > bj_forLoopAIndexEnd) then break end
		MultiboardSetItemWidthBJ(udg_MultiBoard, 1, bj_forLoopAIndex, 2.)
		MultiboardSetItemWidthBJ(udg_MultiBoard, 2, bj_forLoopAIndex, 10.)
		MultiboardSetItemWidthBJ(udg_MultiBoard, 3, bj_forLoopAIndex, 6.)
		MultiboardSetItemWidthBJ(udg_MultiBoard, 4, bj_forLoopAIndex, 6.)
		MultiboardSetItemWidthBJ(udg_MultiBoard, 5, bj_forLoopAIndex, 6.)
		MultiboardSetItemWidthBJ(udg_MultiBoard, 6, bj_forLoopAIndex, 6.)
		MultiboardSetItemWidthBJ(udg_MultiBoard, 7, bj_forLoopAIndex, 4.)
		MultiboardSetItemStyleBJ(udg_MultiBoard, 1, bj_forLoopAIndex, false, true)
		MultiboardSetItemStyleBJ(udg_MultiBoard, 2, bj_forLoopAIndex, true, false)
		MultiboardSetItemStyleBJ(udg_MultiBoard, 3, bj_forLoopAIndex, true, false)
		MultiboardSetItemStyleBJ(udg_MultiBoard, 4, bj_forLoopAIndex, true, false)
		MultiboardSetItemStyleBJ(udg_MultiBoard, 5, bj_forLoopAIndex, true, false)
		MultiboardSetItemStyleBJ(udg_MultiBoard, 6, bj_forLoopAIndex, true, false)
		MultiboardSetItemStyleBJ(udg_MultiBoard, 7, bj_forLoopAIndex, true, false)
		MultiboardSetItemIconBJ(udg_MultiBoard, 1, bj_forLoopAIndex, "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp")
		bj_forLoopAIndex = bj_forLoopAIndex + 1
	end
	MultiboardSetItemStyleBJ(udg_MultiBoard, 7, 1, false, true)
	MultiboardSetItemStyleBJ(udg_MultiBoard, 1, 1, false, false)
	MultiboardSetItemStyleBJ(udg_MultiBoard, 1, (udg_CountPlayers + 2), false, true)
	MultiboardSetItemStyleBJ(udg_MultiBoard, 2, (udg_CountPlayers + 2), true, false)
	MultiboardSetItemIconBJ(udg_MultiBoard, 1, (udg_CountPlayers + 2), "ReplaceableTextures\\CommandButtons\\ClockTime.blp")
	MultiboardSetItemValueBJ(udg_MultiBoard, 2, (udg_CountPlayers + 2), "|cff00CD00Время Игры|r")
	MultiboardSetItemStyleBJ(udg_MultiBoard, 1, (udg_CountPlayers + 3), false, false)
	MultiboardSetItemStyleBJ(udg_MultiBoard, 2, (udg_CountPlayers + 3), true, false)
	MultiboardSetItemIconBJ(udg_MultiBoard, 1, (udg_CountPlayers + 2), "ReplaceableTextures\\CommandButtons\\ClockTime.blp")
	MultiboardSetItemValueBJ(udg_MultiBoard, 2, (udg_CountPlayers + 3), "|cff99ccffПрогресс волны:|r")
	MultiboardSetItemValueBJ(udg_MultiBoard, 3, (udg_CountPlayers + 3), "|Cfffed3120|r|cFF969696/|r|Cfffed3129|r")
	ForForce(udg_Players_Ally_Group, Trig_Initialization_MultiBoard_Func029A)
	MultiboardDisplay(udg_MultiBoard, false)
	MultiboardDisplay(udg_MultiBoard, true)
	MultiboardMinimize(udg_MultiBoard, true)
end

function InitTrig_Initialization_MultiBoard()
	gg_trg_Initialization_MultiBoard = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Initialization_MultiBoard, 3.)
	TriggerAddAction(gg_trg_Initialization_MultiBoard, Trig_Initialization_MultiBoard_Actions)
end

---@return boolean
function Trig_Hero_MultiBoard_LvlUp_Conditions()
	return ((IsUnitType(GetLevelingUnit(), UNIT_TYPE_HERO)) and (IsUnitIllusion(GetLevelingUnit()) == false) and ((1 + GetPlayerId(GetOwningPlayer(GetLevelingUnit()))) <= 9)) ~= nil
end

function Trig_Hero_MultiBoard_LvlUp_Actions()
	MultiboardSetItemValueBJ(udg_MultiBoard, 6, udg_PlayerNumberInMB[(1 + GetPlayerId(GetOwningPlayer(GetLevelingUnit())))], (udg_ColorString[22] .. (I2S(GetUnitLevel(GetLevelingUnit())) .. "|r")))
end

function InitTrig_Hero_MultiBoard_LvlUp()
	gg_trg_Hero_MultiBoard_LvlUp = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Hero_MultiBoard_LvlUp, EVENT_PLAYER_HERO_LEVEL)
	TriggerAddCondition(gg_trg_Hero_MultiBoard_LvlUp, Condition(Trig_Hero_MultiBoard_LvlUp_Conditions))
	TriggerAddAction(gg_trg_Hero_MultiBoard_LvlUp, Trig_Hero_MultiBoard_LvlUp_Actions)
end

---@return boolean
function Trig_Time_Check_and_Player_Gold_for_MultiBoard_Func002C()
	return (udg_Time_second >= 60)
end

---@return boolean
function Trig_Time_Check_and_Player_Gold_for_MultiBoard_Func003C()
	return (udg_Time_minuts >= 60)
end

---@return boolean
function Trig_Time_Check_and_Player_Gold_for_MultiBoard_Func004C()
	return (udg_Time_hours > 0)
end

function Trig_Time_Check_and_Player_Gold_for_MultiBoard_Func005A()
	MultiboardSetItemValueBJ(udg_MultiBoard, 7, udg_PlayerNumberInMB[(1 + GetPlayerId(GetEnumPlayer()))], (udg_ColorString[23] .. (I2S(GetPlayerState(GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD)) .. "|r")))
end

function Trig_Time_Check_and_Player_Gold_for_MultiBoard_Actions()
	udg_Time_second = (udg_Time_second + 1)
	if (Trig_Time_Check_and_Player_Gold_for_MultiBoard_Func002C()) then
		udg_Time_minuts = (udg_Time_minuts + 1)
		udg_Time_second = 0
	end
	if (Trig_Time_Check_and_Player_Gold_for_MultiBoard_Func003C()) then
		udg_Time_hours = (udg_Time_hours + 1)
		udg_Time_minuts = 0
	end
	if (Trig_Time_Check_and_Player_Gold_for_MultiBoard_Func004C()) then
		MultiboardSetItemValueBJ(udg_MultiBoard, 3, (udg_CountPlayers + 2), (("|cff00CD00" .. (I2S(udg_Time_hours) .. ":")) .. (I2S(udg_Time_minuts) .. (":" .. (I2S(udg_Time_second) .. "|r")))))
	else
		MultiboardSetItemValueBJ(udg_MultiBoard, 3, (udg_CountPlayers + 2), ("|cff00CD00" .. (I2S(udg_Time_minuts) .. (":" .. (I2S(udg_Time_second) .. "|r")))))
	end
	ForForce(udg_Players_Ally_Group, Trig_Time_Check_and_Player_Gold_for_MultiBoard_Func005A)
end

function InitTrig_Time_Check_and_Player_Gold_for_MultiBoard()
	gg_trg_Time_Check_and_Player_Gold_for_MultiBoard = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Time_Check_and_Player_Gold_for_MultiBoard, 1.)
	TriggerAddAction(gg_trg_Time_Check_and_Player_Gold_for_MultiBoard, Trig_Time_Check_and_Player_Gold_for_MultiBoard_Actions)
end

---@return boolean
function Trig_Reincarnation_Skeletons_Conditions()
	local id = GetUnitTypeId(GetDyingUnit()) ---@type number integer
	return IsUnitIllusion(GetDyingUnit()) == false and GetRandomInt(1, 7) == 1 and (id == FourCC('u001') or id == FourCC('u002') or id == FourCC('u003'))
end

function Trig_Reincarnation_Skeletons_2sec_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 6) ---@type unit
	PauseUnit(u, false)
	if GetUnitState(u, UNIT_STATE_LIFE) >= .405 then
		SetUnitAnimation(u, "stand")
		IssuePointOrderById(u, $D000F, GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi))
	end
	u = nil
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
end

function Trig_Reincarnation_Skeletons_3sec_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local id = LoadInteger(udg_hash, h, 1) ---@type number integer
	local x = LoadReal(udg_hash, h, 2) ---@type number real
	local y = LoadReal(udg_hash, h, 3) ---@type number real
	local p = LoadPlayerHandle(udg_hash, h, 4) ---@type player
	local face = LoadReal(udg_hash, h, 5) ---@type number real
	local u = CreateUnit(p, id, x, y, face) ---@type unit
	SaveUnitHandle(udg_hash, h, 6, u)
	PauseUnit(u, true)
	SetUnitAnimation(u, "Birth")
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl", GetUnitX(u), GetUnitY(u)))
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdl", GetUnitX(u), GetUnitY(u)))
	TimerStart(t, 2.33, false, Trig_Reincarnation_Skeletons_2sec_Actions)
	t = nil
	p = nil
	u = nil
end

function Trig_Reincarnation_Skeletons_Actions()
	local u = GetDyingUnit() ---@type unit
	local id = GetUnitTypeId(u) ---@type number integer
	local x = GetUnitX(u) ---@type number real
	local y = GetUnitY(u) ---@type number real
	local p = GetOwningPlayer(u) ---@type player
	local face = GetUnitFacing(u) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveInteger(udg_hash, h, 1, id)
	SaveReal(udg_hash, h, 2, x)
	SaveReal(udg_hash, h, 3, y)
	SavePlayerHandle(udg_hash, h, 4, p)
	SaveReal(udg_hash, h, 5, face)
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl", x, y))
	TimerStart(t, 3., false, Trig_Reincarnation_Skeletons_3sec_Actions)
	u = nil
	p = nil
	t = nil
end

function InitTrig_Reincarnation_Skeletons()
	local index = 0 ---@type number integer
	gg_trg_Reincarnation_Skeletons = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Reincarnation_Skeletons, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Reincarnation_Skeletons, Condition(Trig_Reincarnation_Skeletons_Conditions))
	TriggerAddAction(gg_trg_Reincarnation_Skeletons, Trig_Reincarnation_Skeletons_Actions)
end

function Trig_BossSkeletRaise2sec_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 20) ---@type unit
	local skelet ---@type unit
	local lop = 0 ---@type number integer
	local xr = GetRectCenterX(gg_rct_cast_magi) ---@type number real
	local yr = GetRectCenterY(gg_rct_cast_magi) ---@type number real
	PauseUnit(caster, false)
	SetUnitTimeScale(caster, 1.)
	if GetUnitState(caster, UNIT_STATE_LIFE) >= .405 then
		SetUnitAnimation(caster, "stand")
		IssuePointOrderById(caster, $D000F, xr, yr)
	end
	while(true) do
		if (lop > $F) then break end
		skelet = LoadUnitHandle(udg_hash, h, lop)
		PauseUnit(skelet, false)
		if GetUnitState(skelet, UNIT_STATE_LIFE) >= .405 then
			SetUnitAnimation(skelet, "stand")
			IssuePointOrderById(skelet, $D000F, xr, yr)
		end
		skelet = nil
		lop = lop + 1
	end
	caster = nil
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
end

function Trig_BossSkeletRaiseMiniWait_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 20) ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local target = LoadUnitHandle(udg_hash, h, 21) ---@type unit
	local x = GetUnitX(target) ---@type number real
	local y = GetUnitY(target) ---@type number real
	local lop = 0 ---@type number integer
	local skelet ---@type unit
	SetUnitAnimationByIndex(caster, 3)
	SetUnitTimeScale(caster, 3.25)
	PauseUnit(caster, true)
	while(true) do
		if (lop > $F) then break end
		skelet = CreateUnit(p, FourCC('u001'), x + 250. * Cos((lop * 22.5) * bj_DEGTORAD), y + 250. * Sin((lop * 22.5) * bj_DEGTORAD), $B4 + lop * 22.5)
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl", x + 250. * Cos((lop * 22.5) * bj_DEGTORAD), y + 250. * Sin((lop * 22.5) * bj_DEGTORAD)))
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdl", x + 250. * Cos((lop * 22.5) * bj_DEGTORAD), y + 250. * Sin((lop * 22.5) * bj_DEGTORAD)))
		SetUnitAnimation(skelet, "Birth")
		PauseUnit(skelet, true)
		SaveUnitHandle(udg_hash, h, lop, skelet)
		skelet = nil
		lop = lop + 1
	end
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl", x, y))
	TimerStart(t, 2.33, false, Trig_BossSkeletRaise2sec_Actions)
	caster = nil
	p = nil
	target = nil
	t = nil
end

function Trig_BossSkeletRaise_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveUnitHandle(udg_hash, h, 20, caster)
	SaveUnitHandle(udg_hash, h, 21, target)
	TimerStart(t, .3, false, Trig_BossSkeletRaiseMiniWait_Actions)
	caster = nil
	target = nil
	t = nil
end

---@return boolean
function Trig_BossSkeletRaise_Conditions()
	return GetSpellAbilityId() == FourCC('A07M')
end

function InitTrig_BossSkeletRaise()
	local index = 0 ---@type number integer
	gg_trg_BossSkeletRaise = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BossSkeletRaise, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BossSkeletRaise, Condition(Trig_BossSkeletRaise_Conditions))
	TriggerAddAction(gg_trg_BossSkeletRaise, Trig_BossSkeletRaise_Actions)
end

---@return boolean
function Trig_BossSkeletSkillActiv_Conditions()
	return GetUnitTypeId(GetTriggerUnit()) == FourCC('n00K')
end

function Trig_BossSkeletSkillActiv_Actions()
	IssueTargetOrderById(GetTriggerUnit(), $D007F, GetAttacker())
end

function InitTrig_BossSkeletSkillActiv()
	local index = 0 ---@type number integer
	gg_trg_BossSkeletSkillActiv = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BossSkeletSkillActiv, Player(index), EVENT_PLAYER_UNIT_ATTACKED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BossSkeletSkillActiv, Condition(Trig_BossSkeletSkillActiv_Conditions))
	TriggerAddAction(gg_trg_BossSkeletSkillActiv, Trig_BossSkeletSkillActiv_Actions)
end

function Trig_Fire_Arrow_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 5) ---@type unit
	local orb = LoadUnitHandle(udg_hash, h, 3) ---@type unit
	local ef ---@type effect
	local x = GetUnitX(orb) ---@type number real
	local y = GetUnitY(orb) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local xorb ---@type number real
	local yorb ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y))) ---@type number real
	local p ---@type player
	local damage ---@type number real
	local dammi ---@type unit
	local destroy = false ---@type boolean
	xorb = x + 24. * Cos(angle * bj_DEGTORAD)
	yorb = y + 24. * Sin(angle * bj_DEGTORAD)
	SetUnitPosition(orb, xorb, yorb)
	dist = SquareRoot((xt - xorb) * (xt - xorb) + (yt - yorb) * (yt - yorb))
	SetUnitFacing(orb, angle)
	if GetUnitState(target, UNIT_STATE_LIFE) < .405 then
		destroy = true
	end
	if dist < 20. and GetUnitState(target, UNIT_STATE_LIFE) > .405 then
		SetUnitPosition(orb, xt, yt)
		p = GetOwningPlayer(caster)
		damage = LoadReal(udg_hash, h, 2)
		if GetUnitState(target, UNIT_STATE_LIFE) > .0 and IsUnitType(target, UNIT_TYPE_STRUCTURE) == false and IsUnitType(target, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(target) ~= FourCC('h00U') then
			UnitDamageTarget(caster, target, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl", target, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIfb\\AIfbSpecialArt.mdl", target, "chest"))
			dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
			UnitAddAbility(dammi, FourCC('A0NG'))
			IssueTargetOrderById(dammi, $D02B6, target)
			dammi = nil
		end
		p = nil
		destroy = true
	end
	if destroy then
		KillUnit(orb)
		ef = LoadEffectHandle(udg_hash, h, 4)
		DestroyEffect(ef)
		ef = nil
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	orb = nil
	target = nil
end

function Trig_Fire_Arrow_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local damage = 25. ---@type number real
	local orb = CreateUnit(p, FourCC('h00U'), x, y, angle) ---@type unit
	local ef = AddSpecialEffectTarget("Abilities\\Weapons\\SearingArrow\\SearingArrowMissile.mdl", orb, "origin") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetUnitX(orb, x + 30. * Cos((angle) * bj_DEGTORAD))
	SetUnitY(orb, y + 30. * Sin((angle) * bj_DEGTORAD))
	SetUnitFlyHeight(orb, 60., .0)
	SetUnitScale(orb, 1.2, 1.2, 1.2)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, damage)
	SaveUnitHandle(udg_hash, h, 3, orb)
	SaveEffectHandle(udg_hash, h, 4, ef)
	SaveUnitHandle(udg_hash, h, 5, target)
	TimerStart(t, .03, true, Trig_Fire_Arrow_Move_Actions)
	caster = nil
	t = nil
	orb = nil
	ef = nil
	p = nil
	target = nil
end

---@return boolean
function Trig_Fire_Arrow_Conditions()
	return GetSpellAbilityId() == FourCC('A0NF')
end

function InitTrig_Fire_Arrow()
	local index = 0 ---@type number integer
	gg_trg_Fire_Arrow = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fire_Arrow, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fire_Arrow, Condition(Trig_Fire_Arrow_Conditions))
	TriggerAddAction(gg_trg_Fire_Arrow, Trig_Fire_Arrow_Actions)
end

---@return boolean
function Trig_Use_UnholyFrenzy_and_Fire_Arrow_Loop_Is_Enemy_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerEnemy(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_Use_UnholyFrenzy_and_Fire_Arrow_Loop_Is_Ally_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerAlly(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_Use_UnholyFrenzy_and_Fire_Arrow_All_Condition()
	return (IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), udg_Players_Enemy_Group))
end

function Trig_Use_UnholyFrenzy_and_Fire_Arrow_Actions()
	local gall = CreateGroup() ---@type group
	local g ---@type group
	local g2 ---@type group
	local Picked ---@type unit
	local target ---@type unit
	local x ---@type number real
	local y ---@type number real
	GroupEnumUnitsInRect(gall, bj_mapInitialPlayableArea, Condition(Trig_Use_UnholyFrenzy_and_Fire_Arrow_All_Condition))
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08S')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 600., Condition(Trig_Use_UnholyFrenzy_and_Fire_Arrow_Loop_Is_Ally_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D0085, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0NF')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 575., Condition(Trig_Use_UnholyFrenzy_and_Fire_Arrow_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00C1, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(gall)
	DestroyGroup(gall)
	gall = nil
end

---@return boolean
function Trig_Use_UnholyFrenzy_and_Fire_Arrow_Conditions()
	return (udg_Nomer_samoi_volni == 1)
end

function InitTrig_Use_UnholyFrenzy_and_Fire_Arrow()
	gg_trg_Use_UnholyFrenzy_and_Fire_Arrow = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Use_UnholyFrenzy_and_Fire_Arrow, 1., true)
	TriggerAddCondition(gg_trg_Use_UnholyFrenzy_and_Fire_Arrow, Condition(Trig_Use_UnholyFrenzy_and_Fire_Arrow_Conditions))
	TriggerAddAction(gg_trg_Use_UnholyFrenzy_and_Fire_Arrow, Trig_Use_UnholyFrenzy_and_Fire_Arrow_Actions)
end

function Trig_Create_Tombstone_Wait_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local tomb = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local ef = LoadEffectHandle(udg_hash, h, 2) ---@type effect
	local angle = LoadReal(udg_hash, h, 3) ---@type number real
	local x = GetUnitX(tomb) ---@type number real
	local y = GetUnitY(tomb) ---@type number real
	local zombie = CreateUnit(GetOwningPlayer(tomb), FourCC('n00H'), x, y, angle) ---@type unit
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdl", x, y))
	IssuePointOrderById(zombie, $D000F, GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi))
	KillUnit(tomb)
	DestroyEffect(ef)
	ef = nil
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	tomb = nil
	zombie = nil
	t = nil
end

function Trig_Create_Tombstone_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local angle = GetRandomReal(-45., 45.) + 270. ---@type number real
	local tomb = CreateUnit(p, FourCC('h00E'), xt, yt, angle) ---@type unit
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\Undead\\Graveyard\\GraveMarker.mdl", tomb, "origin") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveUnitHandle(udg_hash, h, 1, tomb)
	SaveEffectHandle(udg_hash, h, 2, ef)
	SaveReal(udg_hash, h, 3, angle)
	TimerStart(t, 4., false, Trig_Create_Tombstone_Wait_Actions)
	caster = nil
	t = nil
	tomb = nil
	ef = nil
	p = nil
	RemoveLocation(loc)
	loc = nil
end

---@return boolean
function Trig_Create_Tombstone_Conditions()
	return GetSpellAbilityId() == FourCC('A0O3')
end

function InitTrig_Create_Tombstone()
	local index = 0 ---@type number integer
	gg_trg_Create_Tombstone = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Create_Tombstone, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Create_Tombstone, Condition(Trig_Create_Tombstone_Conditions))
	TriggerAddAction(gg_trg_Create_Tombstone, Trig_Create_Tombstone_Actions)
end

function Trig_ZombieExploadDeathMove_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local meat = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local ef ---@type effect
	local xm = GetUnitX(meat) ---@type number real
	local ym = GetUnitY(meat) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2(yt - ym, xt - xm) ---@type number real
	local dist = SquareRoot((xt - xm) * (xt - xm) + (yt - ym) * (yt - ym)) ---@type number real
	if dist < 20. or GetUnitState(target, UNIT_STATE_LIFE) < .405 then
		if GetOwningPlayer(meat) == GetOwningPlayer(target) then
			SetUnitState(target, UNIT_STATE_LIFE, GetUnitState(target, UNIT_STATE_LIFE) + 60.)
		else
			SetUnitState(target, UNIT_STATE_LIFE, GetUnitState(target, UNIT_STATE_LIFE) - 25.)
		end
		ef = LoadEffectHandle(udg_hash, h, 3)
		DestroyEffect(ef)
		KillUnit(meat)
		ef = nil
		meat = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		t = nil
	else
		if IsTerrainPathable(xm + 20. * Cos(angle * bj_DEGTORAD), ym + 20. * Sin(angle * bj_DEGTORAD), PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(meat, xm + 20. * Cos(angle * bj_DEGTORAD), ym + 20. * Sin(angle * bj_DEGTORAD))
		end
	end
	meat = nil
	target = nil
	t = nil
end

function Trig_ZombieExploadDeath_Actions()
	local zomb = GetDyingUnit() ---@type unit
	local x = GetUnitX(zomb) ---@type number real
	local y = GetUnitY(zomb) ---@type number real
	local p = GetOwningPlayer(zomb) ---@type player
	local t ---@type timer
	local h ---@type number integer
	local g = CreateGroup() ---@type group
	local grup = CreateGroup() ---@type group
	local Picked ---@type unit
	local count = 0 ---@type number integer
	local meat ---@type unit
	local ef ---@type effect
	DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Demon\\DemonLargeDeathExplode\\DemonLargeDeathExplode.mdl", x, y))
	GroupEnumUnitsInRange(g, x, y, 325., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil or count > 3) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			GroupAddUnit(grup, Picked)
			count = count + 1
		end
		GroupRemoveUnit(g, Picked)
	end
	RandomUnitFromGroup(3, grup)
	GroupClear(g)
	GroupAddGroup(udg_GroupRandomUnitFromGroup, g)
	Picked = nil
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		meat = CreateUnit(p, FourCC('h00U'), x, y, .0)
		SetUnitTimeScale(meat, 2.)
		ef = AddSpecialEffectTarget("Abilities\\Weapons\\MeatwagonMissile\\MeatwagonMissile.mdl", meat, "chest")
		t = CreateTimer()
		h = GetHandleId(t)
		SaveUnitHandle(udg_hash, h, 1, meat)
		SaveUnitHandle(udg_hash, h, 2, Picked)
		SaveEffectHandle(udg_hash, h, 3, ef)
		TimerStart(t, .04, true, Trig_ZombieExploadDeathMove_Actions)
		ef = nil
		t = nil
		meat = nil
		GroupRemoveUnit(g, Picked)
	end
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(grup)
	DestroyGroup(grup)
	grup = nil
	meat = nil
	ef = nil
	t = nil
	p = nil
	zomb = nil
	Picked = nil
end

---@return boolean
function Trig_ZombieExploadDeath_Conditions()
	return GetUnitTypeId(GetDyingUnit()) == FourCC('n00H') and GetRandomInt(1, $A) <= 5
end

function InitTrig_ZombieExploadDeath()
	local index = 0 ---@type number integer
	gg_trg_ZombieExploadDeath = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_ZombieExploadDeath, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_ZombieExploadDeath, Condition(Trig_ZombieExploadDeath_Conditions))
	TriggerAddAction(gg_trg_ZombieExploadDeath, Trig_ZombieExploadDeath_Actions)
end

function Trig_Damned_Soul_move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local soul = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local g = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local angle = LoadReal(udg_hash, h, 4) ---@type number real
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 6) ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(soul) + 14. * Cos(angle * bj_DEGTORAD) ---@type number real
	local y = GetUnitY(soul) + 14. * Sin(angle * bj_DEGTORAD) ---@type number real
	local ef ---@type effect
	local grup = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		if IsTerrainPathable(x, y, PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(soul, x, y)
		end
		GroupEnumUnitsInRange(grup, x, y, 125., nil)
		while(true) do
			Picked = FirstOfGroup(grup)
			if (Picked == nil) then break end
			if (IsUnitInGroup(Picked, udg_PortalCastersMagi) == false) and IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitInGroup(Picked, g) == false and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), .5)
				UnitAddAbility(dammi, FourCC('A0OA'))
				IssueTargetOrderById(dammi, $D02BC, Picked)
				dammi = nil
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\GargoyleMissile\\GargoyleMissile.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilSpecialArt.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\CarrionSwarm\\CarrionSwarmDamage.mdl", Picked, "chest"))
				GroupAddUnit(g, Picked)
			end
			GroupRemoveUnit(grup, Picked)
		end
		SaveGroupHandle(udg_hash, h, 2, g)
	else
		dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.5)
		UnitAddAbility(dammi, FourCC('Amrf'))
		UnitRemoveAbility(dammi, FourCC('Amrf'))
		SetUnitScale(dammi, 1.2, 1.2, 1.2)
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\Possession\\PossessionMissile.mdl", dammi, "origin"))
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilSpecialArt.mdl", x, y))
		dammi = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		ef = LoadEffectHandle(udg_hash, h, 7)
		DestroyEffect(ef)
		ef = nil
		KillUnit(soul)
		RemoveUnit(soul)
		GroupClear(g)
		DestroyGroup(g)
		g = nil
	end
	Picked = nil
	GroupClear(grup)
	DestroyGroup(grup)
	grup = nil
	t = nil
	soul = nil
	g = nil
	dammi = nil
	caster = nil
	p = nil
end

function Trig_Damned_Soul_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local loc ---@type location
	local xt ---@type number real
	local yt ---@type number real
	local soul ---@type unit
	local g = CreateGroup() ---@type group
	local damage = 50. ---@type number real
	local wait = 50 ---@type number integer
	local ef ---@type effect
	local angle ---@type number real
	if GetSpellTargetUnit() == nil then
		loc = GetSpellTargetLoc()
		xt = GetLocationX(loc)
		yt = GetLocationY(loc)
		RemoveLocation(loc)
		loc = nil
	else
		xt = GetUnitX(GetSpellTargetUnit())
		yt = GetUnitY(GetSpellTargetUnit())
	end
	angle = bj_RADTODEG * Atan2(yt - y, xt - x)
	soul = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, angle)
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Undead\\Possession\\PossessionMissile.mdl", soul, "origin")
	UnitAddAbility(soul, FourCC('Amrf'))
	UnitRemoveAbility(soul, FourCC('Amrf'))
	SetUnitScale(soul, 1.2, 1.2, 1.2)
	SetUnitFlyHeight(soul, 80, .0)
	SaveUnitHandle(udg_hash, h, 1, soul)
	SaveGroupHandle(udg_hash, h, 2, g)
	SaveReal(udg_hash, h, 3, damage)
	SaveReal(udg_hash, h, 4, angle)
	SaveInteger(udg_hash, h, 5, wait)
	SaveUnitHandle(udg_hash, h, 6, caster)
	SaveEffectHandle(udg_hash, h, 7, ef)
	TimerStart(t, .03, true, Trig_Damned_Soul_move_Actions)
	caster = nil
	t = nil
	soul = nil
	g = nil
	ef = nil
end

---@return boolean
function Trig_Damned_Soul_Conditions()
	return GetSpellAbilityId() == FourCC('A0O9')
end

function InitTrig_Damned_Soul()
	local index = 0 ---@type number integer
	gg_trg_Damned_Soul = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Damned_Soul, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Damned_Soul, Condition(Trig_Damned_Soul_Conditions))
	TriggerAddAction(gg_trg_Damned_Soul, Trig_Damned_Soul_Actions)
end

---@return boolean
function Trig_Use_PowerofHorror_and_Curse_and_Slam_Loop_Is_Enemy_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerEnemy(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_Use_PowerofHorror_and_Curse_and_Slam_Loop_Is_Ally_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerAlly(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_Use_PowerofHorror_and_Curse_and_Slam_All_Condition()
	return (IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), udg_Players_Enemy_Group))
end

function Trig_Use_PowerofHorror_and_Curse_and_Slam_Actions()
	local gall = CreateGroup() ---@type group
	local g ---@type group
	local g2 ---@type group
	local Picked ---@type unit
	local target ---@type unit
	local x ---@type number real
	local y ---@type number real
	local dist ---@type number real
	local angle ---@type number real
	GroupEnumUnitsInRect(gall, bj_mapInitialPlayableArea, Condition(Trig_Use_PowerofHorror_and_Curse_and_Slam_All_Condition))
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A07X')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 600., Condition(Trig_Use_PowerofHorror_and_Curse_and_Slam_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00DE, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08B')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 575., Condition(Trig_Use_PowerofHorror_and_Curse_and_Slam_Loop_Is_Ally_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D0062, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08C')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 600., Condition(Trig_Use_PowerofHorror_and_Curse_and_Slam_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D0062, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08F')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 300., Condition(Trig_Use_PowerofHorror_and_Curse_and_Slam_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueImmediateOrderById(Picked, $D011D)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08S')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 600., Condition(Trig_Use_PowerofHorror_and_Curse_and_Slam_Loop_Is_Ally_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00F1, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	if GetRandomInt(1, 40) == 1 and (udg_Is_Fast_Wave_Start_On_Off == false) then
		g2 = CreateGroup()
		GroupAddGroup(udg_Gruppa_HeroUnitov_Geroev, g2)
		while(true) do
			Picked = FirstOfGroup(g2)
			if (Picked == nil) then break end
			target = CreateUnit(Player(9), FourCC('h00E'), GetUnitX(Picked), GetUnitY(Picked), 270.)
			dist = GetRandomReal(100., 125.)
			angle = GetRandomReal(.0, 360.)
			UnitAddAbility(target, FourCC('A0O3'))
			UnitApplyTimedLife(target, FourCC('BTLF'), 2.)
			IssuePointOrderById(target, $D00FA, GetUnitX(Picked) + dist * Cos(angle * bj_DEGTORAD), GetUnitY(Picked) + dist * Sin(angle * bj_DEGTORAD))
			target = nil
			GroupRemoveUnit(g2, Picked)
		end
		GroupClear(g2)
		DestroyGroup(g2)
		g2 = nil
		Picked = nil
	end
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0O9')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 600., Condition(Trig_Use_PowerofHorror_and_Curse_and_Slam_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00FA, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0PI')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 700., Condition(Trig_Use_PowerofHorror_and_Curse_and_Slam_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D021B, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08F')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 200., Condition(Trig_Use_PowerofHorror_and_Curse_and_Slam_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueImmediateOrderById(Picked, $D00FB)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(gall)
	DestroyGroup(gall)
	gall = nil
end

---@return boolean
function Trig_Use_PowerofHorror_and_Curse_and_Slam_Conditions()
	return (udg_Nomer_samoi_volni == 2)
end

function InitTrig_Use_PowerofHorror_and_Curse_and_Slam_and_Dumned_Soul()
	gg_trg_Use_PowerofHorror_and_Curse_and_Slam_and_Dumned_Soul = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Use_PowerofHorror_and_Curse_and_Slam_and_Dumned_Soul, 1., true)
	TriggerAddCondition(gg_trg_Use_PowerofHorror_and_Curse_and_Slam_and_Dumned_Soul, Condition(Trig_Use_PowerofHorror_and_Curse_and_Slam_Conditions))
	TriggerAddAction(gg_trg_Use_PowerofHorror_and_Curse_and_Slam_and_Dumned_Soul, Trig_Use_PowerofHorror_and_Curse_and_Slam_Actions)
end

function Trig_Throw_Meat_Move2_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	PauseUnit(u, false)
	if GetUnitState(u, UNIT_STATE_LIFE) >= .405 then
		SetUnitAnimation(u, "stand")
		IssuePointOrderById(u, $D000F, GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi))
	end
	u = nil
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
end

function Trig_Throw_Meat_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 4) ---@type unit
	local damage ---@type number real
	local stuntime ---@type number real
	local angle ---@type number real
	local dagger = LoadUnitHandle(udg_hash, h, 7) ---@type unit
	local x = GetUnitX(dagger) ---@type number real
	local y = GetUnitY(dagger) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local dist ---@type number real
	local zombie ---@type unit
	local h2 ---@type number integer
	local t2 ---@type timer
	angle = bj_RADTODEG * Atan2(yt - y, xt - x)
	dist = SquareRoot((xt - x) * (xt - x) + (yt - y) * (yt - y))
	SetUnitPosition(dagger, x + 21. * Cos((angle) * bj_DEGTORAD), y + 21. * Sin((angle) * bj_DEGTORAD))
	if dist < 50. or GetUnitState(target, UNIT_STATE_LIFE) < .405 then
		caster = LoadUnitHandle(udg_hash, h, 1)
		damage = LoadReal(udg_hash, h, 2)
		stuntime = LoadReal(udg_hash, h, 3)
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\MeatwagonMissile\\MeatwagonMissile.mdl", target, "chest"))
		UnitDamageTarget(caster, target, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
		StunUnitTimed(target, stuntime)
		DestroyEffect(LoadEffectHandle(udg_hash, h, 8))
		zombie = CreateUnit(GetOwningPlayer(caster), FourCC('n00H'), xt + GetRandomReal(30., 100.), yt + GetRandomReal(30., 100.), GetRandomReal(.0, 360.))
		t2 = CreateTimer()
		h2 = GetHandleId(t2)
		PauseUnit(zombie, true)
		SetUnitAnimation(zombie, "Birth")
		SaveUnitHandle(udg_hash, h2, 1, zombie)
		TimerStart(t2, 2.33, false, Trig_Throw_Meat_Move2_Actions)
		t2 = nil
		zombie = nil
		RemoveUnit(dagger)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		caster = nil
	end
	t = nil
	target = nil
	dagger = nil
end

function Trig_Throw_Meat_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local tx = GetUnitX(target) ---@type number real
	local ty = GetUnitY(target) ---@type number real
	local damage = 100. ---@type number real
	local stuntime = 2. ---@type number real
	local angle ---@type number real
	local dist ---@type number real
	local dagger ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef ---@type effect
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	dist = SquareRoot((tx - x) * (tx - x) + (ty - y) * (ty - y))
	dagger = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, angle)
	SetUnitX(dagger, x + 150. * Cos((angle + 90.) * bj_DEGTORAD))
	SetUnitY(dagger, y + 150. * Sin((angle + 90.) * bj_DEGTORAD))
	UnitAddAbility(dagger, FourCC('Amrf'))
	UnitRemoveAbility(dagger, FourCC('Amrf'))
	SetUnitScale(dagger, 1.5, 1.5, 1.5)
	SetUnitPathing(dagger, false)
	SetUnitFlyHeight(dagger, 200., .0)
	SetUnitFlyHeight(dagger, 25., (($AF * 700) / dist))
	ef = AddSpecialEffectTarget("Abilities\\Weapons\\MeatwagonMissile\\MeatwagonMissile.mdl", dagger, "origin")
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, damage)
	SaveReal(udg_hash, h, 3, stuntime)
	SaveUnitHandle(udg_hash, h, 4, target)
	SaveUnitHandle(udg_hash, h, 7, dagger)
	SaveEffectHandle(udg_hash, h, 8, ef)
	TimerStart(t, .03, true, Trig_Throw_Meat_Move_Actions)
	caster = nil
	target = nil
	t = nil
	dagger = nil
	ef = nil
end

---@return boolean
function Trig_Throw_Meat_Conditions()
	return GetSpellAbilityId() == FourCC('A0PI')
end

function InitTrig_Throw_Meat()
	local index = 0 ---@type number integer
	gg_trg_Throw_Meat = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Throw_Meat, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Throw_Meat, Condition(Trig_Throw_Meat_Conditions))
	TriggerAddAction(gg_trg_Throw_Meat, Trig_Throw_Meat_Actions)
end

function Trig_Earth_Clap_WAIT_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local dammi ---@type unit
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local damage = 100. ---@type number real
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	GroupEnumUnitsInRange(g, xc, yc, 200., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (IsUnitInGroup(Picked, udg_PortalCastersMagi) == false) and IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
			UnitAddAbility(dammi, FourCC('A0FE'))
			IssueTargetOrderById(dammi, $D006B, Picked)
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			dammi = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", xc, yc))
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	caster = nil
	t = nil
	dammi = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
end

function Trig_Earth_Clap_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveUnitHandle(udg_hash, h, 1, caster)
	TimerStart(t, .5, false, Trig_Earth_Clap_WAIT_Actions)
	caster = nil
	t = nil
end

---@return boolean
function Trig_Earth_Clap_Conditions()
	return GetSpellAbilityId() == FourCC('A08F')
end

function InitTrig_Earth_Clap()
	local index = 0 ---@type number integer
	gg_trg_Earth_Clap = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Earth_Clap, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Earth_Clap, Condition(Trig_Earth_Clap_Conditions))
	TriggerAddAction(gg_trg_Earth_Clap, Trig_Earth_Clap_Actions)
end

function Trig_Ghoul_Jump_Move_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_Ghoul_Jump_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local face = LoadReal(udg_hash, h, 6) ---@type number real
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local r ---@type rect
	if wait > 0 and GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		SetUnitFacing(caster, face)
	else
		SetUnitAnimation(caster, "stand")
		r = Rect(x - 100., y - 100., x + 100., y + 100.)
		EnumDestructablesInRect(r, nil, Trig_Ghoul_Jump_Move_Dest_Actions)
		SetUnitPathing(caster, true)
		SetUnitTimeScale(caster, 1.)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		RemoveRect(r)
		r = nil
	end
	t = nil
	caster = nil
end

function Trig_Ghoul_Jump_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local loc ---@type location
	local tx ---@type number real
	local ty ---@type number real
	local dist ---@type number real
	local time ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetUnitAnimation(caster, "stand")
	SetUnitPathing(caster, false)
	SetUnitAnimationByIndex(caster, $A)
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	dist = SquareRoot((tx - x) * (tx - x) + (ty - y) * (ty - y))
	time = dist / 500.
	SetUnitTimeScale(caster, (1 / time))
	MoveUnit(caster, time, 500., .0, angle, (dist / 3), true)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveInteger(udg_hash, h, 5, R2I(dist / 15.))
	SaveReal(udg_hash, h, 6, angle)
	TimerStart(t, .03, true, Trig_Ghoul_Jump_Move_Actions)
	caster = nil
	target = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
end

---@return boolean
function Trig_Ghoul_Jump_Conditions()
	return GetSpellAbilityId() == FourCC('A0NH')
end

function InitTrig_Ghoul_Jump()
	local index = 0 ---@type number integer
	gg_trg_Ghoul_Jump = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ghoul_Jump, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ghoul_Jump, Condition(Trig_Ghoul_Jump_Conditions))
	TriggerAddAction(gg_trg_Ghoul_Jump, Trig_Ghoul_Jump_Actions)
end

function Trig_BurrowStrike_Move_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_BurrowStrike_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gdamage = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local wait3 = LoadInteger(udg_hash, h, 3) ---@type number integer
	local wait2 = LoadInteger(udg_hash, h, 4) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local face = LoadReal(udg_hash, h, 6) ---@type number real
	local time = LoadReal(udg_hash, h, 7) ---@type number real
	local rewait = LoadInteger(udg_hash, h, 8) ---@type number integer
	local impale = LoadInteger(udg_hash, h, 9) ---@type number integer
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g ---@type group
	local Picked ---@type unit
	local angle ---@type number real
	local angle2 ---@type number real
	local dammi ---@type unit
	local alife = true ---@type boolean
	local r ---@type rect
	local dammief ---@type unit
	if GetUnitState(caster, UNIT_STATE_LIFE) < .405 then
		alife = false
	end
	if wait3 > 0 then
		wait3 = wait3 - 1
		SaveInteger(udg_hash, h, 3, wait3)
	end
	if wait3 <= 0 and wait > 0 then
		if wait == rewait then
			MoveUnit(caster, time, 400., .0, face, .0, true)
			PauseUnit(caster, true)
		end
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		if impale < 5 then
			impale = impale + 1
		else
			impale = 0
			dammief = CreateUnit(p, FourCC('h00U'), x + 100. * Cos(face * bj_DEGTORAD), y + 100. * Sin(face * bj_DEGTORAD), GetRandomReal(.0, 360.))
			UnitApplyTimedLife(dammief, FourCC('BTLF'), 1.)
			SetUnitScale(dammief, 2., 2., 2.5)
			DestroyEffect(AddSpecialEffectTarget("Effects\\ImpaleMissTarget.mdl", dammief, "origin"))
			dammief = nil
		end
		SaveInteger(udg_hash, h, 9, impale)
		r = Rect(x - 100., y - 100., x + 100., y + 100.)
		g = CreateGroup()
		EnumDestructablesInRect(r, nil, Trig_BurrowStrike_Move_Dest_Actions)
		GroupEnumUnitsInRange(g, x, y, 125., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(gdamage, Picked)
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl", Picked, "chest"))
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A01U'))
				IssueTargetOrderById(dammi, $D007F, Picked)
				dammi = nil
				if GetOwningPlayer(Picked) ~= Player($F) then
					angle = bj_RADTODEG * Atan2(GetUnitY(Picked) - y, GetUnitX(Picked) - x)
					angle2 = (Atan2(y - GetUnitY(Picked), x - GetUnitX(Picked)) * bj_RADTODEG) + 360.
					if (angle2 <= (GetUnitFacing(caster) + 210.) and angle2 >= (GetUnitFacing(caster) + 180.)) then
						angle = angle + 30.
					end
					if (angle2 <= (GetUnitFacing(caster) + 180.) and angle2 >= (GetUnitFacing(caster) + 150.)) then
						angle = angle - 30.
					end
					MoveUnit(Picked, 1., 400., 400., angle, 200., false)
				end
			end
			GroupRemoveUnit(g, Picked)
		end
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		RemoveRect(r)
		r = nil
		Picked = nil
		SaveGroupHandle(udg_hash, h, 2, gdamage)
	end
	if wait <= 0 and wait2 > 0 then
		if wait2 == $F then
			SetUnitAnimationByIndex(caster, $A)
		end
		wait2 = wait2 - 1
		SaveInteger(udg_hash, h, 4, wait2)
	end
	if wait2 <= 0 or alife == false then
		if alife then
			SetUnitAnimation(caster, "stand")
		end
		PauseUnit(caster, false)
		SetUnitPathing(caster, true)
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	gdamage = nil
	p = nil
	Picked = nil
	dammi = nil
end

function Trig_BurrowStrike_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local gdamage = CreateGroup() ---@type group
	local loc ---@type location
	local tx ---@type number real
	local ty ---@type number real
	local dist ---@type number real
	local time ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait ---@type number integer
	local wait2 = 27 ---@type number integer
	local wait3 = 30 ---@type number integer
	local impale = 0 ---@type number integer
	SetUnitAnimation(caster, "stand")
	SetUnitPathing(caster, false)
	SetUnitAnimationByIndex(caster, 8)
	SetUnitTimeScale(caster, 1.)
	UnitPeriodicPostionMove(caster, .03, .5)
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	dist = SquareRoot((tx - x) * (tx - x) + (ty - y) * (ty - y))
	if target == caster then
		angle = GetUnitFacing(caster)
		dist = 800.
	end
	time = dist / 400.
	wait = R2I(dist / 12.)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	SaveInteger(udg_hash, h, 3, wait3)
	SaveInteger(udg_hash, h, 4, wait2)
	SaveInteger(udg_hash, h, 5, wait)
	SaveReal(udg_hash, h, 6, angle)
	SaveReal(udg_hash, h, 7, time)
	SaveInteger(udg_hash, h, 8, wait)
	SaveInteger(udg_hash, h, 9, impale)
	TimerStart(t, .03, true, Trig_BurrowStrike_Move_Actions)
	SetUnitAnimationByIndex(caster, 8)
	PauseUnit(caster, true)
	SetUnitAnimationByIndex(caster, 8)
	caster = nil
	target = nil
	gdamage = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
end

---@return boolean
function Trig_BurrowStrike_Conditions()
	return GetSpellAbilityId() == FourCC('A0NO')
end

function InitTrig_BurrowStrike()
	local index = 0 ---@type number integer
	gg_trg_BurrowStrike = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BurrowStrike, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BurrowStrike, Condition(Trig_BurrowStrike_Conditions))
	TriggerAddAction(gg_trg_BurrowStrike, Trig_BurrowStrike_Actions)
end

---@return boolean
function Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Loop_Raise_Dead_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) < .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (GetUnitTypeId(GetFilterUnit()) ~= FourCC('h00U'))) ~= nil
end

---@return boolean
function Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Loop_Is_Enemy_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerEnemy(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Loop_Is_Ally_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerAlly(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_All_Condition()
	return (IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), udg_Players_Enemy_Group))
end

function Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Actions()
	local gall = CreateGroup() ---@type group
	local g ---@type group
	local g2 ---@type group
	local Picked ---@type unit
	local target ---@type unit
	local x ---@type number real
	local y ---@type number real
	local angle ---@type number real
	GroupEnumUnitsInRect(gall, bj_mapInitialPlayableArea, Condition(Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_All_Condition))
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A086')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 600., Condition(Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Loop_Raise_Dead_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueImmediateOrderById(Picked, $D00E5)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08K')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 800., Condition(Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00FE, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08K')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 800., Condition(Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Loop_Is_Ally_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00FE, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08M')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 600., Condition(Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueImmediateOrderById(Picked, $D009E)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0NO')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 900., Condition(Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				angle = bj_RADTODEG * Atan2(GetUnitY(target) - GetUnitY(Picked), GetUnitX(target) - GetUnitX(Picked))
				IssuePointOrderById(Picked, $D00FA, GetUnitX(target) + 175. * Cos(angle * bj_DEGTORAD), GetUnitY(target) + 175. * Sin(angle * bj_DEGTORAD))
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0NH')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 800., Condition(Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00FA, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(gall)
	DestroyGroup(gall)
	gall = nil
end

---@return boolean
function Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Conditions()
	return (udg_Nomer_samoi_volni == 3)
end

function InitTrig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump()
	gg_trg_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump, 1., true)
	TriggerAddCondition(gg_trg_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump, Condition(Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Conditions))
	TriggerAddAction(gg_trg_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump, Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Actions)
end

function Trig_BeetleCorpseBurrowCast_Actions()
	IssueImmediateOrderById(GetTriggerUnit(), $D0235)
end

---@return boolean
function Trig_BeetleCorpseBurrowCast_Conditions()
	return (GetUnitTypeId(GetTriggerUnit()) == FourCC('u004') or GetUnitTypeId(GetTriggerUnit()) == FourCC('u00D')) and 50. > (GetUnitState(GetTriggerUnit(), UNIT_STATE_LIFE) / GetUnitState(GetTriggerUnit(), UNIT_STATE_MAX_LIFE) * FourCC('d'))
end

function InitTrig_BeetleCorpseBurrowCast()
	local index = 0 ---@type number integer
	gg_trg_BeetleCorpseBurrowCast = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BeetleCorpseBurrowCast, Player(index), EVENT_PLAYER_UNIT_ATTACKED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BeetleCorpseBurrowCast, Condition(Trig_BeetleCorpseBurrowCast_Conditions))
	TriggerAddAction(gg_trg_BeetleCorpseBurrowCast, Trig_BeetleCorpseBurrowCast_Actions)
end

function Trig_BeetleCorpseBurrowAttackBase_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local beetle = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	IssuePointOrderById(beetle, $D000F, GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi))
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	beetle = nil
end

function Trig_BeetleCorpseBurrowPeriodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local beetle = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	SetUnitState(beetle, UNIT_STATE_MANA, GetUnitState(beetle, UNIT_STATE_MANA) + 60.)
	IssueImmediateOrderById(beetle, $D0236)
	DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl", GetUnitX(beetle), GetUnitY(beetle)))
	TimerStart(t, 1.75, false, Trig_BeetleCorpseBurrowAttackBase_Actions)
	t = nil
	beetle = nil
end

function Trig_BeetleCorpseBurrow_Actions()
	local beetle = GetSpellAbilityUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveUnitHandle(udg_hash, h, 1, beetle)
	DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl", GetUnitX(beetle), GetUnitY(beetle)))
	TimerStart(t, GetRandomReal(3.5, 7.5), false, Trig_BeetleCorpseBurrowPeriodic_Actions)
	beetle = nil
	t = nil
end

---@return boolean
function Trig_BeetleCorpseBurrow_Conditions()
	return (GetSpellAbilityId() == FourCC('A07Z') and GetUnitTypeId(GetSpellAbilityUnit()) == FourCC('u004')) or (GetSpellAbilityId() == FourCC('A081') and GetUnitTypeId(GetSpellAbilityUnit()) == FourCC('u00D'))
end

function InitTrig_BeetleCorpseBurrow()
	local index = 0 ---@type number integer
	gg_trg_BeetleCorpseBurrow = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BeetleCorpseBurrow, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BeetleCorpseBurrow, Condition(Trig_BeetleCorpseBurrow_Conditions))
	TriggerAddAction(gg_trg_BeetleCorpseBurrow, Trig_BeetleCorpseBurrow_Actions)
end

function Trig_Cocoon_periodic_Creation_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local cocoon = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local check = LoadInteger(udg_hash, h, 2) ---@type number integer
	local scale = .75 + (check * .0375) ---@type number real
	local spider ---@type unit
	if check < 20 and GetUnitState(cocoon, UNIT_STATE_LIFE) > .405 then
		check = check + 1
		SaveInteger(udg_hash, h, 2, check)
		SetUnitScale(cocoon, scale, scale, scale)
	else
		if check >= 20 then
			spider = CreateUnit(GetOwningPlayer(cocoon), FourCC('n00R'), GetUnitX(cocoon), GetUnitY(cocoon), GetUnitFacing(cocoon))
			IssuePointOrderById(spider, $D000F, GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi))
			DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Demon\\DemonLargeDeathExplode\\DemonLargeDeathExplode.mdl", GetUnitX(cocoon), GetUnitY(cocoon)))
			spider = nil
		end
		KillUnit(cocoon)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		cocoon = nil
		t = nil
	end
	t = nil
	cocoon = nil
end

function Trig_Cocoon_Creation_Actions()
	local spider = GetDyingUnit() ---@type unit
	local x = GetUnitX(spider) ---@type number real
	local y = GetUnitY(spider) ---@type number real
	local cocoon = CreateUnit(GetOwningPlayer(spider), FourCC('n011'), x, y, GetRandomReal(.0, 360.)) ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local check = 0 ---@type number integer
	DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Demon\\DemonLargeDeathExplode\\DemonLargeDeathExplode.mdl", x, y))
	SaveUnitHandle(udg_hash, h, 1, cocoon)
	SaveInteger(udg_hash, h, 2, check)
	TimerStart(t, .5, true, Trig_Cocoon_periodic_Creation_Actions)
	spider = nil
	cocoon = nil
	t = nil
end

---@return boolean
function Trig_Cocoon_Creation_Conditions()
	return GetUnitTypeId(GetDyingUnit()) == FourCC('n00R') and GetRandomInt(1, 3) == 1
end

function InitTrig_Cocoon_Creation()
	local index = 0 ---@type number integer
	gg_trg_Cocoon_Creation = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Cocoon_Creation, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Cocoon_Creation, Condition(Trig_Cocoon_Creation_Conditions))
	TriggerAddAction(gg_trg_Cocoon_Creation, Trig_Cocoon_Creation_Actions)
end

---@return boolean
function Trig_Poisonous_Spittle_Cast_Conditions()
	return GetUnitTypeId(GetAttacker()) == FourCC('n00R') and GetRandomInt(1, 6) == 1
end

function Trig_Poisonous_Spittle_Cast_Actions()
	IssueTargetOrderById(GetAttacker(), $D02B6, GetTriggerUnit())
end

function InitTrig_Poisonous_Spittle_Cast()
	local index = 0 ---@type number integer
	gg_trg_Poisonous_Spittle_Cast = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Poisonous_Spittle_Cast, Player(index), EVENT_PLAYER_UNIT_ATTACKED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Poisonous_Spittle_Cast, Condition(Trig_Poisonous_Spittle_Cast_Conditions))
	TriggerAddAction(gg_trg_Poisonous_Spittle_Cast, Trig_Poisonous_Spittle_Cast_Actions)
end

function Trig_Holes_Of_Grave_Diggers_Debug_Kill_Actions()
	RemoveUnit(GetDyingUnit())
	FlushChildHashtable(udg_hash, GetHandleId(GetDyingUnit()))
end

---@return boolean
function Trig_Holes_Of_Grave_Diggers_Debug_Kill_Conditions()
	return GetUnitTypeId(GetDyingUnit()) == FourCC('u00H')
end

function InitTrig_Holes_Of_Grave_Diggers_Debug_Kill()
	local index = 0 ---@type number integer
	gg_trg_Holes_Of_Grave_Diggers_Debug_Kill = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Holes_Of_Grave_Diggers_Debug_Kill, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Holes_Of_Grave_Diggers_Debug_Kill, Condition(Trig_Holes_Of_Grave_Diggers_Debug_Kill_Conditions))
	TriggerAddAction(gg_trg_Holes_Of_Grave_Diggers_Debug_Kill, Trig_Holes_Of_Grave_Diggers_Debug_Kill_Actions)
end

function Trig_Holes_Of_Grave_Diggers_AttackBase_Actions()
	local tsp = GetExpiredTimer() ---@type timer
	local hsp = GetHandleId(tsp) ---@type number integer
	local spider = LoadUnitHandle(udg_hash, hsp, 1) ---@type unit
	SetUnitAnimation(spider, "stand")
	SetUnitMoveSpeed(spider, GetUnitDefaultMoveSpeed(spider))
	IssuePointOrderById(spider, $D000F, GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi))
	spider = nil
	FlushChildHashtable(udg_hash, hsp)
	DestroyTimer(tsp)
	tsp = nil
end

function Trig_Holes_Of_Grave_Diggers_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local x = LoadReal(udg_hash, h, 1) ---@type number real
	local y = LoadReal(udg_hash, h, 2) ---@type number real
	local hole = LoadUnitHandle(udg_hash, h, 3) ---@type unit
	local dammi ---@type unit
	local ef ---@type effect
	local check = LoadInteger(udg_hash, h, 6) ---@type number integer
	local p = LoadPlayerHandle(udg_hash, h, 7) ---@type player
	local spider ---@type unit
	local tsp ---@type timer
	local hsp ---@type number integer
	if GetUnitState(hole, UNIT_STATE_LIFE) > .405 and check > 0 then
		check = check - 1
		SaveInteger(udg_hash, h, 6, check)
		tsp = CreateTimer()
		hsp = GetHandleId(tsp)
		spider = CreateUnit(p, FourCC('u00D'), x, y, GetRandomReal(.0, 360.))
		SetUnitAnimationByIndex(spider, 9)
		SetUnitMoveSpeed(spider, .0)
		SaveUnitHandle(udg_hash, hsp, 1, spider)
		TimerStart(tsp, 1., false, Trig_Holes_Of_Grave_Diggers_AttackBase_Actions)
		spider = nil
		tsp = nil
	else
		dammi = LoadUnitHandle(udg_hash, h, 4)
		ef = LoadEffectHandle(udg_hash, h, 5)
		DestroyEffect(ef)
		ef = nil
		KillUnit(dammi)
		dammi = nil
		KillUnit(hole)
		hole = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		t = nil
	end
	t = nil
	hole = nil
	p = nil
end

function Trig_Holes_Of_Grave_Diggers_Cast_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local hole = CreateUnit(GetOwningPlayer(caster), FourCC('u00H'), x, y, GetRandomReal(.0, 360.)) ---@type unit
	local dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, .0) ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef ---@type effect
	local check = $A ---@type number integer
	SetUnitAnimationByIndex(hole, 8)
	SetUnitScale(dammi, 2., 2., 2.)
	SetUnitVertexColor(dammi, $C8, $C8, $C8, $AF)
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Undead\\Web\\WebTarget.mdl", dammi, "chest")
	SaveReal(udg_hash, h, 1, x)
	SaveReal(udg_hash, h, 2, y)
	SaveUnitHandle(udg_hash, h, 3, hole)
	SaveUnitHandle(udg_hash, h, 4, dammi)
	SaveEffectHandle(udg_hash, h, 5, ef)
	SaveInteger(udg_hash, h, 6, check)
	SavePlayerHandle(udg_hash, h, 7, GetOwningPlayer(caster))
	TimerStart(t, 1.5, true, Trig_Holes_Of_Grave_Diggers_periodic_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	hole = nil
	dammi = nil
	t = nil
	ef = nil
end

---@return boolean
function Trig_Holes_Of_Grave_Diggers_Cast_Conditions()
	return GetSpellAbilityId() == FourCC('A0E2')
end

function InitTrig_Holes_Of_Grave_Diggers_Cast()
	local index = 0 ---@type number integer
	gg_trg_Holes_Of_Grave_Diggers_Cast = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Holes_Of_Grave_Diggers_Cast, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Holes_Of_Grave_Diggers_Cast, Condition(Trig_Holes_Of_Grave_Diggers_Cast_Conditions))
	TriggerAddAction(gg_trg_Holes_Of_Grave_Diggers_Cast, Trig_Holes_Of_Grave_Diggers_Cast_Actions)
end

function Trig_Nerub_Spider_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local xt ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local yt ---@type number real
	local loc ---@type location
	local target = GetSpellTargetUnit() ---@type unit
	local dammi ---@type unit
	if target ~= nil then
		xt = GetUnitX(target)
		yt = GetUnitY(target)
	else
		loc = GetSpellTargetLoc()
		xt = GetLocationX(loc)
		yt = GetLocationY(loc)
	end
	dammi = CreateUnit(p, FourCC('n00Z'), xt, yt, GetRandomReal(.0, 360.))
	IssuePointOrderById(dammi, $D000F, GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi))
	dammi = nil
	dammi = CreateUnit(p, FourCC('n00Z'), xt, yt, GetRandomReal(.0, 360.))
	IssuePointOrderById(dammi, $D000F, GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi))
	dammi = nil
	caster = nil
	p = nil
	target = nil
	RemoveLocation(loc)
	loc = nil
end

---@return boolean
function Trig_Nerub_Spider_Conditions()
	return GetSpellAbilityId() == FourCC('A08U')
end

function InitTrig_Nerub_Spider()
	local index = 0 ---@type number integer
	gg_trg_Nerub_Spider = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Nerub_Spider, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Nerub_Spider, Condition(Trig_Nerub_Spider_Conditions))
	TriggerAddAction(gg_trg_Nerub_Spider, Trig_Nerub_Spider_Actions)
end

---@return boolean
function Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Dead_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) < .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (GetUnitTypeId(GetFilterUnit()) ~= FourCC('h00U'))) ~= nil
end

---@return boolean
function Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Loop_Is_Enemy_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerEnemy(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Loop_Is_Ally_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerAlly(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_All_Condition()
	return (IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), udg_Players_Enemy_Group))
end

function Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Actions()
	local gall = CreateGroup() ---@type group
	local g ---@type group
	local g2 ---@type group
	local Picked ---@type unit
	local target ---@type unit
	local x ---@type number real
	local y ---@type number real
	local angle ---@type number real
	GroupEnumUnitsInRect(gall, bj_mapInitialPlayableArea, Condition(Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_All_Condition))
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0DY')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 600., Condition(Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Loop_Is_Ally_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D0062, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0E2')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 700., Condition(Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssuePointOrderById(Picked, $D009D, GetUnitX(target), GetUnitY(target))
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08U')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 900., Condition(Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssuePointOrderById(Picked, $D0278, GetUnitX(target), GetUnitY(target))
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A082')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 250., Condition(Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D022F, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08Q')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 500., Condition(Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00F3, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A08T')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 650., Condition(Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D02B6, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(gall)
	DestroyGroup(gall)
	gall = nil
end

---@return boolean
function Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Conditions()
	return (udg_Nomer_samoi_volni == 4)
end

function InitTrig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger()
	gg_trg_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger, 1., true)
	TriggerAddCondition(gg_trg_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger, Condition(Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Conditions))
	TriggerAddAction(gg_trg_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger, Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Actions)
end

function Trig_Damned_Ents_Reincarnation_End_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damnedent = LoadUnitHandle(udg_hash, h, 4) ---@type unit
	SetUnitTimeScale(damnedent, 1.)
	PauseUnit(damnedent, false)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	damnedent = nil
end

function Trig_Damned_Ents_Reincarnation_Recovery_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ent = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damnedent = LoadUnitHandle(udg_hash, h, 4) ---@type unit
	local x = LoadReal(udg_hash, h, 2) ---@type number real
	local y = LoadReal(udg_hash, h, 3) ---@type number real
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	SetUnitVertexColor(damnedent, $FF, $FF, $FF, $FF)
	DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\NightElf\\NECancelDeath\\NECancelDeath.mdl", x, y))
	SetUnitTimeScale(damnedent, -.1)
	SetUnitAnimation(damnedent, "Death")
	GroupEnumUnitsInRange(g, x, y, 250., nil)
	UnitRemoveAbility(damnedent, FourCC('Avul'))
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitAlly(Picked, GetOwningPlayer(damnedent)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			SetUnitState(Picked, UNIT_STATE_LIFE, GetUnitState(Picked, UNIT_STATE_LIFE) + 125.)
		end
		if IsUnitEnemy(Picked, GetOwningPlayer(damnedent)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			UnitDamageTarget(damnedent, Picked, 80., false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
		end
		GroupRemoveUnit(g, Picked)
	end
	TimerStart(t, 1.5, false, Trig_Damned_Ents_Reincarnation_End_Actions)
	RemoveUnit(ent)
	t = nil
	ent = nil
	damnedent = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
end

function Trig_Damned_Ents_Reincarnation_Actions()
	local ent = GetDyingUnit() ---@type unit
	local x = GetUnitX(ent) ---@type number real
	local y = GetUnitY(ent) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damnedent = CreateUnit(GetOwningPlayer(ent), GetUnitTypeId(ent), x, y, GetUnitFacing(ent)) ---@type unit
	PauseUnit(damnedent, true)
	SetUnitAnimation(damnedent, "Death")
	UnitAddAbility(damnedent, FourCC('Avul'))
	SaveUnitHandle(udg_hash, h, 1, ent)
	SaveUnitHandle(udg_hash, h, 4, damnedent)
	SaveReal(udg_hash, h, 2, x)
	SaveReal(udg_hash, h, 3, y)
	SetUnitVertexColor(damnedent, $FF, $FF, $FF, 0)
	TimerStart(t, 1.75, false, Trig_Damned_Ents_Reincarnation_Recovery_Actions)
	ent = nil
	t = nil
end

---@return boolean
function Trig_Damned_Ents_Reincarnation_Conditions()
	return GetUnitAbilityLevel(GetDyingUnit(), FourCC('A0E1')) > 0 and GetRandomInt(1, 4) == 1
end

function InitTrig_Damned_Ents_Reincarnation()
	local index = 0 ---@type number integer
	gg_trg_Damned_Ents_Reincarnation = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Damned_Ents_Reincarnation, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Damned_Ents_Reincarnation, Condition(Trig_Damned_Ents_Reincarnation_Conditions))
	TriggerAddAction(gg_trg_Damned_Ents_Reincarnation, Trig_Damned_Ents_Reincarnation_Actions)
end

function Trig_Rage_of_Decay_ent_attack_base_Actions()
	local tsp = GetExpiredTimer() ---@type timer
	local hsp = GetHandleId(tsp) ---@type number integer
	local ent = LoadUnitHandle(udg_hash, hsp, 1) ---@type unit
	if ent ~= nil then
		SetUnitAnimation(ent, "Stand")
		PauseUnit(ent, false)
		IssuePointOrderById(ent, $D000F, GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi))
	end
	FlushChildHashtable(udg_hash, hsp)
	DestroyTimer(tsp)
	tsp = nil
	ent = nil
end

function Trig_Rage_of_Decay_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = LoadReal(udg_hash, h, 2) ---@type number real
	local y = LoadReal(udg_hash, h, 3) ---@type number real
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local dammi ---@type unit
	local g ---@type group
	local Picked ---@type unit
	local rx = 0 ---@type number real
	local ry = 0 ---@type number real
	local ent ---@type unit
	local entid = 0 ---@type number integer
	local random = GetRandomInt(1, $F) ---@type number integer
	local efrandom = GetRandomInt(2, 4) ---@type number integer
	local orderId ---@type number integer
	local tsp ---@type timer
	local hsp ---@type number integer
	orderId = $D0278
	if (orderId ~= 0) then
	else
		orderId = UnitId("channel")
		if (orderId ~= 0) then
		end
	end
	if order == orderId then
		rx = GetRandomReal((x - 425.), (x + 425.))
		ry = GetRandomReal((y - 425.), (y + 425.))
		g = CreateGroup()
		GroupEnumUnitsInRange(g, rx, ry, 125., nil)
		if random <= 8 then
			entid = FourCC('u009')
		end
		if random >= 9 and random <= $D then
			entid = FourCC('u00B')
		end
		if random >= $E then
			entid = FourCC('u00A')
		end
		ent = CreateUnit(p, entid, rx, ry, GetRandomReal(.0, 360.))
		DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\NightElf\\EntBirthTarget\\EntBirthTarget.mdl", ent, "chest"))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIil\\AIilTarget.mdl", ent, "chest"))
		PauseUnit(ent, true)
		SetUnitAnimation(ent, "Attack Spell")
		tsp = CreateTimer()
		hsp = GetHandleId(tsp)
		SaveUnitHandle(udg_hash, hsp, 1, ent)
		TimerStart(tsp, 1.6, false, Trig_Rage_of_Decay_ent_attack_base_Actions)
		while(true) do
			if (efrandom < 0) then break end
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\EntanglingRoots\\EntanglingRootsTarget.mdl", GetRandomReal(rx - GetRandomReal(20., 125.), rx + GetRandomReal(20., 125.)), GetRandomReal(ry - GetRandomReal(20., 125.), ry + GetRandomReal(20., 125.))))
			efrandom = efrandom - 1
		end
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, 150., false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\GreenDragonMissile\\GreenDragonMissile.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIil\\AIilTarget.mdl", Picked, "chest"))
				dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
				UnitAddAbility(dammi, FourCC('A08Z'))
				IssueTargetOrderById(dammi, $D00CB, Picked)
				dammi = nil
			end
			GroupRemoveUnit(g, Picked)
		end
	else
		SetUnitTimeScale(caster, 1.)
		DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\NightElf\\NECancelDeath\\NECancelDeath.mdl", x, y))
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		t = nil
	end
	t = nil
	caster = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	ent = nil
	tsp = nil
	Picked = nil
	dammi = nil
end

function Trig_Rage_of_Decay_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetUnitTimeScale(caster, 3.)
	DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\NightElf\\NECancelDeath\\NECancelDeath.mdl", GetUnitX(caster), GetUnitY(caster)))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\Tranquility\\Tranquility.mdl", caster, "chest"))
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, x)
	SaveReal(udg_hash, h, 3, y)
	TimerStart(t, .3, true, Trig_Rage_of_Decay_periodic_Actions)
	caster = nil
	t = nil
end

---@return boolean
function Trig_Rage_of_Decay_Conditions()
	return GetSpellAbilityId() == FourCC('A091')
end

function InitTrig_Rage_of_Decay()
	local index = 0 ---@type number integer
	gg_trg_Rage_of_Decay = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Rage_of_Decay, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Rage_of_Decay, Condition(Trig_Rage_of_Decay_Conditions))
	TriggerAddAction(gg_trg_Rage_of_Decay, Trig_Rage_of_Decay_Actions)
end

---@return boolean
function Trig_Use_ThrowStone_and_TurnIntoEnt_Conditions()
	return (udg_Nomer_samoi_volni == 5)
end

---@return boolean
function Trig_Use_ThrowStone_and_TurnIntoEnt_Func002C()
	return (GetUnitAbilityLevelSwapped(FourCC('A094'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_ThrowStone_and_TurnIntoEnt_Func003C()
	return (GetUnitAbilityLevelSwapped(FourCC('A094'), GetAttacker()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

function Trig_Use_ThrowStone_and_TurnIntoEnt_Actions()
	if (Trig_Use_ThrowStone_and_TurnIntoEnt_Func002C()) then
		IssueTargetOrderById(GetTriggerUnit(), $D011C, GetAttacker())
	end
	if (Trig_Use_ThrowStone_and_TurnIntoEnt_Func003C()) then
		IssueTargetOrderById(GetAttacker(), $D011C, GetTriggerUnit())
	end
end

function InitTrig_Use_ThrowStone_and_TurnIntoEnt()
	gg_trg_Use_ThrowStone_and_TurnIntoEnt = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Use_ThrowStone_and_TurnIntoEnt, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_Use_ThrowStone_and_TurnIntoEnt, Condition(Trig_Use_ThrowStone_and_TurnIntoEnt_Conditions))
	TriggerAddAction(gg_trg_Use_ThrowStone_and_TurnIntoEnt, Trig_Use_ThrowStone_and_TurnIntoEnt_Actions)
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Conditions()
	return (udg_Nomer_samoi_volni == 5)
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003001002()
	return (IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func001002001003002002()
	return (IsPlayerAlly(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func001002001003002()
	return GetBooleanAnd(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func001002001003002001(), Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func001002001003002002())
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func001002001003()
	return GetBooleanAnd(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func001002001003001(), Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func001002001003002())
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001C()
	return (GetUnitAbilityLevelSwapped(FourCC('A090'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 3)
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003002001001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003002001002()
	return (GetUnitStateSwap(UNIT_STATE_LIFE, GetFilterUnit()) < (GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetFilterUnit()) * .6))
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003002001()
	return GetBooleanAnd(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003002001001(), Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003002001002())
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003002002()
	return (IsPlayerAlly(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003002()
	return GetBooleanAnd(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003002001(), Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003002002())
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003()
	return GetBooleanAnd(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003001(), Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003002())
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002C()
	return (GetUnitAbilityLevelSwapped(FourCC('A08Y'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func001002001003002()
	return GetBooleanAnd(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func001002001003002001(), Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func001002001003002002())
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func001002001003()
	return GetBooleanAnd(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func001002001003001(), Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func001002001003002())
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003C()
	return (GetUnitAbilityLevelSwapped(FourCC('S000'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func001002001003002()
	return GetBooleanAnd(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func001002001003002001(), Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func001002001003002002())
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func001002001003()
	return GetBooleanAnd(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func001002001003001(), Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func001002001003002())
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004C()
	return (GetUnitAbilityLevelSwapped(FourCC('A091'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003A()
	if (Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(700., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func001002001003)))
		if (Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func001Func002C()) then
			IssueTargetOrderById(GetEnumUnit(), $D0213, udg_Temp_Unit)
		end
	end
	if (Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(800., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func001002001003)))
		if (Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func002Func002C()) then
			IssueTargetOrderById(GetEnumUnit(), $D00C0, udg_Temp_Unit)
		end
	end
	if (Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(225., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func001002001003)))
		if (Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func003Func002C()) then
			IssueTargetOrderById(GetEnumUnit(), $D00DD, udg_Temp_Unit)
		end
	end
	if (Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(600., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func001002001003)))
		if (Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003Func004Func002C()) then
			IssueImmediateOrderById(GetEnumUnit(), $D0278)
		end
	end
end

function Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Actions()
	ForGroupBJ(GetUnitsInRectMatching(bj_mapInitialPlayableArea, Condition(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003001002)), Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Func003A)
end

function InitTrig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay()
	gg_trg_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay, 1.)
	TriggerAddCondition(gg_trg_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay, Condition(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Conditions))
	TriggerAddAction(gg_trg_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay, Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Actions)
end

function Trig_Troll_Dead_Remove_Bugs_Actions()
	local h = GetHandleId(GetDyingUnit()) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 55) ---@type effect
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 56)
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 57)
	DestroyEffect(ef)
	ef = nil
end

---@return boolean
function Trig_Troll_Dead_Remove_Bugs_Conditions()
	return GetUnitAbilityLevel(GetDyingUnit(), FourCC('A09E')) > 0
end

function InitTrig_Troll_Dead_Remove_Bugs()
	local index = 0 ---@type number integer
	gg_trg_Troll_Dead_Remove_Bugs = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Troll_Dead_Remove_Bugs, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Troll_Dead_Remove_Bugs, Condition(Trig_Troll_Dead_Remove_Bugs_Conditions))
	TriggerAddAction(gg_trg_Troll_Dead_Remove_Bugs, Trig_Troll_Dead_Remove_Bugs_Actions)
end

function Trig_Boss_Troll_Entangle_Throw_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local angle = LoadReal(udg_hash, h, 1) ---@type number real
	local stage = LoadInteger(udg_hash, h, 2) ---@type number integer
	local entangle = LoadUnitHandle(udg_hash, h, 3) ---@type unit
	local p ---@type player
	local x = GetUnitX(entangle) + 40. * Cos(angle * bj_DEGTORAD) ---@type number real
	local y = GetUnitY(entangle) + 40. * Sin(angle * bj_DEGTORAD) ---@type number real
	local ef ---@type effect
	local g ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	if stage > 0 then
		stage = stage - 1
		SaveInteger(udg_hash, h, 2, stage)
		if IsTerrainPathable(x, y, PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(entangle, x, y)
		end
	else
		p = GetOwningPlayer(entangle)
		g = CreateGroup()
		GroupEnumUnitsInRange(g, x, y, 250., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A096'))
				IssueTargetOrderById(dammi, $D008A, Picked)
				dammi = nil
			end
			GroupRemoveUnit(g, Picked)
		end
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		Picked = nil
		p = nil
		ef = LoadEffectHandle(udg_hash, h, 4)
		DestroyEffect(ef)
		ef = nil
		KillUnit(entangle)
		entangle = nil
		DestroyTimer(t)
	end
	t = nil
	entangle = nil
end

function Trig_Boss_Troll_Entangle_Throw_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc = GetSpellTargetLoc() ---@type location
	local ux = GetUnitX(caster) ---@type number real
	local uy = GetUnitY(caster) ---@type number real
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local angle = bj_RADTODEG * Atan2(y - uy, x - ux) ---@type number real
	local stage = R2I(SquareRoot((x - ux) * (x - ux) + (y - uy) * (y - uy)) / 40.) ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local entangle = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), ux + 25. * Cos(angle * bj_DEGTORAD), uy + 25. * Sin(angle * bj_DEGTORAD), angle) ---@type unit
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Ensnare\\EnsnareMissile.mdl", entangle, "chest") ---@type effect
	SetUnitScale(entangle, 2., 2., 2.)
	UnitAddAbility(entangle, FourCC('Amrf'))
	UnitRemoveAbility(entangle, FourCC('Amrf'))
	SetUnitFlyHeight(entangle, 50., .0)
	SetUnitFlyHeight(entangle, .0, .04 * stage)
	SaveReal(udg_hash, h, 1, angle)
	SaveInteger(udg_hash, h, 2, stage)
	SaveUnitHandle(udg_hash, h, 3, entangle)
	SaveEffectHandle(udg_hash, h, 4, ef)
	TimerStart(t, .04, true, Trig_Boss_Troll_Entangle_Throw_periodic_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	entangle = nil
	ef = nil
end

---@return boolean
function Trig_Boss_Troll_Entangle_Throw_Conditions()
	return GetSpellAbilityId() == FourCC('A0E8')
end

function InitTrig_Boss_Troll_Entangle_Throw()
	local index = 0 ---@type number integer
	gg_trg_Boss_Troll_Entangle_Throw = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Boss_Troll_Entangle_Throw, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Boss_Troll_Entangle_Throw, Condition(Trig_Boss_Troll_Entangle_Throw_Conditions))
	TriggerAddAction(gg_trg_Boss_Troll_Entangle_Throw, Trig_Boss_Troll_Entangle_Throw_Actions)
end

---@return boolean
function Trig_Use_Berserk_and_BerserkBoss_Conditions()
	return (udg_Nomer_samoi_volni == 6)
end

---@return boolean
function Trig_Use_Berserk_and_BerserkBoss_Func002C()
	return (GetUnitAbilityLevelSwapped(FourCC('A098'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Berserk_and_BerserkBoss_Func003C()
	return (GetUnitAbilityLevelSwapped(FourCC('A098'), GetAttacker()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Berserk_and_BerserkBoss_Func004C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0EC'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Berserk_and_BerserkBoss_Func005C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0EC'), GetAttacker()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

function Trig_Use_Berserk_and_BerserkBoss_Actions()
	if (Trig_Use_Berserk_and_BerserkBoss_Func002C()) then
		IssueImmediateOrderById(GetTriggerUnit(), $D0084)
	end
	if (Trig_Use_Berserk_and_BerserkBoss_Func003C()) then
		IssueImmediateOrderById(GetAttacker(), $D0084)
	end
	if (Trig_Use_Berserk_and_BerserkBoss_Func004C()) then
		IssueImmediateOrderById(GetTriggerUnit(), $D0084)
	end
	if (Trig_Use_Berserk_and_BerserkBoss_Func005C()) then
		IssueImmediateOrderById(GetAttacker(), $D0084)
	end
end

function InitTrig_Use_Berserk_and_BerserkBoss()
	gg_trg_Use_Berserk_and_BerserkBoss = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Use_Berserk_and_BerserkBoss, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_Use_Berserk_and_BerserkBoss, Condition(Trig_Use_Berserk_and_BerserkBoss_Conditions))
	TriggerAddAction(gg_trg_Use_Berserk_and_BerserkBoss, Trig_Use_Berserk_and_BerserkBoss_Actions)
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Conditions()
	return (udg_Nomer_samoi_volni == 6)
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002001002()
	return (IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003002001001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003002001002()
	return (GetUnitStateSwap(UNIT_STATE_LIFE, GetFilterUnit()) < (GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetFilterUnit()) * .9))
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003002001()
	return GetBooleanAnd(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003002001001(), Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003002001002())
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003002002()
	return (IsPlayerAlly(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003002()
	return GetBooleanAnd(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003002001(), Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003002002())
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003()
	return GetBooleanAnd(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003001(), Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003002())
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001C()
	return (GetUnitAbilityLevelSwapped(FourCC('A097'), GetEnumUnit()) > 0)
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003002001001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003002001002()
	return (GetUnitStateSwap(UNIT_STATE_LIFE, GetFilterUnit()) < (GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetFilterUnit()) * .6))
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003002001()
	return GetBooleanAnd(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003002001001(), Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003002001002())
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003002002()
	return (IsPlayerAlly(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003002()
	return GetBooleanAnd(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003002001(), Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003002002())
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003()
	return GetBooleanAnd(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003001(), Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003002())
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002C()
	return (GetUnitAbilityLevelSwapped(FourCC('A099'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func001002001003002002()
	return (IsPlayerAlly(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func001002001003002()
	return GetBooleanAnd(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func001002001003002001(), Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func001002001003002002())
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func001002001003()
	return GetBooleanAnd(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func001002001003001(), Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func001002001003002())
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003C()
	return (GetUnitAbilityLevelSwapped(FourCC('A09C'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func001002001003002()
	return GetBooleanAnd(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func001002001003002001(), Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func001002001003002002())
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func001002001003()
	return GetBooleanAnd(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func001002001003001(), Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func001002001003002())
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0E8'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002A()
	if (Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(500., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func001002001003)))
		if (Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func001Func002C()) then
			IssueTargetOrderById(GetEnumUnit(), $D005F, udg_Temp_Unit)
		end
	end
	if (Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(700., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func001002001003)))
		if (Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func002Func002C()) then
			IssueTargetOrderById(GetEnumUnit(), $D0215, udg_Temp_Unit)
		end
	end
	if (Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(700., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func001002001003)))
		if (Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func003Func002C()) then
			IssueTargetOrderById(GetEnumUnit(), $D0062, udg_Temp_Unit)
		end
	end
	if (Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(800., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func001002001003)))
		if (Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002Func004Func002C()) then
			IssuePointOrderById(GetEnumUnit(), $D0079, GetUnitX(udg_Temp_Unit), GetUnitY(udg_Temp_Unit))
		end
	end
end

function Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Actions()
	ForGroupBJ(GetUnitsInRectMatching(bj_mapInitialPlayableArea, Condition(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002001002)), Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Func002A)
end

function InitTrig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle()
	gg_trg_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle, 1.)
	TriggerAddCondition(gg_trg_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle, Condition(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Conditions))
	TriggerAddAction(gg_trg_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle, Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Actions)
end

function Trig_Aspect_of_Magic_Protection_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, GetHandleId(t), 1) ---@type unit
	SaveTimerHandle(udg_hash, GetHandleId(target), $A6, nil)
	SaveBoolean(udg_hash, GetHandleId(target), $A5, false)
	DestroyEffect(LoadEffectHandle(udg_hash, h, 2))
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	target = nil
end

function Trig_Aspect_of_Magic_Protection_Actions()
	local target = GetSpellTargetUnit() ---@type unit
	local t = LoadTimerHandle(udg_hash, GetHandleId(target), $A6) ---@type timer
	local h = GetHandleId(t) ---@type number integer
	if t == nil then
		t = CreateTimer()
		h = GetHandleId(t)
		SaveTimerHandle(udg_hash, GetHandleId(target), $A6, t)
		SaveBoolean(udg_hash, GetHandleId(target), $A5, true)
	else
		DestroyEffect(LoadEffectHandle(udg_hash, GetHandleId(t), 2))
	end
	SaveUnitHandle(udg_hash, h, 1, target)
	SaveEffectHandle(udg_hash, h, 2, AddSpecialEffectTarget("Effects\\MagicShieldBlue.mdx", target, "origin"))
	TimerStart(t, 6., false, Trig_Aspect_of_Magic_Protection_Move_Actions)
	t = nil
	target = nil
end

---@return boolean
function Trig_Aspect_of_Magic_Protection_Conditions()
	return GetSpellAbilityId() == FourCC('A09J')
end

function InitTrig_Aspect_of_Magic_Protection()
	local index = 0 ---@type number integer
	gg_trg_Aspect_of_Magic_Protection = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Aspect_of_Magic_Protection, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Aspect_of_Magic_Protection, Condition(Trig_Aspect_of_Magic_Protection_Conditions))
	TriggerAddAction(gg_trg_Aspect_of_Magic_Protection, Trig_Aspect_of_Magic_Protection_Actions)
end

function Trig_Remove_Effects_From_Bosses_Actions()
	local h = GetHandleId(GetDyingUnit()) ---@type number integer
	if LoadEffectHandle(udg_hash, h, $A8) ~= nil then
		DestroyEffect(LoadEffectHandle(udg_hash, h, $A8))
	end
	if LoadEffectHandle(udg_hash, h, $A9) ~= nil then
		DestroyEffect(LoadEffectHandle(udg_hash, h, $A9))
	end
end

---@return boolean
function Trig_Remove_Effects_From_Bosses_Conditions()
	return GetUnitAbilityLevel(GetDyingUnit(), FourCC('A09L')) > 0
end

function InitTrig_Remove_Effects_From_Bosses()
	local index = 0 ---@type number integer
	gg_trg_Remove_Effects_From_Bosses = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Remove_Effects_From_Bosses, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Remove_Effects_From_Bosses, Condition(Trig_Remove_Effects_From_Bosses_Conditions))
	TriggerAddAction(gg_trg_Remove_Effects_From_Bosses, Trig_Remove_Effects_From_Bosses_Actions)
end

function Trig_Metka_Dreneev_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local Picked ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	GroupEnumUnitsInRange(g, GetUnitX(target), GetUnitY(target), 1000., nil)
	GroupRemoveUnit(g, caster)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitAlly(Picked, p) and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			IssueTargetOrderById(Picked, $D000F, target)
			if GetUnitAbilityLevel(Picked, FourCC('A0FC')) > 0 then
				IssueTargetOrderById(Picked, $D02B2, target)
			end
		end
		GroupRemoveUnit(g, Picked)
	end
	caster = nil
	target = nil
	p = nil
	DestroyGroup(g)
	g = nil
	Picked = nil
end

---@return boolean
function Trig_Metka_Dreneev_Conditions()
	return GetSpellAbilityId() == FourCC('A0FA')
end

function InitTrig_Metka_Dreneev()
	local index = 0 ---@type number integer
	gg_trg_Metka_Dreneev = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Metka_Dreneev, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Metka_Dreneev, Condition(Trig_Metka_Dreneev_Conditions))
	TriggerAddAction(gg_trg_Metka_Dreneev, Trig_Metka_Dreneev_Actions)
end

function Trig_Fast_Attack_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 4) ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2(yt - y, xt - x) ---@type number real
	local dist = SquareRoot((xt - x) * (xt - x) + (yt - y) * (yt - y)) ---@type number real
	local wait = LoadInteger(udg_hash, h, 2) ---@type number integer
	if dist > 100. and GetUnitState(target, UNIT_STATE_LIFE) > .405 and GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
		SetUnitPosition(caster, x + 20. * Cos((angle) * bj_DEGTORAD), y + 20. * Sin((angle) * bj_DEGTORAD))
		wait = wait + 1
		SaveInteger(udg_hash, h, 2, wait)
		if wait == 1 then
			SetUnitAnimationByIndex(caster, 2)
		end
	else
		if GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
			if GetUnitState(target, UNIT_STATE_LIFE) > .405 then
				IssueTargetOrderById(caster, $D000F, target)
			end
			SetUnitAnimation(caster, "stand")
		end
		SetUnitPathing(caster, true)
		SetUnitTimeScale(caster, 1.)
		DestroyEffect(LoadEffectHandle(udg_hash, h, 8))
		DestroyEffect(LoadEffectHandle(udg_hash, h, 9))
		DestroyEffect(LoadEffectHandle(udg_hash, h, $A))
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	target = nil
	caster = nil
end

function Trig_Fast_Attack_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef ---@type effect
	SetUnitAnimation(caster, "stand")
	SetUnitPathing(caster, false)
	SetUnitAnimationByIndex(caster, 2)
	SetUnitTimeScale(caster, 2.)
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Tornado\\Tornado_Target.mdl", caster, "origin")
	SaveEffectHandle(udg_hash, h, 8, ef)
	ef = nil
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Tornado\\Tornado_Target.mdl", caster, "chest")
	SaveEffectHandle(udg_hash, h, 9, ef)
	ef = nil
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Tornado\\Tornado_Target.mdl", caster, "head")
	SaveEffectHandle(udg_hash, h, $A, ef)
	ef = nil
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveUnitHandle(udg_hash, h, 4, target)
	SaveInteger(udg_hash, h, 2, 0)
	TimerStart(t, .03, true, Trig_Fast_Attack_Move_Actions)
	caster = nil
	target = nil
	t = nil
end

---@return boolean
function Trig_Fast_Attack_Conditions()
	return GetSpellAbilityId() == FourCC('A0FC')
end

function InitTrig_Fast_Attack()
	local index = 0 ---@type number integer
	gg_trg_Fast_Attack = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fast_Attack, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fast_Attack, Condition(Trig_Fast_Attack_Conditions))
	TriggerAddAction(gg_trg_Fast_Attack, Trig_Fast_Attack_Actions)
end

function Trig_Bash_Attack_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef ---@type effect
	if GetUnitTypeId(caster) == FourCC('n016') then
		StunUnitTimed(target, 1.)
		UnitDamageTarget(caster, target, 75., false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
	end
	if GetUnitTypeId(caster) == FourCC('n018') then
		StunUnitTimed(target, 1.5)
		UnitDamageTarget(caster, target, 125., false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
	end
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\StormBolt\\StormBoltMissile.mdl", target, "chest"))
	caster = nil
	target = nil
	t = nil
end

---@return boolean
function Trig_Bash_Attack_Conditions()
	return GetSpellAbilityId() == FourCC('A0FD')
end

function InitTrig_Bash_Attack()
	local index = 0 ---@type number integer
	gg_trg_Bash_Attack = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Bash_Attack, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Bash_Attack, Condition(Trig_Bash_Attack_Conditions))
	TriggerAddAction(gg_trg_Bash_Attack, Trig_Bash_Attack_Actions)
end

---@return boolean
function Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Dead_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) < .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (GetUnitTypeId(GetFilterUnit()) ~= FourCC('h00U'))) ~= nil
end

---@return boolean
function Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Loop_Is_Enemy_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerEnemy(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Loop_Is_Ally_Condition()
	return ((GetUnitState(GetFilterUnit(), UNIT_STATE_LIFE) > .405) and (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) and (IsPlayerAlly(udg_Temp_Player[1], GetOwningPlayer(GetFilterUnit())))) ~= nil
end

---@return boolean
function Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_All_Condition()
	return (IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), udg_Players_Enemy_Group))
end

function Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Actions()
	local gall = CreateGroup() ---@type group
	local g ---@type group
	local g2 ---@type group
	local Picked ---@type unit
	local target ---@type unit
	local x ---@type number real
	local y ---@type number real
	local angle ---@type number real
	GroupEnumUnitsInRect(gall, bj_mapInitialPlayableArea, Condition(Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_All_Condition))
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A09J')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 700., Condition(Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Loop_Is_Ally_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D0113, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A09H')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 600., Condition(Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Loop_Is_Ally_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D0085, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0FA')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 1000., Condition(Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D00B5, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0FD')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 250., Condition(Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D0077, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	g = CreateGroup()
	GroupToGroup(gall, g)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (GetUnitAbilityLevel(Picked, FourCC('A0FC')) > 0) and GetRandomInt(1, 2) == 1 then
			g2 = CreateGroup()
			x = GetUnitX(Picked)
			y = GetUnitY(Picked)
			udg_Temp_Player[1] = GetOwningPlayer(Picked)
			GroupEnumUnitsInRange(g2, x, y, 1200., Condition(Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Loop_Is_Enemy_Condition))
			RandomUnitFromGroup(1, g2)
			g2 = CreateGroup()
			GroupToGroup(udg_GroupRandomUnitFromGroup, g2)
			target = FirstOfGroup(g2)
			if (target ~= nil) then
				IssueTargetOrderById(Picked, $D02B2, target)
			end
			udg_Temp_Player[1] = nil
			GroupClear(g2)
			DestroyGroup(g2)
			g2 = nil
			target = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(gall)
	DestroyGroup(gall)
	gall = nil
end

---@return boolean
function Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Conditions()
	return (udg_Nomer_samoi_volni == 7)
end

function InitTrig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack()
	gg_trg_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack, 1., true)
	TriggerAddCondition(gg_trg_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack, Condition(Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Conditions))
	TriggerAddAction(gg_trg_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack, Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Actions)
end

function Trig_Blink_Strike_Remove_Buff_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local ef ---@type effect
	ef = LoadEffectHandle(udg_hash, h, 2)
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 3)
	DestroyEffect(ef)
	ef = nil
	SetAttackSpeedAbilityLevel(caster, -$C8)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
end

function Trig_Blink_Strike_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, .0) ---@type unit
	local ef ---@type effect
	SetAttackSpeedAbilityLevel(caster, $C8)
	SetUnitPosition(caster, xt - 75. * Cos(angle * bj_DEGTORAD), yt - 75. * Sin(angle * bj_DEGTORAD))
	IssueTargetOrderById(caster, $D000F, target)
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayDamage.mdl", target, "origin"))
	ef = AddSpecialEffectTarget("Abilities\\Weapons\\DruidoftheTalonMissile\\DruidoftheTalonMissile.mdl", caster, "hand,left")
	SaveEffectHandle(udg_hash, h, 2, ef)
	ef = nil
	ef = AddSpecialEffectTarget("Abilities\\Weapons\\DruidoftheTalonMissile\\DruidoftheTalonMissile.mdl", caster, "weapon")
	SaveEffectHandle(udg_hash, h, 3, ef)
	ef = nil
	SaveUnitHandle(udg_hash, h, 1, caster)
	TimerStart(t, 2., false, Trig_Blink_Strike_Remove_Buff_Actions)
	caster = nil
	caster = nil
	t = nil
end

---@return boolean
function Trig_Blink_Strike_Conditions()
	return GetSpellAbilityId() == FourCC('A09P')
end

function InitTrig_Blink_Strike()
	local index = 0 ---@type number integer
	gg_trg_Blink_Strike = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Blink_Strike, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Blink_Strike, Condition(Trig_Blink_Strike_Conditions))
	TriggerAddAction(gg_trg_Blink_Strike, Trig_Blink_Strike_Actions)
end

function Trig_Victim_Search_Stand2_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local addas = LoadInteger(udg_hash, h, 2) ---@type number integer
	if GetUnitState(caster, UNIT_STATE_LIFE) > .405 and caster ~= nil then
		SetAttackSpeedAbilityLevel(caster, -addas)
	end
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	caster = nil
end

function Trig_Victim_Search_Stand_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local addas = LoadInteger(udg_hash, h, 2) ---@type number integer
	local dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), GetUnitX(caster), GetUnitY(caster), 270.) ---@type unit
	local wait = 10. ---@type number real
	if GetUnitState(caster, UNIT_STATE_LIFE) > .405 and caster ~= nil then
		PauseUnit(caster, false)
	end
	if GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
		SetUnitAnimation(caster, "stand")
	else
		SetUnitAnimation(caster, "death")
	end
	UnitRemoveAbility(caster, FourCC('A0HD'))
	SetArmorAbilityLevel(caster, 30)
	SetAttackSpeedAbilityLevel(caster, addas)
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
	UnitAddAbility(dammi, FourCC('A0HE'))
	IssueTargetOrderById(dammi, $D0085, caster)
	if IsPlayerInForce(GetOwningPlayer(caster), udg_Players_Enemy_Group) then
		IssuePointOrderById(caster, $D000F, GetRectCenterX(gg_rct_cast_magi), GetRectCenterY(gg_rct_cast_magi))
	end
	TimerStart(t, wait, false, Trig_Victim_Search_Stand2_Actions)
	t = nil
	caster = nil
	dammi = nil
end

function Trig_Victim_Search_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local addas = 80 ---@type number integer
	local wait = 2.4 ---@type number real
	PauseUnit(caster, true)
	SetUnitAnimation(caster, "stand")
	SetUnitAnimationByIndex(caster, 1)
	UnitAddAbility(caster, FourCC('A0HD'))
	SetArmorAbilityLevel(caster, -30)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveInteger(udg_hash, h, 2, addas)
	TimerStart(t, wait, false, Trig_Victim_Search_Stand_Actions)
	caster = nil
	t = nil
end

---@return boolean
function Trig_Victim_Search_Conditions()
	return GetSpellAbilityId() == FourCC('A0HC')
end

function InitTrig_Victim_Search()
	local index = 0 ---@type number integer
	gg_trg_Victim_Search = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Victim_Search, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Victim_Search, Condition(Trig_Victim_Search_Conditions))
	TriggerAddAction(gg_trg_Victim_Search, Trig_Victim_Search_Actions)
end

function Trig_Black_Hole_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damage = LoadReal(udg_hash, h, 2) ---@type number real
	local dammi = LoadUnitHandle(udg_hash, h, 3) ---@type unit
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local gdamage = LoadGroupHandle(udg_hash, h, 6) ---@type group
	local angledammi = LoadReal(udg_hash, h, 7) ---@type number real
	local xstart = LoadReal(udg_hash, h, 8) ---@type number real
	local ystart = LoadReal(udg_hash, h, 9) ---@type number real
	local periodicdamage = LoadReal(udg_hash, h, 35) ---@type number real
	local ef ---@type effect
	local g = CreateGroup() ---@type group
	local x = GetUnitX(dammi) ---@type number real
	local y = GetUnitY(dammi) ---@type number real
	local xt ---@type number real
	local yt ---@type number real
	local xt2 ---@type number real
	local yt2 ---@type number real
	local xdammi ---@type number real
	local ydammi ---@type number real
	local dist ---@type number real
	local angle ---@type number real
	local p = GetOwningPlayer(dammi) ---@type player
	local Picked ---@type unit
	local lopa = 0 ---@type number integer
	local dammief ---@type unit
	if wait >= 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		angledammi = angledammi + 5.5
		SaveReal(udg_hash, h, 7, angledammi)
		while(true) do
			if (lopa > $A) then break end
			dammief = LoadUnitHandle(udg_hash, h, lopa + $A)
			if IsTerrainPathable(xstart + 500. * Cos((angledammi + 36. * lopa) * bj_DEGTORAD), ystart + 500. * Sin((angledammi + 36. * lopa) * bj_DEGTORAD), PATHING_TYPE_FLYABILITY) == false then
				SetUnitPosition(dammief, xstart + 500. * Cos((angledammi + 36. * lopa) * bj_DEGTORAD), ystart + 500. * Sin((angledammi + 36. * lopa) * bj_DEGTORAD))
			end
			SetUnitFacing(dammief, angledammi + 90.)
			dammief = nil
			lopa = lopa + 1
		end
		xdammi = xstart + 50. * Cos(angledammi * bj_DEGTORAD)
		ydammi = ystart + 50. * Sin(angledammi * bj_DEGTORAD)
		if IsTerrainPathable(xdammi, ydammi, PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(dammi, xdammi, ydammi)
		end
		GroupEnumUnitsInRange(g, x, y, 500., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if (IsUnitInGroup(Picked, udg_PortalCastersMagi) == false) and GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, udg_PortalCastersMagi) == false and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				xt = GetUnitX(Picked)
				yt = GetUnitY(Picked)
				dist = SquareRoot((xt - xstart) * (xt - xstart) + (yt - ystart) * (yt - ystart))
				angle = bj_RADTODEG * Atan2(ystart - yt, xstart - xt)
				xt2 = xt + (1.5 + ((500 - dist) / $96)) * Cos(angle * bj_DEGTORAD)
				yt2 = yt + (1.5 + ((500 - dist) / $96)) * Sin(angle * bj_DEGTORAD)
				if IsTerrainPathable(xt2, yt2, PATHING_TYPE_FLYABILITY) == false and dist > 50 then
					SetUnitX(Picked, xt2)
					SetUnitY(Picked, yt2)
				end
				if dist < FourCC('d') and IsUnitInGroup(Picked, gdamage) == false then
					UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					StunUnitTimed(Picked, 3.25)
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilSpecialArt.mdl", Picked, "chest"))
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\CarrionSwarm\\CarrionSwarmDamage.mdl", Picked, "chest"))
					GroupAddUnit(gdamage, Picked)
				end
				if dist < FourCC('d') then
					UnitDamageTarget(caster, Picked, periodicdamage * .03, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				end
			end
			GroupRemoveUnit(g, Picked)
		end
		SaveGroupHandle(udg_hash, h, 6, gdamage)
	else
		if wait == -1 then
			ef = LoadEffectHandle(udg_hash, h, 4)
			DestroyEffect(ef)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilSpecialArt.mdl", dammi, "origin"))
			lopa = 0
			while(true) do
				if (lopa > $A) then break end
				dammief = LoadUnitHandle(udg_hash, h, lopa + $A)
				ef = LoadEffectHandle(udg_hash, h, lopa + 20)
				DestroyEffect(ef)
				RemoveUnit(dammief)
				dammief = nil
				ef = nil
				lopa = lopa + 1
			end
		end
		if wait >= -66 then
			wait = wait - 1
			SaveInteger(udg_hash, h, 5, wait)
		else
			FlushChildHashtable(udg_hash, h)
			DestroyTimer(t)
			GroupClear(gdamage)
			DestroyGroup(gdamage)
			RemoveUnit(dammi)
		end
	end
	t = nil
	caster = nil
	dammi = nil
	ef = nil
	gdamage = nil
	Picked = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
end

function Trig_Black_Hole_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damage = 500. ---@type number real
	local periodicdamage = 150. ---@type number real
	local wait = R2I($A / .03) ---@type number integer
	local dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x + 50., y + 50., 270.) ---@type unit
	local angledammi = 270. ---@type number real
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DarkSummoning\\DarkSummonMissile.mdl", dammi, "chest") ---@type effect
	local gdamage = CreateGroup() ---@type group
	local dammief ---@type unit
	local dammieffect ---@type effect
	local lopa = 0 ---@type number integer
	while(true) do
		if (lopa > $A) then break end
		dammief = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x + 500. * Cos(36. * lopa * bj_DEGTORAD), y + 500. * Sin(36. * lopa * bj_DEGTORAD), (36. * lopa) + 90.)
		dammieffect = AddSpecialEffectTarget("Effects\\DarkVortex2.mdl", dammief, "chest")
		SetUnitScale(dammief, 1.5, 1.5, 1.5)
		SaveUnitHandle(udg_hash, h, $A + lopa, dammief)
		SaveEffectHandle(udg_hash, h, 20 + lopa, dammieffect)
		dammief = nil
		dammieffect = nil
		lopa = lopa + 1
	end
	UnitAddAbility(dammi, FourCC('Amrf'))
	UnitRemoveAbility(dammi, FourCC('Amrf'))
	SetUnitFlyHeight(dammi, 200., .0)
	SetUnitScale(dammi, 2., 2., 2.)
	SetUnitTimeScale(dammi, 2.)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, damage)
	SaveUnitHandle(udg_hash, h, 3, dammi)
	SaveEffectHandle(udg_hash, h, 4, ef)
	SaveInteger(udg_hash, h, 5, wait)
	SaveGroupHandle(udg_hash, h, 6, gdamage)
	SaveReal(udg_hash, h, 7, angledammi)
	SaveReal(udg_hash, h, 8, x)
	SaveReal(udg_hash, h, 9, y)
	SaveReal(udg_hash, h, 35, periodicdamage)
	TimerStart(t, .03, true, Trig_Black_Hole_Periodic_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	dammi = nil
	ef = nil
	gdamage = nil
end

---@return boolean
function Trig_Black_Hole_Conditions()
	return GetSpellAbilityId() == FourCC('A0HA')
end

function InitTrig_Black_Hole()
	local index = 0 ---@type number integer
	gg_trg_Black_Hole = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Black_Hole, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Black_Hole, Condition(Trig_Black_Hole_Conditions))
	TriggerAddAction(gg_trg_Black_Hole, Trig_Black_Hole_Actions)
end

---@return boolean
function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Conditions()
	return (udg_Nomer_samoi_volni == 8)
end

---@return boolean
function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func002C()
	return (GetUnitAbilityLevelSwapped(FourCC('A09N'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 2) == 3) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group)) and (false)
end

---@return boolean
function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func003C()
	return (GetUnitAbilityLevelSwapped(FourCC('A09N'), GetAttacker()) > 0) and (GetRandomInt(1, 2) == 3) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group)) and (false)
end

---@return boolean
function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func004C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0H0'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 3) == 4) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func005C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0H0'), GetAttacker()) > 0) and (GetRandomInt(1, 3) == 4) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func006C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0H7'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 2) == 3) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func007C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0H7'), GetAttacker()) > 0) and (GetRandomInt(1, 2) == 3) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func008C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HB'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func009C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HB'), GetAttacker()) > 0) and (GetRandomInt(1, 3) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func010C()
	return (GetUnitAbilityLevelSwapped(FourCC('A09R'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func011C()
	return (GetUnitAbilityLevelSwapped(FourCC('A09R'), GetAttacker()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

function Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Actions()
	if (Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func002C()) then
		IssueTargetOrderById(GetTriggerUnit(), $D0201, GetAttacker())
	end
	if (Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func003C()) then
		IssueTargetOrderById(GetAttacker(), $D0201, GetTriggerUnit())
	end
	if (Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func004C()) then
		IssueTargetOrderById(GetTriggerUnit(), $D027C, GetAttacker())
	end
	if (Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func005C()) then
		IssueTargetOrderById(GetAttacker(), $D027C, GetTriggerUnit())
	end
	if (Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func006C()) then
		IssueTargetOrderById(GetTriggerUnit(), $D0244, GetAttacker())
	end
	if (Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func007C()) then
		IssueTargetOrderById(GetAttacker(), $D0244, GetTriggerUnit())
	end
	if (Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func008C()) then
		IssuePointOrderById(GetTriggerUnit(), $D00FD, GetUnitX(GetAttacker()), GetUnitY(GetAttacker()))
	end
	if (Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func009C()) then
		IssuePointOrderById(GetAttacker(), $D00FD, GetUnitX(GetTriggerUnit()), GetUnitY(GetTriggerUnit()))
	end
	if (Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func010C()) then
		IssueImmediateOrderById(GetTriggerUnit(), $D00C4)
	end
	if (Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Func011C()) then
		IssueImmediateOrderById(GetAttacker(), $D00C4)
	end
end

function InitTrig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar()
	gg_trg_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar, Condition(Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Conditions))
	TriggerAddAction(gg_trg_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar, Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Actions)
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Conditions()
	return (udg_Nomer_samoi_volni == 8)
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002001002()
	return (IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func001002001003002()
	return GetBooleanAnd(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func001002001003002001(), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func001002001003002002())
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func001002001003()
	return GetBooleanAnd(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func001002001003001(), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func001002001003002())
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001C()
	return (GetUnitAbilityLevelSwapped(FourCC('A09P'), GetEnumUnit()) > 0)
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002Func001002001003002()
	return GetBooleanAnd(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002Func001002001003002001(), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002Func001002001003002002())
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002Func001002001003()
	return GetBooleanAnd(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002Func001002001003001(), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002Func001002001003002())
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0H0'), GetEnumUnit()) > 0) and (GetRandomInt(1, 3) == 4)
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003Func001002001003002()
	return GetBooleanAnd(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003Func001002001003002001(), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003Func001002001003002002())
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003Func001002001003()
	return GetBooleanAnd(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003Func001002001003001(), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003Func001002001003002())
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0H1'), GetEnumUnit()) > 0) and (GetRandomInt(1, 3) == 4)
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func002002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func002002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func002002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func002002001003002()
	return GetBooleanAnd(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func002002001003002001(), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func002002001003002002())
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func002002001003()
	return GetBooleanAnd(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func002002001003001(), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func002002001003002())
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func003C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HC'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003001001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003001002()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO)) ~= nil
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003001()
	return GetBooleanAnd(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003001001(), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003001002())
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003002()
	return GetBooleanAnd(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003002001(), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003002002())
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003()
	return GetBooleanAnd(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003001(), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003002())
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HA'), GetEnumUnit()) > 0)
end

function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002A()
	if (Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(700., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func001002001003)))
		if (Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func001Func002C()) then
			IssueTargetOrderById(GetEnumUnit(), $D0258, udg_Temp_Unit)
		end
	end
	if (Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(800., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func002Func001002001003)))
		IssueTargetOrderById(GetEnumUnit(), $D027C, udg_Temp_Unit)
	end
	if (Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(1000., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func003Func001002001003)))
		IssueTargetOrderById(GetEnumUnit(), $D000C, udg_Temp_Unit)
	end
	if (Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004C()) then
		udg_Temp_Unit = nil
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(650., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func002002001003)))
		if (Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func004Func003C()) then
			IssueImmediateOrderById(GetEnumUnit(), $D00F3)
		end
	end
	if (Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(1000., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func001002001003)))
		if (Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002Func005Func002C()) then
			IssueTargetOrderById(GetEnumUnit(), $D00E4, udg_Temp_Unit)
		end
	end
end

function Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Actions()
	ForGroupBJ(GetUnitsInRectMatching(bj_mapInitialPlayableArea, Condition(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002001002)), Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Func002A)
end

function InitTrig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH()
	gg_trg_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH, 1.)
	TriggerAddCondition(gg_trg_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH, Condition(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Conditions))
	TriggerAddAction(gg_trg_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH, Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Actions)
end

function Trig_Weakness_10second_last_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local s = LoadStr(udg_hash, h, 2) ---@type string
	if s == "str" then
		SetUnitMaxState(target, UNIT_STATE_MAX_LIFE, FourCC('d'))
		SetUnitLifeAndManaRegeneration(target, "life", $A)
	end
	if s == "agi" then
		SetAttackAbilityLevel(target, $F)
		SetAttackSpeedAbilityLevel(target, $A)
	end
	if s == "int" then
		SetUnitMaxState(target, UNIT_STATE_MAX_MANA, 50)
		SetUnitLifeAndManaRegeneration(target, "mana", 5)
	end
	if s == "mob" then
		SetArmorAbilityLevel(target, 7)
	end
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	target = nil
end

function Trig_Weakness_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local smainstat ---@type string
	local s ---@type string
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	if IsUnitType(target, UNIT_TYPE_HERO) then
		smainstat = LoadStr(udg_hash, GetUnitTypeId(target), 70)
		if smainstat == "str" then
			SetUnitMaxState(target, UNIT_STATE_MAX_LIFE, -FourCC('d'))
			SetUnitLifeAndManaRegeneration(target, "life", -$A)
			s = "str"
		end
		if smainstat == "agi" then
			SetAttackAbilityLevel(target, -$F)
			SetAttackSpeedAbilityLevel(target, -$A)
			s = "agi"
		end
		if smainstat == "int" then
			SetUnitMaxState(target, UNIT_STATE_MAX_MANA, -50)
			SetUnitLifeAndManaRegeneration(target, "mana", -5)
			s = "int"
		end
	else
		SetArmorAbilityLevel(target, -7)
		s = "mob"
	end
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl", target, "chest"))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl", target, "hand,left"))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl", target, "hand,right"))
	SaveUnitHandle(udg_hash, h, 1, target)
	SaveStr(udg_hash, h, 2, s)
	TimerStart(t, 12., false, Trig_Weakness_10second_last_Actions)
	caster = nil
	target = nil
	t = nil
end

---@return boolean
function Trig_Weakness_Conditions()
	return GetSpellAbilityId() == FourCC('A0ES')
end

function InitTrig_Weakness()
	local index = 0 ---@type number integer
	gg_trg_Weakness = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Weakness, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Weakness, Condition(Trig_Weakness_Conditions))
	TriggerAddAction(gg_trg_Weakness, Trig_Weakness_Actions)
end

function Trig_Astral_Dispersal_Periodic_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_Astral_Dispersal_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local waitstand = LoadInteger(udg_hash, h, 4) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local face = LoadReal(udg_hash, h, 6) ---@type number real
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local angle ---@type number real
	local dammi ---@type unit
	local alife = true ---@type boolean
	local endgroupcheck = false ---@type boolean
	local ef ---@type effect
	local r ---@type rect
	if waitstand > 0 and GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
		waitstand = waitstand - 1
		SaveInteger(udg_hash, h, 4, waitstand)
	end
	if waitstand <= 0 and wait > 0 and GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		r = Rect(x - 100., y - 100., x + 100., y + 100.)
		EnumDestructablesInRect(r, nil, Trig_Astral_Dispersal_Periodic_Dest_Actions)
		if IsTerrainPathable(x + 25. * Cos(face * bj_DEGTORAD), y + 25. * Sin(face * bj_DEGTORAD), PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(caster, x + 25. * Cos(face * bj_DEGTORAD), y + 25. * Sin(face * bj_DEGTORAD))
		end
		SetUnitFacing(caster, face)
		GroupEnumUnitsInRange(g, x + 50. * Cos(face * bj_DEGTORAD), y + 50. * Sin(face * bj_DEGTORAD), 125., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil or endgroupcheck) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				endgroupcheck = true
				wait = -1
				SaveInteger(udg_hash, h, 5, wait)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\OrbOfDeath\\AnnihilationMissile.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl", Picked, "chest"))
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), .5)
				UnitAddAbility(dammi, FourCC('A0GG'))
				IssueTargetOrderById(dammi, $D007F, Picked)
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				dammi = nil
			end
			GroupRemoveUnit(g, Picked)
		end
	end
	if wait <= 0 or GetUnitState(caster, UNIT_STATE_LIFE) < .405 then
		SetUnitAnimation(caster, "stand")
		SetUnitPathing(caster, true)
		SetUnitTimeScale(caster, 1.)
		PauseUnit(caster, false)
		ef = LoadEffectHandle(udg_hash, h, 7)
		DestroyEffect(ef)
		ef = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	p = nil
	Picked = nil
	dammi = nil
	RemoveRect(r)
	r = nil
end

function Trig_Astral_Dispersal_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local damage = 400. ---@type number real
	local loc ---@type location
	local tx ---@type number real
	local ty ---@type number real
	local dist ---@type number real
	local time ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef = AddSpecialEffectTarget("Abilities\\Weapons\\AvengerMissile\\AvengerMissile.mdl", caster, "chest") ---@type effect
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	SetUnitAnimation(caster, "stand")
	SetUnitPathing(caster, false)
	SetUnitTimeScale(caster, 4.)
	PauseUnit(caster, true)
	SetUnitAnimationByIndex(caster, 1)
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\OrbOfDeath\\AnnihilationMissile.mdl", tx, ty))
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	dist = SquareRoot((tx - x) * (tx - x) + (ty - y) * (ty - y)) + 100.
	SetUnitFacing(caster, angle)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 3, damage)
	SaveInteger(udg_hash, h, 4, 66)
	SaveInteger(udg_hash, h, 5, R2I(dist / 25.))
	SaveReal(udg_hash, h, 6, angle)
	SaveEffectHandle(udg_hash, h, 7, ef)
	TimerStart(t, .03, true, Trig_Astral_Dispersal_Periodic_Actions)
	caster = nil
	target = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	ef = nil
end

---@return boolean
function Trig_Astral_Dispersal_Conditions()
	return GetSpellAbilityId() == FourCC('A0GF')
end

function InitTrig_Astral_Dispersal()
	local index = 0 ---@type number integer
	gg_trg_Astral_Dispersal = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Astral_Dispersal, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Astral_Dispersal, Condition(Trig_Astral_Dispersal_Conditions))
	TriggerAddAction(gg_trg_Astral_Dispersal, Trig_Astral_Dispersal_Actions)
end

function Trig_Infernal_Ram_Periodic_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_Infernal_Ram_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local gdamage = LoadGroupHandle(udg_hash, h, 4) ---@type group
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local face = LoadReal(udg_hash, h, 6) ---@type number real
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local xzahvat = x + 50. * Cos(face * bj_DEGTORAD) ---@type number real
	local yzahvat = y + 50. * Sin(face * bj_DEGTORAD) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local angle ---@type number real
	local dammi ---@type unit
	local alife = true ---@type boolean
	local ef ---@type effect
	local r ---@type rect
	if wait > 0 and GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		r = Rect(xzahvat - 125., yzahvat - 125., xzahvat + 125., yzahvat + 125.)
		EnumDestructablesInRect(r, nil, Trig_Infernal_Ram_Periodic_Dest_Actions)
		if IsTerrainPathable(x + 25. * Cos(face * bj_DEGTORAD), y + 25. * Sin(face * bj_DEGTORAD), PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(caster, x + 25. * Cos(face * bj_DEGTORAD), y + 25. * Sin(face * bj_DEGTORAD))
		end
		SetUnitFacing(caster, face)
		GroupEnumUnitsInRange(g, x + 75. * Cos(face * bj_DEGTORAD), y + 75. * Sin(face * bj_DEGTORAD), 110., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if (IsUnitInGroup(Picked, udg_PortalCastersMagi) == false) and IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitPeriodicPostionMove(Picked, .03, wait * .03)
				GroupAddUnit(gdamage, Picked)
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Undead\\UndeadBlood\\UndeadBloodNecromancer.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl", Picked, "chest"))
				SetUnitPathing(Picked, false)
				MoveUnit(Picked, wait * .03, 833.3, .0, face, .0, true)
			end
			GroupRemoveUnit(g, Picked)
		end
	end
	Picked = nil
	if wait <= 0 or GetUnitState(caster, UNIT_STATE_LIFE) < .405 then
		while(true) do
			Picked = FirstOfGroup(gdamage)
			if (Picked == nil) then break end
			SetUnitPosition(Picked, GetUnitX(Picked), GetUnitY(Picked))
			dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
			UnitAddAbility(dammi, FourCC('A0GJ'))
			IssueTargetOrderById(dammi, $D006B, Picked)
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			SetUnitPathing(Picked, true)
			dammi = nil
			GroupRemoveUnit(gdamage, Picked)
		end
		SetUnitAnimation(caster, "stand")
		SetUnitPathing(caster, true)
		SetUnitTimeScale(caster, 1.)
		PauseUnit(caster, false)
		ef = LoadEffectHandle(udg_hash, h, 7)
		DestroyEffect(ef)
		ef = nil
		ef = LoadEffectHandle(udg_hash, h, 8)
		DestroyEffect(ef)
		ef = nil
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		IssuePointOrderById(caster, $D0079, x + 50. * Cos(face * bj_DEGTORAD), y + 50. * Sin(face * bj_DEGTORAD))
	end
	t = nil
	caster = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	gdamage = nil
	p = nil
	Picked = nil
	dammi = nil
	RemoveRect(r)
	r = nil
end

function Trig_Infernal_Ram_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local damage = 800. ---@type number real
	local loc ---@type location
	local tx ---@type number real
	local ty ---@type number real
	local dist ---@type number real
	local time ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef ---@type effect
	local gdamage = CreateGroup() ---@type group
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	SetUnitAnimation(caster, "stand")
	SetUnitPathing(caster, false)
	SetUnitTimeScale(caster, 3.25)
	PauseUnit(caster, true)
	SetUnitAnimationByIndex(caster, 1)
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	dist = SquareRoot((tx - x) * (tx - x) + (ty - y) * (ty - y)) + 100.
	SetUnitFacing(caster, angle)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 3, damage)
	SaveGroupHandle(udg_hash, h, 4, gdamage)
	SaveInteger(udg_hash, h, 5, R2I(dist / 25.))
	SaveReal(udg_hash, h, 6, angle)
	ef = AddSpecialEffectTarget("Environment\\LargeBuildingFire\\LargeBuildingFire1.mdl", caster, "chest")
	SaveEffectHandle(udg_hash, h, 7, ef)
	ef = nil
	ef = AddSpecialEffectTarget("Environment\\LargeBuildingFire\\LargeBuildingFire1.mdl", caster, "head")
	SaveEffectHandle(udg_hash, h, 8, ef)
	TimerStart(t, .03, true, Trig_Infernal_Ram_Periodic_Actions)
	caster = nil
	target = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	ef = nil
	gdamage = nil
end

---@return boolean
function Trig_Infernal_Ram_Conditions()
	return GetSpellAbilityId() == FourCC('A0GI')
end

function InitTrig_Infernal_Ram()
	local index = 0 ---@type number integer
	gg_trg_Infernal_Ram = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Infernal_Ram, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Infernal_Ram, Condition(Trig_Infernal_Ram_Conditions))
	TriggerAddAction(gg_trg_Infernal_Ram, Trig_Infernal_Ram_Actions)
end

function Trig_Fiery_Blow_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local radius = 250. ---@type number real
	local damage = 350. ---@type number real
	local dammi ---@type unit
	local Picked ---@type unit
	local g = CreateGroup() ---@type group
	local p = GetOwningPlayer(caster) ---@type player
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", x, y))
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", x, y))
	GroupEnumUnitsInRange(g, x, y, radius, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl", Picked, "origin"))
			dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
			UnitAddAbility(dammi, FourCC('A0GL'))
			IssueTargetOrderById(dammi, $D007F, Picked)
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			dammi = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	caster = nil
	RemoveLocation(loc)
	loc = nil
	dammi = nil
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	p = nil
end

---@return boolean
function Trig_Fiery_Blow_Conditions()
	return GetSpellAbilityId() == FourCC('A0GK')
end

function InitTrig_Fiery_Blow()
	local index = 0 ---@type number integer
	gg_trg_Fiery_Blow = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fiery_Blow, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fiery_Blow, Condition(Trig_Fiery_Blow_Conditions))
	TriggerAddAction(gg_trg_Fiery_Blow, Trig_Fiery_Blow_Actions)
end

function Trig_Bloody_Jump_Delete_Dammi_Actions()
	local tvoid = GetExpiredTimer() ---@type timer
	local hvoid = GetHandleId(tvoid) ---@type number integer
	local dammivoid = LoadUnitHandle(udg_hash, hvoid, 1) ---@type unit
	RemoveUnit(dammivoid)
	FlushChildHashtable(udg_hash, hvoid)
	DestroyTimer(tvoid)
	tvoid = nil
	dammivoid = nil
end

function Trig_Bloody_Jump_Periodic_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_Bloody_Jump_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local waitef = LoadInteger(udg_hash, h, 2) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 3) ---@type number integer
	local face = LoadReal(udg_hash, h, 4) ---@type number real
	local gdamage = LoadGroupHandle(udg_hash, h, 5) ---@type group
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local xnew = x + 30. * Cos(face * bj_DEGTORAD) ---@type number real
	local ynew = y + 30. * Sin(face * bj_DEGTORAD) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local angle ---@type number real
	local dammi ---@type unit
	local dammivoid ---@type unit
	local r ---@type rect
	local tvoid ---@type timer
	local hvoid ---@type number integer
	if wait > 0 and GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 3, wait)
		r = Rect(x - 75., y - 75., x + 75., y + 75.)
		EnumDestructablesInRect(r, nil, Trig_Bloody_Jump_Periodic_Dest_Actions)
		if IsTerrainPathable(x + 30. * Cos(face * bj_DEGTORAD), y + 30. * Sin(face * bj_DEGTORAD), PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(caster, x + 30. * Cos(face * bj_DEGTORAD), y + 30. * Sin(face * bj_DEGTORAD))
		end
		if waitef == 7 then
			waitef = 0
			tvoid = CreateTimer()
			hvoid = GetHandleId(tvoid)
			dammivoid = CreateUnit(Player(0), FourCC('n008'), x - 50. * Cos(face * bj_DEGTORAD), y - 50. * Sin(face * bj_DEGTORAD), face)
			SetUnitAnimation(dammivoid, "stand")
			SetUnitPathing(dammivoid, false)
			SetUnitTimeScale(dammivoid, 2.)
			PauseUnit(dammivoid, true)
			SetUnitMoveSpeed(dammivoid, .0)
			UnitAddAbility(dammivoid, FourCC('Aloc'))
			SetUnitVertexColor(dammivoid, $9B, $FF, $FF, 75)
			SetUnitAnimationByIndex(dammivoid, 6)
			SaveUnitHandle(udg_hash, hvoid, 1, dammivoid)
			TimerStart(tvoid, .7, false, Trig_Bloody_Jump_Delete_Dammi_Actions)
			tvoid = nil
			dammivoid = nil
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl", dammivoid, "chest"))
			DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPeasant.mdl", GetUnitX(caster), GetUnitY(caster)))
		else
			waitef = waitef + 1
		end
		SaveInteger(udg_hash, h, 2, waitef)
		SetUnitFacing(caster, face)
		GroupEnumUnitsInRange(g, x + 50. * Cos(face * bj_DEGTORAD), y + 50. * Sin(face * bj_DEGTORAD), 200., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(gdamage, Picked)
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodRifleman.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodSorceress.mdl", Picked, "chest"))
				dammi = CreateUnit(p, FourCC('h00U'), xnew, ynew, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0GN'))
				IssueTargetOrderById(dammi, $D006B, Picked)
				dammi = nil
				dammi = CreateUnit(p, FourCC('h00U'), xnew, ynew, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0GO'))
				IssueTargetOrderById(dammi, $D007F, Picked)
				dammi = nil
			end
			GroupRemoveUnit(g, Picked)
		end
		SaveGroupHandle(udg_hash, h, 5, gdamage)
	end
	if wait <= 0 or GetUnitState(caster, UNIT_STATE_LIFE) < .405 then
		SetUnitAnimation(caster, "stand")
		SetUnitPathing(caster, true)
		SetUnitTimeScale(caster, 1.)
		PauseUnit(caster, false)
		SetUnitVertexColor(caster, $9B, $FF, $FF, $FF)
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		IssueImmediateOrderById(caster, $D0080)
	end
	t = nil
	caster = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	gdamage = nil
	p = nil
	Picked = nil
	dammi = nil
	RemoveRect(r)
	r = nil
end

function Trig_Bloody_Jump_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local loc ---@type location
	local tx ---@type number real
	local ty ---@type number real
	local dist ---@type number real
	local time ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local gdamage = CreateGroup() ---@type group
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	SetUnitAnimation(caster, "stand")
	SetUnitPathing(caster, false)
	SetUnitTimeScale(caster, 3.)
	PauseUnit(caster, true)
	SetUnitVertexColor(caster, $9B, $FF, $FF, $96)
	SetUnitAnimationByIndex(caster, 0)
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	dist = SquareRoot((tx - x) * (tx - x) + (ty - y) * (ty - y)) + 200.
	SetUnitFacing(caster, angle)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveInteger(udg_hash, h, 2, 6)
	SaveInteger(udg_hash, h, 3, R2I(dist / 30.))
	SaveReal(udg_hash, h, 4, angle)
	SaveGroupHandle(udg_hash, h, 5, gdamage)
	TimerStart(t, .03, true, Trig_Bloody_Jump_Periodic_Actions)
	caster = nil
	target = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	gdamage = nil
end

---@return boolean
function Trig_Bloody_Jump_Conditions()
	return GetSpellAbilityId() == FourCC('A0GM')
end

function InitTrig_Bloody_Jump()
	local index = 0 ---@type number integer
	gg_trg_Bloody_Jump = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Bloody_Jump, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Bloody_Jump, Condition(Trig_Bloody_Jump_Conditions))
	TriggerAddAction(gg_trg_Bloody_Jump, Trig_Bloody_Jump_Actions)
end

function Trig_Blood_Absorption_Destroy_Effects_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef ---@type effect
	ef = LoadEffectHandle(udg_hash, h, 1)
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 2)
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 3)
	DestroyEffect(ef)
	ef = nil
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
end

function Trig_Blood_Absorption_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local radius = 200. ---@type number real
	local damage = 200. ---@type number real
	local heal = 300. ---@type number real
	local Picked ---@type unit
	local g = CreateGroup() ---@type group
	local p = GetOwningPlayer(caster) ---@type player
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef ---@type effect
	DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HeroBloodElfBlood.mdl", caster, "chest"))
	DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl", caster, "chest"))
	ef = AddSpecialEffect("Abilities\\Spells\\Items\\VampiricPotion\\VampPotionCaster.mdl", x + radius * Cos(120. * bj_DEGTORAD), y + radius * Sin(120. * bj_DEGTORAD))
	SaveEffectHandle(udg_hash, h, 1, ef)
	ef = nil
	ef = AddSpecialEffect("Abilities\\Spells\\Items\\VampiricPotion\\VampPotionCaster.mdl", x + radius * Cos(240. * bj_DEGTORAD), y + radius * Sin(240. * bj_DEGTORAD))
	SaveEffectHandle(udg_hash, h, 2, ef)
	ef = nil
	ef = AddSpecialEffect("Abilities\\Spells\\Items\\VampiricPotion\\VampPotionCaster.mdl", x + radius * Cos(360. * bj_DEGTORAD), y + radius * Sin(360. * bj_DEGTORAD))
	SaveEffectHandle(udg_hash, h, 3, ef)
	ef = nil
	TimerStart(t, 1.2, false, Trig_Blood_Absorption_Destroy_Effects_Actions)
	SetUnitState(caster, UNIT_STATE_LIFE, GetUnitState(caster, UNIT_STATE_LIFE) + heal)
	GroupEnumUnitsInRange(g, x, y, radius, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl", Picked, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodSorceress.mdl", Picked, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\VampiricPotion\\VampPotionCaster.mdl", Picked, "origin"))
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_MELEE, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			SetUnitState(caster, UNIT_STATE_LIFE, GetUnitState(caster, UNIT_STATE_LIFE) + damage / 2)
		end
		GroupRemoveUnit(g, Picked)
	end
	caster = nil
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	p = nil
end

---@return boolean
function Trig_Blood_Absorption_Conditions()
	return GetSpellAbilityId() == FourCC('A0GQ')
end

function InitTrig_Blood_Absorption()
	local index = 0 ---@type number integer
	gg_trg_Blood_Absorption = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Blood_Absorption, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Blood_Absorption, Condition(Trig_Blood_Absorption_Conditions))
	TriggerAddAction(gg_trg_Blood_Absorption, Trig_Blood_Absorption_Actions)
end

---@return boolean
function Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Conditions()
	return (udg_Nomer_samoi_volni == 9)
end

---@return boolean
function Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func002C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0ES'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 3) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func003C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0ES'), GetAttacker()) > 0) and (GetRandomInt(1, 3) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func004C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0FJ'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 3) == 4) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func005C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0FJ'), GetAttacker()) > 0) and (GetRandomInt(1, 3) == 4) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func006C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0GK'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 5) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func007C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0GK'), GetAttacker()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func008C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0GQ'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 3) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func009C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0GQ'), GetAttacker()) > 0) and (GetRandomInt(1, 3) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

function Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Actions()
	if (Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func002C()) then
		IssueTargetOrderById(GetTriggerUnit(), $D00DE, GetAttacker())
	end
	if (Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func003C()) then
		IssueTargetOrderById(GetAttacker(), $D00DE, GetTriggerUnit())
	end
	if (Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func004C()) then
		IssueTargetOrderById(GetTriggerUnit(), $D0079, GetAttacker())
	end
	if (Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func005C()) then
		IssueTargetOrderById(GetAttacker(), $D0079, GetTriggerUnit())
	end
	if (Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func006C()) then
		IssueTargetOrderById(GetTriggerUnit(), $D0079, GetAttacker())
	end
	if (Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func007C()) then
		IssueTargetOrderById(GetAttacker(), $D0079, GetTriggerUnit())
	end
	if (Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func008C()) then
		IssueImmediateOrderById(GetTriggerUnit(), $D0080)
	end
	if (Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Func009C()) then
		IssueImmediateOrderById(GetAttacker(), $D0080)
	end
end

function InitTrig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u()
	gg_trg_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u, Condition(Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Conditions))
	TriggerAddAction(gg_trg_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u, Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Actions)
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Conditions()
	return (udg_Nomer_samoi_volni == 9)
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002001002()
	return (IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func001002001003002()
	return GetBooleanAnd(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func001002001003002001(), Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func001002001003002002())
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func001002001003()
	return GetBooleanAnd(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func001002001003001(), Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func001002001003002())
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0GF'), GetEnumUnit()) > 0) and (GetRandomInt(1, 1) == 1)
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003001001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003001002()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false) ~= nil
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003001()
	return GetBooleanAnd(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003001001(), Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003001002())
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003002()
	return GetBooleanAnd(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003002001(), Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003002002())
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003()
	return GetBooleanAnd(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003001(), Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003002())
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0GM'), GetEnumUnit()) > 0) and (GetRandomInt(1, 1) == 1)
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003001001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003001002()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false) ~= nil
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003001()
	return GetBooleanAnd(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003001001(), Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003001002())
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003002()
	return GetBooleanAnd(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003002001(), Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003002002())
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003()
	return GetBooleanAnd(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003001(), Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003002())
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0GI'), GetEnumUnit()) > 0) and (GetRandomInt(1, 1) == 1)
end

function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002A()
	if (Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(1200., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func001002001003)))
		if (Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func001Func002C()) then
			IssueTargetOrderById(GetEnumUnit(), $D0296, udg_Temp_Unit)
		end
	end
	if (Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(1000., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func001002001003)))
		if (Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func002Func002C()) then
			IssueTargetOrderById(GetEnumUnit(), $D010E, udg_Temp_Unit)
		end
	end
	if (Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(1200., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func001002001003)))
		if (Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002Func003Func002C()) then
			IssueTargetOrderById(GetEnumUnit(), $D007D, udg_Temp_Unit)
		end
	end
end

function Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Actions()
	ForGroupBJ(GetUnitsInRectMatching(bj_mapInitialPlayableArea, Condition(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002001002)), Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Func002A)
end

function InitTrig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4()
	gg_trg_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4 = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4, 1.)
	TriggerAddCondition(gg_trg_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4, Condition(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Conditions))
	TriggerAddAction(gg_trg_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4, Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Actions)
end

---@return boolean
function Trig_Hatred_of_fire_Conditions()
	return (GetSpellAbilityId() == FourCC('A0A0'))
end

function timeout11()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 40) ---@type unit
	UnitRemoveAbility(u, FourCC('A0GY'))
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	u = nil
end

function Trig_Hatred_of_fire_Actions()
	local u = GetSpellAbilityUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	TimerStart(t, 12., false, timeout11)
	SaveUnitHandle(udg_hash, h, 40, u)
	t = nil
	u = nil
end

function InitTrig_Hatred_of_fire()
	gg_trg_Hatred_of_fire = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Hatred_of_fire, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_Hatred_of_fire, Condition(Trig_Hatred_of_fire_Conditions))
	TriggerAddAction(gg_trg_Hatred_of_fire, Trig_Hatred_of_fire_Actions)
end

---@return boolean
function firess()
	return (GetSpellAbilityId() == FourCC('A0GZ')) and GetUnitAbilityLevel(GetSpellAbilityUnit(), FourCC('A0GZ')) == 1
end

function timeout15()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 42) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 41) ---@type unit
	local z = LoadUnitHandle(udg_hash, h, 43) ---@type unit
	local txt ---@type texttag
	if wait > 0 and GetUnitAbilityLevel(u, FourCC('A09Y')) == 1 then
		wait = wait - 1
		txt = CreateTextTagUnitBJ(I2S((1 * GetUnitAbilityLevel(u, FourCC('A0GZ')))), u, 0, 16, FourCC('d'), $A, $A, 0)
		SetTextTagPermanent(txt, false)
		SetTextTagVelocityBJ(txt, 64, 90)
		SetTextTagLifespan(txt, .6)
		SaveInteger(udg_hash, h, 42, wait)
		SetUnitAnimation(u, "Spell")
		SetUnitAbilityLevel(u, FourCC('A0GZ'), GetUnitAbilityLevel(u, FourCC('A0GZ')) + 1)
	else
		IssueTargetOrderById(u, $D02B6, z)
		UnitRemoveAbility(u, FourCC('A09Y'))
		PauseUnit(u, false)
		SetUnitAnimation(u, "stand")
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	end
	txt = nil
	t = nil
	u = nil
	z = nil
end

function fires()
	local u = GetSpellAbilityUnit() ---@type unit
	local z = GetSpellTargetUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = 4 ---@type number integer
	PauseUnit(u, true)
	TimerStart(t, .9, true, timeout15)
	SaveInteger(udg_hash, h, 42, wait)
	SaveUnitHandle(udg_hash, h, 41, u)
	SaveUnitHandle(udg_hash, h, 43, z)
	UnitAddAbility(u, FourCC('A09Y'))
	t = nil
	u = nil
	z = nil
end

function InitTrig_set_fire()
	gg_trg_set_fire = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_set_fire, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_set_fire, Condition(firess))
	TriggerAddAction(gg_trg_set_fire, fires)
end

---@return boolean
function firess2()
	return (GetSpellAbilityId() == FourCC('A0GZ')) and GetUnitAbilityLevel(GetSpellAbilityUnit(), FourCC('A0GZ')) > 1
end

function timeout16()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 43) ---@type unit
	SetUnitAbilityLevel(u, FourCC('A0GZ'), 1)
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	u = nil
	t = nil
end

function fires2()
	local u = GetSpellAbilityUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	UnitRemoveAbility(u, FourCC('A09Y'))
	SaveUnitHandle(udg_hash, h, 43, u)
	TimerStart(t, .5, false, timeout16)
	u = nil
	t = nil
end

function InitTrig_set_fire_2()
	gg_trg_set_fire_2 = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_set_fire_2, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_set_fire_2, Condition(firess2))
	TriggerAddAction(gg_trg_set_fire_2, fires2)
end

---@return boolean
function Trig_the_creation_of_the_image_Conditions()
	return GetSpellAbilityId() == FourCC('A0HG')
end

function timeout17()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 46) ---@type unit
	local dammi = LoadUnitHandle(udg_hash, h, 47) ---@type unit
	local dammi2 ---@type unit
	local x = LoadReal(udg_hash, h, 44) ---@type number real
	local y = LoadReal(udg_hash, h, 45) ---@type number real
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Demon\\DarkPortal\\DarkPortalTarget.mdl", dammi, "origin"))
	GroupEnumUnitsInRange(g, x, y, 380, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, GetOwningPlayer(u)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false then
			UnitDamageTargetBJ(u, Picked, ($C8), ATTACK_TYPE_NORMAL, DAMAGE_TYPE_NORMAL)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", Picked, "origin"))
		else
			if IsUnitAlly(Picked, GetOwningPlayer(u)) and GetUnitTypeId(Picked) == FourCC('n01D') and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 then
				dammi2 = CreateUnit(GetOwningPlayer(u), FourCC('h013'), x, y, 0)
				UnitAddAbility(dammi2, FourCC('A0HI'))
				UnitApplyTimedLife(dammi2, FourCC('BTLF'), 1.)
				IssueTargetOrderById(dammi2, $D0062, Picked)
			end
		end
		GroupRemoveUnit(g, Picked)
	end
	SetUnitTimeScalePercent(dammi, FourCC('d'))
	KillUnit(dammi)
	DestroyGroup(g)
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	g = nil
	dammi = nil
	dammi2 = nil
	Picked = nil
	u = nil
	t = nil
end

function Trig_the_creation_of_the_image_Actions()
	local u = GetSpellAbilityUnit() ---@type unit
	local locs = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(locs) ---@type number real
	local y = GetLocationY(locs) ---@type number real
	local dammi = CreateUnit(GetOwningPlayer(u), FourCC('n00I'), x, y, GetUnitFacing(u)) ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	UnitAddAbility(dammi, FourCC('Aloc'))
	TimerStart(t, 2.07, false, timeout17)
	SaveReal(udg_hash, h, 44, x)
	SaveReal(udg_hash, h, 45, y)
	SaveUnitHandle(udg_hash, h, 46, u)
	SaveUnitHandle(udg_hash, h, 47, dammi)
	SetUnitVertexColor(dammi, $FF, $FF, $FF, 90)
	SetUnitTimeScalePercent(dammi, 80)
	PauseUnit(dammi, true)
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.85)
	SetUnitAnimation(dammi, "Spell Slam")
	dammi = nil
	u = nil
	RemoveLocation(locs)
	locs = nil
	t = nil
end

function InitTrig_the_creation_of_the_image()
	gg_trg_the_creation_of_the_image = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_the_creation_of_the_image, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_the_creation_of_the_image, Condition(Trig_the_creation_of_the_image_Conditions))
	TriggerAddAction(gg_trg_the_creation_of_the_image, Trig_the_creation_of_the_image_Actions)
end

---@return boolean
function Trig_fiery_explosions_Conditions()
	return GetSpellAbilityId() == FourCC('A0HK')
end

function timeout18()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 50) ---@type number integer
	local u = LoadUnitHandle(udg_hash, h, 48) ---@type unit
	local j = LoadUnitHandle(udg_hash, h, 49) ---@type unit
	local x = GetUnitX(j) ---@type number real
	local y = GetUnitY(j) ---@type number real
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	if GetUnitState(j, UNIT_STATE_LIFE) > .0 then
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl", x, y))
	end
	GroupEnumUnitsInRange(g, x, y, 300, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, GetOwningPlayer(u)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false then
			UnitDamageTargetBJ(u, Picked, (80), ATTACK_TYPE_NORMAL, DAMAGE_TYPE_NORMAL)
		end
		GroupRemoveUnit(g, Picked)
	end
	DestroyGroup(g)
	if wait < 0 then
		DestroyTimer(t)
		UnitRemoveAbility(j, FourCC('B03J'))
		FlushChildHashtable(udg_hash, h)
	else
		wait = wait - 1
		SaveInteger(udg_hash, h, 50, wait)
	end
	t = nil
	g = nil
	Picked = nil
	u = nil
	j = nil
end

function Trig_fiery_explosions_Actions()
	local u = GetSpellAbilityUnit() ---@type unit
	local j = GetSpellTargetUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = GetRandomInt(3, 8) ---@type number integer
	TimerStart(t, 1., true, timeout18)
	SaveUnitHandle(udg_hash, h, 48, u)
	SaveUnitHandle(udg_hash, h, 49, j)
	SaveInteger(udg_hash, h, 50, wait)
	u = nil
	j = nil
	t = nil
end

function InitTrig_fiery_explosions()
	gg_trg_fiery_explosions = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_fiery_explosions, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_fiery_explosions, Condition(Trig_fiery_explosions_Conditions))
	TriggerAddAction(gg_trg_fiery_explosions, Trig_fiery_explosions_Actions)
end

function Trig_Breathoffire_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local dammi = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local xt = LoadReal(udg_hash, h, 3) ---@type number real
	local yt = LoadReal(udg_hash, h, 4) ---@type number real
	local first = LoadBoolean(udg_hash, h, 5) ---@type boolean
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local orderId ---@type number integer
	orderId = $D0278
	if (orderId ~= 0) then
	else
		orderId = UnitId("channel")
		if (orderId ~= 0) then
		end
	end
	if order == orderId then
		IssuePointOrderById(dammi, $D0264, xt, yt)
		if first then
			first = false
			SaveBoolean(udg_hash, h, 5, first)
			TimerStart(t, 1., true, Trig_Breathoffire_Periodic_Actions)
		end
	else
		RemoveUnit(dammi)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	dammi = nil
end

function Trig_Breathoffire_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local loc ---@type location
	local xt ---@type number real
	local yt ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi ---@type unit
	local first = true ---@type boolean
	if target ~= nil then
		xt = GetUnitX(target)
		yt = GetUnitY(target)
	else
		loc = GetSpellTargetLoc()
		xt = GetLocationX(loc)
		yt = GetLocationY(loc)
	end
	angle = bj_RADTODEG * Atan2(yt - y, xt - x)
	SetUnitFacing(caster, angle)
	dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x + 50. * Cos(angle * bj_DEGTORAD), y + 50. * Sin(angle * bj_DEGTORAD), angle)
	UnitAddAbility(dammi, FourCC('A0HM'))
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveUnitHandle(udg_hash, h, 2, dammi)
	SaveReal(udg_hash, h, 3, xt)
	SaveReal(udg_hash, h, 4, yt)
	SaveBoolean(udg_hash, h, 5, first)
	TimerStart(t, .04, true, Trig_Breathoffire_Periodic_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	target = nil
	t = nil
	dammi = nil
end

---@return boolean
function Trig_Breathoffire_Conditions()
	return GetSpellAbilityId() == FourCC('A0HL')
end

function InitTrig_Breathoffire()
	local index = 0 ---@type number integer
	gg_trg_Breathoffire = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Breathoffire, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Breathoffire, Condition(Trig_Breathoffire_Conditions))
	TriggerAddAction(gg_trg_Breathoffire, Trig_Breathoffire_Actions)
end

function Trig_Fire_Explosions_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local xt = LoadReal(udg_hash, h, 2) ---@type number real
	local yt = LoadReal(udg_hash, h, 3) ---@type number real
	local damage = LoadReal(udg_hash, h, 4) ---@type number real
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local p = GetOwningPlayer(caster) ---@type player
	local xnew ---@type number real
	local ynew ---@type number real
	local dammi ---@type unit
	local orderId ---@type number integer
	local g ---@type group
	local Picked ---@type unit
	orderId = $D0278
	if (orderId ~= 0) then
	else
		orderId = UnitId("channel")
		if (orderId ~= 0) then
		end
	end
	if order == orderId then
		xnew = xt + GetRandomReal(-400., 400.)
		ynew = yt + GetRandomReal(-400., 400.)
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", xnew, ynew))
		g = CreateGroup()
		GroupEnumUnitsInRange(g, xnew, ynew, 200., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				StunUnitTimed(Picked, 1.5)
				dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), xnew, ynew, 270.)
				UnitAddAbility(dammi, FourCC('A0HR'))
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.5)
				IssueTargetOrderById(dammi, $D02B6, Picked)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosDone.mdl ", Picked, "chest"))
				dammi = nil
			end
			GroupRemoveUnit(g, Picked)
		end
	else
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
	t = nil
	caster = nil
	dammi = nil
end

function Trig_Fire_Explosions_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damage = 225. ---@type number real
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, xt)
	SaveReal(udg_hash, h, 3, yt)
	SaveReal(udg_hash, h, 4, damage)
	TimerStart(t, .2, true, Trig_Fire_Explosions_Periodic_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
end

---@return boolean
function Trig_Fire_Explosions_Conditions()
	return GetSpellAbilityId() == FourCC('A0HQ')
end

function InitTrig_Fire_Explosions()
	local index = 0 ---@type number integer
	gg_trg_Fire_Explosions = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fire_Explosions, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fire_Explosions, Condition(Trig_Fire_Explosions_Conditions))
	TriggerAddAction(gg_trg_Fire_Explosions, Trig_Fire_Explosions_Actions)
end

function Trig_BossStomp_Remove_DisArmor_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local gdamage = LoadGroupHandle(udg_hash, h, 1) ---@type group
	local Picked ---@type unit
	while(true) do
		Picked = FirstOfGroup(gdamage)
		if (Picked == nil) then break end
		SetArmorAbilityLevel(Picked, 16)
		GroupRemoveUnit(gdamage, Picked)
	end
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	GroupClear(gdamage)
	DestroyGroup(gdamage)
	gdamage = nil
	Picked = nil
end

function Trig_BossStomp_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local radius = 400. ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damage = 250. ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local gdamage = CreateGroup() ---@type group
	local Picked ---@type unit
	local dist ---@type number real
	local angle ---@type number real
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", x, y))
	GroupEnumUnitsInRange(g, x, y, radius, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			StunUnitTimed(Picked, 1.75)
			dist = SquareRoot((GetUnitX(Picked) - x) * (GetUnitX(Picked) - x) + (GetUnitY(Picked) - y) * (GetUnitY(Picked) - y))
			angle = bj_RADTODEG * Atan2(GetUnitY(Picked) - y, GetUnitX(Picked) - x)
			MoveUnit(Picked, (400. - dist) / 400. + .25, (600. - dist), .0, angle, .0, false)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FireBallMissile\\FireBallMissile.mdl", Picked, "head"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FireBallMissile\\FireBallMissile.mdl", Picked, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl", Picked, "hand,left"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl", Picked, "hand,right"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl", Picked, "chest"))
			SetArmorAbilityLevel(Picked, -16)
			GroupAddUnit(gdamage, Picked)
		end
		GroupRemoveUnit(g, Picked)
	end
	SaveGroupHandle(udg_hash, h, 1, gdamage)
	TimerStart(t, 12., false, Trig_BossStomp_Remove_DisArmor_Actions)
	caster = nil
	t = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	gdamage = nil
	Picked = nil
end

---@return boolean
function Trig_BossStomp_Conditions()
	return GetSpellAbilityId() == FourCC('A0HS')
end

function InitTrig_BossStomp()
	local index = 0 ---@type number integer
	gg_trg_BossStomp = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BossStomp, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BossStomp, Condition(Trig_BossStomp_Conditions))
	TriggerAddAction(gg_trg_BossStomp, Trig_BossStomp_Actions)
end

function Trig_Mark_of_Fire_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local dammi = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local ef ---@type effect
	local wait = LoadInteger(udg_hash, h, 4) ---@type number integer
	local g ---@type group
	local Picked ---@type unit
	local p ---@type player
	local scale ---@type number real
	local x ---@type number real
	local y ---@type number real
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 4, wait)
		scale = 1. + (FourCC('d') - wait) * .015
		SetUnitScale(dammi, scale, scale, 1.)
	else
		g = CreateGroup()
		p = GetOwningPlayer(caster)
		x = GetUnitX(dammi)
		y = GetUnitY(dammi)
		GroupEnumUnitsInRange(g, x, y, 250., nil)
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", x + 100. * Cos(120. * bj_DEGTORAD), y + 100. * Sin(120. * bj_DEGTORAD)))
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", x + 100. * Cos(240. * bj_DEGTORAD), y + 100. * Sin(240. * bj_DEGTORAD)))
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl", x + 100. * Cos(360. * bj_DEGTORAD), y + 100. * Sin(360. * bj_DEGTORAD)))
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, GetUnitState(Picked, UNIT_STATE_MAX_LIFE) / 2, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\MarkOfChaos\\MarkOfChaosDone.mdl ", Picked, "chest"))
			end
			GroupRemoveUnit(g, Picked)
		end
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		p = nil
		Picked = nil
		ef = LoadEffectHandle(udg_hash, h, 3)
		DestroyEffect(ef)
		ef = nil
		ef = LoadEffectHandle(udg_hash, h, 5)
		DestroyEffect(ef)
		ef = nil
		ef = LoadEffectHandle(udg_hash, h, 6)
		DestroyEffect(ef)
		ef = nil
		RemoveUnit(dammi)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	dammi = nil
end

function Trig_Mark_of_Fire_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), xt, yt, 270.) ---@type unit
	local ef ---@type effect
	local wait = $85 ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveUnitHandle(udg_hash, h, 2, dammi)
	SaveInteger(udg_hash, h, 4, wait)
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Doom\\DoomTarget.mdl", dammi, "origin")
	SaveEffectHandle(udg_hash, h, 3, ef)
	ef = nil
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Doom\\DoomTarget.mdl", dammi, "origin")
	SaveEffectHandle(udg_hash, h, 5, ef)
	ef = nil
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Doom\\DoomTarget.mdl", dammi, "origin")
	SaveEffectHandle(udg_hash, h, 6, ef)
	ef = nil
	TimerStart(t, .03, true, Trig_Mark_of_Fire_Periodic_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	dammi = nil
	ef = nil
	t = nil
end

---@return boolean
function Trig_Mark_of_Fire_Conditions()
	return GetSpellAbilityId() == FourCC('A0HT')
end

function InitTrig_Mark_of_Fire()
	local index = 0 ---@type number integer
	gg_trg_Mark_of_Fire = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Mark_of_Fire, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Mark_of_Fire, Condition(Trig_Mark_of_Fire_Conditions))
	TriggerAddAction(gg_trg_Mark_of_Fire, Trig_Mark_of_Fire_Actions)
end

---@return boolean
function Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Conditions()
	return (udg_Nomer_samoi_volni == $A)
end

---@return boolean
function Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func002C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0A0'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func003C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0A0'), GetAttacker()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func004C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HL'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 3) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func005C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HL'), GetAttacker()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func006C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HP'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func007C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HP'), GetAttacker()) > 0) and (GetRandomInt(1, 3) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func008C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HT'), GetTriggerUnit()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetTriggerUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func009C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HT'), GetAttacker()) > 0) and (GetRandomInt(1, 2) == 1) and (IsPlayerInForce(GetOwningPlayer(GetAttacker()), udg_Players_Enemy_Group))
end

function Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Actions()
	if (Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func002C()) then
		IssueImmediateOrderById(GetTriggerUnit(), $D00C4)
	end
	if (Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func003C()) then
		IssueImmediateOrderById(GetAttacker(), $D00C4)
	end
	if (Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func004C()) then
		IssueTargetOrderById(GetTriggerUnit(), $D0278, GetAttacker())
	end
	if (Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func005C()) then
		IssueTargetOrderById(GetAttacker(), $D0278, GetTriggerUnit())
	end
	if (Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func006C()) then
		IssueTargetOrderById(GetTriggerUnit(), $D02BC, GetAttacker())
	end
	if (Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func007C()) then
		IssueTargetOrderById(GetAttacker(), $D02BC, GetTriggerUnit())
	end
	if (Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func008C()) then
		IssuePointOrderById(GetTriggerUnit(), $D00EA, GetUnitX(GetAttacker()), GetUnitY(GetAttacker()))
	end
	if (Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Func009C()) then
		IssuePointOrderById(GetAttacker(), $D00EA, GetUnitX(GetTriggerUnit()), GetUnitY(GetTriggerUnit()))
	end
end

function InitTrig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire()
	gg_trg_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire, Condition(Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Conditions))
	TriggerAddAction(gg_trg_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire, Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Actions)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Conditions()
	return (udg_Nomer_samoi_volni == $A)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002001002()
	return (IsPlayerInForce(GetOwningPlayer(GetFilterUnit()), udg_Players_Enemy_Group))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001Func001002001003002()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001Func001002001003002001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001Func001002001003002002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001Func001002001003()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001Func001002001003001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001Func001002001003002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0GZ'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 3)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func001002001003002()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func001002001003002001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func001002001003002002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func001002001003()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func001002001003001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func001002001003002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HH'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func003002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func003002001003002001()
	return (GetUnitTypeId(GetFilterUnit()) == FourCC('n01D'))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func003002001003002002()
	return (IsPlayerAlly(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func003002001003002()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func003002001003002001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func003002001003002002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func003002001003()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func003002001003001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func003002001003002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func004C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HG'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func004Func003002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func004Func003002001003002()
	return (IsPlayerAlly(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func004Func003002001003()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func004Func003002001003001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func004Func003002001003002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func004Func004C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func004C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HJ'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005Func001002001003002()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005Func001002001003002001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005Func001002001003002002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005Func001002001003()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005Func001002001003001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005Func001002001003002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HO'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 3)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006Func001002001003002()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006Func001002001003002001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006Func001002001003002002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006Func001002001003()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006Func001002001003001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006Func001002001003002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HQ'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func001002001003001()
	return (IsUnitAliveBJ(GetFilterUnit()))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func001002001003002001()
	return (IsUnitType(GetFilterUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false) ~= nil
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func001002001003002002()
	return (IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()), GetOwningPlayer(GetEnumUnit())))
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func001002001003002()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func001002001003002001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func001002001003002002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func001002001003()
	return GetBooleanAnd(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func001002001003001(), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func001002001003002())
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func002C()
	return (udg_Temp_Unit ~= nil)
end

---@return boolean
function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007C()
	return (GetUnitAbilityLevelSwapped(FourCC('A0HS'), GetEnumUnit()) > 0) and (GetRandomInt(1, 2) == 1)
end

function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002A()
	if (Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(600., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func001Func001002001003)))
		IssueTargetOrderById(GetEnumUnit(), $D02B6, udg_Temp_Unit)
	end
	if (Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(800., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func001002001003)))
		if (Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func002Func002C()) then
			IssueImmediateOrderById(GetEnumUnit(), $D0081)
		end
	end
	if (Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(700., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func003002001003)))
		if (Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func003Func004C()) then
			IssuePointOrderById(GetEnumUnit(), $D00FA, GetUnitX(udg_Temp_Unit), GetUnitY(udg_Temp_Unit))
		end
	end
	if (Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func004C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(700., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func004Func003002001003)))
		if (Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func004Func004C()) then
			IssueTargetOrderById(GetEnumUnit(), $D0062, udg_Temp_Unit)
		end
	end
	if (Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(900., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func005Func001002001003)))
		IssueTargetOrderById(GetEnumUnit(), $D0255, udg_Temp_Unit)
	end
	if (Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(900., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func006Func001002001003)))
		IssueTargetOrderById(GetEnumUnit(), $D0278, udg_Temp_Unit)
	end
	if (Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007C()) then
		udg_Temp_Unit = GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(300., GetUnitLoc(GetEnumUnit()), Condition(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func001002001003)))
		if (Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002Func007Func002C()) then
			IssueImmediateOrderById(GetEnumUnit(), $D0105)
		end
	end
end

function Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Actions()
	ForGroupBJ(GetUnitsInRectMatching(bj_mapInitialPlayableArea, Condition(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002001002)), Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Func002A)
end

function InitTrig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp()
	gg_trg_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp, 1.)
	TriggerAddCondition(gg_trg_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp, Condition(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Conditions))
	TriggerAddAction(gg_trg_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp, Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Actions)
end

function Trig_Power_of_Skeletons_Remove_Bonuses_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damagebonus = LoadInteger(udg_hash, h, 1) ---@type number integer
	local asbonus = LoadInteger(udg_hash, h, 2) ---@type number integer
	local regenbonus = LoadInteger(udg_hash, h, 3) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 4) ---@type unit
	SetAttackAbilityLevel(target, -damagebonus)
	SetAttackSpeedAbilityLevel(target, -asbonus)
	SetUnitLifeAndManaRegeneration(target, "life", -regenbonus)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	target = nil
end

function Trig_Power_of_Skeletons_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0B6')) ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local time = 14. ---@type number real
	local damagebonus = $A + 5 * lvl ---@type number integer
	local asbonus = $F + 5 * lvl ---@type number integer
	local regenbonus = 3 + 5 * lvl ---@type number integer
	if IsUnitType(target, UNIT_TYPE_HERO) then
		damagebonus = $F + $A * lvl
		asbonus = 20 + $A * lvl
	end
	SetAttackAbilityLevel(target, damagebonus)
	SetAttackSpeedAbilityLevel(target, asbonus)
	SetUnitLifeAndManaRegeneration(target, "life", regenbonus)
	SaveInteger(udg_hash, h, 1, damagebonus)
	SaveInteger(udg_hash, h, 2, asbonus)
	SaveInteger(udg_hash, h, 3, regenbonus)
	SaveUnitHandle(udg_hash, h, 4, target)
	TimerStart(t, time, false, Trig_Power_of_Skeletons_Remove_Bonuses_Actions)
	caster = nil
	target = nil
	t = nil
end

---@return boolean
function Trig_Power_of_Skeletons_Conditions()
	return GetSpellAbilityId() == FourCC('A0B6')
end

function InitTrig_Power_of_Skeletons()
	local index = 0 ---@type number integer
	gg_trg_Power_of_Skeletons = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Power_of_Skeletons, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Power_of_Skeletons, Condition(Trig_Power_of_Skeletons_Conditions))
	TriggerAddAction(gg_trg_Power_of_Skeletons, Trig_Power_of_Skeletons_Actions)
end

function Trig_Water_Elemental_Load_Actions()
	AbilityPreload(FourCC('A071'), 6)
	AbilityPreload(FourCC('A072'), 6)
	AbilityPreload(FourCC('A06Z'), 6)
	AbilityPreload(FourCC('A078'), 3)
	AbilityPreload(FourCC('A06V'), 6)
	AbilityPreload(FourCC('A06X'), 1)
	AbilityPreload(FourCC('A07L'), 1)
	AbilityPreload(FourCC('A07K'), 1)
	AbilityPreload(FourCC('A07J'), 1)
	EffectPreload("war3mapImported\\s_WateryAura.mdx")
	EffectPreload("Objects\\Spawnmodels\\Naga\\NagaDeath\\NagaDeath.mdl")
	EffectPreload("war3mapImported\\AquaSpike.mdx")
	EffectPreload("Abilities\\Spells\\Other\\CrushingWave\\CrushingWaveDamage.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodFootman.mdl")
	UnitPreload(FourCC('h017'))
	UnitPreload(FourCC('h01D'))
	UnitPreload(FourCC('h01E'))
	UnitPreload(FourCC('h01F'))
	UnitPreload(FourCC('h01G'))
	UnitPreload(FourCC('h01H'))
	EnableTrigger(gg_trg_spirits_of_water_dead)
	EnableTrigger(gg_trg_Skill_Gertva)
	EnableTrigger(gg_trg_Opening_Streams)
	EnableTrigger(gg_trg_Tsunami)
	EnableTrigger(gg_trg_Water_Explosion)
end

function InitTrig_Water_Elemental_Load()
	gg_trg_Water_Elemental_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Water_Elemental_Load, Trig_Water_Elemental_Load_Actions)
end

function Trig_Init_kreeps_Actions()
	udg_spirits_of_water[1] = FourCC('h017')
	udg_spirits_of_water[2] = FourCC('h01D')
	udg_spirits_of_water[3] = FourCC('h01E')
	udg_spirits_of_water[4] = FourCC('h01F')
	udg_spirits_of_water[5] = FourCC('h01G')
	udg_spirits_of_water[6] = FourCC('h01H')
	udg_Integer_spirits_of_water = 0
end

function InitTrig_Init_kreeps()
	gg_trg_Init_kreeps = CreateTrigger()
	TriggerAddAction(gg_trg_Init_kreeps, Trig_Init_kreeps_Actions)
end

---@return boolean
function Trig_spirits_of_water_dead_Conditions()
	local id = GetUnitTypeId(GetDyingUnit()) ---@type number integer
	return (id == FourCC('h017') or id == FourCC('h01D') or id == FourCC('h01E') or id == FourCC('h01F') or id == FourCC('h01G') or id == FourCC('h01H')) and IsUnitIllusion(GetDyingUnit()) == false
end

function Trig_spirits_of_water_dead_Actions()
	local elemental = GetDyingUnit() ---@type unit
	local hero = LoadUnitHandle(udg_hash, GetHandleId(elemental), 63) ---@type unit
	SaveInteger(udg_hash, GetHandleId(hero), 64, LoadInteger(udg_hash, GetHandleId(hero), 64) - 1)
	DestroyEffect(LoadEffectHandle(udg_hash, GetHandleId(elemental), FourCC('{')))
	FlushChildHashtable(udg_hash, GetHandleId(elemental))
end

function InitTrig_spirits_of_water_dead()
	local index = 0 ---@type number integer
	gg_trg_spirits_of_water_dead = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_spirits_of_water_dead, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_spirits_of_water_dead, Condition(Trig_spirits_of_water_dead_Conditions))
	TriggerAddAction(gg_trg_spirits_of_water_dead, Trig_spirits_of_water_dead_Actions)
end

---@return boolean
function Trig_Skill_Gertva_Conditions()
	local id = GetUnitTypeId(GetSpellTargetUnit()) ---@type number integer
	return GetSpellAbilityId() == FourCC('A06X') and IsUnitIllusion(GetSpellTargetUnit()) == false and (id == FourCC('H01I') or id == FourCC('h017') or id == FourCC('h01D') or id == FourCC('h01E') or id == FourCC('h01F') or id == FourCC('h01G') or id == FourCC('h01H'))
end

function Trig_Skill_Gertva_Actions()
	DestroyEffect(AddSpecialEffectTarget("units\\human\\WaterElemental\\WaterElemental.mdl", GetSpellTargetUnit(), "chest"))
	SetUnitState(GetSpellTargetUnit(), UNIT_STATE_LIFE, GetUnitState(GetSpellTargetUnit(), UNIT_STATE_LIFE) + (.66 * GetUnitState(GetSpellAbilityUnit(), UNIT_STATE_LIFE)) + .1 * GetUnitState(GetSpellTargetUnit(), UNIT_STATE_MAX_LIFE))
	KillUnit(GetSpellAbilityUnit())
end

function InitTrig_Skill_Gertva()
	local index = 0 ---@type number integer
	gg_trg_Skill_Gertva = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Skill_Gertva, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Skill_Gertva, Condition(Trig_Skill_Gertva_Conditions))
	TriggerAddAction(gg_trg_Skill_Gertva, Trig_Skill_Gertva_Actions)
end

function Trig_Opening_Streams_Destructables()
	KillDestructable(GetEnumDestructable())
end

function Trig_Opening_Streams_unit_Actions()
	local tu = GetExpiredTimer() ---@type timer
	local ht = GetHandleId(tu) ---@type number integer
	local pilot = LoadUnitHandle(udg_hash, ht, 1) ---@type unit
	local dist = LoadReal(udg_hash, ht, 2) ---@type number real
	local speed = LoadReal(udg_hash, ht, 3) ---@type number real
	local angleu = LoadReal(udg_hash, ht, 4) ---@type number real
	local waitu = LoadReal(udg_hash, ht, 5) ---@type number real
	local waitucheck = LoadReal(udg_hash, ht, 6) ---@type number real
	local caster = LoadUnitHandle(udg_hash, ht, 7) ---@type unit
	local damage = LoadReal(udg_hash, ht, 8) ---@type number real
	local x = GetUnitX(pilot) + speed * Cos(angleu * bj_DEGTORAD) ---@type number real
	local y = GetUnitY(pilot) + speed * Sin(angleu * bj_DEGTORAD) ---@type number real
	local r ---@type rect
	if waitu > 0 then
		waitu = waitu - 1
		SaveReal(udg_hash, ht, 5, waitu)
		if IsTerrainPathable(x, y, PATHING_TYPE_FLYABILITY) == false and GetTerrainCliffLevel(x, y) == GetTerrainCliffLevel(GetUnitX(pilot), GetUnitY(pilot)) then
			SetUnitX(pilot, x)
			SetUnitY(pilot, y)
		end
		if waitu <= waitucheck then
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\CrushingWave\\CrushingWaveDamage.mdl", pilot, "chest"))
			SetUnitFlyHeight(pilot, 0, 2 * (dist + 50))
		end
	else
		r = Rect(x - 175., y - 175., x + 175., y + 175.)
		EnumDestructablesInRect(r, nil, Trig_Opening_Streams_Destructables)
		UnitDamageTarget(caster, pilot, damage / 2, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
		DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodFootman.mdl", pilot, "origin"))
		SetUnitPathing(pilot, true)
		RemoveRect(r)
		r = nil
		FlushChildHashtable(udg_hash, ht)
		DestroyTimer(tu)
	end
	tu = nil
	pilot = nil
	caster = nil
end

function Trig_Opening_Streams_periodic_Actions()
	local tper = GetExpiredTimer() ---@type timer
	local hper = GetHandleId(tper) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, hper, 1) ---@type unit
	local xloc = LoadReal(udg_hash, hper, 2) ---@type number real
	local yloc = LoadReal(udg_hash, hper, 3) ---@type number real
	local wait = LoadInteger(udg_hash, hper, 4) ---@type number integer
	local damage = LoadReal(udg_hash, hper, 5) ---@type number real
	local angle = 10. * wait ---@type number real
	local water ---@type unit
	local lop = 1 ---@type number integer
	local ef ---@type effect
	local x ---@type number real
	local y ---@type number real
	local tu ---@type timer
	local ht ---@type number integer
	local g ---@type group
	local Picked ---@type unit
	local dist ---@type number real
	local angleu ---@type number real
	local speed ---@type number real
	local waitu ---@type number real
	if wait < 50 then
		while(true) do
			if (lop > 18) then break end
			x = xloc + (350. - (wait * 5.)) * Cos(angle * bj_DEGTORAD)
			y = yloc + (350. - (wait * 5.)) * Sin(angle * bj_DEGTORAD)
			if IsTerrainPathable(x, y, PATHING_TYPE_FLYABILITY) == false then
				water[lop] = LoadUnitHandle(udg_hash, hper, 5 + lop)
				SetUnitPosition(water[lop], x, y)
			end
			angle = angle + 20.
			lop = lop + 1
			water[lop] = nil
		end
		wait = wait + 1
		SaveInteger(udg_hash, hper, 4, wait)
	else
		angle = 72.
		while(true) do
			lop = lop + 1
			if (lop > 6) then break end
			x = xloc + 125. * Cos(angle * bj_DEGTORAD)
			y = yloc + 125. * Sin(angle * bj_DEGTORAD)
			DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Naga\\NagaDeath\\NagaDeath.mdl", x, y))
			DestroyEffect(AddSpecialEffect("war3mapImported\\AquaSpike.mdx", x, y))
			angle = angle + 72.
		end
		lop = 1
		while(true) do
			if (lop > 18) then break end
			water[lop] = LoadUnitHandle(udg_hash, hper, 5 + lop)
			ef = LoadEffectHandle(udg_hash, GetHandleId(water[lop]), 1)
			DestroyEffect(ef)
			FlushChildHashtable(udg_hash, GetHandleId(water[lop]))
			UnitApplyTimedLife(water[lop], FourCC('BTLF'), .5)
			KillUnit(water[lop])
			water[lop] = nil
			ef = nil
			lop = lop + 1
		end
		g = CreateGroup()
		GroupEnumUnitsInRange(g, xloc, yloc, 350., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, GetOwningPlayer(caster)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_GROUND) and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				tu = CreateTimer()
				ht = GetHandleId(tu)
				UnitAddAbility(Picked, FourCC('Amrf'))
				UnitRemoveAbility(Picked, FourCC('Amrf'))
				SetUnitPathing(Picked, false)
				dist = 300. - (SquareRoot((GetUnitX(Picked) - xloc) * (GetUnitX(Picked) - xloc) + (GetUnitY(Picked) - yloc) * (GetUnitY(Picked) - yloc)))
				speed = (2 * dist) / 80. + 3.125
				angleu = bj_RADTODEG * Atan2(GetUnitY(Picked) - yloc, GetUnitX(Picked) - xloc)
				waitu = ((2 * dist) + 50.) / (speed * 2)
				SetUnitFlyHeight(Picked, dist + 50, 2 * (dist + 50))
				SaveUnitHandle(udg_hash, ht, 1, Picked)
				SaveReal(udg_hash, ht, 2, dist)
				SaveReal(udg_hash, ht, 3, speed)
				SaveReal(udg_hash, ht, 4, angleu)
				SaveReal(udg_hash, ht, 5, waitu)
				SaveReal(udg_hash, ht, 6, (waitu / 2))
				SaveUnitHandle(udg_hash, ht, 7, caster)
				SaveReal(udg_hash, ht, 8, damage)
				UnitDamageTarget(caster, Picked, damage / 2, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\CrushingWave\\CrushingWaveDamage.mdl", Picked, "chest"))
				TimerStart(tu, .025, true, Trig_Opening_Streams_unit_Actions)
				tu = nil
			end
			GroupRemoveUnit(g, Picked)
		end
		FlushChildHashtable(udg_hash, hper)
		DestroyTimer(tper)
	end
	wait = wait + 1
	SaveInteger(udg_hash, hper, 4, wait)
	DestroyGroup(g)
	g = nil
	Picked = nil
	tper = nil
	caster = nil
end

function Trig_Opening_Streams_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local loc = GetSpellTargetLoc() ---@type location
	local xloc = GetLocationX(loc) ---@type number real
	local yloc = GetLocationY(loc) ---@type number real
	local angle = .0 ---@type number real
	local wait = 0 ---@type number integer
	local water ---@type unit
	local lop = 1 ---@type number integer
	local x ---@type number real
	local y ---@type number real
	local tper = CreateTimer() ---@type timer
	local hper = GetHandleId(tper) ---@type number integer
	local ef ---@type effect
	local lvl = GetUnitAbilityLevel(caster, FourCC('A072')) ---@type number integer
	local damage = ($F * lvl) + (5 * lvl * lvl) + 20. ---@type number real
	while(true) do
		if (lop > 18) then break end
		x = xloc + 350. * Cos(angle * bj_DEGTORAD)
		y = yloc + 350. * Sin(angle * bj_DEGTORAD)
		if IsTerrainPathable(x, y, PATHING_TYPE_FLYABILITY) == false then
			water[lop] = CreateUnit(p, FourCC('h00U'), x, y, .0)
			SaveUnitHandle(udg_hash, hper, 5 + lop, water[lop])
			ef = AddSpecialEffectTarget("war3mapImported\\s_WateryAura.mdx", water[lop], "chest")
			SaveEffectHandle(udg_hash, GetHandleId(water[lop]), 1, ef)
			ef = nil
		end
		angle = angle + 20.
		lop = lop + 1
		water[lop] = nil
	end
	SaveUnitHandle(udg_hash, hper, 1, caster)
	SaveReal(udg_hash, hper, 2, xloc)
	SaveReal(udg_hash, hper, 3, yloc)
	SaveInteger(udg_hash, hper, 4, wait)
	SaveReal(udg_hash, hper, 5, damage)
	TimerStart(tper, .04, true, Trig_Opening_Streams_periodic_Actions)
	caster = nil
	p = nil
	RemoveLocation(loc)
	loc = nil
	tper = nil
end

---@return boolean
function Trig_Opening_Streams_Conditions()
	return GetSpellAbilityId() == FourCC('A072')
end

function InitTrig_Opening_Streams()
	local index = 0 ---@type number integer
	gg_trg_Opening_Streams = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Opening_Streams, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Opening_Streams, Condition(Trig_Opening_Streams_Conditions))
	TriggerAddAction(gg_trg_Opening_Streams, Trig_Opening_Streams_Actions)
end

function Trig_water_explosion_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_water_explosion_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local amount = LoadInteger(udg_hash, h, 1) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local xloc = LoadReal(udg_hash, h, 3) ---@type number real
	local yloc = LoadReal(udg_hash, h, 4) ---@type number real
	local damage = LoadReal(udg_hash, h, 5) ---@type number real
	local stuntime = LoadReal(udg_hash, h, 6) ---@type number real
	local u ---@type unit
	local angle = 0 ---@type number real
	local angle2 = 0 ---@type number real
	local dist = 0 ---@type number real
	local x = 0 ---@type number real
	local y = 0 ---@type number real
	local g ---@type group
	local gmain = CreateGroup() ---@type group
	local p = GetOwningPlayer(caster) ---@type player
	local Picked ---@type unit
	local r ---@type rect
	if amount == 7 then
		angle = 51.43
		angle2 = 51.43
		dist = $AF
	end
	if amount == 1 then
		angle = 120.
		angle2 = 120.
		dist = 0
	end
	if amount == $D then
		angle = 27.69
		angle2 = 27.69
		dist = 350
	end
	bj_forLoopAIndex = 1
	while(true) do
		if (bj_forLoopAIndex > amount) then break end
		g = CreateGroup()
		x = xloc + dist * Cos(angle * bj_DEGTORAD)
		y = yloc + dist * Sin(angle * bj_DEGTORAD)
		r = Rect(x - 100., y - 100., x + 100., y + 100.)
		EnumDestructablesInRect(r, nil, Trig_water_explosion_Dest_Actions)
		RemoveRect(r)
		r = nil
		DestroyEffect(AddSpecialEffect("war3mapImported\\s_WateryAura.mdx", x, y))
		DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Naga\\NagaDeath\\NagaDeath.mdl", x, y))
		GroupEnumUnitsInRange(g, x, y, 100., nil)
		GroupAddGroup(g, gmain)
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		bj_forLoopAIndex = bj_forLoopAIndex + 1
		angle = angle + angle2
	end
	while(true) do
		Picked = FirstOfGroup(gmain)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			StunUnitTimed(Picked, stuntime)
		end
		GroupRemoveUnit(gmain, Picked)
	end
	SaveInteger(udg_hash, h, 1, amount - 6)
	if amount < -1 then
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	else
		TimerStart(t, .75, false, Trig_water_explosion_periodic_Actions)
	end
	t = nil
	caster = nil
	GroupClear(gmain)
	DestroyGroup(gmain)
	gmain = nil
	p = nil
	Picked = nil
end

function Trig_water_explosion_Actions()
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local amount = $D ---@type number integer
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc = GetSpellTargetLoc() ---@type location
	local xloc = GetLocationX(loc) ---@type number real
	local yloc = GetLocationY(loc) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A071')) ---@type number integer
	local damage ---@type number real
	local stuntime = 1.35 + (.15 * lvl) ---@type number real
	if lvl == 1 then
		damage = 30.
	end
	if lvl == 2 then
		damage = 55.
	end
	if lvl == 3 then
		damage = 75.
	end
	if lvl == 4 then
		damage = 110.
	end
	if lvl == 5 then
		damage = 145.
	end
	if lvl == 6 then
		damage = 190.
	end
	SaveInteger(udg_hash, h, 1, amount)
	SaveUnitHandle(udg_hash, h, 2, caster)
	SaveReal(udg_hash, h, 3, xloc)
	SaveReal(udg_hash, h, 4, yloc)
	SaveReal(udg_hash, h, 5, damage)
	SaveReal(udg_hash, h, 6, stuntime)
	TimerStart(t, .06, false, Trig_water_explosion_periodic_Actions)
	t = nil
	caster = nil
	RemoveLocation(loc)
	loc = nil
end

---@return boolean
function Trig_water_explosion_Conditions()
	return GetSpellAbilityId() == FourCC('A071')
end

function InitTrig_Water_Explosion()
	local index = 0 ---@type number integer
	gg_trg_Water_Explosion = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Water_Explosion, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Water_Explosion, Condition(Trig_water_explosion_Conditions))
	TriggerAddAction(gg_trg_Water_Explosion, Trig_water_explosion_Actions)
end

function Trig_Tsunami_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local wait = LoadInteger(udg_hash, h, 2) ---@type number integer
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local g = LoadGroupHandle(udg_hash, h, 4) ---@type group
	local water ---@type unit
	local lop = 1 ---@type number integer
	local grup = CreateGroup() ---@type group
	local Picked ---@type unit
	local x ---@type number real
	local y ---@type number real
	local create ---@type boolean
	local count ---@type number integer
	local lopa ---@type number integer
	local dammi ---@type unit
	if wait > 0 then
		while(true) do
			if (lop > 60) then break end
			water[lop] = LoadUnitHandle(udg_hash, h, 5 + lop)
			x = GetUnitX(water[lop]) + 25. * Cos(GetUnitFacing(water[lop]) * bj_DEGTORAD)
			y = GetUnitY(water[lop]) + 25. * Sin(GetUnitFacing(water[lop]) * bj_DEGTORAD)
			if IsTerrainPathable(x, y, PATHING_TYPE_FLYABILITY) == false then
				SetUnitPosition(water[lop], x, y)
			end
			GroupEnumUnitsInRange(grup, x, y, FourCC('}'), nil)
			while(true) do
				Picked = FirstOfGroup(grup)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, GetOwningPlayer(caster)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitInGroup(Picked, g) == false then
					UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					AddSpecialEffectTarget("Abilities\\Spells\\Other\\CrushingWave\\CrushingWaveDamage.mdl", Picked, "chest")
					GroupAddUnit(g, Picked)
				end
				GroupRemoveUnit(grup, Picked)
			end
			Picked = nil
			water[lop] = nil
			lop = lop + 1
		end
		wait = wait - 1
		SaveInteger(udg_hash, h, 2, wait)
		SaveGroupHandle(udg_hash, h, 4, g)
	else
		create = LoadBoolean(udg_hash, h, 5)
		if create then
			count = (GetUnitAbilityLevel(caster, FourCC('A06Z')) + 2) - LoadInteger(udg_hash, GetHandleId(caster), 64)
			SaveInteger(udg_hash, GetHandleId(caster), 64, GetUnitAbilityLevel(caster, FourCC('A06Z')) + 2)
			lopa = 1
			while(true) do
				if (lopa > count) then break end
				water[lop] = LoadUnitHandle(udg_hash, h, 5 + GetRandomInt(1, 60))
				dammi = CreateUnit(GetOwningPlayer(caster), udg_spirits_of_water[GetUnitAbilityLevel(caster, FourCC('A06Z'))], GetUnitX(water[lop]), GetUnitY(water[lop]), GetRandomReal(0, 360))
				SaveUnitHandle(udg_hash, GetHandleId(dammi), 63, caster)
				dammi = nil
				water[lop] = nil
				lopa = lopa + 1
			end
		end
		while(true) do
			if (lop > 60) then break end
			water[lop] = LoadUnitHandle(udg_hash, h, 5 + lop)
			x = GetUnitX(water[lop])
			y = GetUnitY(water[lop])
			if lop - (lop / 2) * 2 == 0 then
				AddSpecialEffect("Objects\\Spawnmodels\\Naga\\NagaDeath\\NagaDeath.mdl", x, y)
			end
			if lop - (lop / 4) * 4 == 0 then
				AddSpecialEffect("war3mapImported\\AquaSpike.mdx", x, y)
			end
			DestroyEffect(LoadEffectHandle(udg_hash, GetHandleId(water[lop]), 1))
			KillUnit(water[lop])
			water[lop] = nil
			FlushChildHashtable(udg_hash, GetHandleId(water[lop]))
			lop = lop + 1
		end
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	DestroyGroup(grup)
	grup = nil
	t = nil
	caster = nil
	g = nil
end

function Trig_Tsunami_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local loc = GetSpellTargetLoc() ---@type location
	local xloc = GetLocationX(loc) ---@type number real
	local yloc = GetLocationY(loc) ---@type number real
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local water ---@type unit
	local lopa = 1 ---@type number integer
	local lopb = 1 ---@type number integer
	local anglecaster = bj_RADTODEG * Atan2(yloc - GetUnitY(caster), xloc - GetUnitX(caster)) ---@type number real
	local xsmec = xc - 400. * Cos(anglecaster * bj_DEGTORAD) ---@type number real
	local ysmec = yc - 400. * Sin(anglecaster * bj_DEGTORAD) ---@type number real
	local anglesmec = .0 ---@type number real
	local xp = xsmec + 630. * Cos((anglecaster - 90.) * bj_DEGTORAD) ---@type number real
	local yp = ysmec + 630. * Sin((anglecaster - 90.) * bj_DEGTORAD) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = 40 ---@type number integer
	local lvl = GetUnitAbilityLevel(caster, FourCC('A078')) ---@type number integer
	local lvlup = GetUnitAbilityLevel(caster, FourCC('A0Q9')) ---@type number integer
	local create ---@type boolean
	local damage ---@type number real
	local g = CreateGroup() ---@type group
	local ef ---@type effect
	if lvl > 0 then
		damage = lvl * (2. * (62.5 + GetHeroInt(caster, true)))
		create = false
	end
	if lvlup > 0 then
		damage = lvlup * (2. * (87.5 + GetHeroInt(caster, true))) + 25.
		create = true
	end
	while(true) do
		if (lopa > 3) then break end
		xp = xp + 80. * Cos(anglecaster * bj_DEGTORAD)
		yp = yp + 80. * Sin(anglecaster * bj_DEGTORAD)
		lopb = 1
		while(true) do
			if (lopb > 20) then break end
			if IsTerrainPathable(xp - (lopb * 60.) * Cos((anglecaster - 90.) * bj_DEGTORAD), yp - (lopb * 60.) * Sin((anglecaster - 90.) * bj_DEGTORAD), PATHING_TYPE_FLYABILITY) == false then
				water[(20 * lopa) + lopb - 20] = CreateUnit(p, FourCC('h00U'), xp - (lopb * 60.) * Cos((anglecaster - 90.) * bj_DEGTORAD), yp - (lopb * 60.) * Sin((anglecaster - 90.) * bj_DEGTORAD), anglecaster)
				ef = AddSpecialEffectTarget("war3mapImported\\s_WateryAura.mdx", water[(20 * lopa) + lopb - 20], "chest")
				SaveUnitHandle(udg_hash, h, 5 + (20 * lopa) + lopb - 20, water[(20 * lopa) + lopb - 20])
				SaveEffectHandle(udg_hash, GetHandleId(water[(20 * lopa) + lopb - 20]), 1, ef)
				ef = nil
				water[(20 * lopa) + lopb - 20] = nil
			end
			lopb = lopb + 1
		end
		lopa = lopa + 1
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveInteger(udg_hash, h, 2, wait)
	SaveReal(udg_hash, h, 3, damage)
	SaveBoolean(udg_hash, h, 5, create)
	SaveGroupHandle(udg_hash, h, 4, g)
	TimerStart(t, .04, true, Trig_Tsunami_periodic_Actions)
	caster = nil
	p = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	g = nil
end

---@return boolean
function Trig_Tsunami_Conditions()
	return (GetSpellAbilityId() == FourCC('A078') or GetSpellAbilityId() == FourCC('A0Q9'))
end

function InitTrig_Tsunami()
	local index = 0 ---@type number integer
	gg_trg_Tsunami = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Tsunami, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Tsunami, Condition(Trig_Tsunami_Conditions))
	TriggerAddAction(gg_trg_Tsunami, Trig_Tsunami_Actions)
end

function Trig_Guardsman_Load_Actions()
	AbilityPreload(FourCC('A0EZ'), 6)
	AbilityPreload(FourCC('A0ET'), 6)
	AbilityPreload(FourCC('A0EU'), 6)
	AbilityPreload(FourCC('A0EY'), 3)
	AbilityPreload(FourCC('A0EV'), 1)
	AbilityPreload(FourCC('A0EX'), 2)
	AbilityPreload(FourCC('A0F0'), 6)
	AbilityPreload(FourCC('B02I'), 1)
	AbilityPreload(FourCC('B02J'), 1)
	EffectPreload("Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile_mini.mdl")
	EffectPreload("Abilities\\Spells\\Human\\Defend\\DefendCaster.mdl")
	EffectPreload("Abilities\\Spells\\NightElf\\BattleRoar\\RoarCaster.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\Bloodlust\\BloodlustTarget.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl")
	EffectPreload("Abilities\\Spells\\Human\\StormBolt\\StormBoltMissile.mdl")
	EnableTrigger(gg_trg_Protective_Stand_Switch)
	EnableTrigger(gg_trg_Learn_Fighting_Skills)
	EnableTrigger(gg_trg_Ram_Board)
	EnableTrigger(gg_trg_Warcry)
end

function InitTrig_Guardsman_Load()
	gg_trg_Guardsman_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Guardsman_Load, Trig_Guardsman_Load_Actions)
end

function Trig_Protective_Stand_Switch_Actions()
	local caster = GetTriggerUnit() ---@type unit
	local h = GetHandleId(caster) ---@type number integer
	local bonus = 5 + 5 * GetUnitAbilityLevel(caster, FourCC('A0EU')) ---@type number integer
	if caster == GetDyingUnit() then
		SaveBoolean(udg_hash, GetHandleId(caster), 3, true)
	else
		if LoadBoolean(udg_hash, GetHandleId(caster), 3) == false then
			if (GetIssuedOrderId() == $D0057) then
				if GetUnitAbilityLevel(caster, FourCC('A0EU')) > 0 then
					SetAttackSpeedAbilityLevel(caster, -(bonus))
				end
				SaveBoolean(udg_hash, GetHandleId(caster), 1, true)
			end
			if (GetIssuedOrderId() == $D0058) then
				if GetUnitAbilityLevel(caster, FourCC('A0EU')) > 0 then
					SetAttackSpeedAbilityLevel(caster, bonus)
				end
				SaveBoolean(udg_hash, GetHandleId(caster), 1, false)
			end
		else
			SaveBoolean(udg_hash, GetHandleId(caster), 3, false)
		end
	end
	caster = nil
end

---@return boolean
function Trig_Protective_Stand_Switch_Conditions()
	return GetUnitAbilityLevel(GetTriggerUnit(), FourCC('A0ET')) > 0
end

function InitTrig_Protective_Stand_Switch()
	local index = 0 ---@type number integer
	gg_trg_Protective_Stand_Switch = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Protective_Stand_Switch, Player(index), EVENT_PLAYER_UNIT_ISSUED_ORDER, nil)
		TriggerRegisterPlayerUnitEvent(gg_trg_Protective_Stand_Switch, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Protective_Stand_Switch, Condition(Trig_Protective_Stand_Switch_Conditions))
	TriggerAddAction(gg_trg_Protective_Stand_Switch, Trig_Protective_Stand_Switch_Actions)
end

function Trig_Learn_Fighting_Skills_Actions()
	local u = GetLearningUnit() ---@type unit
	local h = GetHandleId(u) ---@type number integer
	local lvl = GetUnitAbilityLevel(u, FourCC('A0EU')) ---@type number integer
	if lvl == 1 then
		SaveInteger(udg_hash, h, 2, $A)
		SetAttackAbilityLevel(u, $A)
		SetArmorAbilityLevel(u, 2)
		if LoadBoolean(udg_hash, h, 1) == false then
			SetAttackSpeedAbilityLevel(u, $A)
		end
	else
		SetAttackAbilityLevel(u, 5)
		SetArmorAbilityLevel(u, 1)
		if LoadBoolean(udg_hash, h, 1) == false then
			SetAttackSpeedAbilityLevel(u, 5)
		end
	end
	u = nil
end

---@return boolean
function Trig_Learn_Fighting_Skills_Conditions()
	return GetLearnedSkill() == FourCC('A0EU') and GetUnitTypeId(GetLearningUnit()) ~= FourCC('h00U')
end

function InitTrig_Learn_Fighting_Skills()
	local index = 0 ---@type number integer
	gg_trg_Learn_Fighting_Skills = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Fighting_Skills, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Fighting_Skills, Condition(Trig_Learn_Fighting_Skills_Conditions))
	TriggerAddAction(gg_trg_Learn_Fighting_Skills, Trig_Learn_Fighting_Skills_Actions)
end

function Trig_Ram_Board_Move_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_Ram_Board_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gdamage = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local lvlstun = LoadInteger(udg_hash, h, 4) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local face = LoadReal(udg_hash, h, 6) ---@type number real
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local angle ---@type number real
	local angle2 ---@type number real
	local dammi ---@type unit
	local alife = true ---@type boolean
	local r = Rect(x - 100., y - 100., x + 100., y + 100.) ---@type rect
	EnumDestructablesInRect(r, nil, Trig_Ram_Board_Move_Dest_Actions)
	if GetUnitState(caster, UNIT_STATE_LIFE) < .405 then
		alife = false
	end
	if wait > 0 and alife then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		SetUnitFacing(caster, face)
		SetUnitAnimationByIndex(caster, 8)
		GroupEnumUnitsInRange(g, x, y, 125., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(gdamage, Picked)
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\StormBolt\\StormBoltMissile.mdl", Picked, "chest"))
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), .5)
				UnitAddAbility(dammi, FourCC('A0EX'))
				SetUnitAbilityLevel(dammi, FourCC('A0EX'), lvlstun)
				IssueTargetOrderById(dammi, $D007F, Picked)
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				dammi = nil
				angle = bj_RADTODEG * Atan2(GetUnitY(Picked) - y, GetUnitX(Picked) - x)
				angle2 = (Atan2(y - GetUnitY(Picked), x - GetUnitX(Picked)) * bj_RADTODEG) + 360.
				if (angle2 <= (GetUnitFacing(caster) + 210.) and angle2 >= (GetUnitFacing(caster) + 180.)) then
					angle = angle + 30.
				end
				if (angle2 <= (GetUnitFacing(caster) + 180.) and angle2 >= (GetUnitFacing(caster) + 150.)) then
					angle = angle - 30.
				end
				MoveUnit(Picked, 1., 400., 400., angle, .0, false)
			end
			GroupRemoveUnit(g, Picked)
		end
		SaveGroupHandle(udg_hash, h, 2, gdamage)
	else
		if alife then
			if LoadBoolean(udg_hash, GetHandleId(caster), 1) then
				SetUnitAnimation(caster, "Stand Defend")
			else
				SetUnitAnimation(caster, "stand")
			end
		end
		SetUnitPathing(caster, true)
		SetUnitTimeScale(caster, 1.)
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	gdamage = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	p = nil
	Picked = nil
	dammi = nil
	RemoveRect(r)
	r = nil
end

function Trig_Ram_Board_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local gdamage = CreateGroup() ---@type group
	local lvlstun = 1 ---@type number integer
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0EZ')) ---@type number integer
	local stuck = 0 ---@type number integer
	local tstuck ---@type timer
	local damage = (15. + (35. * lvl)) + (GetHeroStr(caster, true) * (.5 + .25 * lvl)) ---@type number real
	local loc ---@type location
	local tx ---@type number real
	local ty ---@type number real
	local dist ---@type number real
	local time ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetUnitAnimation(caster, "stand")
	SetUnitPathing(caster, false)
	SetUnitAnimationByIndex(caster, 8)
	SetUnitTimeScale(caster, 2.)
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	dist = SquareRoot((tx - x) * (tx - x) + (ty - y) * (ty - y))
	if target == caster then
		angle = GetUnitFacing(caster)
		dist = 750.
	end
	time = dist / 500.
	MoveUnit(caster, time, 500., .0, angle, .0, true)
	if GetUnitAbilityLevel(caster, FourCC('A0ET')) > 0 then
		if LoadBoolean(udg_hash, GetHandleId(caster), 1) == false then
			damage = damage * 1.3
		else
			lvlstun = 2
		end
	end
	if HaveSavedHandle(udg_hash, GetHandleId(caster), 59) then
		tstuck = LoadTimerHandle(udg_hash, GetHandleId(caster), 59)
		stuck = LoadInteger(udg_hash, GetHandleId(tstuck), 1)
		if GetRandomInt(1, $A) <= stuck then
			UnitRemoveAbility(caster, FourCC('A0EZ'))
			UnitAddAbility(caster, FourCC('A0EZ'))
			SetUnitAbilityLevel(caster, FourCC('A0EZ'), lvl)
			CreateTexttag("|cFFFF4B00Refresh Ability|r", .023, $FF, x - 75., y, .0, .0, .035, 3.5)
		end
		tstuck = nil
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	SaveReal(udg_hash, h, 3, damage)
	SaveInteger(udg_hash, h, 4, lvlstun)
	SaveInteger(udg_hash, h, 5, R2I(dist / 15.))
	SaveReal(udg_hash, h, 6, angle)
	TimerStart(t, .03, true, Trig_Ram_Board_Move_Actions)
	caster = nil
	target = nil
	gdamage = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
end

---@return boolean
function Trig_Ram_Board_Conditions()
	return GetSpellAbilityId() == FourCC('A0EZ')
end

function InitTrig_Ram_Board()
	local index = 0 ---@type number integer
	gg_trg_Ram_Board = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ram_Board, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ram_Board, Condition(Trig_Ram_Board_Conditions))
	TriggerAddAction(gg_trg_Ram_Board, Trig_Ram_Board_Actions)
end

function Trig_Warcry_Buff_Removes_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local stuck = LoadInteger(udg_hash, h, 1) ---@type number integer
	SetAttackSpeedAbilityLevel(target, (-stuck * $A))
	SetArmorAbilityLevel(target, (-stuck * 3))
	SetAttackAbilityLevel(target, (-stuck * 7))
	if GetUnitAbilityLevel(target, FourCC('A0EY')) > 0 then
		SetUnitLifeAndManaRegeneration(target, "life", -(3 * stuck))
		SetHeroStr(target, GetHeroStr(target, false) - ($A * stuck), true)
	end
	SaveInteger(udg_hash, h, 1, 0)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	target = nil
end

function Trig_Warcry_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0EY')) * 2 ---@type number integer
	local stuck = 0 ---@type number integer
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	local t ---@type timer
	local h ---@type number integer
	GroupEnumUnitsInRange(g, x, y, 500., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitAlly(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			t = LoadTimerHandle(udg_hash, GetHandleId(Picked), 59)
			stuck = LoadInteger(udg_hash, GetHandleId(t), 1)
			if t == nil then
				t = CreateTimer()
				stuck = 0
				SaveUnitHandle(udg_hash, GetHandleId(t), 2, Picked)
				SaveTimerHandle(udg_hash, GetHandleId(Picked), 59, t)
			end
			h = GetHandleId(t)
			if stuck < lvl then
				if Picked == caster then
					SetHeroStr(caster, GetHeroStr(caster, false) + $A, true)
					SetUnitLifeAndManaRegeneration(caster, "life", 3)
				end
				SetAttackSpeedAbilityLevel(Picked, $A)
				SetArmorAbilityLevel(Picked, 3)
				SetAttackAbilityLevel(Picked, 7)
				stuck = stuck + 1
				SaveInteger(udg_hash, h, 1, stuck)
			end
			dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.5)
			UnitAddAbility(dammi, FourCC('A0F0'))
			SetUnitAbilityLevel(dammi, FourCC('A0F0'), stuck)
			UnitRemoveAbility(Picked, FourCC('B02J'))
			IssueTargetOrderById(dammi, $D0085, Picked)
			dammi = nil
			TimerStart(t, 10., false, Trig_Warcry_Buff_Removes_Actions)
			t = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	caster = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
	dammi = nil
	t = nil
end

---@return boolean
function Trig_Warcry_Conditions()
	return GetSpellAbilityId() == FourCC('A0EY')
end

function InitTrig_Warcry()
	local index = 0 ---@type number integer
	gg_trg_Warcry = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Warcry, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Warcry, Condition(Trig_Warcry_Conditions))
	TriggerAddAction(gg_trg_Warcry, Trig_Warcry_Actions)
end

function Trig_Drenor_Bull_Load_Actions()
	AbilityPreload(FourCC('A0B1'), 6)
	AbilityPreload(FourCC('A0B0'), 6)
	AbilityPreload(FourCC('A0B2'), 6)
	AbilityPreload(FourCC('A0AZ'), 3)
	AbilityPreload(FourCC('A075'), 1)
	AbilityPreload(FourCC('A0AY'), 1)
	EffectPreload("Abilities\\Spells\\Orc\\WarDrums\\DrumsCasterHeal.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\StasisTrap\\StasisTotemTarget.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPriest.mdl")
	EffectPreload("Abilities\\Spells\\NightElf\\BattleRoar\\RoarCaster.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl")
	EffectPreload("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl")
	EnableTrigger(gg_trg_Axe_Throw)
	EnableTrigger(gg_trg_Violent_Roar)
	EnableTrigger(gg_trg_upgrade_Berserk)
	EnableTrigger(gg_trg_Learn_Spell_Rage)
	EnableTrigger(gg_trg_Drenor_Bull_Show_Hint)
	EnableTrigger(gg_trg_Drenor_Bull_Show_Rage)
end

function InitTrig_Drenor_Bull_Load()
	gg_trg_Drenor_Bull_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Drenor_Bull_Load, Trig_Drenor_Bull_Load_Actions)
end

function Trig_Drenor_Bull_Show_Hint_Actions()
	DisplayTextToForce(udg_Drenor_Bull_Hint_Player_Group, "Чтобы узнать количество накопленной Грог'Таром ярости, введи в чат команду \"|cff99ccff-rage/-r|r\".")
end

function InitTrig_Drenor_Bull_Show_Hint()
	gg_trg_Drenor_Bull_Show_Hint = CreateTrigger()
	DisableTrigger(gg_trg_Drenor_Bull_Show_Hint)
	TriggerRegisterTimerEventPeriodic(gg_trg_Drenor_Bull_Show_Hint, 120.)
	TriggerAddAction(gg_trg_Drenor_Bull_Show_Hint, Trig_Drenor_Bull_Show_Hint_Actions)
end

---@return boolean
function Trig_Drenor_Bull_Show_Rage_Conditions()
	return (IsPlayerInForce(GetTriggerPlayer(), udg_Drenor_Bull_Hint_Player_Group))
end

---@return boolean
function Trig_Drenor_Bull_Show_Rage_Func001C()
	return (udg_GrorTar ~= nil) and (GetUnitAbilityLevelSwapped(FourCC('A0B2'), udg_GrorTar) > 0)
end

function Trig_Drenor_Bull_Show_Rage_Actions()
	if (Trig_Drenor_Bull_Show_Rage_Func001C()) then
		DisplayTextToForce(GetForceOfPlayer(GetTriggerPlayer()), ("Ярость Грог'Тара: |cFFF0692D" .. (I2S(udg_DrenorBugaiRage) .. ("|r ( максимум: |cFFF0692D" .. (I2S(((GetUnitAbilityLevelSwapped(FourCC('A0B2'), udg_GrorTar) * FourCC('}')) + (GetUnitAbilityLevelSwapped(FourCC('A0AZ'), udg_GrorTar) * 75))) .. "|r)")))))
	else
		DisplayTextToForce(GetForceOfPlayer(GetTriggerPlayer()), ("Ярость Грог'Тара: |cFFF0692D" .. ("0" .. ("|r ( максимум: |cFFF0692D" .. ("0|r)")))))
	end
end

function InitTrig_Drenor_Bull_Show_Rage()
	local index = 0 ---@type number integer
	gg_trg_Drenor_Bull_Show_Rage = CreateTrigger()
	DisableTrigger(gg_trg_Drenor_Bull_Show_Rage)
	while(true) do
		TriggerRegisterPlayerChatEvent(gg_trg_Drenor_Bull_Show_Rage, Player(index), "-rage", true)
		TriggerRegisterPlayerChatEvent(gg_trg_Drenor_Bull_Show_Rage, Player(index), "-r", true)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Drenor_Bull_Show_Rage, Condition(Trig_Drenor_Bull_Show_Rage_Conditions))
	TriggerAddAction(gg_trg_Drenor_Bull_Show_Rage, Trig_Drenor_Bull_Show_Rage_Actions)
end

function Trig_Axe_Throw_move_2()
	KillDestructable(GetEnumDestructable())
end

function Trig_Axe_Throw_move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local axe = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local g = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local caster = LoadUnitHandle(udg_hash, h, 6) ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local x = GetUnitX(axe) + 32. * Cos(GetUnitFacing(axe) * bj_DEGTORAD) ---@type number real
	local y = GetUnitY(axe) + 32. * Sin(GetUnitFacing(axe) * bj_DEGTORAD) ---@type number real
	local r = Rect(x - 130., y - 130., x + 130., y + 130.) ---@type rect
	local grup = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		EnumDestructablesInRect(r, nil, Trig_Axe_Throw_move_2)
		if IsTerrainPathable(x, y, PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(axe, x, y)
		end
		if wait == 20 or wait == 16 or wait == $C or wait == 8 or wait == 4 then
			DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl", x, y))
		end
		GroupEnumUnitsInRange(grup, x, y, FourCC('}'), nil)
		while(true) do
			Picked = FirstOfGroup(grup)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, GetOwningPlayer(axe)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitInGroup(Picked, g) == false and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), .5)
				UnitAddAbility(dammi, FourCC('A0F1'))
				IssueTargetOrderById(dammi, $D007F, Picked)
				dammi = nil
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPriest.mdl", Picked, "chest"))
				GroupAddUnit(g, Picked)
			end
			GroupRemoveUnit(grup, Picked)
		end
		SaveGroupHandle(udg_hash, h, 2, g)
	else
		DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", x, y))
		DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl", x, y))
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		KillUnit(axe)
		RemoveUnit(dammi)
		GroupClear(g)
		DestroyGroup(g)
		g = nil
	end
	Picked = nil
	DestroyGroup(grup)
	grup = nil
	t = nil
	axe = nil
	g = nil
	dammi = nil
	RemoveRect(r)
	r = nil
	caster = nil
	p = nil
end

function Trig_Axe_Throw_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local loc ---@type location
	local xt ---@type number real
	local yt ---@type number real
	local axe ---@type unit
	local g = CreateGroup() ---@type group
	local damage3 = 10. + (50. * I2R(GetUnitAbilityLevel(caster, FourCC('A0B1')))) ---@type number real
	local damage2 = I2R(udg_DrenorBugaiRage) / 3. ---@type number real
	local damage = (1. + (.2 * I2R(GetUnitAbilityLevel(caster, FourCC('A0AZ'))))) * (damage2 + damage3) ---@type number real
	local wait = 20 ---@type number integer
	if GetSpellTargetUnit() == nil then
		loc = GetSpellTargetLoc()
		xt = GetLocationX(loc)
		yt = GetLocationY(loc)
		RemoveLocation(loc)
		loc = nil
	else
		xt = GetUnitX(GetSpellTargetUnit())
		yt = GetUnitY(GetSpellTargetUnit())
	end
	if (udg_DrenorBugaiRage <= (((FourCC('}') * GetUnitAbilityLevel(caster, FourCC('A0B2')) + (75 * GetUnitAbilityLevel(caster, FourCC('A0AZ')))) - 30))) then
		udg_DrenorBugaiRage = udg_DrenorBugaiRage + 30
		SetAttackSpeedAbilityLevel(udg_GrorTar, 6)
	end
	DisableTrigger(gg_trg_Sniatie_Rage)
	TimerStart(udg_GrogTarRageTimer, 4., false, nil)
	axe = CreateUnit(GetOwningPlayer(caster), FourCC('h01J'), x, y, bj_RADTODEG * Atan2(yt - y, xt - x))
	UnitAddAbility(axe, FourCC('Amrf'))
	UnitRemoveAbility(axe, FourCC('Amrf'))
	SetUnitTimeScale(axe, 2.5)
	SetUnitFlyHeight(axe, 15., 80.)
	SaveUnitHandle(udg_hash, h, 1, axe)
	SaveGroupHandle(udg_hash, h, 2, g)
	SaveReal(udg_hash, h, 3, damage)
	SaveInteger(udg_hash, h, 5, wait)
	SaveUnitHandle(udg_hash, h, 6, caster)
	TimerStart(t, .03, true, Trig_Axe_Throw_move_Actions)
	caster = nil
	t = nil
	axe = nil
	g = nil
end

---@return boolean
function Trig_Axe_Throw_Conditions()
	return GetSpellAbilityId() == FourCC('A0B1')
end

function InitTrig_Axe_Throw()
	local index = 0 ---@type number integer
	gg_trg_Axe_Throw = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Axe_Throw, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Axe_Throw, Condition(Trig_Axe_Throw_Conditions))
	TriggerAddAction(gg_trg_Axe_Throw, Trig_Axe_Throw_Actions)
end

function Trig_Violent_Roar_periodic()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local xc = LoadReal(udg_hash, h, 2) ---@type number real
	local yc = LoadReal(udg_hash, h, 3) ---@type number real
	local damage = LoadReal(udg_hash, h, 4) ---@type number real
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	local angle ---@type number real
	local x ---@type number real
	local y ---@type number real
	local dist ---@type number real
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		if wait == $E then
			GroupEnumUnitsInRange(g, xc, yc, 400., nil)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, GetOwningPlayer(caster)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
					UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
					UnitAddAbility(dammi, FourCC('A075'))
					IssueTargetOrderById(dammi, $D00DD, Picked)
					dammi = nil
				end
				GroupRemoveUnit(g, Picked)
			end
			Picked = nil
		end
		GroupEnumUnitsInRange(g, xc, yc, 400., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, GetOwningPlayer(caster)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				x = GetUnitX(Picked)
				y = GetUnitY(Picked)
				angle = bj_RADTODEG * Atan2(y - yc, x - xc)
				dist = SquareRoot((x - xc) * (x - xc) + (y - yc) * (y - yc))
				x = GetUnitX(Picked) + (21. - (dist / 20.)) * Cos(angle * bj_DEGTORAD)
				y = GetUnitY(Picked) + (21. - (dist / 20.)) * Sin(angle * bj_DEGTORAD)
				if IsTerrainPathable(x, y, PATHING_TYPE_WALKABILITY) == false and GetTerrainCliffLevel(x, y) == GetTerrainCliffLevel(GetUnitX(Picked) - (21. - (dist / 20.)) * Cos(angle * bj_DEGTORAD), GetUnitY(Picked) - (21. - (dist / 20.)) * Sin(angle * bj_DEGTORAD)) then
					SetUnitX(Picked, x)
					SetUnitY(Picked, y)
				end
				if wait == $E then
					DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl", Picked, "chest"))
				end
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
	else
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	DestroyGroup(g)
	g = nil
end

function Trig_Violent_Roar_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local wait = $F ---@type number integer
	local ultalvl = 1. + (.2 * I2R(GetUnitAbilityLevel(caster, FourCC('A0AZ')))) ---@type number real
	local abilitylvl = 15. + (20. * I2R(GetUnitAbilityLevel(caster, FourCC('A0B0')))) ---@type number real
	local udgrage = I2R(udg_DrenorBugaiRage) / 20. ---@type number real
	local herostr = I2R(GetUnitAbilityLevel(caster, FourCC('A0B0'))) * (.2 * GetHeroStr(caster, true)) ---@type number real
	local damage = (ultalvl * (abilitylvl + udgrage + herostr)) / wait ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	if (udg_DrenorBugaiRage <= (((FourCC('}') * GetUnitAbilityLevel(caster, FourCC('A0B2')) + (75 * GetUnitAbilityLevel(caster, FourCC('A0AZ')))) - 30))) then
		udg_DrenorBugaiRage = udg_DrenorBugaiRage + 30
		SetAttackSpeedAbilityLevel(udg_GrorTar, 6)
	end
	DisableTrigger(gg_trg_Sniatie_Rage)
	TimerStart(udg_GrogTarRageTimer, 4., false, nil)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, x)
	SaveReal(udg_hash, h, 3, y)
	SaveReal(udg_hash, h, 4, damage)
	SaveInteger(udg_hash, h, 5, wait)
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\BattleRoar\\RoarCaster.mdl", x, y))
	TimerStart(t, .04, true, Trig_Violent_Roar_periodic)
end

---@return boolean
function Trig_Violent_Roar_Conditions()
	return GetSpellAbilityId() == FourCC('A0B0')
end

function InitTrig_Violent_Roar()
	local index = 0 ---@type number integer
	gg_trg_Violent_Roar = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Violent_Roar, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Violent_Roar, Condition(Trig_Violent_Roar_Conditions))
	TriggerAddAction(gg_trg_Violent_Roar, Trig_Violent_Roar_Actions)
end

---@return boolean
function Trig_upgrade_Berserk_Conditions()
	return GetLearnedSkill() == FourCC('A0AZ')
end

function Trig_upgrade_Berserk_Actions()
	SetPlayerTechResearched(GetOwningPlayer(GetTriggerUnit()), FourCC('R007'), GetLearnedSkillLevel())
end

function InitTrig_upgrade_Berserk()
	local index = 0 ---@type number integer
	gg_trg_upgrade_Berserk = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_upgrade_Berserk, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_upgrade_Berserk, Condition(Trig_upgrade_Berserk_Conditions))
	TriggerAddAction(gg_trg_upgrade_Berserk, Trig_upgrade_Berserk_Actions)
end

function Trig_Learn_Spell_Rage_Actions_Timer()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local txt = LoadTextTagHandle(udg_hash, h, 2) ---@type texttag
	local x = GetUnitX(hero) ---@type number real
	local y = GetUnitY(hero) ---@type number real
	local alife = LoadBoolean(udg_hash, h, 3) ---@type boolean
	if (GetUnitState(hero, UNIT_STATE_LIFE) < .405 and alife) then
		alife = false
		SaveBoolean(udg_hash, h, 3, alife)
		SetTextTagVisibility(txt, false)
	end
	if (GetUnitState(hero, UNIT_STATE_LIFE) > .405 and alife == false) then
		alife = true
		SaveBoolean(udg_hash, h, 3, alife)
		SetTextTagVisibility(txt, true)
	end
	if (GetUnitState(hero, UNIT_STATE_LIFE) > .405 and alife) then
		alife = true
		SaveBoolean(udg_hash, h, 3, alife)
		SetTextTagText(txt, "|cFFF0692D" .. I2S(udg_DrenorBugaiRage) .. "|r|cFF969696/|r|cFFF0692D" .. I2S((((FourCC('}') * GetUnitAbilityLevel(hero, FourCC('A0B2')) + (75 * GetUnitAbilityLevel(hero, FourCC('A0AZ'))))))) .. "|r", .027)
		SetTextTagPos(txt, GetUnitX(hero) - 40., GetUnitY(hero) + 100., .0)
	end
	t = nil
	hero = nil
	txt = nil
end

function Trig_Learn_Spell_Rage_Actions()
	local lvl = GetUnitAbilityLevel(GetLearningUnit(), FourCC('A0B2')) ---@type number integer
	local t ---@type timer
	local h ---@type number integer
	local txt ---@type texttag
	local hero ---@type unit
	if lvl == 1 then
		udg_GrorTar = GetLearningUnit()
		udg_DrenorBugaiRage = 0
		EnableTrigger(gg_trg_attack_hero_Rage)
		EnableTrigger(gg_trg_kill_hero_Rage)
		EnableTrigger(gg_trg_Timer_Rage)
		EnableTrigger(gg_trg_GrogTarDead)
		t = CreateTimer()
		h = GetHandleId(t)
		txt = CreateTextTag()
		hero = GetLearningUnit()
		SetTextTagText(txt, "|cFFF0692D" .. I2S(udg_DrenorBugaiRage) .. "|r|cFF969696/|r|cFFF0692D" .. I2S((((FourCC('}') * GetUnitAbilityLevel(hero, FourCC('A0B2')) + (75 * GetUnitAbilityLevel(hero, FourCC('A0AZ'))))))) .. "|r", .027)
		SetTextTagColor(txt, $FF, $FF, $FF, $FF)
		SetTextTagPos(txt, GetUnitX(hero) - 40., GetUnitY(hero) + 50., .0)
		SetTextTagPermanent(txt, true)
		SaveUnitHandle(udg_hash, h, 1, hero)
		SaveTextTagHandle(udg_hash, h, 2, txt)
		SaveBoolean(udg_hash, h, 3, true)
		TimerStart(t, .03, true, Trig_Learn_Spell_Rage_Actions_Timer)
		t = nil
		hero = nil
		txt = nil
	end
end

---@return boolean
function Trig_Learn_Spell_Rage_Conditions()
	return GetUnitAbilityLevel(GetLearningUnit(), FourCC('A0B2')) >= 1 and GetUnitTypeId(GetLearningUnit()) ~= FourCC('h00U') and GetLearnedSkill() == FourCC('A0B2')
end

function InitTrig_Learn_Spell_Rage()
	local index = 0 ---@type number integer
	gg_trg_Learn_Spell_Rage = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Spell_Rage, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Spell_Rage, Condition(Trig_Learn_Spell_Rage_Conditions))
	TriggerAddAction(gg_trg_Learn_Spell_Rage, Trig_Learn_Spell_Rage_Actions)
end

function Trig_GrogTarDead_Actions()
	SetAttackSpeedAbilityLevel(udg_GrorTar, -udg_DrenorBugaiRage / 5)
	udg_DrenorBugaiRage = 0
	DisableTrigger(gg_trg_Sniatie_Rage)
end

---@return boolean
function Trig_GrogTarDead_Conditions()
	return GetDyingUnit() == udg_GrorTar
end

function InitTrig_GrogTarDead()
	local index = 0 ---@type number integer
	gg_trg_GrogTarDead = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_GrogTarDead, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_GrogTarDead, Condition(Trig_GrogTarDead_Conditions))
	TriggerAddAction(gg_trg_GrogTarDead, Trig_GrogTarDead_Actions)
end

---@return boolean
function Trig_attack_hero_Rage_Conditions()
	return IsUnitEnemy(GetAttacker(), GetOwningPlayer(GetTriggerUnit())) and (GetUnitAbilityLevel(GetTriggerUnit(), FourCC('A0B2')) >= 1)
end

function Trig_attack_hero_Rage_Actions()
	local addrage = 0 ---@type number integer
	if (GetRandomInt(1, 2) == 1) then
		if udg_DrenorBugaiRage <= (((FourCC('}') * (GetUnitAbilityLevel(GetTriggerUnit(), FourCC('A0B2')))) + (75 * (GetUnitAbilityLevel(GetTriggerUnit(), FourCC('A0AZ'))))) - 1) then
			udg_DrenorBugaiRage = udg_DrenorBugaiRage + 1
			addrage = addrage + 1
			if (udg_DrenorBugaiRage / 5) * 5 >= udg_DrenorBugaiRage then
				SetAttackSpeedAbilityLevel(udg_GrorTar, 1)
			end
		else
			udg_DrenorBugaiRage = ((((FourCC('}') * (GetUnitAbilityLevel(GetTriggerUnit(), FourCC('A0B2'))))) + (75 * (GetUnitAbilityLevel(GetTriggerUnit(), FourCC('A0AZ'))))))
		end
	end
	DisableTrigger(gg_trg_Sniatie_Rage)
	TimerStart(udg_GrogTarRageTimer, 4., false, nil)
end

function InitTrig_attack_hero_Rage()
	local index = 0 ---@type number integer
	gg_trg_attack_hero_Rage = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_attack_hero_Rage, Player(index), EVENT_PLAYER_UNIT_ATTACKED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	DisableTrigger(gg_trg_attack_hero_Rage)
	TriggerAddCondition(gg_trg_attack_hero_Rage, Condition(Trig_attack_hero_Rage_Conditions))
	TriggerAddAction(gg_trg_attack_hero_Rage, Trig_attack_hero_Rage_Actions)
end

---@return boolean
function Trig_kill_hero_Rage_Conditions()
	return (GetUnitAbilityLevel(GetKillingUnit(), FourCC('A0B2')) >= 1)
end

function Trig_kill_hero_Rage_Actions()
	local addrage = 0 ---@type number integer
	if (udg_DrenorBugaiRage <= (((FourCC('}') * GetUnitAbilityLevel(GetKillingUnit(), FourCC('A0B2')))) + (75 * GetUnitAbilityLevel(GetKillingUnit(), FourCC('A0AZ')))) - 5) then
		udg_DrenorBugaiRage = udg_DrenorBugaiRage + 5
		addrage = addrage + 5
		SetAttackSpeedAbilityLevel(udg_GrorTar, 1)
		if (IsUnitType(GetDyingUnit(), UNIT_TYPE_ANCIENT) or IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO)) and (udg_DrenorBugaiRage <= (((FourCC('}') * GetUnitAbilityLevel(GetKillingUnit(), FourCC('A0B2')))) + (75 * GetUnitAbilityLevel(GetKillingUnit(), FourCC('A0AZ')))) - 85) then
			udg_DrenorBugaiRage = udg_DrenorBugaiRage + 85
			addrage = addrage + 85
			SetAttackSpeedAbilityLevel(udg_GrorTar, 9)
		end
	end
	DisableTrigger(gg_trg_Sniatie_Rage)
	TimerStart(udg_GrogTarRageTimer, 4., false, nil)
end

function InitTrig_kill_hero_Rage()
	local index = 0 ---@type number integer
	gg_trg_kill_hero_Rage = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_kill_hero_Rage, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	DisableTrigger(gg_trg_kill_hero_Rage)
	TriggerAddCondition(gg_trg_kill_hero_Rage, Condition(Trig_kill_hero_Rage_Conditions))
	TriggerAddAction(gg_trg_kill_hero_Rage, Trig_kill_hero_Rage_Actions)
end

function Trig_Sniatie_Rage_Action()
	if udg_DrenorBugaiRage >= 20 then
		udg_DrenorBugaiRage = udg_DrenorBugaiRage - 20
		SetAttackSpeedAbilityLevel(udg_GrorTar, -4)
	else
		udg_Temp_Integer[0] = (FourCC('}') * (GetUnitAbilityLevel(udg_GrorTar, FourCC('A0B2')))) + (75 * (GetUnitAbilityLevel(udg_GrorTar, FourCC('A0AZ'))))
		SetAttackSpeedAbilityLevel(udg_GrorTar, -udg_DrenorBugaiRage / 5)
		udg_DrenorBugaiRage = 0
	end
end

function InitTrig_Sniatie_Rage()
	gg_trg_Sniatie_Rage = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Sniatie_Rage, 3., true)
	TriggerAddAction(gg_trg_Sniatie_Rage, Trig_Sniatie_Rage_Action)
	DisableTrigger(gg_trg_Sniatie_Rage)
end

function Trig_Timer_last_Actions()
	EnableTrigger(gg_trg_Sniatie_Rage)
end

function InitTrig_Timer_Rage()
	gg_trg_Timer_Rage = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_Timer_Rage, udg_GrogTarRageTimer)
	TriggerAddAction(gg_trg_Timer_Rage, Trig_Timer_last_Actions)
end

function Trig_Illusionist_Load_Actions()
	AbilityPreload(FourCC('A0F6'), 6)
	AbilityPreload(FourCC('A0F5'), 6)
	AbilityPreload(FourCC('A0F3'), 6)
	AbilityPreload(FourCC('A0F2'), 3)
	AbilityPreload(FourCC('A0F7'), 6)
	AbilityPreload(FourCC('A0AY'), 4)
	AbilityPreload(FourCC('A0F4'), 6)
	AbilityPreload(FourCC('B02L'), 1)
	AbilityPreload(FourCC('B02K'), 1)
	AbilityPreload(FourCC('B02M'), 1)
	EffectPreload("Abilities\\Spells\\Orc\\Devour\\DevourEffectArt.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\MirrorImage\\MirrorImageDeathCaster.mdl")
	EffectPreload("Abilities\\Spells\\Undead\\Curse\\CurseTarget.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\MirrorImage\\MirrorImageMissile.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\MirrorImage\\MirrorImageCaster.mdl")
	EffectPreload("Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl")
	EffectPreload("Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathMissile.mdl")
	EffectPreload("Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayDamage.mdl")
	EffectPreload("Abilities\\Spells\\Undead\\DeathPact\\DeathPactCaster.mdl")
	EffectPreload("Abilities\\Spells\\Undead\\DeathPact\\DeathPactTarget.mdl")
	EnableTrigger(gg_trg_Reflection)
	EnableTrigger(gg_trg_Illusory_Attack)
	EnableTrigger(gg_trg_Summon_Illusions_with_Reflection)
	EnableTrigger(gg_trg_Illusions_with_Phantoms_Dead)
end

function InitTrig_Illusionist_Load()
	gg_trg_Illusionist_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Illusionist_Load, Trig_Illusionist_Load_Actions)
end

function Trig_Reflection_perodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local r = LoadRectHandle(udg_hash, h, 2) ---@type rect
	local x = GetRectCenterX(r) ---@type number real
	local y = GetRectCenterY(r) ---@type number real
	local tx ---@type number real
	local ty ---@type number real
	local wait = LoadInteger(udg_hash, h, 3) ---@type number integer
	local damage = LoadReal(udg_hash, h, 4) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local g = CreateGroup() ---@type group
	local gdamage = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	local dammi2 ---@type unit
	local target ---@type unit
	local orderId ---@type number integer
	orderId = $D0278
	if (orderId ~= 0) then
	else
		orderId = UnitId("channel")
		if (orderId ~= 0) then
		end
	end
	if order == orderId and wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 3, wait)
		GroupEnumUnitsInRect(g, r, nil)
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathPact\\DeathPactTarget.mdl", caster, "chest"))
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and (GetPlayerId(GetOwningPlayer(Picked)) ~= $D) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(gdamage, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		GroupClear(g)
		RandomUnitFromGroup(1, gdamage)
		GroupAddGroup(udg_GroupRandomUnitFromGroup, g)
		target = FirstOfGroup(g)
		tx = GetUnitX(target)
		ty = GetUnitY(target)
		dammi2 = CreateUnit(p, FourCC('h00U'), x, y, .0)
		UnitApplyTimedLife(dammi2, FourCC('BTLF'), 1.)
		UnitAddAbility(dammi2, FourCC('A0F4'))
		SetUnitAbilityLevel(dammi2, FourCC('A0F4'), GetUnitAbilityLevel(caster, FourCC('A0F6')))
		IssueTargetOrderById(dammi2, $D006B, target)
		dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
		SaveUnitHandle(udg_hash, GetHandleId(dammi), 2, target)
		SaveBoolean(udg_hash, GetHandleId(dammi), 3, true)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
		UnitAddAbility(dammi, FourCC('A0AY'))
		SetUnitAbilityLevel(dammi, FourCC('A0AY'), 1 + GetUnitAbilityLevel(caster, FourCC('A0F2')))
		IssueTargetOrderById(dammi, $D0132, caster)
		GroupClear(gdamage)
		GroupEnumUnitsInRange(gdamage, tx, ty, 150., nil)
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathPact\\DeathPactCaster.mdl", target, "origin"))
		while(true) do
			Picked = FirstOfGroup(gdamage)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayDamage.mdl", Picked, "origin"))
			end
			GroupRemoveUnit(gdamage, Picked)
		end
	else
		SetUnitVertexColor(caster, $FF, $FF, $FF, $FF)
		RemoveRect(r)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		RemoveUnit(LoadUnitHandle(udg_hash, GetHandleId(caster), FourCC('u')))
	end
	t = nil
	caster = nil
	r = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(gdamage)
	DestroyGroup(gdamage)
	gdamage = nil
	Picked = nil
	dammi = nil
	dammi2 = nil
	target = nil
end

function Trig_Reflection_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0F6')) ---@type number integer
	local wait = lvl + 2 ---@type number integer
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local r = Rect(x - 350., y - 350., x + 350., y + 350.) ---@type rect
	local damage = $A + 5 * lvl + (.1 + (.05 * lvl)) * GetHeroAgi(caster, true) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveRectHandle(udg_hash, h, 2, r)
	SaveInteger(udg_hash, h, 3, wait)
	SaveReal(udg_hash, h, 4, damage)
	AddProgressBar(caster, 215. + (1.5 * lvl), (.9 + .1 * lvl), (.3 * wait), false, true, FourCC('u'), $B4, $96, $AF)
	SetUnitVertexColor(caster, $C8, $C8, $C8, FourCC('d'))
	TimerStart(t, .3, true, Trig_Reflection_perodic_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	r = nil
	t = nil
end

---@return boolean
function Trig_Reflection_Conditions()
	return GetSpellAbilityId() == FourCC('A0F6')
end

function InitTrig_Reflection()
	local index = 0 ---@type number integer
	gg_trg_Reflection = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Reflection, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Reflection, Condition(Trig_Reflection_Conditions))
	TriggerAddAction(gg_trg_Reflection, Trig_Reflection_Actions)
end

function Trig_Illusory_Attack_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local angle = GetRandomReal(.0, 360.) ---@type number real
	local x = GetUnitX(target) + 50. * Cos(angle * bj_DEGTORAD) ---@type number real
	local y = GetUnitY(target) + 50. * Sin(angle * bj_DEGTORAD) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0F5')) ---@type number integer
	local damage = (GetHeroAgi(caster, true) * (.25 * lvl + .5)) + (lvl * 25 + $F) ---@type number real
	local dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, .0) ---@type unit
	local dammi2 = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, .0) ---@type unit
	SaveUnitHandle(udg_hash, GetHandleId(dammi), 4, target)
	SaveBoolean(udg_hash, GetHandleId(dammi), 5, true)
	SaveReal(udg_hash, GetHandleId(dammi), 6, (angle + 180.))
	SetUnitPosition(caster, x, y)
	UnitApplyTimedLife(dammi2, FourCC('BTLF'), 1.)
	UnitAddAbility(dammi2, FourCC('A0F7'))
	SetUnitAbilityLevel(dammi2, FourCC('A0F7'), lvl)
	IssueTargetOrderById(dammi2, $D007F, target)
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
	UnitAddAbility(dammi, FourCC('A0AY'))
	SetUnitAbilityLevel(dammi, FourCC('A0AY'), 1 + GetUnitAbilityLevel(caster, FourCC('A0F2')))
	IssueTargetOrderById(dammi, $D0132, caster)
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathMissile.mdl", target, "origin"))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathMissile.mdl", target, "chest"))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathMissile.mdl", target, "overhead"))
	UnitDamageTarget(caster, target, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
	IssueTargetOrderById(caster, $D000F, target)
	caster = nil
	target = nil
	dammi = nil
	dammi2 = nil
end

---@return boolean
function Trig_Illusory_Attack_Conditions()
	return GetSpellAbilityId() == FourCC('A0F5')
end

function InitTrig_Illusory_Attack()
	local index = 0 ---@type number integer
	gg_trg_Illusory_Attack = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Illusory_Attack, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Illusory_Attack, Condition(Trig_Illusory_Attack_Conditions))
	TriggerAddAction(gg_trg_Illusory_Attack, Trig_Illusory_Attack_Actions)
end

function Trig_Summon_Illusions_with_Reflection_Actions()
	local illusion = GetSummonedUnit() ---@type unit
	local dammi = GetSummoningUnit() ---@type unit
	local target ---@type unit
	local idhero = GetHandleId(udg_herounit[GetPlayerId(GetOwningPlayer(illusion)) + 1]) ---@type number integer
	if LoadBoolean(udg_hash, GetHandleId(dammi), 3) then
		target = LoadUnitHandle(udg_hash, GetHandleId(dammi), 2)
		if target ~= nil then
			SetUnitPosition(illusion, GetUnitX(target), GetUnitY(target))
			SetUnitPosition(illusion, GetUnitX(target) + 75. * Cos(GetRandomReal(.0, 360.) * bj_DEGTORAD), GetUnitY(target) + 75. * Sin(GetRandomReal(.0, 360.) * bj_DEGTORAD))
			UnitApplyTimedLife(illusion, FourCC('BTLF'), 5.)
			UnitAddAbility(illusion, FourCC('Aloc'))
			UnitRemoveAbility(illusion, FourCC('A0F3'))
			SetUnitVertexColor(illusion, $96, $96, $96, FourCC('d'))
			IssueTargetOrderById(illusion, $D000F, target)
		else
			RemoveUnit(illusion)
		end
	else
		if LoadBoolean(udg_hash, GetHandleId(dammi), 5) then
			target = LoadUnitHandle(udg_hash, GetHandleId(dammi), 4)
			SetUnitPosition(illusion, GetUnitX(target) + 50. * Cos(LoadReal(udg_hash, GetHandleId(dammi), 6) * bj_DEGTORAD), GetUnitY(target) + 50. * Sin(LoadReal(udg_hash, GetHandleId(dammi), 6) * bj_DEGTORAD))
			IssueTargetOrderById(illusion, $D000F, target)
		else
			SaveInteger(udg_hash, idhero, 60, LoadInteger(udg_hash, idhero, 60) + 1)
			SaveInteger(udg_hash, GetHandleId(illusion), 1, $A)
		end
	end
	dammi = nil
	illusion = nil
	target = nil
end

---@return boolean
function Trig_Summon_Illusions_with_Reflection_Conditions()
	return GetUnitTypeId(GetSummonedUnit()) == FourCC('E004') and GetUnitAbilityLevel(GetSummoningUnit(), FourCC('A0AY')) > 0
end

function InitTrig_Summon_Illusions_with_Reflection()
	local index = 0 ---@type number integer
	gg_trg_Summon_Illusions_with_Reflection = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Summon_Illusions_with_Reflection, Player(index), EVENT_PLAYER_UNIT_SUMMON, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Summon_Illusions_with_Reflection, Condition(Trig_Summon_Illusions_with_Reflection_Conditions))
	TriggerAddAction(gg_trg_Summon_Illusions_with_Reflection, Trig_Summon_Illusions_with_Reflection_Actions)
end

function Trig_Illusions_with_Phantoms_Dead_Actions()
	local idhero = GetHandleId(udg_herounit[GetPlayerId(GetOwningPlayer(GetDyingUnit())) + 1]) ---@type number integer
	local count = LoadInteger(udg_hash, idhero, 60) ---@type number integer
	if count > 0 then
		SaveInteger(udg_hash, idhero, 60, count - 1)
	end
end

---@return boolean
function Trig_Illusions_with_Phantoms_Dead_Conditions()
	return GetUnitTypeId(GetDyingUnit()) == FourCC('E004') and IsUnitIllusion(GetDyingUnit()) and HaveSavedInteger(udg_hash, GetHandleId(GetDyingUnit()), 1)
end

function InitTrig_Illusions_with_Phantoms_Dead()
	local index = 0 ---@type number integer
	gg_trg_Illusions_with_Phantoms_Dead = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Illusions_with_Phantoms_Dead, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Illusions_with_Phantoms_Dead, Condition(Trig_Illusions_with_Phantoms_Dead_Conditions))
	TriggerAddAction(gg_trg_Illusions_with_Phantoms_Dead, Trig_Illusions_with_Phantoms_Dead_Actions)
end

function Trig_BladeMaster_Load_Actions()
	AbilityPreload(FourCC('A0FG'), 6)
	AbilityPreload(FourCC('A0FH'), 6)
	AbilityPreload(FourCC('A0FF'), 6)
	AbilityPreload(FourCC('A0G2'), 3)
	AbilityPreload(FourCC('A0G1'), 4)
	AbilityPreload(FourCC('A0G3'), 1)
	AbilityPreload(FourCC('A0GH'), 1)
	AbilityPreload(FourCC('B02W'), 1)
	AbilityPreload(FourCC('B02X'), 1)
	EffectPreload("Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile_mini.mdl")
	EffectPreload("Abilities\\Weapons\\ZigguratMissile\\ZigguratMissile.mdl")
	EffectPreload("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl")
	EffectPreload("Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl")
	EffectPreload("Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile.mdl")
	EffectPreload("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodMortarTeam.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodFootman.mdl")
	EnableTrigger(gg_trg_Dissection)
	EnableTrigger(gg_trg_Whirlwind)
	EnableTrigger(gg_trg_Imboweling)
end

function InitTrig_BladeMaster_Load()
	gg_trg_BladeMaster_Load = CreateTrigger()
	TriggerAddAction(gg_trg_BladeMaster_Load, Trig_BladeMaster_Load_Actions)
end

function Trig_Dissection_Periodic_Damage_Target_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local Picked = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local caster = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local periodicdamage = LoadReal(udg_hash, h, 3) ---@type number real
	local wait = LoadInteger(udg_hash, h, 4) ---@type number integer
	if wait > 0 and GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and GetUnitAbilityLevel(Picked, FourCC('B02W')) > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 4, wait)
		UnitDamageTarget(caster, Picked, (periodicdamage / 40), false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
		if wait == 30 or wait == 20 or wait == $A then
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodMortarTeam.mdl", Picked, "origin"))
		end
	else
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	end
	t = nil
	Picked = nil
	caster = nil
end

function Trig_Dissection_Periodic_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local xt = LoadReal(udg_hash, h, 2) ---@type number real
	local yt = LoadReal(udg_hash, h, 3) ---@type number real
	local angle = LoadReal(udg_hash, h, 4) ---@type number real
	local xnext = xc + 400. * Cos(angle * bj_DEGTORAD) ---@type number real
	local ynext = yc + 400. * Sin(angle * bj_DEGTORAD) ---@type number real
	local damage = LoadReal(udg_hash, h, 5) ---@type number real
	local gdamage = LoadGroupHandle(udg_hash, h, 6) ---@type group
	local pravo = LoadBoolean(udg_hash, h, 9) ---@type boolean
	local first = LoadBoolean(udg_hash, h, $A) ---@type boolean
	local jumps = LoadInteger(udg_hash, h, $B) ---@type number integer
	local periodicdamage = LoadReal(udg_hash, h, $C) ---@type number real
	local xcenter = (xnext + xc) / 2 ---@type number real
	local ycenter = (ynext + yc) / 2 ---@type number real
	local radius ---@type number real
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	local tPicked ---@type timer
	local hPicked ---@type number integer
	local lastslash ---@type boolean
	local cx ---@type number real
	local cy ---@type number real
	local ax ---@type number real
	local ay ---@type number real
	local bx ---@type number real
	local by ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	jumps = jumps - 1
	SaveInteger(udg_hash, h, $B, jumps)
	if first then
		xnext = xc + 200. * Cos(angle * bj_DEGTORAD)
		ynext = yc + 200. * Sin(angle * bj_DEGTORAD)
		xcenter = (xnext + xc) / 2
		ycenter = (ynext + yc) / 2
		first = false
		SaveBoolean(udg_hash, h, $A, first)
	end
	if jumps <= 0 then
		lastslash = true
	end
	if jumps > 0 then
		lastslash = false
		if not ((xnext > -5. and xnext < 5.) and (ynext > -5. and ynext < 5.)) then
			SetUnitPosition(caster, xnext, ynext)
		end
		if GetRandomInt(1, 2) == 1 then
			SetUnitAnimationByIndex(caster, 8)
		else
			SetUnitAnimationByIndex(caster, 2)
		end
		radius = ((SquareRoot((xnext - xc) * (xnext - xc) + (ynext - yc) * (ynext - yc))) / 2) + 200.
		cx = xc + 200. * Cos((angle + 90.) * bj_DEGTORAD)
		cy = yc + 200. * Sin((angle + 90.) * bj_DEGTORAD)
		ax = xc + 200. * Cos((angle - 90.) * bj_DEGTORAD)
		ay = yc + 200. * Sin((angle - 90.) * bj_DEGTORAD)
		bx = xnext + 200. * Cos((angle + 90.) * bj_DEGTORAD)
		by = ynext + 200. * Sin((angle + 90.) * bj_DEGTORAD)
		if pravo then
			angle = angle + 120.
			SaveBoolean(udg_hash, h, 9, false)
		else
			angle = angle - 120.
			SaveBoolean(udg_hash, h, 9, true)
		end
		SaveReal(udg_hash, h, 4, angle)
		SaveGroupHandle(udg_hash, h, 6, gdamage)
	end
	if lastslash then
		cx = -11000.
		cy = -11000.
		ax = -10000.
		ay = 5000.
		bx = 6000.
		by = -11000.
		GroupEnumUnitsInRange(g, xt, yt, 175., nil)
	else
		GroupEnumUnitsInRange(g, xcenter, ycenter, radius, nil)
	end
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') and IsPointInRect(GetUnitX(Picked), GetUnitY(Picked), cx, cy, ax, ay, bx, by) then
			GroupAddUnit(gdamage, Picked)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", Picked, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl", Picked, "chest"))
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
			UnitAddAbility(dammi, FourCC('A0G1'))
			SetUnitAbilityLevel(dammi, FourCC('A0G1'), R2I(5 - ((4 * GetUnitState(Picked, UNIT_STATE_LIFE) - .1) / GetUnitState(Picked, UNIT_STATE_MAX_LIFE))))
			IssueTargetOrderById(dammi, $D006B, Picked)
			dammi = nil
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 then
				tPicked = CreateTimer()
				hPicked = GetHandleId(tPicked)
				SaveUnitHandle(udg_hash, hPicked, 1, Picked)
				SaveUnitHandle(udg_hash, hPicked, 2, caster)
				SaveReal(udg_hash, hPicked, 3, periodicdamage * (.6 + .4 * GetUnitAbilityLevel(dammi, FourCC('A0G1'))))
				SaveInteger(udg_hash, hPicked, 4, 40)
				TimerStart(tPicked, .1, true, Trig_Dissection_Periodic_Damage_Target_Actions)
				tPicked = nil
			end
		end
		GroupRemoveUnit(g, Picked)
	end
	if jumps <= 0 then
		PauseUnit(caster, false)
		SetUnitInvulnerable(caster, false)
		SetUnitPathing(caster, true)
		SetUnitAnimation(caster, "stand")
		SetUnitTimeScale(caster, 1.)
		SetUnitTurnSpeed(caster, .6)
		SetUnitPosition(caster, xt, yt)
		DestroyEffect(LoadEffectHandle(udg_hash, h, 7))
		DestroyEffect(LoadEffectHandle(udg_hash, h, 8))
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	gdamage = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
	dammi = nil
	tPicked = nil
	p = nil
end

function Trig_Dissection_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local xt ---@type number real
	local yt ---@type number real
	local dist ---@type number real
	local angle ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0FG')) ---@type number integer
	local damage = -5. + 40. * lvl ---@type number real
	local periodicdamage = 4. + 16. * lvl ---@type number real
	local gdamage = CreateGroup() ---@type group
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = GetSpellTargetUnit() ---@type unit
	local loc ---@type location
	local ef ---@type effect
	local jumps ---@type number integer
	if target ~= nil then
		xt = GetUnitX(target)
		yt = GetUnitY(target)
	else
		loc = GetSpellTargetLoc()
		xt = GetLocationX(loc)
		yt = GetLocationY(loc)
	end
	angle = (bj_RADTODEG * Atan2(yt - yc, xt - xc)) - 60.
	dist = SquareRoot((xt - xc) * (xt - xc) + (yt - yc) * (yt - yc))
	jumps = R2I(dist / 200.)
	SetUnitInvulnerable(caster, true)
	SetUnitPathing(caster, false)
	SetUnitAnimationByIndex(caster, 2)
	SetUnitTimeScale(caster, 13.33)
	SetUnitTurnSpeed(caster, 3.)
	if GetRandomInt(1, 2) == 1 then
		SetUnitAnimationByIndex(caster, 8)
	else
		SetUnitAnimationByIndex(caster, 2)
	end
	ef = AddSpecialEffectTarget("Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile_mini.mdl", caster, "weapon")
	SaveEffectHandle(udg_hash, h, 7, ef)
	ef = nil
	ef = AddSpecialEffectTarget("Abilities\\Weapons\\ZigguratMissile\\ZigguratMissile.mdl", caster, "weapon")
	SaveEffectHandle(udg_hash, h, 8, ef)
	ef = nil
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, xt)
	SaveReal(udg_hash, h, 3, yt)
	SaveReal(udg_hash, h, 4, angle)
	SaveReal(udg_hash, h, 5, damage)
	SaveGroupHandle(udg_hash, h, 6, gdamage)
	SaveBoolean(udg_hash, h, 9, true)
	SaveBoolean(udg_hash, h, $A, true)
	SaveInteger(udg_hash, h, $B, jumps + 1)
	SaveReal(udg_hash, h, $C, periodicdamage)
	UnitPeriodicPostionMove(caster, .02, jumps * .075)
	TimerStart(t, .075, true, Trig_Dissection_Periodic_Move_Actions)
	caster = nil
	gdamage = nil
	t = nil
	target = nil
	RemoveLocation(loc)
	loc = nil
end

---@return boolean
function Trig_Dissection_Conditions()
	return GetSpellAbilityId() == FourCC('A0FG')
end

function InitTrig_Dissection()
	local index = 0 ---@type number integer
	gg_trg_Dissection = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Dissection, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Dissection, Condition(Trig_Dissection_Conditions))
	TriggerAddAction(gg_trg_Dissection, Trig_Dissection_Actions)
end

function Trig_Whirlwind_Periodic_Damage_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damage = LoadReal(udg_hash, h, 2) ---@type number real
	local wait = LoadInteger(udg_hash, h, 3) ---@type number integer
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local g = CreateGroup() ---@type group
	local p = GetOwningPlayer(caster) ---@type player
	local Picked ---@type unit
	local ef ---@type effect
	if wait > 0 and GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 3, wait)
		GroupEnumUnitsInRange(g, xc, yc, 200., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				if wait - (wait / $A) * $A == 0 then
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", Picked, "chest"))
				end
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			end
			GroupRemoveUnit(g, Picked)
		end
	else
		ef = LoadEffectHandle(udg_hash, h, 4)
		DestroyEffect(ef)
		ef = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	p = nil
	Picked = nil
end

function Trig_Whirlwind_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local wait = 80 ---@type number integer
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0FH')) ---@type number integer
	local damage = ((20 * lvl) + ((-.4 + .4 * lvl) * GetHeroAgi(caster, true))) / 20. ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef = AddSpecialEffectTarget("Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile_mini.mdl", caster, "weapon") ---@type effect
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, damage)
	SaveInteger(udg_hash, h, 3, wait)
	SaveEffectHandle(udg_hash, h, 4, ef)
	TimerStart(t, .05, true, Trig_Whirlwind_Periodic_Damage_Actions)
	caster = nil
	t = nil
	ef = nil
end

---@return boolean
function Trig_Whirlwind_Conditions()
	return GetSpellAbilityId() == FourCC('A0FH')
end

function InitTrig_Whirlwind()
	local index = 0 ---@type number integer
	gg_trg_Whirlwind = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Whirlwind, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Whirlwind, Condition(Trig_Whirlwind_Conditions))
	TriggerAddAction(gg_trg_Whirlwind, Trig_Whirlwind_Actions)
end

function Trig_Imboweling_Periodic_Damage_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local xt = LoadReal(udg_hash, h, 2) ---@type number real
	local yt = LoadReal(udg_hash, h, 3) ---@type number real
	local angle = LoadReal(udg_hash, h, 4) + GetRandomReal(75., 285.) ---@type number real
	local damage = LoadReal(udg_hash, h, 5) ---@type number real
	local gdamage = LoadGroupHandle(udg_hash, h, 6) ---@type group
	local anglejump = LoadReal(udg_hash, h, 7) ---@type number real
	local damagejump = LoadReal(udg_hash, h, 8) ---@type number real
	local jumps = LoadInteger(udg_hash, h, 9) ---@type number integer
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local x = xt + GetRandomReal(150., 250.) * Cos(angle * bj_DEGTORAD) ---@type number real
	local y = yt + GetRandomReal(150., 250.) * Sin(angle * bj_DEGTORAD) ---@type number real
	local g = CreateGroup() ---@type group
	local dist = SquareRoot((xt - xc) * (xt - xc) + (yt - yc) * (yt - yc)) ---@type number real
	local lop = R2I(dist / 100.) + 1 ---@type number integer
	local Picked ---@type unit
	local dammi ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	SaveReal(udg_hash, h, 4, angle)
	jumps = jumps - 1
	SaveInteger(udg_hash, h, 9, jumps)
	if jumps > 0 then
		if jumps ~= 1 and jumps ~= $B and jumps ~= 21 and jumps ~= 2 and jumps ~= $C and jumps ~= 22 then
			SetUnitFacing(caster, angle)
			SetUnitTimeScale(caster, 7.5)
			if GetRandomInt(1, 2) == 1 then
				SetUnitAnimationByIndex(caster, 8)
			else
				SetUnitAnimationByIndex(caster, 2)
			end
			if IsTerrainPathable(x, y, PATHING_TYPE_FLYABILITY) == false then
				SetUnitX(caster, x)
				SetUnitY(caster, y)
			end
			SetUnitFacing(caster, angle)
			while(true) do
				if (lop < 0) then break end
				GroupEnumUnitsInRange(g, x + ((100. * lop) * Cos(angle * bj_DEGTORAD)), y + ((100. * lop) * Sin(angle * bj_DEGTORAD)), 175., nil)
				lop = lop - 1
			end
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitInGroup(Picked, gdamage) == false and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_MELEE, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", Picked, "chest"))
					dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
					UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
					UnitAddAbility(dammi, FourCC('A0G3'))
					IssueTargetOrderById(dammi, $D006B, Picked)
					dammi = nil
				end
				GroupRemoveUnit(g, Picked)
			end
			Picked = nil
			TimerStart(t, .1, false, Trig_Imboweling_Periodic_Damage_Actions)
		end
		SaveGroupHandle(udg_hash, h, 6, gdamage)
		if jumps == 2 or jumps == $C or jumps == 22 then
			anglejump = anglejump + 120.
			SaveReal(udg_hash, h, 7, anglejump)
			x = xt + 200. * Cos(anglejump * bj_DEGTORAD)
			y = yt + 200. * Sin(anglejump * bj_DEGTORAD)
			if IsTerrainPathable(x, y, PATHING_TYPE_FLYABILITY) == false then
				SetUnitX(caster, x)
				SetUnitY(caster, y)
			end
			SetUnitFacing(caster, anglejump)
			SetUnitTimeScale(caster, 1.4)
			SetUnitAnimationByIndex(caster, 3)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl", caster, "chest"))
			TimerStart(t, .6, false, Trig_Imboweling_Periodic_Damage_Actions)
		end
		if jumps == 1 or jumps == $B or jumps == 21 then
			GroupEnumUnitsInRange(g, xc + 100. * Cos(anglejump * bj_DEGTORAD), yc + 100. * Sin(anglejump * bj_DEGTORAD), 225., nil)
			p = GetOwningPlayer(caster)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					UnitDamageTarget(caster, Picked, damagejump, false, false, ATTACK_TYPE_MELEE, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Stampede\\StampedeMissileDeath.mdl", Picked, "chest"))
					DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl", Picked, "chest"))
					dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
					UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
					UnitAddAbility(dammi, FourCC('A0G4'))
					IssueTargetOrderById(dammi, $D007F, Picked)
					dammi = nil
				end
				GroupRemoveUnit(g, Picked)
			end
			Picked = nil
			DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile.mdl", xc + 100. * Cos(anglejump * bj_DEGTORAD), yc + 100. * Sin(anglejump * bj_DEGTORAD)))
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl", xc + 100. * Cos(anglejump * bj_DEGTORAD), yc + 100. * Sin(anglejump * bj_DEGTORAD)))
			TimerStart(t, .1, false, Trig_Imboweling_Periodic_Damage_Actions)
			GroupClear(gdamage)
			SaveGroupHandle(udg_hash, h, 6, gdamage)
		end
	else
		DestroyEffect(LoadEffectHandle(udg_hash, h, $A))
		DestroyEffect(LoadEffectHandle(udg_hash, h, $B))
		SetUnitInvulnerable(caster, false)
		SetUnitPathing(caster, true)
		SetUnitAnimation(caster, "Stand")
		SetUnitTimeScale(caster, 1.)
		SetUnitTurnSpeed(caster, GetUnitDefaultTurnSpeed(caster))
		IssueImmediateOrderById(caster, $D0004)
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	gdamage = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
	dammi = nil
	p = nil
end

function Trig_Imboweling_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local dist ---@type number real
	local angle = .0 ---@type number real
	local anglejump = (bj_RADTODEG * Atan2(yt - yc, xt - xc)) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0G2')) ---@type number integer
	local damage = 5. + (25. * lvl) + ((.1 + .1 * lvl) * GetHeroAgi(caster, true)) ---@type number real
	local damagejump = (50 + GetHeroAgi(caster, true)) * 1.5 * lvl ---@type number real
	local gdamage = CreateGroup() ---@type group
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef ---@type effect
	local jumps = ($A * 3) + 1 ---@type number integer
	SetUnitInvulnerable(caster, true)
	SetUnitPathing(caster, false)
	SetUnitAnimationByIndex(caster, 2)
	SetUnitTimeScale(caster, 20.)
	SetUnitTurnSpeed(caster, 3.)
	if GetRandomInt(1, 2) == 1 then
		SetUnitAnimationByIndex(caster, 8)
	else
		SetUnitAnimationByIndex(caster, 2)
	end
	ef = AddSpecialEffectTarget("Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile_mini.mdl", caster, "weapon")
	SaveEffectHandle(udg_hash, h, $A, ef)
	ef = nil
	ef = AddSpecialEffectTarget("Abilities\\Weapons\\ZigguratMissile\\ZigguratMissile.mdl", caster, "weapon")
	SaveEffectHandle(udg_hash, h, $B, ef)
	ef = nil
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, xt)
	SaveReal(udg_hash, h, 3, yt)
	SaveReal(udg_hash, h, 4, angle)
	SaveReal(udg_hash, h, 5, damage)
	SaveGroupHandle(udg_hash, h, 6, gdamage)
	SaveReal(udg_hash, h, 7, anglejump)
	SaveReal(udg_hash, h, 8, damagejump)
	SaveInteger(udg_hash, h, 9, jumps)
	UnitPeriodicPostionMove(caster, .02, jumps * .1 + 1.5)
	TimerStart(t, .1, false, Trig_Imboweling_Periodic_Damage_Actions)
	caster = nil
	gdamage = nil
	t = nil
	RemoveLocation(loc)
	loc = nil
end

---@return boolean
function Trig_Imboweling_Conditions()
	return GetSpellAbilityId() == FourCC('A0G2')
end

function InitTrig_Imboweling()
	local index = 0 ---@type number integer
	gg_trg_Imboweling = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Imboweling, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Imboweling, Condition(Trig_Imboweling_Conditions))
	TriggerAddAction(gg_trg_Imboweling, Trig_Imboweling_Actions)
end

function Trig_Master_of_Lightnings_Load_Actions()
	AbilityPreload(FourCC('A07N'), 6)
	AbilityPreload(FourCC('A07O'), 6)
	AbilityPreload(FourCC('A07Q'), 6)
	AbilityPreload(FourCC('A07P'), 3)
	AbilityPreload(FourCC('A07S'), 6)
	EffectPreload("Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\LightningBolt\\LightningBoltMissile.mdl")
	EffectPreload("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl")
	EffectPreload("Abilities\\Spells\\Items\\AIlb\\AIlbTarget.mdl")
	EffectPreload("Abilities\\Weapons\\Bolt\\BoltImpact.mdl")
	EffectPreload("Abilities\\Spells\\Items\\AIlb\\AIlbSpecialArt.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldBuff.mdl")
	EffectPreload("war3mapImported\\OutlandStorm.mdx")
	EffectPreload("Abilities\\Spells\\Orc\\Purge\\PurgeBuffTarget.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldTarget.mdl")
	EnableTrigger(gg_trg_Thundercloud)
	EnableTrigger(gg_trg_Power_of_Lightnings)
	EnableTrigger(gg_trg_Electric_Field)
	EnableTrigger(gg_trg_Storm)
end

function InitTrig_Master_of_Lightnings_Load()
	gg_trg_Master_of_Lightnings_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Master_of_Lightnings_Load, Trig_Master_of_Lightnings_Load_Actions)
end

function Trig_Thundercloud_lightning_Actions()
	local tl = GetExpiredTimer() ---@type timer
	local hl = GetHandleId(tl) ---@type number integer
	local lop = 0 ---@type number integer
	local l ---@type lightning
	while(true) do
		if (lop > 5) then break end
		l = LoadLightningHandle(udg_hash, hl, lop)
		DestroyLightning(l)
		l = nil
		lop = lop + 1
	end
	FlushChildHashtable(udg_hash, hl)
	DestroyTimer(tl)
	tl = nil
end

function Trig_Thundercloud_move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local cloud = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local x = LoadReal(udg_hash, h, 2) ---@type number real
	local y = LoadReal(udg_hash, h, 3) ---@type number real
	local angle = LoadReal(udg_hash, h, 4) ---@type number real
	local stage = LoadInteger(udg_hash, h, 5) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 7) ---@type unit
	local xp = LoadReal(udg_hash, h, 8) ---@type number real
	local yp = LoadReal(udg_hash, h, 9) ---@type number real
	local damage = LoadReal(udg_hash, h, $A) ---@type number real
	local p = LoadPlayerHandle(udg_hash, h, $B) ---@type player
	local lop = 0 ---@type number integer
	local xu = GetUnitX(cloud) ---@type number real
	local yu = GetUnitY(cloud) ---@type number real
	local distance = SquareRoot((xp - xu) * (xp - xu) + (yp - yu) * (yp - yu)) ---@type number real
	local xt ---@type number real
	local yt ---@type number real
	local slower ---@type unit
	local tl ---@type timer
	local hl ---@type number integer
	local g ---@type group
	local Picked ---@type unit
	local l ---@type lightning
	local between ---@type number real
	local efcloud ---@type effect
	local locz ---@type location
	local loccloudz = GetUnitLoc(cloud) ---@type location
	if distance < 3.75 then
		stage = stage + 1
		SaveInteger(udg_hash, h, 5, stage)
		tl = CreateTimer()
		hl = GetHandleId(tl)
		while(true) do
			if (lop > 4) then break end
			xt = xp + 150. * Cos((lop * 72.) * bj_DEGTORAD)
			yt = yp + 150. * Sin((lop * 72.) * bj_DEGTORAD)
			locz = Location(xt, yt)
			l = AddLightningEx("FORK", true, xu, yu, 425. + GetLocationZ(loccloudz), xt, yt, -50. + GetLocationZ(locz))
			DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", xt, yt))
			SaveLightningHandle(udg_hash, hl, lop, l)
			l = nil
			lop = lop + 1
			RemoveLocation(locz)
			locz = nil
		end
		l = nil
		locz = Location(xt, yt)
		l = AddLightningEx("FORK", true, xu, yu, 425. + GetLocationZ(loccloudz), xp, yp, -50. + GetLocationZ(locz))
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\ThunderClap\\ThunderClapCaster.mdl", xp, yp))
		DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", xp, yp))
		SaveLightningHandle(udg_hash, hl, 5, l)
		l = nil
		RemoveLocation(locz)
		locz = nil
		g = CreateGroup()
		GroupEnumUnitsInRange(g, xp, yp, $E1, nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				slower = CreateUnit(p, FourCC('h00U'), xp, yp, .0)
				UnitApplyTimedLife(slower, FourCC('BTLF'), .75)
				UnitAddAbility(slower, FourCC('A07S'))
				SetUnitAbilityLevel(slower, FourCC('A07S'), GetUnitAbilityLevel(caster, FourCC('A07N')))
				IssueTargetOrderById(slower, $D006B, Picked)
				slower = nil
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlb\\AIlbSpecialArt.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldBuff.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", Picked, "chest"))
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		TimerStart(tl, .6, false, Trig_Thundercloud_lightning_Actions)
		xp = x + GetRandomReal(200., 250.) * Cos(((stage * 120.) + angle) * bj_DEGTORAD)
		yp = y + GetRandomReal(200., 250.) * Sin(((stage * 120.) + angle) * bj_DEGTORAD)
		SaveReal(udg_hash, h, 8, xp)
		SaveReal(udg_hash, h, 9, yp)
		tl = nil
		Picked = nil
		DestroyGroup(g)
		g = nil
		if stage >= 4 then
			efcloud = LoadEffectHandle(udg_hash, h, 6)
			DestroyEffect(efcloud)
			efcloud = nil
			KillUnit(cloud)
			cloud = nil
			FlushChildHashtable(udg_hash, h)
			DestroyTimer(t)
			t = nil
		end
	else
		between = bj_RADTODEG * Atan2(yp - yu, xp - xu)
		xu = xu + 5. * Cos(between * bj_DEGTORAD)
		yu = yu + 5. * Sin(between * bj_DEGTORAD)
		if IsTerrainPathable(xu, yu, PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(cloud, xu, yu)
		else
			efcloud = LoadEffectHandle(udg_hash, h, 6)
			DestroyEffect(efcloud)
			efcloud = nil
			KillUnit(cloud)
			cloud = nil
			FlushChildHashtable(udg_hash, h)
			DestroyTimer(t)
			t = nil
		end
	end
	t = nil
	cloud = nil
	caster = nil
	p = nil
	RemoveLocation(loccloudz)
	loccloudz = nil
end

function Trig_Thundercloud_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local caster2 ---@type unit
	local lvl = GetUnitAbilityLevel(caster, FourCC('A07N')) ---@type number integer
	local lvlult = GetUnitAbilityLevel(caster, FourCC('A07P')) ---@type number integer
	local lvlultup = GetUnitAbilityLevel(caster, FourCC('A0Q6')) ---@type number integer
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local stage = 0 ---@type number integer
	local cloud = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, .0) ---@type unit
	local efcloud ---@type effect
	local angle = GetRandomReal(.0, 360.) ---@type number real
	local damage = (.12 * GetUnitAbilityLevel(caster, FourCC('A07P')) + 1.) * ((5. + (25. * lvl) + ((.1 + .05 * lvl) * GetHeroInt(caster, true)))) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local p ---@type player
	if lvlult > 0 then
		damage = (.12 * lvlult + 1.) * ((5. + (25. * lvl) + ((.1 + .05 * lvl) * GetHeroInt(caster, true))))
	end
	if lvlultup > 0 then
		damage = (.17 * lvlultup + 1.) * ((5. + (25. * lvl) + ((.1 + .05 * lvl) * GetHeroInt(caster, true))))
	end
	if GetOwningPlayer(caster) == Player($F) then
		p = LoadPlayerHandle(udg_hash, GetHandleId(caster), 1)
		caster2 = LoadUnitHandle(udg_hash, GetHandleId(caster), 2)
		FlushChildHashtable(udg_hash, GetHandleId(caster))
	else
		p = GetOwningPlayer(caster)
		caster2 = caster
	end
	UnitAddAbility(cloud, FourCC('Amrf'))
	UnitRemoveAbility(cloud, FourCC('Amrf'))
	SetUnitFlyHeight(cloud, 350. + GetLocationZ(loc), .0)
	SetUnitScale(cloud, 1.35, 1.35, 1.35)
	SetUnitPosition(cloud, x, y)
	efcloud = AddSpecialEffectTarget("war3mapImported\\OutlandStorm.mdx", cloud, "origin")
	SaveUnitHandle(udg_hash, h, 1, cloud)
	SaveReal(udg_hash, h, 2, x)
	SaveReal(udg_hash, h, 3, y)
	SaveReal(udg_hash, h, 4, angle)
	SaveInteger(udg_hash, h, 5, stage)
	SaveEffectHandle(udg_hash, h, 6, efcloud)
	SaveUnitHandle(udg_hash, h, 7, caster2)
	SaveReal(udg_hash, h, 8, x)
	SaveReal(udg_hash, h, 9, y)
	SaveReal(udg_hash, h, $A, damage)
	SavePlayerHandle(udg_hash, h, $B, p)
	TimerStart(t, .04, true, Trig_Thundercloud_move_Actions)
	caster = nil
	caster2 = nil
	RemoveLocation(loc)
	loc = nil
	cloud = nil
	efcloud = nil
	t = nil
	p = nil
end

---@return boolean
function Trig_Thundercloud_Conditions()
	return GetSpellAbilityId() == FourCC('A07N')
end

function InitTrig_Thundercloud()
	local index = 0 ---@type number integer
	gg_trg_Thundercloud = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Thundercloud, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Thundercloud, Condition(Trig_Thundercloud_Conditions))
	TriggerAddAction(gg_trg_Thundercloud, Trig_Thundercloud_Actions)
end

function Trig_Power_of_Lightnings_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ward = LoadUnitHandle(udg_hash, h, $A) ---@type unit
	local x = GetUnitX(ward) ---@type number real
	local y = GetUnitY(ward) ---@type number real
	local stage = LoadInteger(udg_hash, h, $B) ---@type number integer
	local adddamage = LoadInteger(udg_hash, h, 18) ---@type number integer
	local addas = LoadInteger(udg_hash, h, 19) ---@type number integer
	local target ---@type unit
	local ef ---@type effect
	local tx ---@type number real
	local ty ---@type number real
	local l ---@type lightning
	local second = LoadInteger(udg_hash, h, $D) ---@type number integer
	local bonus ---@type number integer
	local lop = 1 ---@type number integer
	local wef ---@type effect
	local count = LoadInteger(udg_hash, h, $F) ---@type number integer
	local destroy = false ---@type boolean
	local locwardz = GetUnitLoc(ward) ---@type location
	local locz ---@type location
	while(true) do
		if (lop > count) then break end
		target[lop] = LoadUnitHandle(udg_hash, h, lop)
		l[lop] = LoadLightningHandle(udg_hash, h, 3 + lop)
		lop = lop + 1
	end
	lop = 1
	if stage >= 25 then
		stage = 0
		second = second + 1
		SaveInteger(udg_hash, h, $D, second)
		bonus = LoadInteger(udg_hash, h, $C)
		while(true) do
			if (lop > count) then break end
			SetAttackAbilityLevel(target[lop], adddamage)
			SetAttackSpeedAbilityLevel(target[lop], addas)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", target[lop], "weapon"))
			lop = lop + 1
		end
	else
		stage = stage + 1
		lop = 1
		while(true) do
			if (lop > count) then break end
			if target[lop] ~= nil then
				tx = GetUnitX(target[lop]) - x
				ty = GetUnitY(target[lop]) - y
				if SquareRoot(tx * tx + ty * ty) < 500 and GetUnitState(target[lop], UNIT_STATE_LIFE) > .405 and second < $F then
					locz = GetUnitLoc(target[lop])
					MoveLightningEx(l[lop], true, x, y, 150. + GetLocationZ(locwardz), GetUnitX(target[lop]), GetUnitY(target[lop]), GetUnitFlyHeight(target[lop]) + 60. + GetLocationZ(locz))
					RemoveLocation(locz)
					locz = nil
				else
					destroy = true
				end
			end
			lop = lop + 1
		end
	end
	if destroy then
		lop = 1
		bonus = LoadInteger(udg_hash, h, $C)
		wef = LoadEffectHandle(udg_hash, h, $E)
		DestroyEffect(wef)
		wef = nil
		KillUnit(ward)
		while(true) do
			if (lop > count) then break end
			SetAttackAbilityLevel(target[lop], -1 * adddamage * second)
			SetAttackSpeedAbilityLevel(target[lop], -second * addas)
			ef[lop] = LoadEffectHandle(udg_hash, h, 6 + lop)
			DestroyEffect(ef[lop])
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", target[lop], "weapon"))
			DestroyLightning(l[lop])
			ef[lop] = nil
			lop = lop + 1
		end
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		t = nil
	end
	SaveInteger(udg_hash, h, $B, stage)
	lop = 1
	while(true) do
		if (lop > count) then break end
		target[lop] = nil
		l[lop] = nil
		lop = lop + 1
	end
	t = nil
	ward = nil
	RemoveLocation(locwardz)
	locwardz = nil
end

function Trig_Power_of_Lightnings_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local ward = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, GetRandomReal(.0, 360.)) ---@type unit
	local target ---@type unit
	local xw = GetUnitX(ward) ---@type number real
	local yw = GetUnitY(ward) ---@type number real
	local l ---@type lightning
	local lop = 1 ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local g = CreateGroup() ---@type group
	local grup = CreateGroup() ---@type group
	local Picked ---@type unit
	local stage = 0 ---@type number integer
	local second = 0 ---@type number integer
	local bonus = 2 + GetUnitAbilityLevel(caster, FourCC('A07O')) ---@type number integer
	local ef ---@type effect
	local wef = AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", ward, "chest") ---@type effect
	local count = R2I((I2R(GetUnitAbilityLevel(caster, FourCC('A07O'))) / 2) + .5) ---@type number integer
	local locz ---@type location
	local adddamage = 2 + GetUnitAbilityLevel(caster, FourCC('A07O')) ---@type number integer
	local addas = R2I(adddamage / 2) ---@type number integer
	UnitAddAbility(ward, FourCC('Amrf'))
	UnitRemoveAbility(ward, FourCC('Amrf'))
	SetUnitFlyHeight(ward, 50., .0)
	SetUnitScale(ward, 2.5, 2.5, 2.5)
	GroupEnumUnitsInRange(g, x, y, 450., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitAlly(Picked, GetOwningPlayer(caster)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			GroupAddUnit(grup, Picked)
		end
		GroupRemoveUnit(g, Picked)
	end
	RandomUnitFromGroup(R2I((I2R(GetUnitAbilityLevel(caster, FourCC('A07O'))) / 2) + .5), grup)
	while(true) do
		if (lop > count) then break end
		target[lop] = FirstOfGroup(udg_GroupRandomUnitFromGroup)
		if target[lop] ~= nil then
			locz = GetUnitLoc(target[lop])
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", target[lop], "chest"))
			ef[lop] = AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", target[lop], "weapon")
			l[lop] = AddLightningEx("CLPB", true, x, y, 150. + GetLocationZ(loc), GetUnitX(target[lop]), GetUnitY(target[lop]), GetUnitFlyHeight(target[lop]) + 50. + GetLocationZ(locz))
			SaveUnitHandle(udg_hash, h, lop, target[lop])
			SaveLightningHandle(udg_hash, h, lop + 3, l[lop])
			SaveEffectHandle(udg_hash, h, lop + 6, ef[lop])
			RemoveLocation(locz)
			locz = nil
		end
		GroupRemoveUnit(udg_GroupRandomUnitFromGroup, target[lop])
		lop = lop + 1
	end
	SaveUnitHandle(udg_hash, h, $A, ward)
	SaveInteger(udg_hash, h, $B, stage)
	SaveInteger(udg_hash, h, $C, bonus)
	SaveInteger(udg_hash, h, $D, second)
	SaveEffectHandle(udg_hash, h, $E, wef)
	SaveInteger(udg_hash, h, $F, count)
	SaveInteger(udg_hash, h, 18, adddamage)
	SaveInteger(udg_hash, h, 19, addas)
	TimerStart(t, .04, true, Trig_Power_of_Lightnings_periodic_Actions)
	lop = 1
	while(true) do
		if (lop > count) then break end
		target[lop] = nil
		l[lop] = nil
		ef[lop] = nil
		lop = lop + 1
	end
	caster = nil
	RemoveLocation(loc)
	loc = nil
	ward = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(grup)
	DestroyGroup(grup)
	grup = nil
	Picked = nil
	wef = nil
	t = nil
end

---@return boolean
function Trig_Power_of_Lightnings_Conditions()
	return GetSpellAbilityId() == FourCC('A07O')
end

function InitTrig_Power_of_Lightnings()
	local index = 0 ---@type number integer
	gg_trg_Power_of_Lightnings = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Power_of_Lightnings, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Power_of_Lightnings, Condition(Trig_Power_of_Lightnings_Conditions))
	TriggerAddAction(gg_trg_Power_of_Lightnings, Trig_Power_of_Lightnings_Actions)
end

function Trig_Electric_Field_periodic_lightning_move_Actions()
	local tl = GetExpiredTimer() ---@type timer
	local hl = GetHandleId(tl) ---@type number integer
	local check = LoadInteger(udg_hash, hl, 20) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, hl, 21) ---@type unit
	local lvl = GetUnitAbilityLevel(caster, FourCC('A07Q')) ---@type number integer
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local loccasterz = GetUnitLoc(caster) ---@type location
	local locz ---@type location
	local l ---@type lightning
	local target ---@type unit
	local lop = 0 ---@type number integer
	local count = LoadInteger(udg_hash, hl, 22) ---@type number integer
	if check < $F then
		check = check + 1
		SaveInteger(udg_hash, hl, 20, check)
		while(true) do
			if (lop + 1 > count) then break end
			l[lop] = LoadLightningHandle(udg_hash, hl, lop)
			target[lop] = LoadUnitHandle(udg_hash, hl, lop + $A)
			if GetUnitState(target[lop], UNIT_STATE_LIFE) > .405 and target[lop] ~= nil then
				locz = GetUnitLoc(target[lop])
				MoveLightningEx(l[lop], true, x, y, GetUnitFlyHeight(caster) + 215. + GetLocationZ(loccasterz), GetUnitX(target[lop]), GetUnitY(target[lop]), GetUnitFlyHeight(target[lop]) + 25. + GetLocationZ(locz))
				RemoveLocation(locz)
				locz = nil
			end
			l[lop] = nil
			target[lop] = nil
			lop = lop + 1
		end
	else
		lop = 0
		while(true) do
			if (lop > count) then break end
			l[lop] = LoadLightningHandle(udg_hash, hl, lop)
			DestroyLightning(l[lop])
			l[lop] = nil
			lop = lop + 1
		end
		FlushChildHashtable(udg_hash, hl)
		DestroyTimer(tl)
	end
	tl = nil
	caster = nil
	RemoveLocation(loccasterz)
	loccasterz = nil
end

function Trig_Electric_Field_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local lvl = GetUnitAbilityLevel(caster, FourCC('A07Q')) ---@type number integer
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local g ---@type group
	local grup ---@type group
	local Picked ---@type unit
	local lop = 0 ---@type number integer
	local target ---@type unit
	local l ---@type lightning
	local loccasterz ---@type location
	local locz ---@type location
	local tl ---@type timer
	local hl ---@type number integer
	local check = 0 ---@type number integer
	local damage ---@type number real
	local count = 0 ---@type number integer
	if GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
		damage = 10. + (lvl * $F) + GetRandomReal(.0, lvl * 10.)
		tl = CreateTimer()
		hl = GetHandleId(tl)
		loccasterz = GetUnitLoc(caster)
		g = CreateGroup()
		grup = CreateGroup()
		GroupEnumUnitsInRange(g, x, y, 500., nil)
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", caster, "overhead"))
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, GetOwningPlayer(caster)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(grup, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		RandomUnitFromGroup(1 + lvl, grup)
		GroupAddGroup(udg_GroupRandomUnitFromGroup, g)
		while(true) do
			target = FirstOfGroup(g)
			if (lop > lvl + 1 or target == nil) then break end
			count = count + 1
			locz = GetUnitLoc(target)
			l[lop] = AddLightningEx("CLPB", true, x, y, GetUnitFlyHeight(caster) + 215. + GetLocationZ(loccasterz), GetUnitX(target), GetUnitY(target), GetUnitFlyHeight(target) + 25. + GetLocationZ(locz))
			SaveLightningHandle(udg_hash, hl, lop, l[lop])
			SaveUnitHandle(udg_hash, hl, lop + $A, target)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", target, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlb\\AIlbSpecialArt.mdl", target, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", target, "origin"))
			UnitDamageTarget(caster, target, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			GroupRemoveUnit(g, target)
			RemoveLocation(locz)
			locz = nil
			l[lop] = nil
			target = nil
			lop = lop + 1
		end
		SaveInteger(udg_hash, hl, 20, check)
		SaveUnitHandle(udg_hash, hl, 21, caster)
		SaveInteger(udg_hash, hl, 22, count)
		TimerStart(tl, .04, true, Trig_Electric_Field_periodic_lightning_move_Actions)
		RemoveLocation(loccasterz)
		loccasterz = nil
		tl = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		GroupClear(grup)
		DestroyGroup(grup)
		grup = nil
		Picked = nil
		target = nil
	end
	t = nil
	caster = nil
end

function Trig_Learn_Skill_Electric_Field_Actions()
	local caster = GetLearningUnit() ---@type unit
	local lvl = GetUnitAbilityLevel(caster, FourCC('A07Q')) ---@type number integer
	local t ---@type timer
	local h ---@type number integer
	if lvl == 1 then
		t = CreateTimer()
		h = GetHandleId(t)
		SaveTimerHandle(udg_hash, GetHandleId(caster), $B, t)
	end
	t = LoadTimerHandle(udg_hash, GetHandleId(caster), $B)
	SaveUnitHandle(udg_hash, h, 1, caster)
	TimerStart(t, 4. - (.25 * lvl), true, Trig_Electric_Field_periodic_Actions)
	caster = nil
	t = nil
end

---@return boolean
function Trig_Learn_Skill_Electric_Field_Conditions()
	return GetLearnedSkill() == FourCC('A07Q') and GetUnitTypeId(GetLearningUnit()) ~= FourCC('h00U')
end

function InitTrig_Electric_Field()
	local index = 0 ---@type number integer
	gg_trg_Electric_Field = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Electric_Field, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Electric_Field, Condition(Trig_Learn_Skill_Electric_Field_Conditions))
	TriggerAddAction(gg_trg_Electric_Field, Trig_Learn_Skill_Electric_Field_Actions)
end

function Trig_Thundercloud_lightning2_Actions()
	local tl = GetExpiredTimer() ---@type timer
	local hl = GetHandleId(tl) ---@type number integer
	local lop = 0 ---@type number integer
	local l ---@type lightning
	while(true) do
		if (lop > 5) then break end
		l = LoadLightningHandle(udg_hash, hl, lop)
		DestroyLightning(l)
		l = nil
		lop = lop + 1
	end
	FlushChildHashtable(udg_hash, hl)
	DestroyTimer(tl)
	tl = nil
end

function Trig_Thundercloud2_move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local cloud = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local x = LoadReal(udg_hash, h, 2) ---@type number real
	local y = LoadReal(udg_hash, h, 3) ---@type number real
	local angle = LoadReal(udg_hash, h, 4) ---@type number real
	local stage = LoadInteger(udg_hash, h, 5) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 7) ---@type unit
	local xp = LoadReal(udg_hash, h, 8) ---@type number real
	local yp = LoadReal(udg_hash, h, 9) ---@type number real
	local damage = LoadReal(udg_hash, h, $A) ---@type number real
	local p = LoadPlayerHandle(udg_hash, h, $B) ---@type player
	local lop = 0 ---@type number integer
	local xu = GetUnitX(cloud) ---@type number real
	local yu = GetUnitY(cloud) ---@type number real
	local distance = SquareRoot((xp - xu) * (xp - xu) + (yp - yu) * (yp - yu)) ---@type number real
	local xt ---@type number real
	local yt ---@type number real
	local slower ---@type unit
	local tl ---@type timer
	local hl ---@type number integer
	local g ---@type group
	local Picked ---@type unit
	local l ---@type lightning
	local between ---@type number real
	local efcloud ---@type effect
	local locz ---@type location
	local loccloudz = GetUnitLoc(cloud) ---@type location
	if distance < 3.75 then
		stage = stage + 1
		SaveInteger(udg_hash, h, 5, stage)
		tl = CreateTimer()
		hl = GetHandleId(tl)
		while(true) do
			if (lop > 4) then break end
			xt = xp + 150. * Cos((lop * 72.) * bj_DEGTORAD)
			yt = yp + 150. * Sin((lop * 72.) * bj_DEGTORAD)
			locz = Location(xt, yt)
			l = AddLightningEx("FORK", true, xu, yu, 425. + GetLocationZ(loccloudz), xt, yt, -50. + GetLocationZ(locz))
			DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", xt, yt))
			SaveLightningHandle(udg_hash, hl, lop, l)
			l = nil
			lop = lop + 1
			RemoveLocation(locz)
			locz = nil
		end
		l = nil
		locz = Location(xt, yt)
		l = AddLightningEx("FORK", true, xu, yu, 425. + GetLocationZ(loccloudz), xp, yp, -50. + GetLocationZ(locz))
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\ThunderClap\\ThunderClapCaster.mdl", xp, yp))
		DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", xp, yp))
		SaveLightningHandle(udg_hash, hl, 5, l)
		l = nil
		RemoveLocation(locz)
		locz = nil
		g = CreateGroup()
		GroupEnumUnitsInRange(g, xp, yp, $E1, nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				slower = CreateUnit(p, FourCC('h00U'), xp, yp, .0)
				UnitApplyTimedLife(slower, FourCC('BTLF'), .75)
				UnitAddAbility(slower, FourCC('A07S'))
				SetUnitAbilityLevel(slower, FourCC('A07S'), GetUnitAbilityLevel(caster, FourCC('A07N')))
				IssueTargetOrderById(slower, $D006B, Picked)
				slower = nil
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIlb\\AIlbSpecialArt.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldBuff.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", Picked, "chest"))
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		TimerStart(tl, .6, false, Trig_Thundercloud_lightning2_Actions)
		xp = x + GetRandomReal(200., 250.) * Cos(((stage * 120.) + angle) * bj_DEGTORAD)
		yp = y + GetRandomReal(200., 250.) * Sin(((stage * 120.) + angle) * bj_DEGTORAD)
		SaveReal(udg_hash, h, 8, xp)
		SaveReal(udg_hash, h, 9, yp)
		tl = nil
		Picked = nil
		DestroyGroup(g)
		g = nil
		if stage >= 4 then
			efcloud = LoadEffectHandle(udg_hash, h, 6)
			DestroyEffect(efcloud)
			efcloud = nil
			KillUnit(cloud)
			cloud = nil
			FlushChildHashtable(udg_hash, h)
			DestroyTimer(t)
			t = nil
		end
	else
		between = bj_RADTODEG * Atan2(yp - yu, xp - xu)
		xu = xu + 5. * Cos(between * bj_DEGTORAD)
		yu = yu + 5. * Sin(between * bj_DEGTORAD)
		if IsTerrainPathable(xu, yu, PATHING_TYPE_FLYABILITY) == false then
			SetUnitPosition(cloud, xu, yu)
		else
			efcloud = LoadEffectHandle(udg_hash, h, 6)
			DestroyEffect(efcloud)
			efcloud = nil
			KillUnit(cloud)
			cloud = nil
			FlushChildHashtable(udg_hash, h)
			DestroyTimer(t)
			t = nil
		end
	end
	t = nil
	cloud = nil
	caster = nil
	p = nil
	RemoveLocation(loccloudz)
	loccloudz = nil
end

function Trig_Storm_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local x = LoadReal(udg_hash, h, 2) ---@type number real
	local y = LoadReal(udg_hash, h, 3) ---@type number real
	local lvl = LoadInteger(udg_hash, h, 5) ---@type number integer
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local lvlult = GetUnitAbilityLevel(caster, FourCC('A07P')) ---@type number integer
	local lvlultup = GetUnitAbilityLevel(caster, FourCC('A0Q6')) ---@type number integer
	local dammi ---@type unit
	local px ---@type number real
	local py ---@type number real
	local orderId ---@type number integer
	local cloud ---@type unit
	local p ---@type player
	local damage ---@type number real
	local angle ---@type number real
	local efcloud ---@type effect
	local loc ---@type location
	local t2 ---@type timer
	local h2 ---@type number integer
	orderId = $D0278
	if (orderId ~= 0) then
	else
		orderId = UnitId("channel")
		if (orderId ~= 0) then
		end
	end
	if order == orderId and (lvl > 0) then
		t2 = CreateTimer()
		h2 = GetHandleId(t2)
		p = GetOwningPlayer(caster)
		if lvlult > 0 then
			damage = (.12 * lvlult + 1.) * ((5. + (25. * lvl) + ((.1 + .05 * lvl) * GetHeroInt(caster, true))))
		end
		if lvlultup > 0 then
			damage = (.17 * lvlultup + 1.) * ((5. + (25. * lvl) + ((.1 + .05 * lvl) * GetHeroInt(caster, true))))
		end
		angle = GetRandomReal(.0, 360.)
		px = x + GetRandomReal(200., 400.) * Cos(angle * bj_DEGTORAD)
		py = y + GetRandomReal(200., 400.) * Sin(angle * bj_DEGTORAD)
		cloud = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), px, py, .0)
		efcloud = AddSpecialEffectTarget("war3mapImported\\OutlandStorm.mdx", cloud, "origin")
		UnitAddAbility(cloud, FourCC('Amrf'))
		UnitRemoveAbility(cloud, FourCC('Amrf'))
		loc = Location(px, py)
		SetUnitFlyHeight(cloud, 350. + GetLocationZ(loc), .0)
		SetUnitScale(cloud, 1.35, 1.35, 1.35)
		SetUnitPosition(cloud, px, py)
		SaveUnitHandle(udg_hash, h2, 1, cloud)
		SaveReal(udg_hash, h2, 2, px)
		SaveReal(udg_hash, h2, 3, py)
		SaveReal(udg_hash, h2, 4, angle)
		SaveInteger(udg_hash, h2, 5, 0)
		SaveEffectHandle(udg_hash, h2, 6, efcloud)
		SaveUnitHandle(udg_hash, h2, 7, caster)
		SaveReal(udg_hash, h2, 8, px)
		SaveReal(udg_hash, h2, 9, py)
		SaveReal(udg_hash, h2, $A, damage)
		SavePlayerHandle(udg_hash, h2, $B, p)
		TimerStart(t2, .04, true, Trig_Thundercloud2_move_Actions)
		caster = nil
		RemoveLocation(loc)
		loc = nil
		cloud = nil
		efcloud = nil
		t2 = nil
		p = nil
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Purge\\PurgeBuffTarget.mdl", caster, "origin"))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", caster, "origin"))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\LightningBolt\\LightningBoltMissile.mdl", caster, "overhead"))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldTarget.mdl", caster, "origin"))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", caster, "chest"))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", caster, "hand,right"))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl", caster, "weapon"))
	else
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		RemoveUnit(LoadUnitHandle(udg_hash, GetHandleId(caster), FourCC('u')))
	end
	t = nil
	caster = nil
end

function Trig_Storm_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local lvl = GetUnitAbilityLevel(caster, FourCC('A07N')) ---@type number integer
	local lvlult = GetUnitAbilityLevel(caster, FourCC('A07P')) ---@type number integer
	local lvlultup = GetUnitAbilityLevel(caster, FourCC('A0Q6')) ---@type number integer
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, x)
	SaveReal(udg_hash, h, 3, y)
	SaveInteger(udg_hash, h, 5, lvl)
	if lvlult > 0 then
		AddProgressBar(caster, 240. + (3. * lvlult), (.9 + .1 * lvl), (.5 * 3 * lvlult), false, true, FourCC('u'), $96, $96, $AF)
	end
	if lvlultup > 0 then
		AddProgressBar(caster, 240. + (3. * lvlultup), (.9 + .1 * lvl), (.5 * 4 * lvlultup), false, true, FourCC('u'), $96, $96, $AF)
	end
	TimerStart(t, .5, true, Trig_Storm_periodic_Actions)
	caster = nil
	t = nil
end

---@return boolean
function Trig_Storm_Conditions()
	return (GetSpellAbilityId() == FourCC('A07P') or GetSpellAbilityId() == FourCC('A0Q6'))
end

function InitTrig_Storm()
	local index = 0 ---@type number integer
	gg_trg_Storm = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Storm, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Storm, Condition(Trig_Storm_Conditions))
	TriggerAddAction(gg_trg_Storm, Trig_Storm_Actions)
end

function Trig_Respawnlol_Actions()
	ConditionalTriggerExecute(gg_trg_Ranger_Load)
end

function InitTrig_Respawnlol()
	gg_trg_Respawnlol = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Respawnlol, 5)
	TriggerAddAction(gg_trg_Respawnlol, Trig_Respawnlol_Actions)
end

function Trig_Ranger_Load_Actions()
	AbilityPreload(FourCC('A0EE'), 6)
	AbilityPreload(FourCC('A0ED'), 4)
	AbilityPreload(FourCC('A0EF'), 1)
	AbilityPreload(FourCC('A0EH'), 6)
	AbilityPreload(FourCC('A0EK'), 6)
	AbilityPreload(FourCC('A0EL'), 6)
	AbilityPreload(FourCC('A0EG'), 6)
	AbilityPreload(FourCC('A0EN'), 6)
	AbilityPreload(FourCC('A0EO'), 1)
	AbilityPreload(FourCC('A0EP'), 3)
	AbilityPreload(FourCC('A0EM'), 6)
	AbilityPreload(FourCC('A0EI'), 6)
	AbilityPreload(FourCC('A0EJ'), 6)
	EffectPreload("Abilities\\Spells\\Other\\BreathOfFire\\BreathOfFireDamage.mdl")
	EffectPreload("Abilities\\Spells\\Other\\FrostDamage\\FrostDamage.mdl")
	EffectPreload("Abilities\\Weapons\\ZigguratFrostMissile\\ZigguratFrostMissile.mdl")
	EffectPreload("Abilities\\Spells\\Undead\\Curse\\CurseTarget.mdl")
	EffectPreload("Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl")
	EffectPreload("Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl")
	EffectPreload("Abilities\\Spells\\Undead\\OrbOfDeath\\AnnihilationMissile.mdl")
	EffectPreload("Abilities\\Weapons\\SearingArrow\\SearingArrowMissile.mdl")
	EffectPreload("Abilities\\Weapons\\ColdArrow\\ColdArrowMissile.mdl")
	EffectPreload("Abilities\\Spells\\Other\\BlackArrow\\BlackArrowMissile.mdl")
	EffectPreload("Abilities\\Spells\\Other\\Drain\\ManaDrainCaster.mdl")
	EnableTrigger(gg_trg_MultiShotSwitch)
	EnableTrigger(gg_trg_Learn_Release_of_Arrows)
	EnableTrigger(gg_trg_Release_of_Arrows)
	EnableTrigger(gg_trg_Dexterity_of_the_Ranger)
end

function InitTrig_Ranger_Load()
	gg_trg_Ranger_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Ranger_Load, Trig_Ranger_Load_Actions)
end

function Trig_MultiShotSwitch_Actions()
	local caster = GetTriggerUnit() ---@type unit
	local death = GetDyingUnit() ---@type unit
	local id = FourCC('A0EF') ---@type number integer
	local orderId ---@type number integer
	if GetUnitAbilityLevel(death, id) > 0 then
		UnitRemoveAbility(death, id)
	end
	orderId = $D0057
	if (GetIssuedOrderId() == orderId) then
		UnitAddAbility(caster, id)
		SetUnitAbilityLevel(caster, FourCC('A0ED'), 1 + GetUnitAbilityLevel(caster, FourCC('A0EP')))
		UnitMakeAbilityPermanent(caster, true, id)
		UnitMakeAbilityPermanent(caster, true, FourCC('A0ED'))
	end
	orderId = $D0058
	if (GetIssuedOrderId() == orderId) then
		UnitRemoveAbility(caster, id)
	end
	caster = nil
	death = nil
end

---@return boolean
function Trig_MultiShotSwitch_Conditions()
	return GetUnitAbilityLevel(GetTriggerUnit(), FourCC('A0EE')) > 0 or GetUnitAbilityLevel(GetDyingUnit(), FourCC('A0EE')) > 0
end

function InitTrig_MultiShotSwitch()
	local index = 0 ---@type number integer
	gg_trg_MultiShotSwitch = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_MultiShotSwitch, Player(index), EVENT_PLAYER_UNIT_ISSUED_ORDER, nil)
		TriggerRegisterPlayerUnitEvent(gg_trg_MultiShotSwitch, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_MultiShotSwitch, Condition(Trig_MultiShotSwitch_Conditions))
	TriggerAddAction(gg_trg_MultiShotSwitch, Trig_MultiShotSwitch_Actions)
end

function Trig_Learn_Release_of_Arrows_Actions()
	local u = GetLearningUnit() ---@type unit
	local lvl = GetUnitAbilityLevel(u, FourCC('A0EH')) ---@type number integer
	if lvl == 1 then
		UnitAddAbility(u, FourCC('A0EK'))
		UnitAddAbility(u, FourCC('A0EL'))
		UnitAddAbility(u, FourCC('A0EG'))
		UnitMakeAbilityPermanent(u, true, FourCC('A0EK'))
		UnitMakeAbilityPermanent(u, true, FourCC('A0EL'))
		UnitMakeAbilityPermanent(u, true, FourCC('A0EG'))
	else
		SetUnitAbilityLevel(u, FourCC('A0EK'), lvl)
		SetUnitAbilityLevel(u, FourCC('A0EL'), lvl)
		SetUnitAbilityLevel(u, FourCC('A0EG'), lvl)
	end
	u = nil
end

---@return boolean
function Trig_Learn_Release_of_Arrows_Conditions()
	return GetLearnedSkill() == FourCC('A0EH') and GetUnitTypeId(GetLearningUnit()) ~= FourCC('h00U')
end

function InitTrig_Learn_Release_of_Arrows()
	local index = 0 ---@type number integer
	gg_trg_Learn_Release_of_Arrows = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Release_of_Arrows, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Release_of_Arrows, Condition(Trig_Learn_Release_of_Arrows_Conditions))
	TriggerAddAction(gg_trg_Learn_Release_of_Arrows, Trig_Learn_Release_of_Arrows_Actions)
end

function Trig_Release_of_Arrows_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 20) ---@type unit
	local count = LoadInteger(udg_hash, h, 21) ---@type number integer
	local damage = LoadReal(udg_hash, h, 22) ---@type number real
	local check = LoadInteger(udg_hash, h, 23) ---@type number integer
	local abiltype = LoadInteger(udg_hash, h, 24) ---@type number integer
	local gdamage = LoadGroupHandle(udg_hash, h, 25) ---@type group
	local p = GetOwningPlayer(caster) ---@type player
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0EH')) ---@type number integer
	local arrow ---@type unit
	local ax ---@type number real
	local ay ---@type number real
	local face ---@type number real
	local lop = 0 ---@type number integer
	local ef ---@type effect
	local dammi ---@type unit
	local sef ---@type string
	local order ---@type string
	local rawcode ---@type number integer
	local g = CreateGroup() ---@type group
	local gr = CreateGroup() ---@type group
	local Picked ---@type unit
	if check < 25 then
		check = check + 1
		SaveInteger(udg_hash, h, 23, check)
		if abiltype == 1 then
			sef = "Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl"
			rawcode = FourCC('A0EM')
			order = "acidbomb"
		end
		if abiltype == 2 then
			sef = "Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl"
			rawcode = FourCC('A0EI')
			order = "slow"
		end
		if abiltype == 3 then
			sef = "Abilities\\Spells\\Undead\\OrbOfDeath\\AnnihilationMissile.mdl"
			rawcode = FourCC('A0EJ')
			order = "innerfire"
		end
		while(true) do
			if (lop >= count) then break end
			arrow = LoadUnitHandle(udg_hash, h, lop)
			face = GetUnitFacing(arrow)
			ax = GetUnitX(arrow) + 36. * Cos(face * bj_DEGTORAD)
			ay = GetUnitY(arrow) + 36. * Sin(face * bj_DEGTORAD)
			if IsTerrainPathable(ax, ay, PATHING_TYPE_FLYABILITY) == false then
				SetUnitPosition(arrow, ax, ay)
				GroupEnumUnitsInRange(g, ax, ay, 100., nil)
				while(true) do
					Picked = FirstOfGroup(g)
					if (Picked == nil) then break end
					if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
						GroupAddUnit(gdamage, Picked)
						GroupAddUnit(gr, Picked)
					end
					GroupRemoveUnit(g, Picked)
				end
				Picked = nil
			end
			arrow = nil
			lop = lop + 1
		end
		while(true) do
			Picked = FirstOfGroup(gr)
			if (Picked == nil) then break end
			dammi = CreateUnit(p, FourCC('h00U'), ax, ay, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), .34)
			UnitAddAbility(dammi, rawcode)
			SetUnitAbilityLevel(dammi, rawcode, lvl)
			IssueTargetOrder(dammi, order, Picked)
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			DestroyEffect(AddSpecialEffectTarget(sef, Picked, "chest"))
			dammi = nil
			GroupRemoveUnit(gr, Picked)
		end
	else
		while(true) do
			if (lop >= count) then break end
			arrow = LoadUnitHandle(udg_hash, h, lop)
			ef = LoadEffectHandle(udg_hash, h, $A + lop)
			KillUnit(arrow)
			DestroyEffect(ef)
			arrow = nil
			ef = nil
			lop = lop + 1
		end
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		gdamage = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		t = nil
	end
	t = nil
	caster = nil
	gdamage = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(gr)
	DestroyGroup(gr)
	gr = nil
	Picked = nil
end

function Trig_Release_of_Arrows_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local tx ---@type number real
	local ty ---@type number real
	local loc ---@type location
	local angle ---@type number real
	local angle1 ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local abilityid = GetSpellAbilityId() ---@type number integer
	local abiltype ---@type number integer
	local count = GetUnitAbilityLevel(caster, GetSpellAbilityId()) + 2 ---@type number integer
	local lop = 0 ---@type number integer
	local damage = ((count * 25.) - 35.) ---@type number real
	local lvlult = GetUnitAbilityLevel(caster, FourCC('A0EP')) ---@type number integer
	local arrow ---@type unit
	local check = 0 ---@type number integer
	local ef ---@type effect
	local s ---@type string
	local gdamage = CreateGroup() ---@type group
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local perekluchatelangle = false ---@type boolean
	local counterangle = 0 ---@type number integer
	local hcaster = GetHandleId(caster) ---@type number integer
	local agility ---@type number integer
	local bonus ---@type number integer
	if lvlult > 0 then
		damage = damage * (1. + .15 * GetUnitAbilityLevel(caster, FourCC('A0EP')) + .05)
	end
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	angle = (bj_RADTODEG * Atan2(ty - y, tx - x))
	if target == caster then
		angle = GetUnitFacing(caster)
	end
	if count - ((count / 2) * 2) == 0 then
		angle = angle + 6.
	end
	if abilityid == FourCC('A0EK') then
		abiltype = 1
		s = "Abilities\\Weapons\\SearingArrow\\SearingArrowMissile.mdl"
	end
	if abilityid == FourCC('A0EL') then
		abiltype = 2
		s = "Abilities\\Weapons\\ColdArrow\\ColdArrowMissile.mdl"
	end
	if abilityid == FourCC('A0EG') then
		abiltype = 3
		s = "Abilities\\Spells\\Other\\BlackArrow\\BlackArrowMissile.mdl"
	end
	while(true) do
		if (lop >= count) then break end
		if perekluchatelangle then
			perekluchatelangle = false
			angle = angle - (counterangle * 12.)
		else
			perekluchatelangle = true
			angle = angle + (counterangle * 12.)
		end
		arrow = CreateUnit(p, FourCC('h00U'), x, y, angle)
		SetUnitScale(arrow, 1.2, 1.2, 1.2)
		ef = AddSpecialEffectTarget(s, arrow, "chest")
		SaveUnitHandle(udg_hash, h, lop, arrow)
		SaveEffectHandle(udg_hash, h, $A + lop, ef)
		arrow = nil
		ef = nil
		lop = lop + 1
		counterangle = counterangle + 1
	end
	if GetUnitAbilityLevel(caster, FourCC('A0EO')) > 0 then
		hcaster = GetHandleId(caster)
		agility = LoadInteger(udg_hash, hcaster, 52)
		bonus = LoadInteger(udg_hash, hcaster, 53)
		if agility <= 30 * GetUnitAbilityLevel(caster, FourCC('A0EN')) - 5 - (count * bonus) then
			agility = agility + (count * bonus)
			SetHeroAgi(caster, GetHeroAgi(caster, false) + (count * bonus), true)
			SaveInteger(udg_hash, hcaster, 52, agility)
			ProgressBarAddPercentComplete(LoadUnitHandle(udg_hash, GetHandleId(caster), FourCC('u')), (((count * bonus) * 100.) / (30 * GetUnitAbilityLevel(caster, FourCC('A0EN')) - 5 - (count * bonus))))
		else
			SetHeroAgi(caster, GetHeroAgi(caster, false) - agility + (30 * GetUnitAbilityLevel(caster, FourCC('A0EN'))) - 5, true)
			agility = 30 * GetUnitAbilityLevel(caster, FourCC('A0EN')) - 5
			SaveInteger(udg_hash, hcaster, 52, agility)
		end
	end
	SaveUnitHandle(udg_hash, h, 20, caster)
	SaveInteger(udg_hash, h, 21, count)
	SaveReal(udg_hash, h, 22, damage)
	SaveInteger(udg_hash, h, 23, check)
	SaveInteger(udg_hash, h, 24, abiltype)
	SaveGroupHandle(udg_hash, h, 25, gdamage)
	TimerStart(t, .04, true, Trig_Release_of_Arrows_periodic_Actions)
	caster = nil
	target = nil
	RemoveLocation(loc)
	loc = nil
	p = nil
	gdamage = nil
	t = nil
end

---@return boolean
function Trig_Release_of_Arrows_Conditions()
	return GetSpellAbilityId() == FourCC('A0EK') or GetSpellAbilityId() == FourCC('A0EL') or GetSpellAbilityId() == FourCC('A0EG')
end

function InitTrig_Release_of_Arrows()
	local index = 0 ---@type number integer
	gg_trg_Release_of_Arrows = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Release_of_Arrows, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Release_of_Arrows, Condition(Trig_Release_of_Arrows_Conditions))
	TriggerAddAction(gg_trg_Release_of_Arrows, Trig_Release_of_Arrows_Actions)
end

function Trig_Dexterity_of_the_Ranger_Remove_Agility_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local ef = LoadEffectHandle(udg_hash, h, 2) ---@type effect
	local agility = LoadInteger(udg_hash, GetHandleId(caster), 52) ---@type number integer
	SetHeroAgi(caster, GetHeroAgi(caster, false) - agility, true)
	UnitRemoveAbility(caster, FourCC('A0EO'))
	DestroyEffect(ef)
	RemoveUnit(LoadUnitHandle(udg_hash, GetHandleId(caster), FourCC('u')))
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	ef = nil
	caster = nil
end

function Trig_Dexterity_of_the_Ranger_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local time = 10. + 2 * GetUnitAbilityLevel(caster, FourCC('A0EP')) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0EN')) ---@type number integer
	local agility = 6 + 4 * lvl ---@type number integer
	local chetnost = ((lvl / 2) * 2) - lvl ---@type number integer
	local bonus ---@type number integer
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\Drain\\ManaDrainCaster.mdl", caster, "overhead") ---@type effect
	if chetnost == 0 then
		bonus = (lvl / 2)
	else
		bonus = (lvl / 2) + 1
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveEffectHandle(udg_hash, h, 2, ef)
	SaveInteger(udg_hash, GetHandleId(caster), 52, agility)
	SaveInteger(udg_hash, GetHandleId(caster), 53, bonus)
	SetHeroAgi(caster, GetHeroAgi(caster, false) + agility, true)
	UnitAddAbility(caster, FourCC('A0EO'))
	TimerStart(t, 10., false, Trig_Dexterity_of_the_Ranger_Remove_Agility_Actions)
	AddProgressBar(caster, 150. + (2. * lvl), (.9 + .05 * lvl), 1., true, false, FourCC('u'), 20, FourCC('n'), $E6)
	ProgressBarAddPercentComplete(LoadUnitHandle(udg_hash, GetHandleId(caster), FourCC('u')), (agility * 100. / (30 * GetUnitAbilityLevel(caster, FourCC('A0EN')) - 5)))
	caster = nil
	ef = nil
	t = nil
end

---@return boolean
function Trig_Dexterity_of_the_Ranger_Conditions()
	return GetSpellAbilityId() == FourCC('A0EN')
end

function InitTrig_Dexterity_of_the_Ranger()
	local index = 0 ---@type number integer
	gg_trg_Dexterity_of_the_Ranger = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Dexterity_of_the_Ranger, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Dexterity_of_the_Ranger, Condition(Trig_Dexterity_of_the_Ranger_Conditions))
	TriggerAddAction(gg_trg_Dexterity_of_the_Ranger, Trig_Dexterity_of_the_Ranger_Actions)
end

function Trig_Healer_Load_Actions()
	AbilityPreload(FourCC('A006'), 6)
	AbilityPreload(FourCC('A04P'), 6)
	AbilityPreload(FourCC('A0AC'), 6)
	AbilityPreload(FourCC('A0AE'), 3)
	UnitPreload(FourCC('h01O'))
	AbilityPreload(FourCC('A0EQ'), 6)
	AbilityPreload(FourCC('A0ER'), 6)
	AbilityPreload(FourCC('A032'), 6)
	AbilityPreload(FourCC('A0A8'), 6)
	AbilityPreload(FourCC('A0AD'), 1)
	AbilityPreload(FourCC('B020'), 1)
	AbilityPreload(FourCC('B022'), 1)
	AbilityPreload(FourCC('B023'), 1)
	AbilityPreload(FourCC('B025'), 1)
	AbilityPreload(FourCC('B028'), 1)
	EffectPreload("Abilities\\Spells\\Items\\StaffOfSanctuary\\Staff_Sanctuary_Target.mdl")
	EffectPreload("Abilities\\Spells\\Items\\PotionOfOmniscience\\CrystalBallCaster.mdl")
	EffectPreload("Abilities\\Spells\\Human\\InnerFire\\InnerFireTarget.mdl")
	EffectPreload("Abilities\\Spells\\Other\\ANrm\\ANrmTarget.mdl")
	EffectPreload("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl")
	EffectPreload("Abilities\\Spells\\Human\\Resurrect\\ResurrectTarget.mdl")
	EffectPreload("war3mapImported\\Curing_Light_Effect.mdx")
	EffectPreload("Abilities\\Spells\\Undead\\ReplenishHealth\\ReplenishHealthCasterOverhead.mdl")
	EffectPreload("Abilities\\Spells\\NightElf\\Tranquility\\Tranquility.mdl")
	EffectPreload("war3mapImported\\Retribution.mdx")
	EnableTrigger(gg_trg_Good_Healing)
	EnableTrigger(gg_trg_Spiritual_Communication)
	EnableTrigger(gg_trg_Curing_Light)
	EnableTrigger(gg_trg_Guardian_Angel)
end

function InitTrig_Healer_Load()
	gg_trg_Healer_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Healer_Load, Trig_Healer_Load_Actions)
end

function Trig_Good_Healing_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A006')) ---@type number integer
	local damage = ((5 * lvl * lvl) + 20) + (20. * lvl) + (GetHeroInt(caster, true) * .2 * lvl) ---@type number real
	local heal = (($A * lvl * lvl) + 40) + (40. * lvl) + (GetHeroInt(caster, true) * .4 * lvl) ---@type number real
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", x, y))
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\Resurrect\\ResurrectTarget.mdl", x, y))
	dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
	SetUnitX(dammi, x)
	SetUnitY(dammi, y)
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 2.)
	UnitAddAbility(dammi, FourCC('A0EQ'))
	SetUnitAbilityLevel(dammi, FourCC('A0EQ'), lvl)
	IssueImmediateOrderById(dammi, $D00C4)
	GroupEnumUnitsInRange(g, x, y, 300. + 10., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", Picked, "origin"))
		end
		if IsUnitAlly(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			SetUnitState(Picked, UNIT_STATE_LIFE, GetUnitState(Picked, UNIT_STATE_LIFE) + heal)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Resurrect\\ResurrectTarget.mdl", Picked, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", Picked, "origin"))
		end
		GroupRemoveUnit(g, Picked)
	end
	dammi = nil
	caster = nil
	p = nil
	RemoveLocation(loc)
	loc = nil
	Picked = nil
	dammi = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
end

---@return boolean
function Trig_Good_Healing_Conditions()
	return GetSpellAbilityId() == FourCC('A006')
end

function InitTrig_Good_Healing()
	local index = 0 ---@type number integer
	gg_trg_Good_Healing = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Good_Healing, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Good_Healing, Condition(Trig_Good_Healing_Conditions))
	TriggerAddAction(gg_trg_Good_Healing, Trig_Good_Healing_Actions)
end

function Trig_Spiritual_Communication_Ligtning_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local l = LoadLightningHandle(udg_hash, h, 3) ---@type lightning
	local time = LoadReal(udg_hash, h, 4) ---@type number real
	local locc = GetUnitLoc(caster) ---@type location
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local loct = GetUnitLoc(target) ---@type location
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local dx = xc - xt ---@type number real
	local dy = yc - yt ---@type number real
	local dist = SquareRoot(dx * dx + dy * dy) ---@type number real
	local liferegen ---@type number integer
	local manaregen ---@type number integer
	if GetUnitState(caster, UNIT_STATE_LIFE) > .405 and GetUnitState(target, UNIT_STATE_LIFE) > .0 and dist <= 700. and time > .0 then
		time = time - .04
		SaveReal(udg_hash, h, 4, time)
		MoveLightningEx(l, true, xc, yc, 50. + GetLocationZ(locc), xt, yt, 50. + GetLocationZ(loct))
	else
		UnitRemoveAbility(caster, FourCC('B022'))
		UnitRemoveAbility(target, FourCC('B022'))
		UnitRemoveAbility(caster, FourCC('B023'))
		UnitRemoveAbility(target, FourCC('B023'))
		liferegen = LoadInteger(udg_hash, h, 5)
		manaregen = LoadInteger(udg_hash, h, 6)
		SetUnitLifeAndManaRegeneration(caster, "life", -1 * liferegen)
		SetUnitLifeAndManaRegeneration(target, "life", -1 * liferegen)
		SetUnitLifeAndManaRegeneration(caster, "mana", -1 * manaregen)
		SetUnitLifeAndManaRegeneration(target, "mana", -1 * manaregen)
		DestroyLightning(l)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	target = nil
	l = nil
	RemoveLocation(locc)
	locc = nil
	RemoveLocation(loct)
	loct = nil
end

function Trig_Spiritual_Communication_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local dammi ---@type unit
	local locc = GetUnitLoc(caster) ---@type location
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local loct = GetUnitLoc(target) ---@type location
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local l = AddLightningEx("SPLK", true, xc, yc, 50. + GetLocationZ(locc), xt, yt, 50. + GetLocationZ(loct)) ---@type lightning
	local p = GetOwningPlayer(caster) ---@type player
	local lvl = GetUnitAbilityLevel(caster, FourCC('A04P')) ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local time = 10. + (.05 * GetHeroInt(caster, true)) ---@type number real
	local liferegen = $A + ($A * lvl) ---@type number integer
	local manaregen = (5 * lvl) ---@type number integer
	SetUnitLifeAndManaRegeneration(caster, "life", liferegen)
	SetUnitLifeAndManaRegeneration(target, "life", liferegen)
	SetUnitLifeAndManaRegeneration(caster, "mana", manaregen)
	SetUnitLifeAndManaRegeneration(target, "mana", manaregen)
	dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.5)
	UnitAddAbility(dammi, FourCC('A0ER'))
	SetUnitAbilityLevel(dammi, FourCC('A0ER'), lvl)
	IssueTargetOrderById(dammi, $D0085, caster)
	dammi = nil
	if GetOwningPlayer(target) ~= Player($D) then
		dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.5)
		UnitAddAbility(dammi, FourCC('A0ER'))
		SetUnitAbilityLevel(dammi, FourCC('A0ER'), lvl)
		IssueTargetOrderById(dammi, $D0085, target)
		dammi = nil
	end
	dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.5)
	UnitAddAbility(dammi, FourCC('A032'))
	SetUnitAbilityLevel(dammi, FourCC('A032'), lvl)
	IssueTargetOrderById(dammi, $D0062, caster)
	dammi = nil
	dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.5)
	UnitAddAbility(dammi, FourCC('A032'))
	SetUnitAbilityLevel(dammi, FourCC('A032'), lvl)
	IssueTargetOrderById(dammi, $D0062, target)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveUnitHandle(udg_hash, h, 2, target)
	SaveLightningHandle(udg_hash, h, 3, l)
	SaveReal(udg_hash, h, 4, time)
	SaveInteger(udg_hash, h, 5, liferegen)
	SaveInteger(udg_hash, h, 6, manaregen)
	TimerStart(t, .04, true, Trig_Spiritual_Communication_Ligtning_Move_Actions)
	caster = nil
	target = nil
	dammi = nil
	RemoveLocation(locc)
	locc = nil
	RemoveLocation(loct)
	loct = nil
	l = nil
	p = nil
	t = nil
end

---@return boolean
function Trig_Spiritual_Communication_Conditions()
	return (GetSpellAbilityId() == FourCC('A04P') and IsUnitType(GetSpellAbilityUnit(), UNIT_TYPE_HERO)) ~= nil
end

function InitTrig_Spiritual_Communication()
	local index = 0 ---@type number integer
	gg_trg_Spiritual_Communication = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Spiritual_Communication, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Spiritual_Communication, Condition(Trig_Spiritual_Communication_Conditions))
	TriggerAddAction(gg_trg_Spiritual_Communication, Trig_Spiritual_Communication_Actions)
end

function Trig_Curing_Light_Heal_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 1) ---@type number integer
	local gheal = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local sphere = LoadUnitHandle(udg_hash, h, 3) ---@type unit
	local heal = LoadInteger(udg_hash, h, 4) ---@type number integer
	local lvl = LoadInteger(udg_hash, h, 5) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 6) ---@type effect
	local p = GetOwningPlayer(sphere) ---@type player
	local x = GetUnitX(sphere) ---@type number real
	local y = GetUnitY(sphere) ---@type number real
	local maingroup = CreateGroup() ---@type group
	local g = CreateGroup() ---@type group
	local gcurrent = CreateGroup() ---@type group
	local copygheal = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 1, wait)
		GroupEnumUnitsInRange(g, x, y, 300., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if (IsUnitAlly(Picked, p) or GetOwningPlayer(Picked) == Player($D)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(gcurrent, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		GroupAddGroup(gheal, maingroup)
		GroupAddGroup(gcurrent, maingroup)
		while(true) do
			Picked = FirstOfGroup(maingroup)
			if (Picked == nil) then break end
			if IsUnitInGroup(Picked, gheal) and IsUnitInGroup(Picked, gcurrent) == false then
				GroupRemoveUnit(gheal, Picked)
				SetUnitLifeAndManaRegeneration(Picked, "life", -1 * heal)
			end
			if IsUnitInGroup(Picked, gheal) == false and IsUnitInGroup(Picked, gcurrent) then
				GroupAddUnit(gheal, Picked)
				SetUnitLifeAndManaRegeneration(Picked, "life", heal)
			end
			GroupRemoveUnit(maingroup, Picked)
		end
		Picked = nil
		SaveGroupHandle(udg_hash, h, 2, gheal)
		GroupAddGroup(gheal, copygheal)
		RandomUnitFromGroup(1, copygheal)
		Picked = FirstOfGroup(udg_GroupRandomUnitFromGroup)
		SetUnitState(Picked, UNIT_STATE_LIFE, GetUnitState(Picked, UNIT_STATE_LIFE) + (lvl * .01) * GetUnitState(Picked, UNIT_STATE_MAX_LIFE))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl", Picked, "origin"))
	else
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		DestroyEffect(ef)
		dammi = CreateUnit(Player($C), FourCC('h00U'), x, y, GetRandomReal(.0, 360.))
		SetUnitScale(dammi, 3.1, 3.1, 3.1)
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\ReplenishHealth\\ReplenishHealthCasterOverhead.mdl", dammi, "chest"))
		RemoveUnit(sphere)
		while(true) do
			Picked = FirstOfGroup(gheal)
			if (Picked == nil) then break end
			SetUnitLifeAndManaRegeneration(Picked, "life", -1 * heal)
			GroupRemoveUnit(gheal, Picked)
		end
	end
	t = nil
	ef = nil
	sphere = nil
	p = nil
	gheal = nil
	GroupClear(maingroup)
	DestroyGroup(maingroup)
	maingroup = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(gcurrent)
	DestroyGroup(gcurrent)
	gcurrent = nil
	GroupClear(copygheal)
	DestroyGroup(copygheal)
	copygheal = nil
	dammi = nil
	Picked = nil
end

function Trig_Curing_Light_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0AC')) ---@type number integer
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local sphere = CreateUnit(p, FourCC('h01O'), x, y, GetRandomReal(.0, 360.)) ---@type unit
	local g = CreateGroup() ---@type group
	local gheal = CreateGroup() ---@type group
	local Picked ---@type unit
	local constheal = 8 + (8 * lvl) + R2I((((.06 * lvl) + .06) * GetHeroInt(caster, true))) ---@type number integer
	local wait = $C ---@type number integer
	local ef = AddSpecialEffectTarget("war3mapImported\\Curing_Light_Effect.mdx", sphere, "origin") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi = CreateUnit(p, FourCC('h00U'), x, y, GetRandomReal(.0, 360.)) ---@type unit
	SetUnitScale(dammi, 3.1, 3.1, 3.1)
	UnitAddAbility(sphere, FourCC('A0A8'))
	SetUnitAbilityLevel(sphere, FourCC('A0A8'), lvl)
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\ReplenishHealth\\ReplenishHealthCasterOverhead.mdl", dammi, "chest"))
	GroupEnumUnitsInRange(g, x, y, 300., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if (IsUnitAlly(Picked, p) or GetOwningPlayer(Picked) == Player($D)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			GroupAddUnit(gheal, Picked)
			SetUnitLifeAndManaRegeneration(Picked, "life", constheal)
		end
		GroupRemoveUnit(g, Picked)
	end
	SaveInteger(udg_hash, h, 1, wait)
	SaveGroupHandle(udg_hash, h, 2, gheal)
	SaveUnitHandle(udg_hash, h, 3, sphere)
	SaveInteger(udg_hash, h, 4, constheal)
	SaveInteger(udg_hash, h, 5, lvl)
	SaveEffectHandle(udg_hash, h, 6, ef)
	TimerStart(t, 1., true, Trig_Curing_Light_Heal_Actions)
	caster = nil
	p = nil
	RemoveLocation(loc)
	loc = nil
	sphere = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	gheal = nil
	Picked = nil
	ef = nil
	t = nil
	dammi = nil
end

---@return boolean
function Trig_Curing_Light_Conditions()
	return GetSpellAbilityId() == FourCC('A0AC')
end

function InitTrig_Curing_Light()
	local index = 0 ---@type number integer
	gg_trg_Curing_Light = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Curing_Light, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Curing_Light, Condition(Trig_Curing_Light_Conditions))
	TriggerAddAction(gg_trg_Curing_Light, Trig_Curing_Light_Actions)
end

function Trig_Guardian_Angel_10sec_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local gheal = LoadGroupHandle(udg_hash, h, 1) ---@type group
	local adddamage = LoadInteger(udg_hash, h, 2) ---@type number integer
	local addarmor = LoadInteger(udg_hash, h, 3) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 4) ---@type effect
	local liferegen = LoadInteger(udg_hash, h, 5) ---@type number integer
	local Picked ---@type unit
	DestroyEffect(ef)
	ef = nil
	while(true) do
		Picked = FirstOfGroup(gheal)
		if (Picked == nil) then break end
		ef = LoadEffectHandle(udg_hash, GetHandleId(Picked), 66)
		if ef ~= nil then
			DestroyEffect(ef)
			ef = nil
		end
		SetAttackAbilityLevel(Picked, -adddamage)
		SetArmorAbilityLevel(Picked, -addarmor)
		SetUnitLifeAndManaRegeneration(Picked, "life", -liferegen)
		UnitRemoveAbility(Picked, FourCC('A0AD'))
		GroupRemoveUnit(gheal, Picked)
		SaveEffectHandle(udg_hash, GetHandleId(Picked), 66, nil)
		SaveReal(udg_hash, GetHandleId(Picked), 65, .0)
	end
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	GroupClear(gheal)
	DestroyGroup(gheal)
	gheal = nil
	ef = nil
	Picked = nil
end

function Trig_Guardian_Angel_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0AE')) ---@type number integer
	local lvlup = GetUnitAbilityLevel(caster, FourCC('A0Q3')) ---@type number integer
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local g = CreateGroup() ---@type group
	local gheal = CreateGroup() ---@type group
	local Picked ---@type unit
	local adddamage ---@type number integer
	local addarmor ---@type number integer
	local shield ---@type number real
	local liferegen ---@type number integer
	local ef ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local aoe ---@type number real
	if lvl > 0 then
		adddamage = 40 * lvl + $A
		addarmor = 7 * lvl + 3
		shield = 300. * lvl + 100.
		liferegen = lvl * $C + 4
		aoe = 750.
	end
	if lvlup > 0 then
		adddamage = 40 * lvlup + $A
		addarmor = 7 * lvlup + 3
		shield = 450. * lvlup + 150.
		liferegen = lvlup * $C + 4
		aoe = 999999.
	end
	ef = AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\Tranquility\\Tranquility.mdl", caster, "origin")
	SaveEffectHandle(udg_hash, h, 4, ef)
	GroupEnumUnitsInRange(g, x, y, aoe, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitAlly(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			ef = AddSpecialEffectTarget("war3mapImported\\Retribution.mdx", Picked, "origin")
			SaveEffectHandle(udg_hash, GetHandleId(Picked), 66, ef)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Resurrect\\ResurrectCaster.mdl", Picked, "origin"))
			GroupAddUnit(gheal, Picked)
			UnitAddAbility(Picked, FourCC('A0AD'))
			SetAttackAbilityLevel(Picked, adddamage)
			SetArmorAbilityLevel(Picked, addarmor)
			SetUnitLifeAndManaRegeneration(Picked, "life", liferegen)
			SaveReal(udg_hash, GetHandleId(Picked), 65, shield)
		end
		GroupRemoveUnit(g, Picked)
	end
	SaveGroupHandle(udg_hash, h, 1, gheal)
	SaveInteger(udg_hash, h, 2, adddamage)
	SaveInteger(udg_hash, h, 3, addarmor)
	SaveInteger(udg_hash, h, 5, liferegen)
	TimerStart(t, 12., false, Trig_Guardian_Angel_10sec_Actions)
	caster = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	gheal = nil
	Picked = nil
	ef = nil
	t = nil
end

---@return boolean
function Trig_Guardian_Angel_Conditions()
	return (GetSpellAbilityId() == FourCC('A0AE') or GetSpellAbilityId() == FourCC('A0Q3'))
end

function InitTrig_Guardian_Angel()
	local index = 0 ---@type number integer
	gg_trg_Guardian_Angel = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Guardian_Angel, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Guardian_Angel, Condition(Trig_Guardian_Angel_Conditions))
	TriggerAddAction(gg_trg_Guardian_Angel, Trig_Guardian_Angel_Actions)
end

function Trig_Paladin_Load_Actions()
	AbilityPreload(FourCC('A0M6'), 6)
	AbilityPreload(FourCC('A0M7'), 6)
	AbilityPreload(FourCC('A0M8'), 6)
	AbilityPreload(FourCC('A0MA'), 3)
	AbilityPreload(FourCC('A0M9'), 6)
	AbilityPreload(FourCC('B04G'), 1)
	AbilityPreload(FourCC('B04H'), 1)
	EffectPreload("Effects\\Consecrate.mdx")
	EffectPreload("Effects\\Holy Nova.mdx")
	EffectPreload("Effects\\HolyArmor.MDX")
	EffectPreload("Effects\\HolyAurora.MDX")
	EffectPreload("Effects\\HolyAwakening.mdx")
	EffectPreload("Effects\\HolyPhoenixMissle.mdx")
	EffectPreload("Effects\\DivineRage.mdx")
	EffectPreload("Effects\\HolySpiral.MDX")
	EffectPreload("Effects\\LifeHigh.mdx")
	EffectPreload("Effects\\LightNova.mdx")
	EffectPreload("Effects\\MegaHeal.mdx")
	EffectPreload("Effects\\OrbLightX.mdx")
	EffectPreload("Effects\\RunicShield.mdx")
	EnableTrigger(gg_trg_Spiral_of_Light)
	EnableTrigger(gg_trg_Keeper_Seal)
	EnableTrigger(gg_trg_Light_Hammer)
	EnableTrigger(gg_trg_God_Hand)
end

function InitTrig_Paladin_Load()
	gg_trg_Paladin_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Paladin_Load, Trig_Paladin_Load_Actions)
end

function Trig_Spiral_of_Light_Remove_Bonus_Armor_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local armor = LoadInteger(udg_hash, h, 2) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 3) ---@type effect
	SetArmorAbilityLevel(target, -armor)
	DestroyEffect(ef)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	target = nil
	ef = nil
end

function Trig_Spiral_of_Light_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target ---@type unit
	local dammi ---@type unit
	local stage = LoadInteger(udg_hash, h, 5) ---@type number integer
	local ef ---@type effect
	local p ---@type player
	local gdammi ---@type group
	local gdammi2 ---@type group
	local g ---@type group
	local Picked ---@type unit
	local dammi2 ---@type unit
	local x ---@type number real
	local y ---@type number real
	local xt ---@type number real
	local yt ---@type number real
	local angle ---@type number real
	local angle2 ---@type number real
	local dist ---@type number real
	local damage ---@type number real
	local heal ---@type number real
	local destroy1 = false ---@type boolean
	local destroy2 = false ---@type boolean
	local remove ---@type boolean
	local armor ---@type number integer
	local tarmor ---@type timer
	local harmor ---@type number integer
	local time ---@type number real
	if stage == 0 then
		target = LoadUnitHandle(udg_hash, h, 2)
		dammi = LoadUnitHandle(udg_hash, h, 3)
		x = GetUnitX(dammi)
		y = GetUnitY(dammi)
		xt = GetUnitX(target)
		yt = GetUnitY(target)
		angle = bj_RADTODEG * Atan2(yt - y, xt - x)
		if GetUnitState(target, UNIT_STATE_LIFE) > .405 then
			x = x + 22. * Cos(angle * bj_DEGTORAD)
			y = y + 22. * Sin(angle * bj_DEGTORAD)
			SetUnitPosition(dammi, x, y)
			dist = SquareRoot((xt - x) * (xt - x) + (yt - y) * (yt - y))
			if dist < 23. then
				destroy1 = true
				SetUnitPosition(dammi, xt, yt)
				DestroyEffect(AddSpecialEffect("Effects\\Holy Nova.mdl", xt, yt))
			end
		else
			destroy1 = true
		end
	end
	if destroy1 then
		KillUnit(dammi)
		ef = LoadEffectHandle(udg_hash, h, 4)
		DestroyEffect(ef)
		ef = nil
		stage = 1
		SaveInteger(udg_hash, h, 5, stage)
		heal = LoadReal(udg_hash, h, 6)
		SetUnitState(target, UNIT_STATE_LIFE, GetUnitState(target, UNIT_STATE_LIFE) + heal)
		DestroyEffect(AddSpecialEffectTarget("Effects\\MegaHeal.mdx", target, "origin"))
		DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Heal\\HealTarget.mdl", target, "origin"), 2.)
		armor = R2I(GetUnitState(target, UNIT_STATE_MAX_LIFE) * .02)
		tarmor = CreateTimer()
		harmor = GetHandleId(tarmor)
		SetArmorAbilityLevel(target, armor)
		time = LoadReal(udg_hash, h, $A)
		ef = AddSpecialEffectTarget("Effects\\RunicShield.mdx", target, "chest")
		SaveUnitHandle(udg_hash, harmor, 1, target)
		SaveInteger(udg_hash, harmor, 2, armor)
		SaveEffectHandle(udg_hash, harmor, 3, ef)
		TimerStart(tarmor, time, false, Trig_Spiral_of_Light_Remove_Bonus_Armor_Actions)
		ef = nil
		tarmor = nil
		p = GetOwningPlayer(caster)
		g = CreateGroup()
		gdammi = CreateGroup()
		GroupEnumUnitsInRange(g, xt, yt, 400., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				if IsUnitEnemy(Picked, p) then
					angle2 = bj_RADTODEG * Atan2(GetUnitY(Picked) - yt, GetUnitX(Picked) - xt)
					dammi2 = CreateUnit(p, FourCC('h00U'), xt, yt, angle2)
					UnitAddAbility(dammi2, FourCC('Amrf'))
					UnitRemoveAbility(dammi2, FourCC('Amrf'))
					SetUnitFlyHeight(dammi2, 50., .0)
					ef = AddSpecialEffectTarget("Effects\\HolyPhoenixMissle.mdx", dammi2, "chest")
					GroupAddUnit(gdammi, dammi2)
					SaveUnitHandle(udg_hash, GetHandleId(dammi2), 1, Picked)
					SaveStr(udg_hash, GetHandleId(dammi2), 2, "damage")
					SaveEffectHandle(udg_hash, GetHandleId(dammi2), 3, ef)
					ef = nil
					dammi2 = nil
				end
				if IsUnitAlly(Picked, p) and Picked ~= target then
					angle2 = bj_RADTODEG * Atan2(GetUnitY(Picked) - yt, GetUnitX(Picked) - xt)
					dammi2 = CreateUnit(p, FourCC('h00U'), xt, yt, angle2)
					UnitAddAbility(dammi2, FourCC('Amrf'))
					UnitRemoveAbility(dammi2, FourCC('Amrf'))
					SetUnitFlyHeight(dammi2, 50., .0)
					ef = AddSpecialEffectTarget("Effects\\HolyPhoenixMissle.mdx", dammi2, "chest")
					GroupAddUnit(gdammi, dammi2)
					SaveUnitHandle(udg_hash, GetHandleId(dammi2), 1, Picked)
					SaveStr(udg_hash, GetHandleId(dammi2), 2, "heal")
					SaveEffectHandle(udg_hash, GetHandleId(dammi2), 3, ef)
					ef = nil
					dammi2 = nil
				end
			end
			GroupRemoveUnit(g, Picked)
		end
		SaveGroupHandle(udg_hash, h, 9, gdammi)
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		gdammi = nil
		p = nil
	end
	if stage == 1 then
		p = GetOwningPlayer(caster)
		gdammi = LoadGroupHandle(udg_hash, h, 9)
		gdammi2 = CreateGroup()
		GroupAddGroup(gdammi, gdammi2)
		while(true) do
			dammi2 = FirstOfGroup(gdammi2)
			if (dammi2 == nil) then break end
			remove = false
			target = LoadUnitHandle(udg_hash, GetHandleId(dammi2), 1)
			x = GetUnitX(dammi2)
			y = GetUnitY(dammi2)
			xt = GetUnitX(target)
			yt = GetUnitY(target)
			angle = bj_RADTODEG * Atan2(yt - y, xt - x)
			x = x + 22. * Cos(angle * bj_DEGTORAD)
			y = y + 22. * Sin(angle * bj_DEGTORAD)
			SetUnitPosition(dammi2, x, y)
			dist = SquareRoot((xt - x) * (xt - x) + (yt - y) * (yt - y))
			if dist < 23. or GetUnitState(target, UNIT_STATE_LIFE) < .405 then
				SetUnitScale(dammi2, .6, .6, .6)
				ef = LoadEffectHandle(udg_hash, GetHandleId(dammi2), 3)
				DestroyEffect(ef)
				ef = nil
				if GetUnitState(target, UNIT_STATE_LIFE) > .405 then
					if LoadStr(udg_hash, GetHandleId(dammi2), 2) == "damage" then
						damage = LoadReal(udg_hash, h, 8)
						remove = true
						DestroyEffect(AddSpecialEffectTarget("Effects\\HolyPhoenixMissle.mdx", target, "origin"))
						UnitDamageTarget(caster, target, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					else
						heal = LoadReal(udg_hash, h, 7)
						SetUnitState(target, UNIT_STATE_LIFE, GetUnitState(target, UNIT_STATE_LIFE) + heal)
						DestroyEffect(AddSpecialEffectTarget("Effects\\MegaHeal.mdx", target, "origin"))
						DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Heal\\HealTarget.mdl", target, "origin"), 2.)
						remove = true
					end
				else
					remove = true
					DestroyEffect(AddSpecialEffect("Effects\\HolyPhoenixMissle.mdx", x, y))
				end
				GroupRemoveUnit(gdammi, dammi2)
				FlushChildHashtable(udg_hash, GetHandleId(dammi2))
				if remove then
					RemoveUnit(dammi2)
				end
			end
			GroupRemoveUnit(gdammi2, dammi2)
			target = nil
		end
		dammi2 = nil
		SaveGroupHandle(udg_hash, h, 9, gdammi)
		if CountUnitsInGroup(gdammi) == 0 then
			stage = 2
			SaveInteger(udg_hash, h, 5, stage)
		end
		p = nil
		gdammi = nil
		GroupClear(gdammi2)
		DestroyGroup(gdammi2)
		gdammi2 = nil
	end
	if stage == 2 then
		gdammi = LoadGroupHandle(udg_hash, h, 9)
		GroupClear(gdammi)
		DestroyGroup(gdammi)
		gdammi = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
end

function Trig_Spiral_of_Light_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2(yt - y, xt - x) ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi ---@type unit
	local ef ---@type effect
	local dist = SquareRoot((xt - x) * (xt - x) + (yt - y) * (yt - y)) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0M6')) ---@type number integer
	local healmain = 50 + (70 * lvl) + ((GetHeroStr(caster, true) + GetHeroInt(caster, true)) / 2) ---@type number real
	local heal = 30 + (50 * lvl) ---@type number real
	local damage = $A + (30 * lvl) ---@type number real
	local time = 2. + (1. * lvl) ---@type number real
	local stage = 0 ---@type number integer
	local hcaster = GetHandleId(caster) ---@type number integer
	local hammeref ---@type effect
	dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, angle)
	UnitAddAbility(dammi, FourCC('Amrf'))
	UnitRemoveAbility(dammi, FourCC('Amrf'))
	SetUnitScale(dammi, 1.25, 1.25, 1.25)
	ef = AddSpecialEffectTarget("Effects\\HolySpiral.mdl", dammi, "chest")
	if GetRandomInt(1, FourCC('d')) <= (6 + (GetUnitAbilityLevel(caster, FourCC('A0M8')) * 4)) and GetUnitAbilityLevel(caster, FourCC('A0M8')) > 0 and LoadBoolean(udg_hash, hcaster, FourCC('q')) == false then
		SaveReal(udg_hash, hcaster, FourCC('p'), .0)
		SaveBoolean(udg_hash, hcaster, FourCC('q'), true)
		hammeref = AddSpecialEffectTarget("Abilities\\Spells\\Human\\slow\\slowtarget.mdl", caster, "weapon")
		SaveEffectHandle(udg_hash, hcaster, FourCC('r'), hammeref)
		hammeref = nil
		hammeref = AddSpecialEffectTarget("Effects\\LifeHigh.mdx", caster, "weapon")
		SaveEffectHandle(udg_hash, hcaster, FourCC('s'), hammeref)
		hammeref = nil
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveUnitHandle(udg_hash, h, 2, target)
	SaveUnitHandle(udg_hash, h, 3, dammi)
	SaveEffectHandle(udg_hash, h, 4, ef)
	SaveInteger(udg_hash, h, 5, stage)
	SaveReal(udg_hash, h, 6, healmain)
	SaveReal(udg_hash, h, 7, heal)
	SaveReal(udg_hash, h, 8, damage)
	SaveReal(udg_hash, h, $A, time)
	TimerStart(t, .03, true, Trig_Spiral_of_Light_Periodic_Actions)
	caster = nil
	target = nil
	t = nil
	dammi = nil
	ef = nil
end

---@return boolean
function Trig_Spiral_of_Light_Conditions()
	return GetSpellAbilityId() == FourCC('A0M6')
end

function InitTrig_Spiral_of_Light()
	local index = 0 ---@type number integer
	gg_trg_Spiral_of_Light = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Spiral_of_Light, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Spiral_of_Light, Condition(Trig_Spiral_of_Light_Conditions))
	TriggerAddAction(gg_trg_Spiral_of_Light, Trig_Spiral_of_Light_Actions)
end

function Trig_Keeper_Seal_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local dammi = LoadUnitHandle(udg_hash, h, 3) ---@type unit
	local ef ---@type effect
	local wait = LoadInteger(udg_hash, h, 7) ---@type number integer
	local angle = LoadReal(udg_hash, h, 8) ---@type number real
	local bonushp ---@type number integer
	local bonusregen ---@type number integer
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local xt = x + 125. * Cos(angle * bj_DEGTORAD) ---@type number real
	local yt = y + 125. * Sin(angle * bj_DEGTORAD) ---@type number real
	if wait > 0 and GetUnitState(target, UNIT_STATE_LIFE) > .405 and GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 7, wait)
		angle = angle + 5.
		SaveReal(udg_hash, h, 8, angle)
		SetUnitPosition(dammi, xt, yt)
	else
		bonushp = LoadInteger(udg_hash, h, 5)
		bonusregen = LoadInteger(udg_hash, h, 6)
		SetUnitMaxState(caster, UNIT_STATE_MAX_LIFE, -bonushp)
		SetUnitLifeAndManaRegeneration(caster, "life", -bonusregen)
		SaveReal(udg_hash, GetHandleId(target), FourCC('n'), .0)
		SaveUnitHandle(udg_hash, GetHandleId(target), FourCC('o'), nil)
		ef = LoadEffectHandle(udg_hash, h, 4)
		DestroyEffect(ef)
		ef = nil
		ef = LoadEffectHandle(udg_hash, h, $B)
		DestroyEffect(ef)
		ef = nil
		KillUnit(dammi)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	target = nil
	dammi = nil
end

function Trig_Keeper_Seal_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local x ---@type number real
	local y ---@type number real
	local t ---@type timer
	local h ---@type number integer
	local p = GetOwningPlayer(caster) ---@type player
	local dammi ---@type unit
	local ef ---@type effect
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0M7')) ---@type number integer
	local bonushp ---@type number integer
	local bonusregen ---@type number integer
	local resist ---@type number real
	local wait ---@type number integer
	local angle ---@type number real
	local hcaster = GetHandleId(caster) ---@type number integer
	local hammeref ---@type effect
	if LoadReal(udg_hash, GetHandleId(target), FourCC('n')) > .0 then
		UnitRemoveAbility(caster, FourCC('A0M7'))
		UnitAddAbility(caster, FourCC('A0M7'))
		SetUnitAbilityLevel(caster, FourCC('A0M7'), lvl)
		SetUnitState(caster, UNIT_STATE_MANA, GetUnitState(caster, UNIT_STATE_MANA) + 120. + (5. * lvl))
		SimError(p, "На этого воина уже наложена печать хранителя.")
	else
		t = CreateTimer()
		h = GetHandleId(t)
		x = GetUnitX(caster)
		y = GetUnitY(caster)
		bonushp = FourCC('d') + (50 * lvl)
		resist = (.1 * lvl) + .3
		wait = 500
		angle = 270.
		SetUnitMaxState(caster, UNIT_STATE_MAX_LIFE, bonushp)
		bonusregen = R2I(GetUnitState(caster, UNIT_STATE_MAX_LIFE) * (.005 + (.005 * lvl)))
		SetUnitLifeAndManaRegeneration(caster, "life", bonusregen)
		SaveReal(udg_hash, GetHandleId(target), FourCC('n'), resist)
		SaveUnitHandle(udg_hash, GetHandleId(target), FourCC('o'), caster)
		dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
		UnitAddAbility(dammi, FourCC('Amrf'))
		UnitRemoveAbility(dammi, FourCC('Amrf'))
		ef = AddSpecialEffectTarget("Effects\\OrbLightX.mdx", dammi, "chest")
		SaveEffectHandle(udg_hash, h, 4, ef)
		ef = nil
		ef = AddSpecialEffectTarget("Effects\\HolyArmor.MDX", target, "chest")
		SaveEffectHandle(udg_hash, h, $B, ef)
		ef = nil
		if GetRandomInt(1, FourCC('d')) <= (6 + (GetUnitAbilityLevel(caster, FourCC('A0M8')) * 4)) and GetUnitAbilityLevel(caster, FourCC('A0M8')) > 0 and LoadBoolean(udg_hash, hcaster, FourCC('q')) == false then
			SaveReal(udg_hash, hcaster, FourCC('p'), .0)
			SaveBoolean(udg_hash, hcaster, FourCC('q'), true)
			hammeref = AddSpecialEffectTarget("Abilities\\Spells\\Human\\slow\\slowtarget.mdl", caster, "weapon")
			SaveEffectHandle(udg_hash, hcaster, FourCC('r'), hammeref)
			hammeref = nil
			hammeref = AddSpecialEffectTarget("Effects\\LifeHigh.mdx", caster, "weapon")
			SaveEffectHandle(udg_hash, hcaster, FourCC('s'), hammeref)
			hammeref = nil
		end
		SaveUnitHandle(udg_hash, h, 1, caster)
		SaveUnitHandle(udg_hash, h, 2, target)
		SaveUnitHandle(udg_hash, h, 3, dammi)
		SaveInteger(udg_hash, h, 5, bonushp)
		SaveInteger(udg_hash, h, 6, bonusregen)
		SaveInteger(udg_hash, h, 7, wait)
		SaveReal(udg_hash, h, 8, angle)
		TimerStart(t, .03, true, Trig_Keeper_Seal_Periodic_Actions)
	end
	caster = nil
	target = nil
	t = nil
	dammi = nil
	p = nil
end

---@return boolean
function Trig_Keeper_Seal_Conditions()
	return GetSpellAbilityId() == FourCC('A0M7')
end

function InitTrig_Keeper_Seal()
	local index = 0 ---@type number integer
	gg_trg_Keeper_Seal = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Keeper_Seal, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Keeper_Seal, Condition(Trig_Keeper_Seal_Conditions))
	TriggerAddAction(gg_trg_Keeper_Seal, Trig_Keeper_Seal_Actions)
end

function Trig_Light_Hammer_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damage = LoadInteger(udg_hash, h, 2) ---@type number integer
	local first = LoadBoolean(udg_hash, h, 3) ---@type boolean
	local lvl = GetUnitAbilityLevel(hero, FourCC('A0M8')) ---@type number integer
	local newdamage = R2I(GetUnitState(hero, UNIT_STATE_MAX_LIFE) * .01 * lvl) ---@type number integer
	if first then
		first = false
		SaveBoolean(udg_hash, h, 3, first)
		TimerStart(t, 1., true, Trig_Light_Hammer_Periodic_Actions)
	end
	if damage ~= newdamage then
		SetAttackAbilityLevel(hero, -damage)
		SetAttackAbilityLevel(hero, newdamage)
		SaveInteger(udg_hash, h, 2, newdamage)
	end
	hero = nil
	t = nil
end

function Trig_Light_Hammer_Actions()
	local hero = GetLearningUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damage = 0 ---@type number integer
	local first = true ---@type boolean
	SaveUnitHandle(udg_hash, h, 1, hero)
	SaveInteger(udg_hash, h, 2, damage)
	SaveBoolean(udg_hash, h, 3, first)
	TimerStart(t, .0, false, Trig_Light_Hammer_Periodic_Actions)
	AddProgressBar(hero, 235. + (3.), (.9 + .05), 1., true, false, FourCC('v'), $F8, $9A, 0)
	hero = nil
	t = nil
end

---@return boolean
function Trig_Light_Hammer_Conditions()
	return GetLearnedSkill() == FourCC('A0M8') and GetUnitAbilityLevel(GetLearningUnit(), FourCC('A0M8')) == 1 and GetUnitTypeId(GetLearningUnit()) ~= FourCC('h00U')
end

function InitTrig_Light_Hammer()
	local index = 0 ---@type number integer
	gg_trg_Light_Hammer = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Light_Hammer, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Light_Hammer, Condition(Trig_Light_Hammer_Conditions))
	TriggerAddAction(gg_trg_Light_Hammer, Trig_Light_Hammer_Actions)
end

function Trig_God_Hand_Remove_Bonus_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local regen = LoadInteger(udg_hash, h, 2) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 3) ---@type effect
	local stage = LoadInteger(udg_hash, h, 4) ---@type number integer
	if stage == 0 then
		SaveReal(udg_hash, GetHandleId(target), FourCC('t'), .0)
		SetUnitLifeAndManaRegeneration(target, "life", -regen)
		DestroyEffect(AddSpecialEffectTarget("Effects\\DivineRage.mdl", target, "origin"))
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	else
		DestroyEffect(ef)
		ef = nil
		SaveInteger(udg_hash, h, 4, 0)
		TimerStart(t, 4.5, false, Trig_God_Hand_Remove_Bonus_Actions)
	end
	t = nil
	target = nil
	ef = nil
end

function Trig_God_Hand_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local heal ---@type number real
	local mana ---@type number real
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local delay = LoadInteger(udg_hash, h, 6) ---@type number integer
	local hpc = GetUnitState(caster, UNIT_STATE_LIFE) ---@type number real
	local hpt = GetUnitState(target, UNIT_STATE_LIFE) ---@type number real
	local alife ---@type boolean
	local regen ---@type number integer
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local orderId ---@type number integer
	local tbonus ---@type timer
	local hbonus ---@type number integer
	local ef ---@type effect
	orderId = $D0079
	if (orderId ~= 0) then
	else
		orderId = UnitId("blizzard")
		if (orderId ~= 0) then
		end
	end
	if hpc > .405 and hpt > .405 then
		alife = true
	else
		alife = false
	end
	if order == orderId and wait > 0 and alife then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
	else
		if wait == 0 and delay == $A and alife then
			DestroyEffect(AddSpecialEffectTarget("Effects\\HolyAwakening.mdl", target, "origin"))
		end
		if wait <= 0 and delay > 0 and alife then
			delay = delay - 1
			SaveInteger(udg_hash, h, 6, delay)
		end
		if wait == 0 and delay == 0 and (hpt > .405) then
			heal = LoadReal(udg_hash, h, 3)
			mana = LoadReal(udg_hash, h, 4)
			regen = LoadInteger(udg_hash, h, 7)
			SetUnitState(target, UNIT_STATE_LIFE, GetUnitState(target, UNIT_STATE_LIFE) + heal)
			SetUnitState(target, UNIT_STATE_MANA, GetUnitState(target, UNIT_STATE_MANA) + mana)
			DestroyEffect(AddSpecialEffectTarget("Effects\\MegaHeal.mdx", target, "origin"))
			DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Heal\\HealTarget.mdl", target, "origin"), 2.)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl", target, "origin"))
			SetUnitLifeAndManaRegeneration(target, "life", regen)
			tbonus = CreateTimer()
			hbonus = GetHandleId(tbonus)
			ef = AddSpecialEffectTarget("Effects\\HolyAurora.mdl", target, "origin")
			SaveUnitHandle(udg_hash, hbonus, 1, target)
			SaveInteger(udg_hash, hbonus, 2, regen)
			SaveEffectHandle(udg_hash, hbonus, 3, ef)
			SaveInteger(udg_hash, hbonus, 4, 1)
			ef = nil
			TimerStart(tbonus, 2.5, false, Trig_God_Hand_Remove_Bonus_Actions)
			tbonus = nil
		end
		if (order ~= orderId and wait > 0) or (wait <= 0 and delay <= 0) then
			RemoveUnit(LoadUnitHandle(udg_hash, GetHandleId(caster), FourCC('u')))
			FlushChildHashtable(udg_hash, h)
			DestroyTimer(t)
		end
	end
	t = nil
	caster = nil
	target = nil
end

function Trig_God_Hand_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0MA')) ---@type number integer
	local heal = (GetUnitState(target, UNIT_STATE_MAX_LIFE) * (.1 + (.1 * lvl))) + (100. + (125. * lvl)) ---@type number real
	local mana = (GetUnitState(target, UNIT_STATE_MAX_MANA) * (.1 + (.1 * lvl))) + (50. + (75. * lvl)) ---@type number real
	local regen ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local wait = 70 - (lvl * $A) ---@type number integer
	local delay = $A ---@type number integer
	local fastresp = .05 + (.15 * lvl) ---@type number real
	local hcaster = GetHandleId(caster) ---@type number integer
	local hammeref ---@type effect
	if IsUnitType(target, UNIT_TYPE_HERO) then
		regen = R2I((GetHeroStr(caster, true) + GetHeroStr(target, true)) * (.1 + (.1 * lvl)))
	else
		regen = R2I(GetHeroStr(caster, true) * (.1 + (.1 * lvl)))
	end
	if GetRandomInt(1, FourCC('d')) <= (6 + (GetUnitAbilityLevel(caster, FourCC('A0M8')) * 4)) and GetUnitAbilityLevel(caster, FourCC('A0M8')) > 0 and LoadBoolean(udg_hash, hcaster, FourCC('q')) == false then
		SaveReal(udg_hash, hcaster, FourCC('p'), .0)
		SaveBoolean(udg_hash, hcaster, FourCC('q'), true)
		hammeref = AddSpecialEffectTarget("Abilities\\Spells\\Human\\slow\\slowtarget.mdl", caster, "weapon")
		SaveEffectHandle(udg_hash, hcaster, FourCC('r'), hammeref)
		hammeref = nil
		hammeref = AddSpecialEffectTarget("Effects\\LifeHigh.mdx", caster, "weapon")
		SaveEffectHandle(udg_hash, hcaster, FourCC('s'), hammeref)
		hammeref = nil
	end
	SaveReal(udg_hash, GetHandleId(target), FourCC('t'), fastresp)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveUnitHandle(udg_hash, h, 2, target)
	SaveReal(udg_hash, h, 3, heal)
	SaveReal(udg_hash, h, 4, mana)
	SaveInteger(udg_hash, h, 5, wait)
	SaveInteger(udg_hash, h, 6, delay)
	SaveInteger(udg_hash, h, 7, regen)
	DestroyEffect(AddSpecialEffectTarget("Effects\\Consecrate.mdl", caster, "origin"))
	DestroyEffect(AddSpecialEffectTarget("Effects\\Consecrate.mdl", target, "origin"))
	TimerStart(t, .05, true, Trig_God_Hand_periodic_Actions)
	AddProgressBar(caster, 185. + (3. * lvl), (.9 + .1 * lvl), (wait * .05), false, true, FourCC('u'), $F8, $9A, 0)
	caster = nil
	target = nil
	t = nil
end

---@return boolean
function Trig_God_Hand_Conditions()
	return GetSpellAbilityId() == FourCC('A0MA')
end

function InitTrig_God_Hand()
	local index = 0 ---@type number integer
	gg_trg_God_Hand = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_God_Hand, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_God_Hand, Condition(Trig_God_Hand_Conditions))
	TriggerAddAction(gg_trg_God_Hand, Trig_God_Hand_Actions)
end

function Trig_Stone_Guard_Load_Actions()
	AbilityPreload(FourCC('A0MI'), 6)
	AbilityPreload(FourCC('A0ML'), 6)
	AbilityPreload(FourCC('A0MK'), 6)
	AbilityPreload(FourCC('A0MM'), 3)
	AbilityPreload(FourCC('A0MJ'), 6)
	AbilityPreload(FourCC('B04I'), 1)
	AbilityPreload(FourCC('B04J'), 1)
	EffectPreload("Effects\\Stone Shield.mdx")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodMortarTeam.mdl")
	EffectPreload("Effects\\RockV4.mdl")
	EffectPreload("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl")
	EffectPreload("Effects\\StoneSmall.mdl")
	EffectPreload("Abilities\\Weapons\\CannonTowerMissile\\CannonTowerMissile.mdl")
	EffectPreload("Effects\\Stonespear.mdl")
	EffectPreload("Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\EarthQuake\\EarthQuakeTarget.mdl")
	EnableTrigger(gg_trg_Boulder_Throw)
	EnableTrigger(gg_trg_Earth_Shiver)
	EnableTrigger(gg_trg_Learn_Stone_Armor)
	EnableTrigger(gg_trg_Rock_Strike)
end

function InitTrig_Stone_Guard_Load()
	gg_trg_Stone_Guard_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Stone_Guard_Load, Trig_Stone_Guard_Load_Actions)
end

function Trig_Boulder_Throw_Move_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_Boulder_Throw_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damage ---@type number real
	local damage2 ---@type number real
	local wait = LoadInteger(udg_hash, h, 4) ---@type number integer
	local angle ---@type number real
	local stone ---@type unit
	local ef ---@type effect
	local anim = LoadInteger(udg_hash, h, 8) ---@type number integer
	local wait2 = LoadInteger(udg_hash, h, 9) ---@type number integer
	local xt ---@type number real
	local yt ---@type number real
	local lvl ---@type number integer
	local bangle ---@type number real
	local speed ---@type number real
	local p ---@type player
	local g ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	local boulder ---@type unit
	local i ---@type number integer
	local dist ---@type number real
	local dammief ---@type unit
	local r ---@type rect
	if wait > 0 and (wait2 == 33) then
		stone = LoadUnitHandle(udg_hash, h, 6)
		wait = wait - 1
		SaveInteger(udg_hash, h, 4, wait)
		anim = anim + $A
		if anim >= $AA then
			anim = 0
		end
		SaveInteger(udg_hash, h, 8, anim)
		SetUnitFacing(stone, GetUnitFacing(stone) + 30.)
		SetUnitAnimationByIndex(stone, anim)
		if wait == 0 and wait2 == 33 then
			damage = LoadReal(udg_hash, h, 3)
			xt = LoadReal(udg_hash, h, $B)
			yt = LoadReal(udg_hash, h, $C)
			p = GetOwningPlayer(caster)
			lvl = GetUnitAbilityLevel(caster, FourCC('A0MI'))
			g = CreateGroup()
			GroupEnumUnitsInRange(g, xt, yt, 250., nil)
			dammief = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
			SetUnitFlyHeight(dammief, 40., .0)
			SetUnitScale(dammief, 2., 2., 2.)
			UnitApplyTimedLife(dammief, FourCC('BTLF'), 2.)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", dammief, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\CannonTowerMissile\\CannonTowerMissile.mdl", dammief, "chest"))
			r = Rect(xt - 250., yt - 250., xt + 250., yt + 250.)
			EnumDestructablesInRect(r, nil, Trig_Boulder_Throw_Move_Dest_Actions)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, p) and Picked ~= nil and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", Picked, "chest"))
					dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
					UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
					UnitAddAbility(dammi, FourCC('A0MJ'))
					SetUnitAbilityLevel(dammi, FourCC('A0MJ'), lvl)
					IssueTargetOrderById(dammi, $D006B, Picked)
					UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					dammi = nil
					angle = bj_RADTODEG * Atan2(GetUnitY(Picked) - yt, GetUnitX(Picked) - xt)
					dist = SquareRoot(((GetUnitX(Picked) - xt) * (GetUnitX(Picked) - xt)) + ((GetUnitY(Picked) - yt) * (GetUnitY(Picked) - yt)))
					MoveUnit(Picked, .4, 500. - dist, 625., angle, .0, false)
				end
				GroupRemoveUnit(g, Picked)
			end
			RemoveUnit(stone)
			ef = LoadEffectHandle(udg_hash, h, 7)
			DestroyEffect(ef)
			ef = nil
			p = nil
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			RemoveRect(r)
			r = nil
		end
		stone = nil
	end
	if wait2 > 0 and wait <= 0 then
		wait2 = wait2 - 1
		SaveInteger(udg_hash, h, 9, wait2)
		anim = anim + $A
		if anim >= $AA then
			anim = 0
		end
		SaveInteger(udg_hash, h, 8, anim)
		if wait2 == 32 then
			xt = LoadReal(udg_hash, h, $B)
			yt = LoadReal(udg_hash, h, $C)
			p = GetOwningPlayer(caster)
			i = 1
			while(true) do
				if (i >= $B) then break end
				if i >= 1 and i <= 7 then
					bangle = (360. / 7) * i
					speed = 225.
				end
				if i >= 8 and i <= $A then
					bangle = (360. / 3) * (i - 7)
					speed = 100.
				end
				boulder[i] = CreateUnit(p, FourCC('h00E'), xt, yt, bangle)
				ef = AddSpecialEffectTarget("Effects\\StoneSmall.mdl", boulder[i], "chest")
				SetUnitScale(boulder[i], 1.5, 1.5, 1.5)
				UnitAddAbility(boulder[i], FourCC('Amrf'))
				UnitRemoveAbility(boulder[i], FourCC('Amrf'))
				MoveUnit(boulder[i], 1., speed, .0, bangle, 500., true)
				SaveUnitHandle(udg_hash, h, $F + i, boulder[i])
				SaveEffectHandle(udg_hash, h, 30 + i, ef)
				ef = nil
				boulder[i] = nil
				i = i + 1
			end
		end
		i = 1
		while(true) do
			if (i >= $B) then break end
			boulder[i] = LoadUnitHandle(udg_hash, h, $F + i)
			SetUnitFacing(boulder[i], GetUnitFacing(boulder[i]) + 30.)
			boulder[i] = nil
			i = i + 1
		end
		if wait2 <= 0 then
			i = 1
			while(true) do
				if (i >= $B) then break end
				boulder[i] = LoadUnitHandle(udg_hash, h, $F + i)
				ef = LoadEffectHandle(udg_hash, h, 30 + i)
				DestroyEffect(ef)
				DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", GetUnitX(boulder[i]), GetUnitY(boulder[i])))
				RemoveUnit(boulder[i])
				ef = nil
				boulder[i] = nil
				i = i + 1
			end
			damage2 = LoadReal(udg_hash, h, $A)
			xt = LoadReal(udg_hash, h, $B)
			yt = LoadReal(udg_hash, h, $C)
			p = GetOwningPlayer(caster)
			g = CreateGroup()
			GroupEnumUnitsInRange(g, xt, yt, 250., nil)
			r = Rect(xt - 250., yt - 250., xt + 250., yt + 250.)
			EnumDestructablesInRect(r, nil, Trig_Boulder_Throw_Move_Dest_Actions)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", Picked, "chest"))
					UnitDamageTarget(caster, Picked, damage2, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					StunUnitTimed(Picked, .5)
				end
				GroupRemoveUnit(g, Picked)
			end
			p = nil
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			RemoveRect(r)
			r = nil
			FlushChildHashtable(udg_hash, h)
			DestroyTimer(t)
		end
	end
	t = nil
	caster = nil
end

function Trig_Boulder_Throw_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y))) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0MI')) ---@type number integer
	local damage = (35. * lvl) + (GetHeroStr(caster, true) * (.3 + .2 * lvl)) ---@type number real
	local damage2 = 20. * lvl ---@type number real
	local time = dist / 800. ---@type number real
	local time2 = 33 ---@type number integer
	local height = dist / 2 ---@type number real
	local stone = CreateUnit(GetOwningPlayer(caster), FourCC('h00E'), x, y, angle) ---@type unit
	local ef = AddSpecialEffectTarget("Effects\\RockV4.mdl", stone, "chest") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	if dist < 50. then
		time = 1.
		angle = GetUnitFacing(caster)
		dist = 100.
		height = dist / 2
		time = dist / 800.
	end
	SetUnitX(stone, x + 50. * Cos((angle - 30.) * bj_DEGTORAD))
	SetUnitY(stone, y + 50. * Sin((angle - 30.) * bj_DEGTORAD))
	SetUnitScale(stone, 1.7, 1.7, 1.7)
	SetUnitFlyHeight(stone, 40., .0)
	MoveUnit(stone, time, 800., .0, angle, height, true)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 3, damage)
	SaveInteger(udg_hash, h, 4, R2I(time / .03))
	SaveReal(udg_hash, h, 5, angle)
	SaveUnitHandle(udg_hash, h, 6, stone)
	SaveEffectHandle(udg_hash, h, 7, ef)
	SaveInteger(udg_hash, h, 8, 1)
	SaveInteger(udg_hash, h, 9, time2)
	SaveReal(udg_hash, h, $A, damage2)
	SaveReal(udg_hash, h, $B, xt)
	SaveReal(udg_hash, h, $C, yt)
	TimerStart(t, .03, true, Trig_Boulder_Throw_Move_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	stone = nil
	ef = nil
end

---@return boolean
function Trig_Boulder_Throw_Conditions()
	return GetSpellAbilityId() == FourCC('A0MI')
end

function InitTrig_Boulder_Throw()
	local index = 0 ---@type number integer
	gg_trg_Boulder_Throw = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Boulder_Throw, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Boulder_Throw, Condition(Trig_Boulder_Throw_Conditions))
	TriggerAddAction(gg_trg_Boulder_Throw, Trig_Boulder_Throw_Actions)
end

function Trig_Boulder_Earth_Shiver_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_Boulder_Earth_Shiver_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gdamage = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local xt = LoadReal(udg_hash, h, 4) ---@type number real
	local yt = LoadReal(udg_hash, h, 5) ---@type number real
	local dammief = LoadUnitHandle(udg_hash, h, 6) ---@type unit
	local Picked ---@type unit
	local r = Rect(xt - 325., yt - 325., xt + 325., yt + 325.) ---@type rect
	EnumDestructablesInRect(r, nil, Trig_Boulder_Earth_Shiver_Dest_Actions)
	while(true) do
		Picked = FirstOfGroup(gdamage)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", Picked, "chest"))
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
		end
		GroupRemoveUnit(gdamage, Picked)
	end
	RemoveUnit(dammief)
	dammief = nil
	GroupClear(gdamage)
	DestroyGroup(gdamage)
	gdamage = nil
	RemoveRect(r)
	r = nil
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	caster = nil
	Picked = nil
end

function Trig_Earth_Shiver_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0ML')) ---@type number integer
	local damage = ((30. * lvl) + GetUnitState(caster, UNIT_STATE_MAX_LIFE) * (.01 + .01 * lvl)) / 2 ---@type number real
	local time = 1. ---@type number real
	local stuntime = time + .5 ---@type number real
	local height = 350. ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local g = CreateGroup() ---@type group
	local gdamage = CreateGroup() ---@type group
	local Picked ---@type unit
	local r = Rect(xt - 325., yt - 325., xt + 325., yt + 325.) ---@type rect
	local dammief = CreateUnit(p, FourCC('h00U'), xt, yt, .0) ---@type unit
	SetUnitScale(dammief, 2., 2., 2.)
	DestroyEffect(AddSpecialEffectTarget("Effects\\Stonespear.mdl", dammief, "origin"))
	EnumDestructablesInRect(r, nil, Trig_Boulder_Earth_Shiver_Dest_Actions)
	GroupEnumUnitsInRange(g, xt, yt, 325., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			DestroyEffect(AddSpecialEffect("Effects\\Stonespear.mdl", GetUnitX(Picked), GetUnitY(Picked)))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", Picked, "chest"))
			StunUnitTimed(Picked, stuntime)
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			MoveUnit(Picked, time, .0, .0, .0, height, false)
			GroupAddUnit(gdamage, Picked)
		end
		GroupRemoveUnit(g, Picked)
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	SaveReal(udg_hash, h, 3, damage)
	SaveReal(udg_hash, h, 4, xt)
	SaveReal(udg_hash, h, 5, yt)
	SaveUnitHandle(udg_hash, h, 6, dammief)
	TimerStart(t, time, false, Trig_Boulder_Earth_Shiver_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	RemoveRect(r)
	r = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	gdamage = nil
	Picked = nil
	dammief = nil
end

---@return boolean
function Trig_Earth_Shiver_Conditions()
	return GetSpellAbilityId() == FourCC('A0ML')
end

function InitTrig_Earth_Shiver()
	local index = 0 ---@type number integer
	gg_trg_Earth_Shiver = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Earth_Shiver, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Earth_Shiver, Condition(Trig_Earth_Shiver_Conditions))
	TriggerAddAction(gg_trg_Earth_Shiver, Trig_Earth_Shiver_Actions)
end

function Trig_Learn_Stone_Armor_Actions()
	local u = GetLearningUnit() ---@type unit
	if GetUnitAbilityLevel(u, FourCC('A0MK')) == 1 then
		SetArmorAbilityLevel(u, 3)
	else
		SetArmorAbilityLevel(u, 2)
	end
	u = nil
end

---@return boolean
function Trig_Learn_Stone_Armor_Conditions()
	return GetLearnedSkill() == FourCC('A0MK') and GetUnitTypeId(GetLearningUnit()) ~= FourCC('h00U')
end

function InitTrig_Learn_Stone_Armor()
	local index = 0 ---@type number integer
	gg_trg_Learn_Stone_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Stone_Armor, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Stone_Armor, Condition(Trig_Learn_Stone_Armor_Conditions))
	TriggerAddAction(gg_trg_Learn_Stone_Armor, Trig_Learn_Stone_Armor_Actions)
end

function Trig_Rock_Strike_Move_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_Rock_Strike_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gdamage = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local wait = LoadInteger(udg_hash, h, 3) ---@type number integer
	local wait2 = LoadInteger(udg_hash, h, 4) ---@type number integer
	local anim = LoadInteger(udg_hash, h, 6) ---@type number integer
	local damage ---@type number real
	local damage2 ---@type number real
	local angle ---@type number real
	local angle2 ---@type number real
	local angle3 ---@type number real
	local stone ---@type unit
	local ef ---@type effect
	local x ---@type number real
	local y ---@type number real
	local xt ---@type number real
	local yt ---@type number real
	local p ---@type player
	local g ---@type group
	local Picked ---@type unit
	local dist ---@type number real
	local dammief ---@type unit
	local r ---@type rect
	local stuntime ---@type number real
	if wait > 0 and (wait2 == 44) and GetUnitState(caster, UNIT_STATE_LIFE) > .405 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 3, wait)
		if wait == 0 and wait2 == 44 then
			damage = LoadReal(udg_hash, h, 9)
			xt = LoadReal(udg_hash, h, $B)
			yt = LoadReal(udg_hash, h, $C)
			stuntime = LoadReal(udg_hash, h, $F)
			angle = LoadReal(udg_hash, h, 5)
			p = GetOwningPlayer(caster)
			g = CreateGroup()
			GroupEnumUnitsInRange(g, xt, yt, 175., nil)
			SetUnitTimeScale(caster, 1.)
			dammief = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
			SetUnitScale(dammief, 1.3, 1.3, 1.3)
			UnitApplyTimedLife(dammief, FourCC('BTLF'), 4.)
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", xt, yt))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", dammief, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\CannonTowerMissile\\CannonTowerMissile.mdl", dammief, "chest"))
			DestroyEffectWithWait(AddSpecialEffect("Abilities\\Spells\\Orc\\EarthQuake\\EarthQuakeTarget.mdl", xt, yt), 2.)
			dammief = nil
			r = Rect(xt - 175., yt - 175., xt + 175., yt + 175.)
			EnumDestructablesInRect(r, nil, Trig_Rock_Strike_Move_Dest_Actions)
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", Picked, "chest"))
					UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					StunUnitTimed(Picked, stuntime)
					angle2 = bj_RADTODEG * Atan2(GetUnitY(Picked) - yt, GetUnitX(Picked) - xt)
					dist = SquareRoot(((GetUnitX(Picked) - xt) * (GetUnitX(Picked) - xt)) + ((GetUnitY(Picked) - yt) * (GetUnitY(Picked) - yt)))
					MoveUnit(Picked, .5, (600. - (dist * 1.5)) / 2, 100., angle, .0, true)
				end
				GroupRemoveUnit(g, Picked)
			end
			stone = CreateUnit(p, FourCC('h00E'), xt, yt, angle)
			ef = AddSpecialEffectTarget("Effects\\RockV4.mdl", stone, "chest")
			SaveUnitHandle(udg_hash, h, $D, stone)
			SaveEffectHandle(udg_hash, h, $E, ef)
			SetUnitScale(stone, 2.2, 2.2, 2.2)
			SetUnitFlyHeight(stone, 50., .0)
			MoveUnit(stone, 1.32, 800., .0, angle, .0, true)
			p = nil
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			RemoveRect(r)
			r = nil
			stone = nil
			ef = nil
		end
	end
	if wait2 > 0 and wait <= 0 then
		wait2 = wait2 - 1
		SaveInteger(udg_hash, h, 4, wait2)
		anim = LoadInteger(udg_hash, h, 6)
		anim = anim + $F
		if anim >= $AA then
			anim = 0
		end
		stone = LoadUnitHandle(udg_hash, h, $D)
		SetUnitAnimationByIndex(stone, anim)
		SaveInteger(udg_hash, h, 6, anim)
		damage2 = LoadReal(udg_hash, h, $A)
		angle = LoadReal(udg_hash, h, 5)
		stuntime = LoadReal(udg_hash, h, $F)
		p = GetOwningPlayer(caster)
		g = CreateGroup()
		x = GetUnitX(stone)
		y = GetUnitY(stone)
		GroupEnumUnitsInRange(g, x, y, 175., nil)
		DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", x, y))
		r = Rect(x - 175., y - 175., x + 175., y + 175.)
		EnumDestructablesInRect(r, nil, Trig_Rock_Strike_Move_Dest_Actions)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", Picked, "chest"))
				UnitDamageTarget(caster, Picked, damage2, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				StunUnitTimed(Picked, stuntime)
				angle2 = bj_RADTODEG * Atan2(GetUnitY(Picked) - y, GetUnitX(Picked) - x)
				dist = SquareRoot(((GetUnitX(Picked) - x) * (GetUnitX(Picked) - x)) + ((GetUnitY(Picked) - y) * (GetUnitY(Picked) - y)))
				angle3 = (Atan2(y - GetUnitY(Picked), x - GetUnitX(Picked)) * bj_RADTODEG) + 360.
				if (angle3 <= (angle + 210.) and angle3 >= (angle + 180.)) then
					angle2 = angle2 + 45.
				end
				if (angle3 <= (angle + 180.) and angle3 >= (angle + 150.)) then
					angle2 = angle2 - 45.
				end
				MoveUnit(Picked, .5, (700. - dist), 100., angle2, .0, true)
				GroupAddUnit(gdamage, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		p = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		RemoveRect(r)
		r = nil
		stone = nil
		SaveGroupHandle(udg_hash, h, 2, gdamage)
		if wait2 <= 0 then
			stone = LoadUnitHandle(udg_hash, h, $D)
			ef = LoadEffectHandle(udg_hash, h, $E)
			DestroyEffect(ef)
			DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissile.mdl", x, y))
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Volcano\\VolcanoDeath.mdl", x, y))
			ef = nil
			RemoveUnit(stone)
			FlushChildHashtable(udg_hash, h)
			DestroyTimer(t)
			stone = nil
		end
		p = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		RemoveRect(r)
		r = nil
	end
	t = nil
	caster = nil
	gdamage = nil
end

function Trig_Rock_Strike_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local loc ---@type location
	local xt ---@type number real
	local yt ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local dist ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0MM')) ---@type number integer
	local damage = (5. + 135. * lvl) ---@type number real
	local damage2 = (15. + 115. * lvl) ---@type number real
	local stuntime = .75 + (.25 * lvl) ---@type number real
	local wait = 6 ---@type number integer
	local wait2 = 44 ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local gdamage = CreateGroup() ---@type group
	if target ~= nil then
		xt = GetUnitX(target)
		yt = GetUnitY(target)
	else
		loc = GetSpellTargetLoc()
		xt = GetLocationX(loc)
		yt = GetLocationY(loc)
		RemoveLocation(loc)
		loc = nil
	end
	angle = bj_RADTODEG * Atan2((yt - y), (xt - x))
	xt = x + 100. * Cos(angle * bj_DEGTORAD)
	yt = y + 100. * Sin(angle * bj_DEGTORAD)
	SetUnitTimeScale(caster, 2.)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	SaveInteger(udg_hash, h, 3, wait)
	SaveInteger(udg_hash, h, 4, wait2)
	SaveReal(udg_hash, h, 5, angle)
	SaveInteger(udg_hash, h, 6, 0)
	SaveInteger(udg_hash, h, 8, 1)
	SaveReal(udg_hash, h, 9, damage)
	SaveReal(udg_hash, h, $A, damage2)
	SaveReal(udg_hash, h, $B, xt)
	SaveReal(udg_hash, h, $C, yt)
	SaveReal(udg_hash, h, $F, stuntime)
	TimerStart(t, .03, true, Trig_Rock_Strike_Move_Actions)
	caster = nil
	t = nil
	target = nil
	gdamage = nil
end

---@return boolean
function Trig_Rock_Strike_Conditions()
	return GetSpellAbilityId() == FourCC('A0MM')
end

function InitTrig_Rock_Strike()
	local index = 0 ---@type number integer
	gg_trg_Rock_Strike = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Rock_Strike, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Rock_Strike, Condition(Trig_Rock_Strike_Conditions))
	TriggerAddAction(gg_trg_Rock_Strike, Trig_Rock_Strike_Actions)
end

function Trig_Archdruid_Load_Actions()
	AbilityPreload(FourCC('A0MN'), 6)
	AbilityPreload(FourCC('A0MP'), 6)
	AbilityPreload(FourCC('A0MQ'), 6)
	AbilityPreload(FourCC('A0MS'), 3)
	AbilityPreload(FourCC('A0MT'), 3)
	AbilityPreload(FourCC('A0MO'), 1)
	AbilityPreload(FourCC('A0MR'), 6)
	AbilityPreload(FourCC('B04M'), 1)
	AbilityPreload(FourCC('B04K'), 1)
	AbilityPreload(FourCC('B04L'), 1)
	UnitPreload(FourCC('e006'))
	EffectPreload("Abilities\\Spells\\NightElf\\EntanglingRoots\\EntanglingRootsTarget.mdl")
	EffectPreload("Effects\\Earth_Attach.mdx")
	EffectPreload("Abilities\\Spells\\Other\\Drain\\DrainTarget.mdl")
	EffectPreload("Effects\\Power_Orb.mdl")
	EffectPreload("Effects\\Healing Touch.mdl")
	EffectPreload("Effects\\SoulshotC-gradeTarget.mdl")
	EffectPreload("Effects\\naturebeam.mdl")
	EffectPreload("Effects\\AncientExplode.mdx")
	EffectPreload("Effects\\NatureBlessing.mdl")
	EffectPreload("Effects\\LifeWave.mdl")
	EffectPreload("Abilities\\Weapons\\GreenDragonMissile\\GreenDragonMissile.mdl")
	EffectPreload("Effects\\PlasmaMissileGreen.mdl")
	EffectPreload("Effects\\GreenHeal.mdl")
	EffectPreload("Abilities\\Spells\\NightElf\\Tranquility\\Tranquility.mdl")
	EffectPreload("Effects\\EarthNova.mdl")
	EnableTrigger(gg_trg_Energy_of_Nature)
	EnableTrigger(gg_trg_Life_Chain)
	EnableTrigger(gg_trg_Ent_Creation)
	EnableTrigger(gg_trg_Nature_Wrath)
end

function InitTrig_Archdruid_Load()
	gg_trg_Archdruid_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Archdruid_Load, Trig_Archdruid_Load_Actions)
end

function Trig_Energy_of_Nature_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damage ---@type number real
	local heal ---@type number real
	local wait = LoadInteger(udg_hash, h, 4) ---@type number integer
	local orb = LoadUnitHandle(udg_hash, h, 6) ---@type unit
	local ef ---@type effect
	local xt ---@type number real
	local yt ---@type number real
	local p ---@type player
	local g ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 4, wait)
	else
		damage = LoadReal(udg_hash, h, 2)
		heal = LoadReal(udg_hash, h, 3)
		xt = LoadReal(udg_hash, h, $B)
		yt = LoadReal(udg_hash, h, $C)
		p = GetOwningPlayer(caster)
		g = CreateGroup()
		GroupEnumUnitsInRange(g, xt, yt, 270., nil)
		DestroyEffect(AddSpecialEffect("Effects\\AncientExplode.mdx", xt, yt))
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				DestroyEffect(AddSpecialEffectTarget("Effects\\SoulshotC-gradeTarget.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Effects\\naturebeam.mdl", Picked, "chest"))
				dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0MO'))
				IssueTargetOrderById(dammi, $D00CB, Picked)
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				dammi = nil
			end
			if IsUnitAlly(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				DestroyEffect(AddSpecialEffectTarget("Effects\\Healing Touch.mdl", Picked, "origin"))
				SetUnitState(Picked, UNIT_STATE_LIFE, GetUnitState(Picked, UNIT_STATE_LIFE) + heal)
			end
			GroupRemoveUnit(g, Picked)
		end
		SetUnitScale(orb, .1, .1, .1)
		KillUnit(orb)
		ShowUnit(orb, false)
		ef = LoadEffectHandle(udg_hash, h, 7)
		DestroyEffect(ef)
		ef = nil
		p = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		DestroyTimer(t)
		Picked = nil
		FlushChildHashtable(udg_hash, h)
	end
	t = nil
	caster = nil
	orb = nil
end

function Trig_Energy_of_Nature_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y))) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0MN')) ---@type number integer
	local damage = ($A + 25 * lvl) + (GetHeroInt(caster, true) * (.2 + .3 * lvl)) ---@type number real
	local heal = (75. + 50 * lvl) ---@type number real
	local time = dist / 600. ---@type number real
	local height = dist / 4 + 75. ---@type number real
	local orb = CreateUnit(GetOwningPlayer(caster), FourCC('h00E'), x, y, angle) ---@type unit
	local ef = AddSpecialEffectTarget("Effects\\Power_Orb.mdl", orb, "origin") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	if dist < 50. then
		dist = 50.
		time = .07
		angle = GetUnitFacing(caster)
		height = dist / 4 + 100.
	end
	SetUnitX(orb, x + 50. * Cos((angle) * bj_DEGTORAD))
	SetUnitY(orb, y + 50. * Sin((angle) * bj_DEGTORAD))
	SetUnitTimeScale(orb, 1.5)
	SetUnitFlyHeight(orb, 100., .0)
	MoveUnit(orb, time, 600., .0, angle, height, true)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, damage)
	SaveReal(udg_hash, h, 3, heal)
	SaveInteger(udg_hash, h, 4, R2I(time / .03))
	SaveUnitHandle(udg_hash, h, 6, orb)
	SaveEffectHandle(udg_hash, h, 7, ef)
	SaveReal(udg_hash, h, $B, xt)
	SaveReal(udg_hash, h, $C, yt)
	TimerStart(t, .03, true, Trig_Energy_of_Nature_Move_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	orb = nil
	ef = nil
end

---@return boolean
function Trig_Energy_of_Nature_Conditions()
	return GetSpellAbilityId() == FourCC('A0MN')
end

function InitTrig_Energy_of_Nature()
	local index = 0 ---@type number integer
	gg_trg_Energy_of_Nature = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Energy_of_Nature, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Energy_of_Nature, Condition(Trig_Energy_of_Nature_Conditions))
	TriggerAddAction(gg_trg_Energy_of_Nature, Trig_Energy_of_Nature_Actions)
end

function Trig_Life_Chain_Remove_Effect_Actions()
	local tef = GetExpiredTimer() ---@type timer
	local hef = GetHandleId(tef) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, hef, 1) ---@type effect
	local target = LoadUnitHandle(udg_hash, hef, 2) ---@type unit
	local regen = LoadInteger(udg_hash, hef, 3) ---@type number integer
	SetUnitLifeAndManaRegeneration(target, "life", -regen)
	FlushChildHashtable(udg_hash, hef)
	DestroyEffect(ef)
	tef = nil
	ef = nil
	target = nil
end

function Trig_Life_Chain_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 8) ---@type unit
	local wait2 = LoadInteger(udg_hash, h, 4) ---@type number integer
	local count = LoadInteger(udg_hash, h, 5) ---@type number integer
	local orb = LoadUnitHandle(udg_hash, h, 6) ---@type unit
	local target2 ---@type unit
	local damage ---@type number real
	local heal ---@type number real
	local gdamage ---@type group
	local height ---@type number real
	local ef ---@type effect
	local x = GetUnitX(orb) ---@type number real
	local y = GetUnitY(orb) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local xorb ---@type number real
	local yorb ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y))) ---@type number real
	local p ---@type player
	local g ---@type group
	local grup ---@type group
	local Picked ---@type unit
	local tef ---@type timer
	local hef ---@type number integer
	local regen ---@type number integer
	local remove = false ---@type boolean
	local reselect = false ---@type boolean
	local orb2 ---@type unit
	local ef2 ---@type effect
	if GetUnitState(target, UNIT_STATE_LIFE) > .405 then
		wait2 = wait2 - 1
		SaveInteger(udg_hash, h, 4, wait2)
		xorb = x + 30.3 * Cos(angle * bj_DEGTORAD)
		yorb = y + 30.3 * Sin(angle * bj_DEGTORAD)
		SetUnitPosition(orb, xorb, yorb)
		dist = SquareRoot((xt - xorb) * (xt - xorb) + (yt - yorb) * (yt - yorb))
		SetUnitFacing(orb, angle)
		if dist < 21. then
			SetUnitPosition(orb, xt, yt)
			p = GetOwningPlayer(caster)
			gdamage = LoadGroupHandle(udg_hash, h, $E)
			if IsUnitEnemy(target, p) and IsUnitInGroup(target, gdamage) == false and GetUnitState(target, UNIT_STATE_LIFE) > .0 and IsUnitType(target, UNIT_TYPE_STRUCTURE) == false and IsUnitType(target, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(target) ~= FourCC('h00U') then
				damage = LoadReal(udg_hash, h, 2)
				DestroyEffect(AddSpecialEffectTarget("Effects\\SoulshotC-gradeTarget.mdl", target, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Effects\\naturebeam.mdl", target, "chest"))
				UnitDamageTarget(caster, target, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				GroupAddUnit(gdamage, target)
				if GetUnitState(target, UNIT_STATE_LIFE) < .5 then
					count = count + 1
					SaveInteger(udg_hash, h, 5, count)
				end
			end
			if IsUnitAlly(target, p) and IsUnitInGroup(target, gdamage) == false and GetUnitState(target, UNIT_STATE_LIFE) > .0 and IsUnitType(target, UNIT_TYPE_STRUCTURE) == false and IsUnitType(target, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(target) ~= FourCC('h00U') then
				heal = LoadReal(udg_hash, h, 3)
				regen = LoadInteger(udg_hash, h, $D)
				DestroyEffect(AddSpecialEffectTarget("Effects\\Healing Touch.mdl", target, "origin"))
				SetUnitState(target, UNIT_STATE_LIFE, GetUnitState(target, UNIT_STATE_LIFE) + heal)
				ef = AddSpecialEffectTarget("Effects\\NatureBlessing.mdl", target, "chest")
				tef = CreateTimer()
				hef = GetHandleId(tef)
				SaveEffectHandle(udg_hash, hef, 1, ef)
				SaveUnitHandle(udg_hash, hef, 2, target)
				SaveInteger(udg_hash, hef, 3, regen)
				SetUnitLifeAndManaRegeneration(target, "life", regen)
				TimerStart(tef, 8., false, Trig_Life_Chain_Remove_Effect_Actions)
				tef = nil
				ef = nil
				GroupAddUnit(gdamage, target)
			end
			SaveGroupHandle(udg_hash, h, $E, gdamage)
			count = count - 1
			SaveInteger(udg_hash, h, 5, count)
			reselect = true
			p = nil
			gdamage = nil
		end
	end
	if (count > 0 and GetUnitState(target, UNIT_STATE_LIFE) < .405) or reselect then
		g = CreateGroup()
		grup = CreateGroup()
		GroupEnumUnitsInRange(g, xt, yt, 600., nil)
		gdamage = LoadGroupHandle(udg_hash, h, $E)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(grup, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		RandomUnitFromGroup(1, grup)
		GroupAddGroup(udg_GroupRandomUnitFromGroup, g)
		target2 = FirstOfGroup(udg_GroupRandomUnitFromGroup)
		if target2 ~= nil then
			x = GetUnitX(orb)
			y = GetUnitY(orb)
			xt = GetUnitX(target2)
			yt = GetUnitY(target2)
			dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y)))
			angle = bj_RADTODEG * Atan2((yt - y), (xt - x))
			p = GetOwningPlayer(caster)
			KillUnit(orb)
			ef = LoadEffectHandle(udg_hash, h, 7)
			DestroyEffect(ef)
			ef = nil
			orb2 = CreateUnit(p, FourCC('h00E'), x, y, angle)
			ef2 = AddSpecialEffectTarget("Effects\\LifeWave.mdl", orb2, "origin")
			SetUnitFlyHeight(orb2, 60., .0)
			SaveUnitHandle(udg_hash, h, 6, orb2)
			SaveEffectHandle(udg_hash, h, 7, ef2)
			SaveInteger(udg_hash, h, 4, R2I((dist / (1000. * 2))))
			SaveUnitHandle(udg_hash, h, 8, target2)
			SaveReal(udg_hash, h, 9, (dist / 3))
			SaveInteger(udg_hash, h, $A, R2I((dist / 2000.)))
			p = nil
			orb2 = nil
			ef2 = nil
		else
			remove = true
		end
		target2 = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		GroupClear(grup)
		DestroyGroup(grup)
		grup = nil
		gdamage = nil
	end
	if count <= 0 then
		remove = true
	end
	if remove then
		KillUnit(orb)
		ef = LoadEffectHandle(udg_hash, h, 7)
		DestroyEffect(ef)
		ef = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		DestroyTimer(t)
		Picked = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	orb = nil
	target = nil
end

function Trig_Life_Chain_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y))) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0MP')) ---@type number integer
	local damage = ($F + $F * lvl) + (GetHeroInt(caster, true) * (.1 + .1 * lvl)) ---@type number real
	local heal = (30 + 30 * lvl) + (GetHeroInt(caster, true) * (.2 + .2 * lvl)) ---@type number real
	local regen = (2 + 3 * lvl) ---@type number integer
	local speed = 1000. ---@type number real
	local time = dist / speed ---@type number real
	local height = dist / 3 ---@type number real
	local count = 3 + (lvl * 3) ---@type number integer
	local wait2 = R2I((time / 2)) ---@type number integer
	local orb = CreateUnit(p, FourCC('h00E'), x, y, angle) ---@type unit
	local ef = AddSpecialEffectTarget("Effects\\LifeWave.mdl", orb, "origin") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local gdamage = CreateGroup() ---@type group
	SetUnitX(orb, x + 30. * Cos((angle) * bj_DEGTORAD))
	SetUnitY(orb, y + 30. * Sin((angle) * bj_DEGTORAD))
	SetUnitFlyHeight(orb, 60., .0)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, damage)
	SaveReal(udg_hash, h, 3, heal)
	SaveInteger(udg_hash, h, 4, wait2)
	SaveInteger(udg_hash, h, 5, count)
	SaveUnitHandle(udg_hash, h, 6, orb)
	SaveEffectHandle(udg_hash, h, 7, ef)
	SaveUnitHandle(udg_hash, h, 8, target)
	SaveReal(udg_hash, h, 9, height)
	SaveInteger(udg_hash, h, $D, regen)
	SaveGroupHandle(udg_hash, h, $E, gdamage)
	TimerStart(t, .03, true, Trig_Life_Chain_Move_Actions)
	caster = nil
	t = nil
	orb = nil
	ef = nil
	p = nil
	target = nil
	gdamage = nil
end

---@return boolean
function Trig_Life_Chain_Conditions()
	return GetSpellAbilityId() == FourCC('A0MP')
end

function InitTrig_Life_Chain()
	local index = 0 ---@type number integer
	gg_trg_Life_Chain = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Life_Chain, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Life_Chain, Condition(Trig_Life_Chain_Conditions))
	TriggerAddAction(gg_trg_Life_Chain, Trig_Life_Chain_Actions)
end

function Trig_Ent_Creation_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 8) ---@type unit
	local orb = LoadUnitHandle(udg_hash, h, 6) ---@type unit
	local ef ---@type effect
	local x = GetUnitX(orb) ---@type number real
	local y = GetUnitY(orb) ---@type number real
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local xorb ---@type number real
	local yorb ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y))) ---@type number real
	local p ---@type player
	local hp ---@type number integer
	local damage ---@type number integer
	local lifetime ---@type number real
	local lvl ---@type number integer
	local dammi ---@type unit
	xorb = x + 27.2 * Cos(angle * bj_DEGTORAD)
	yorb = y + 27.2 * Sin(angle * bj_DEGTORAD)
	SetUnitPosition(orb, xorb, yorb)
	dist = SquareRoot((xt - xorb) * (xt - xorb) + (yt - yorb) * (yt - yorb))
	SetUnitFacing(orb, angle)
	if dist < 20. then
		SetUnitPosition(orb, xt, yt)
		p = GetOwningPlayer(caster)
		hp = LoadInteger(udg_hash, h, 2)
		damage = LoadInteger(udg_hash, h, 3)
		lifetime = LoadReal(udg_hash, h, 4)
		lvl = LoadInteger(udg_hash, h, 5)
		if GetUnitState(target, UNIT_STATE_LIFE) > .0 and IsUnitType(target, UNIT_TYPE_STRUCTURE) == false and IsUnitType(target, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(target) ~= FourCC('h00U') then
			DestroyEffect(AddSpecialEffectTarget("Effects\\SoulshotC-gradeTarget.mdl", target, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Effects\\PlasmaMissileGreen.mdl", target, "chest"))
			dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
			UnitAddAbility(dammi, FourCC('A0MR'))
			SetUnitAbilityLevel(dammi, FourCC('A0MR'), lvl)
			IssueTargetOrderById(dammi, $D006B, target)
			dammi = nil
		end
		dammi = CreateUnit(p, FourCC('e006'), (xt - 60. * Cos((angle) * bj_DEGTORAD)), (yt - 60. * Sin((angle) * bj_DEGTORAD)), angle)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), lifetime)
		SetUnitColor(dammi, PLAYER_COLOR_GREEN)
		SetUnitScale(dammi, (.75 + .05 * lvl), (.75 + .05 * lvl), (.75 + .05 * lvl))
		SetUnitMaxState(dammi, UNIT_STATE_MAX_LIFE, hp)
		SetAttackAbilityLevel(dammi, damage)
		dammi = nil
		p = nil
		KillUnit(orb)
		ef = LoadEffectHandle(udg_hash, h, 7)
		DestroyEffect(ef)
		ef = nil
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	orb = nil
	target = nil
end

function Trig_Ent_Creation_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0MQ')) ---@type number integer
	local hp = (-75 + (75 * lvl)) + R2I(GetHeroInt(caster, true) * 2) ---@type number integer
	local damage = (-8 + (8 * lvl)) + R2I(GetHeroInt(caster, true) * .3) ---@type number integer
	local lifetime = (12. + (3. * lvl)) + (GetUnitState(caster, UNIT_STATE_MAX_MANA) / FourCC('d')) ---@type number real
	local orb = CreateUnit(p, FourCC('h00E'), x, y, angle) ---@type unit
	local ef = AddSpecialEffectTarget("Abilities\\Weapons\\GreenDragonMissile\\GreenDragonMissile.mdl", orb, "origin") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetUnitX(orb, x + 30. * Cos((angle) * bj_DEGTORAD))
	SetUnitY(orb, y + 30. * Sin((angle) * bj_DEGTORAD))
	SetUnitFlyHeight(orb, 60., .0)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveInteger(udg_hash, h, 2, hp)
	SaveInteger(udg_hash, h, 3, damage)
	SaveReal(udg_hash, h, 4, lifetime)
	SaveInteger(udg_hash, h, 5, lvl)
	SaveUnitHandle(udg_hash, h, 6, orb)
	SaveEffectHandle(udg_hash, h, 7, ef)
	SaveUnitHandle(udg_hash, h, 8, target)
	TimerStart(t, .03, true, Trig_Ent_Creation_Move_Actions)
	caster = nil
	t = nil
	orb = nil
	ef = nil
	p = nil
	target = nil
end

---@return boolean
function Trig_Ent_Creation_Conditions()
	return GetSpellAbilityId() == FourCC('A0MQ')
end

function InitTrig_Ent_Creation()
	local index = 0 ---@type number integer
	gg_trg_Ent_Creation = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ent_Creation, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ent_Creation, Condition(Trig_Ent_Creation_Conditions))
	TriggerAddAction(gg_trg_Ent_Creation, Trig_Ent_Creation_Actions)
end

function Trig_Nature_Wrath_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gheal = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local addas = LoadInteger(udg_hash, h, 4) ---@type number integer
	local addarmor = LoadInteger(udg_hash, h, 5) ---@type number integer
	local addregen = LoadInteger(udg_hash, h, 6) ---@type number integer
	local addms = LoadInteger(udg_hash, h, 7) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 9) ---@type number integer
	local wait2 = LoadInteger(udg_hash, h, $A) ---@type number integer
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local g = CreateGroup() ---@type group
	local g2 = CreateGroup() ---@type group
	local g3 = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	local ef ---@type effect
	local dammief ---@type unit
	local dammieffect ---@type effect
	local lopa = 0 ---@type number integer
	local lopb = 0 ---@type number integer
	local count ---@type number integer
	local angleef ---@type number real
	local dist ---@type number real
	local dammicounter = $F ---@type number integer
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local orderId ---@type number integer
	orderId = $D021D
	if (orderId ~= 0) then
	else
		orderId = UnitId("decouple")
		if (orderId ~= 0) then
		end
	end
	if wait > 0 and order == orderId then
		wait = wait - 1
		wait2 = wait2 + 1
		if wait2 == 26 then
			wait2 = 0
			GroupEnumUnitsInRange(g, x, y, 700., nil)
			DestroyEffect(AddSpecialEffect("Effects\\EarthNova.mdl", x, y))
			while(true) do
				Picked = FirstOfGroup(g)
				if (Picked == nil) then break end
				if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
					DestroyEffect(AddSpecialEffectTarget("Effects\\SoulshotC-gradeTarget.mdl", Picked, "chest"))
					DestroyEffect(AddSpecialEffectTarget("Effects\\naturebeam.mdl", Picked, "chest"))
					dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
					UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
					UnitAddAbility(dammi, FourCC('A0MO'))
					IssueTargetOrderById(dammi, $D00CB, Picked)
					UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
					dammi = nil
				end
				GroupRemoveUnit(g, Picked)
			end
			Picked = nil
			GroupClear(g)
			DestroyGroup(g)
			g = nil
			g = CreateGroup()
		end
		while(true) do
			if (lopa >= 4) then break end
			count = 16 - (lopa * 4)
			angleef = (360. / count)
			dist = (700. - 150. * lopa)
			lopb = 0
			while(true) do
				if (lopb > count) then break end
				dammief = LoadUnitHandle(udg_hash, h, dammicounter)
				SetUnitPosition(dammief, x + dist * Cos(angleef * lopb * bj_DEGTORAD), y + dist * Sin(angleef * lopb * bj_DEGTORAD))
				SetUnitFacing(dammief, angleef + 90.)
				dammicounter = dammicounter + 1
				dammief = nil
				lopb = lopb + 1
			end
			lopa = lopa + 1
		end
		SaveInteger(udg_hash, h, 9, wait)
		SaveInteger(udg_hash, h, $A, wait2)
		GroupEnumUnitsInRange(g, x, y, 700., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if (IsUnitAlly(Picked, p) or GetOwningPlayer(Picked) == Player($D)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(g2, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		GroupAddGroup(gheal, g3)
		while(true) do
			Picked = FirstOfGroup(g3)
			if (Picked == nil) then break end
			if IsUnitInGroup(Picked, g2) == false then
				GroupRemoveUnit(gheal, Picked)
				SetUnitLifeAndManaRegeneration(Picked, "life", -addregen)
				SetArmorAbilityLevel(Picked, -addarmor)
				SetAttackSpeedAbilityLevel(Picked, -addas)
			else
				if (wait2 / 5) * 5 == wait2 then
					dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
					UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
					UnitAddAbility(dammi, FourCC('A0MT'))
					SetUnitAbilityLevel(dammi, FourCC('A0MT'), addms)
					IssueTargetOrderById(dammi, $D0085, Picked)
					dammi = nil
				end
			end
			GroupRemoveUnit(g3, Picked)
		end
		Picked = nil
		GroupClear(g3)
		DestroyGroup(g3)
		g3 = nil
		while(true) do
			Picked = FirstOfGroup(g2)
			if (Picked == nil) then break end
			if IsUnitInGroup(Picked, gheal) == false then
				DestroyEffect(AddSpecialEffectTarget("Effects\\Healing Touch.mdl", Picked, "origin"))
				SetUnitLifeAndManaRegeneration(Picked, "life", addregen)
				SetArmorAbilityLevel(Picked, addarmor)
				SetAttackSpeedAbilityLevel(Picked, addas)
				GroupAddUnit(gheal, Picked)
			end
			if GetUnitAbilityLevel(Picked, FourCC('B04M')) <= 0 then
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0MT'))
				SetUnitAbilityLevel(dammi, FourCC('A0MT'), addms)
				IssueTargetOrderById(dammi, $D0085, Picked)
				dammi = nil
			end
			GroupRemoveUnit(g2, Picked)
		end
		Picked = nil
		GroupClear(g2)
		DestroyGroup(g2)
		g2 = nil
		SaveGroupHandle(udg_hash, h, 2, gheal)
	else
		ef = LoadEffectHandle(udg_hash, h, $B)
		DestroyEffect(ef)
		ef = nil
		while(true) do
			Picked = FirstOfGroup(gheal)
			if (Picked == nil) then break end
			SetUnitLifeAndManaRegeneration(Picked, "life", -addregen)
			SetArmorAbilityLevel(Picked, -addarmor)
			SetAttackSpeedAbilityLevel(Picked, -addas)
			GroupRemoveUnit(gheal, Picked)
		end
		GroupClear(gheal)
		DestroyGroup(gheal)
		gheal = nil
		Picked = nil
		lopa = 0
		lopb = 0
		dammicounter = $F
		while(true) do
			if (lopa > 4) then break end
			count = 16 - (lopa * 4)
			lopb = 0
			while(true) do
				if (lopb > count) then break end
				dammief = LoadUnitHandle(udg_hash, h, dammicounter)
				dammieffect = LoadEffectHandle(udg_hash, h, dammicounter + 75)
				KillUnit(dammief)
				DestroyEffect(dammieffect)
				dammicounter = dammicounter + 1
				dammief = nil
				dammieffect = nil
				lopb = lopb + 1
			end
			lopa = lopa + 1
		end
		SetUnitTimeScale(caster, 1.)
		RemoveUnit(LoadUnitHandle(udg_hash, GetHandleId(caster), FourCC('u')))
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	p = nil
	gheal = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(g2)
	DestroyGroup(g2)
	g2 = nil
	GroupClear(g3)
	DestroyGroup(g3)
	g3 = nil
	dammi = nil
	Picked = nil
end

function Trig_Nature_Wrath_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0MS')) ---@type number integer
	local lvlup = GetUnitAbilityLevel(caster, FourCC('A0Q2')) ---@type number integer
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local gheal = CreateGroup() ---@type group
	local addas ---@type number integer
	local addarmor ---@type number integer
	local addregen ---@type number integer
	local addms ---@type number integer
	local damage ---@type number real
	local wait = 80 ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammief ---@type unit
	local dammieffect ---@type effect
	local lopa = 0 ---@type number integer
	local lopb = 0 ---@type number integer
	local count ---@type number integer
	local angleef ---@type number real
	local dist ---@type number real
	local dammicounter = $F ---@type number integer
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\Tranquility\\Tranquility.mdl", caster, "origin") ---@type effect
	if lvl > 0 then
		addas = $A + 35 * lvl
		addarmor = 5 + (5 * lvl)
		addregen = $F + (30 * lvl)
		addms = lvl
		damage = 20. + 50. * lvl
		AddProgressBar(caster, 195. + (15. * lvl), (1. + .15 * lvl), (wait * .1), false, true, FourCC('u'), 0, $FF, 0)
	end
	if lvlup > 0 then
		addas = $A + 35 * lvlup
		addarmor = 5 + (5 * lvlup)
		addregen = 25 + (50 * lvlup)
		addms = lvlup
		damage = 25. + 75. * lvlup
		AddProgressBar(caster, 195. + (15. * lvlup), (1. + .15 * lvlup), (wait * .1), false, true, FourCC('u'), 0, $FF, 0)
	end
	while(true) do
		if (lopa >= 4) then break end
		count = 16 - (lopa * 4)
		angleef = (360. / count)
		dist = (700. - 150. * lopa)
		lopb = 0
		while(true) do
			if (lopb > count) then break end
			dammief = CreateUnit(p, FourCC('h00U'), x + dist * Cos(angleef * lopb * bj_DEGTORAD), y + dist * Sin(angleef * lopb * bj_DEGTORAD), (angleef * lopb) + 90.)
			dammieffect = AddSpecialEffectTarget("Effects\\GreenHeal.mdl", dammief, "chest")
			SaveUnitHandle(udg_hash, h, dammicounter, dammief)
			SaveEffectHandle(udg_hash, h, dammicounter + 75, dammieffect)
			dammicounter = dammicounter + 1
			dammief = nil
			dammieffect = nil
			lopb = lopb + 1
		end
		lopa = lopa + 1
	end
	SetUnitTimeScale(caster, 1.05)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gheal)
	SaveReal(udg_hash, h, 3, damage)
	SaveInteger(udg_hash, h, 4, addas)
	SaveInteger(udg_hash, h, 5, addarmor)
	SaveInteger(udg_hash, h, 6, addregen)
	SaveInteger(udg_hash, h, 7, addms)
	SaveInteger(udg_hash, h, 9, wait)
	SaveInteger(udg_hash, h, $A, 0)
	SaveEffectHandle(udg_hash, h, $B, ef)
	TimerStart(t, .1, true, Trig_Nature_Wrath_Periodic_Actions)
	caster = nil
	p = nil
	gheal = nil
	ef = nil
	t = nil
end

---@return boolean
function Trig_Nature_Wrath_Conditions()
	return (GetSpellAbilityId() == FourCC('A0MS') or GetSpellAbilityId() == FourCC('A0Q2'))
end

function InitTrig_Nature_Wrath()
	local index = 0 ---@type number integer
	gg_trg_Nature_Wrath = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Nature_Wrath, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Nature_Wrath, Condition(Trig_Nature_Wrath_Conditions))
	TriggerAddAction(gg_trg_Nature_Wrath, Trig_Nature_Wrath_Actions)
end

function Trig_Falling_Star_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 7) ---@type unit
	local count = LoadInteger(udg_hash, h, 8) ---@type number integer
	local p = GetOwningPlayer(caster) ---@type player
	local damage ---@type number real
	local orb ---@type unit
	local stuntime ---@type number real
	local ef ---@type effect
	local xt ---@type number real
	local yt ---@type number real
	local g ---@type group
	local Picked ---@type unit
	local angle2 ---@type number real
	local dist ---@type number real
	local lopa = 1 ---@type number integer
	local horb ---@type number integer
	local knock ---@type number real
	local gdamage = CreateGroup() ---@type group
	while(true) do
		if (lopa > count) then break end
		orb = LoadUnitHandle(udg_hash, h, lopa)
		ef = LoadEffectHandle(udg_hash, h, lopa + 3)
		horb = GetHandleId(orb)
		damage = LoadReal(udg_hash, horb, 1)
		stuntime = LoadReal(udg_hash, horb, 2)
		knock = LoadReal(udg_hash, horb, 3)
		xt = LoadReal(udg_hash, horb, 4)
		yt = LoadReal(udg_hash, horb, 5)
		g = CreateGroup()
		GroupEnumUnitsInRange(g, xt, yt, 220., nil)
		DestroyEffect(AddSpecialEffect("Effects\\Nebula.mdl", xt, yt))
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl", xt, yt))
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayDamage.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayTarget.mdl", Picked, "origin"))
				StunUnitTimed(Picked, stuntime)
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				angle2 = bj_RADTODEG * Atan2((GetUnitY(Picked) - yt), (GetUnitX(Picked) - xt))
				dist = SquareRoot((((GetUnitX(Picked) - xt) * (GetUnitX(Picked) - xt))) + ((GetUnitY(Picked) - yt) * (GetUnitY(Picked) - yt)))
				MoveUnit(Picked, .5, ($E6 - dist) * 2.5 * knock, ($DC - dist) * 2. * knock, angle2, .0, true)
				GroupAddUnit(gdamage, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		KillUnit(orb)
		DestroyEffect(ef)
		ef = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		lopa = lopa + 1
	end
	p = nil
	GroupClear(gdamage)
	DestroyGroup(gdamage)
	gdamage = nil
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	caster = nil
end

function Trig_Falling_Star_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y))) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0NR')) ---@type number integer
	local damage = (40. * lvl) + (GetHeroAgi(caster, true) * (.25 + .25 * lvl)) ---@type number real
	local stuntime = .6 + (.15 * lvl) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local orb ---@type unit
	local ef ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local lopa = 1 ---@type number integer
	local angle2 = GetRandomReal(.0, 360.) ---@type number real
	local isultimate = LoadBoolean(udg_hash, GetHandleId(caster), $7F) ---@type boolean
	local count = 1 ---@type number integer
	if isultimate then
		count = 3
	end
	if dist < 50. then
		dist = 50.
		angle = GetUnitFacing(caster)
	end
	if GetFloatGameState(GAME_STATE_TIME_OF_DAY) * 1 < 6. or GetFloatGameState(GAME_STATE_TIME_OF_DAY) * 1 > 18. then
		damage = damage * 1.5
	end
	while(true) do
		if (lopa > count) then break end
		if lopa == 1 then
			orb = CreateUnit(p, FourCC('h00E'), x, y, angle)
			SetUnitScale(orb, 2.75, 2.75, 2.75)
			SaveReal(udg_hash, GetHandleId(orb), 1, damage)
			SaveReal(udg_hash, GetHandleId(orb), 2, stuntime)
			SaveReal(udg_hash, GetHandleId(orb), 3, 1.)
			SaveReal(udg_hash, GetHandleId(orb), 4, xt)
			SaveReal(udg_hash, GetHandleId(orb), 5, yt)
		else
			orb = CreateUnit(p, FourCC('h00E'), (x + 200. * Cos(angle2 * bj_DEGTORAD)), (y + 200. * Sin(angle2 * bj_DEGTORAD)), angle)
			SetUnitScale(orb, 2., 2., 2.)
			SaveReal(udg_hash, GetHandleId(orb), 1, damage / 2)
			SaveReal(udg_hash, GetHandleId(orb), 2, stuntime / 2)
			SaveReal(udg_hash, GetHandleId(orb), 3, .5)
			SaveReal(udg_hash, GetHandleId(orb), 4, GetUnitX(orb) + dist * Cos(angle * bj_DEGTORAD))
			SaveReal(udg_hash, GetHandleId(orb), 5, GetUnitY(orb) + dist * Sin(angle * bj_DEGTORAD))
			angle2 = angle2 + GetRandomReal(45., 315.)
		end
		ef = AddSpecialEffectTarget("Effects\\StarfallTarget2.mdl", orb, "origin")
		SetUnitAnimationByIndex(orb, 45)
		SetUnitTimeScale(orb, 2.5)
		UnitAddAbility(orb, FourCC('Amrf'))
		UnitRemoveAbility(orb, FourCC('Amrf'))
		SetUnitFlyHeight(orb, 800., .0)
		SetUnitFlyHeight(orb, .0, 1600.)
		MoveUnit(orb, .5, dist * 2, .0, angle, .0, true)
		SaveUnitHandle(udg_hash, h, lopa, orb)
		SaveEffectHandle(udg_hash, h, lopa + 3, ef)
		ef = nil
		orb = nil
		lopa = lopa + 1
	end
	DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\Starfall\\StarfallCaster.mdl", caster, "origin"), 3.)
	SaveUnitHandle(udg_hash, h, 7, caster)
	SaveInteger(udg_hash, h, 8, count)
	TimerStart(t, .5, false, Trig_Falling_Star_Move_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	p = nil
end

---@return boolean
function Trig_Falling_Star_Conditions()
	return GetSpellAbilityId() == FourCC('A0NR')
end

function InitTrig_Falling_Star()
	local index = 0 ---@type number integer
	gg_trg_Falling_Star = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Falling_Star, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Falling_Star, Condition(Trig_Falling_Star_Conditions))
	TriggerAddAction(gg_trg_Falling_Star, Trig_Falling_Star_Actions)
end

function Trig_Moon_Chackram_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster ---@type unit
	local ef ---@type effect
	if LoadBoolean(udg_hash, h, 3) then
		SaveBoolean(udg_hash, h, 3, false)
		ef = LoadEffectHandle(udg_hash, h, 2)
		DestroyEffect(ef)
		ef = nil
		TimerStart(t, 5., false, Trig_Moon_Chackram_Periodic_Actions)
	else
		caster = LoadUnitHandle(udg_hash, h, 1)
		SaveBoolean(udg_hash, GetHandleId(caster), $80, false)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		t = nil
		caster = nil
	end
end

function Trig_Moon_Chackram_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef = AddSpecialEffectTarget("Effects\\MoonSight_Buff.mdx", caster, "overhead") ---@type effect
	SaveBoolean(udg_hash, GetHandleId(caster), $80, true)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveEffectHandle(udg_hash, h, 2, ef)
	SaveBoolean(udg_hash, h, 3, true)
	TimerStart(t, 3., false, Trig_Moon_Chackram_Periodic_Actions)
	caster = nil
	t = nil
	ef = nil
end

---@return boolean
function Trig_Moon_Chackram_Conditions()
	return GetSpellAbilityId() == FourCC('A0NS')
end

function InitTrig_Moon_Chackram()
	local index = 0 ---@type number integer
	gg_trg_Moon_Chackram = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Moon_Chackram, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Moon_Chackram, Condition(Trig_Moon_Chackram_Conditions))
	TriggerAddAction(gg_trg_Moon_Chackram, Trig_Moon_Chackram_Actions)
end

function Trig_Moon_Wind_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gheal = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local adddamage ---@type number integer
	local addas = LoadInteger(udg_hash, h, 4) ---@type number integer
	local addint = LoadInteger(udg_hash, h, 5) ---@type number integer
	local addagi = LoadInteger(udg_hash, h, 6) ---@type number integer
	local addregen = LoadInteger(udg_hash, h, 7) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 9) ---@type number integer
	local x = LoadReal(udg_hash, h, $C) ---@type number real
	local y = LoadReal(udg_hash, h, $D) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local g2 = CreateGroup() ---@type group
	local g3 = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	local dammief ---@type unit
	local dammieffect ---@type effect
	local lopa = 0 ---@type number integer
	local lopb = 0 ---@type number integer
	local count ---@type number integer
	local angleef ---@type number real
	local dist ---@type number real
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 9, wait)
		GroupEnumUnitsInRange(g, x, y, 450., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if (IsUnitAlly(Picked, p) or GetOwningPlayer(Picked) == Player($D)) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(g2, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		GroupAddGroup(gheal, g3)
		while(true) do
			Picked = FirstOfGroup(g3)
			if (Picked == nil) then break end
			if IsUnitInGroup(Picked, g2) == false then
				GroupRemoveUnit(gheal, Picked)
				SetUnitLifeAndManaRegeneration(Picked, "life", -addregen)
				SetAttackSpeedAbilityLevel(Picked, -addas)
				if IsUnitType(Picked, UNIT_TYPE_HERO) then
					SetHeroAgi(Picked, GetHeroAgi(Picked, false) - addagi, true)
					SetHeroInt(Picked, GetHeroInt(Picked, false) - addint, true)
				end
				if Picked == caster and LoadBoolean(udg_hash, h, $E) then
					SetUnitLifeAndManaRegeneration(Picked, "life", -R2I((addregen)) / 2)
					SetAttackSpeedAbilityLevel(Picked, -R2I((addas)) / 2)
					SetHeroAgi(Picked, GetHeroAgi(Picked, false) - R2I((addagi)) / 2, true)
					SetHeroInt(Picked, GetHeroInt(Picked, false) - R2I((addint)) / 2, true)
				end
				if Picked == caster and LoadBoolean(udg_hash, h, $F) then
					adddamage = LoadInteger(udg_hash, h, 3)
					SetAttackAbilityLevel(Picked, -adddamage)
				end
			else
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0NU'))
				IssueTargetOrderById(dammi, $D0085, Picked)
				dammi = nil
			end
			GroupRemoveUnit(g3, Picked)
		end
		Picked = nil
		GroupClear(g3)
		DestroyGroup(g3)
		g3 = nil
		while(true) do
			Picked = FirstOfGroup(g2)
			if (Picked == nil) then break end
			if IsUnitInGroup(Picked, gheal) == false then
				GroupAddUnit(gheal, Picked)
				SetUnitLifeAndManaRegeneration(Picked, "life", addregen)
				SetAttackSpeedAbilityLevel(Picked, addas)
				if IsUnitType(Picked, UNIT_TYPE_HERO) then
					SetHeroAgi(Picked, GetHeroAgi(Picked, false) + addagi, true)
					SetHeroInt(Picked, GetHeroInt(Picked, false) + addint, true)
				end
				if Picked == caster and LoadBoolean(udg_hash, h, $E) then
					SetUnitLifeAndManaRegeneration(Picked, "life", R2I(addregen / 2))
					SetAttackSpeedAbilityLevel(Picked, R2I(addas / 2))
					SetHeroAgi(Picked, GetHeroAgi(Picked, false) + R2I((addagi) / 2), true)
					SetHeroInt(Picked, GetHeroInt(Picked, false) + R2I((addint)) / 2, true)
				end
				if Picked == caster and LoadBoolean(udg_hash, h, $F) then
					adddamage = LoadInteger(udg_hash, h, 3)
					SetAttackAbilityLevel(Picked, adddamage)
				end
			end
			if GetUnitAbilityLevel(Picked, FourCC('B04M')) <= 0 then
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0NU'))
				IssueTargetOrderById(dammi, $D0085, Picked)
				dammi = nil
			end
			GroupRemoveUnit(g2, Picked)
		end
		Picked = nil
		GroupClear(g2)
		DestroyGroup(g2)
		g2 = nil
		SaveGroupHandle(udg_hash, h, 2, gheal)
	else
		while(true) do
			Picked = FirstOfGroup(gheal)
			if (Picked == nil) then break end
			SetUnitLifeAndManaRegeneration(Picked, "life", -addregen)
			SetAttackSpeedAbilityLevel(Picked, -addas)
			if IsUnitType(Picked, UNIT_TYPE_HERO) then
				SetHeroAgi(Picked, GetHeroAgi(Picked, false) - addagi, true)
				SetHeroInt(Picked, GetHeroInt(Picked, false) - addint, true)
			end
			if Picked == caster and LoadBoolean(udg_hash, h, $E) then
				SetUnitLifeAndManaRegeneration(Picked, "life", -R2I((addregen)) / 2)
				SetAttackSpeedAbilityLevel(Picked, -R2I((addas)) / 2)
				SetHeroAgi(Picked, GetHeroAgi(Picked, false) - R2I((addagi)) / 2, true)
				SetHeroInt(Picked, GetHeroInt(Picked, false) - R2I((addint)) / 2, true)
			end
			if Picked == caster and LoadBoolean(udg_hash, h, $F) then
				adddamage = LoadInteger(udg_hash, h, 3)
				SetAttackAbilityLevel(Picked, -adddamage)
			end
			GroupRemoveUnit(gheal, Picked)
		end
		GroupClear(gheal)
		DestroyGroup(gheal)
		gheal = nil
		Picked = nil
		lopa = 1
		while(true) do
			if (lopa >= 7) then break end
			dammief = LoadUnitHandle(udg_hash, h, 50 + lopa)
			dammieffect = LoadEffectHandle(udg_hash, h, 60 + lopa)
			KillUnit(dammief)
			DestroyEffect(dammieffect)
			dammief = nil
			dammieffect = nil
			lopa = lopa + 1
		end
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	p = nil
	gheal = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(g2)
	DestroyGroup(g2)
	g2 = nil
	GroupClear(g3)
	DestroyGroup(g3)
	g3 = nil
	dammi = nil
	Picked = nil
end

function Trig_Moon_Wind_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0NT')) ---@type number integer
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local angle = bj_RADTODEG * Atan2((yt - y), (xt - x)) ---@type number real
	local dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y))) ---@type number real
	local gheal = CreateGroup() ---@type group
	local addagi = 6 + (4 * lvl) ---@type number integer
	local addint = 6 + (4 * lvl) ---@type number integer
	local addas = 8 + (6 * lvl) ---@type number integer
	local adddamage = R2I(GetHeroAgi(caster, true) * .4) ---@type number integer
	local addregen = $A + (6 * lvl) ---@type number integer
	local wait = 20 ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammief ---@type unit
	local dammieffect ---@type effect
	local lopa = 1 ---@type number integer
	local lopb = 0 ---@type number integer
	local count ---@type number integer
	local angleef ---@type number real
	local dammicounter = 6 ---@type number integer
	local smechenie = 400. + 133. ---@type number real
	local angledummi = angle - 90. ---@type number real
	local x2 = x - 400. * Cos(angle * bj_DEGTORAD) ---@type number real
	local y2 = y - 400. * Sin(angle * bj_DEGTORAD) ---@type number real
	local halfbonus = false ---@type boolean
	local isultimate = LoadBoolean(udg_hash, GetHandleId(caster), $7F) ---@type boolean
	if GetFloatGameState(GAME_STATE_TIME_OF_DAY) * 1 < 6. or GetFloatGameState(GAME_STATE_TIME_OF_DAY) * 1 > 18. then
		halfbonus = true
	end
	if isultimate then
		wait = 30
	end
	while(true) do
		if (lopa >= 7) then break end
		smechenie = smechenie - 133.
		dammief = CreateUnit(p, FourCC('h00E'), x2 + smechenie * Cos(angledummi * bj_DEGTORAD), y2 + smechenie * Sin(angledummi * bj_DEGTORAD), angle)
		SetUnitAnimationByIndex(dammief, 45)
		SetUnitScale(dammief, 2., 2., 2.)
		SetUnitFlyHeight(dammief, 200., .0)
		dammieffect = AddSpecialEffectTarget("Effects\\HolyBlessing.mdl", dammief, "chest")
		SaveUnitHandle(udg_hash, h, lopa + 50, dammief)
		SaveEffectHandle(udg_hash, h, lopa + 60, dammieffect)
		dammief = nil
		dammieffect = nil
		lopa = lopa + 1
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gheal)
	SaveInteger(udg_hash, h, 3, adddamage)
	SaveInteger(udg_hash, h, 4, addas)
	SaveInteger(udg_hash, h, 5, addint)
	SaveInteger(udg_hash, h, 6, addagi)
	SaveInteger(udg_hash, h, 7, addregen)
	SaveInteger(udg_hash, h, 9, wait)
	SaveReal(udg_hash, h, $C, x)
	SaveReal(udg_hash, h, $D, y)
	SaveBoolean(udg_hash, h, $E, halfbonus)
	SaveBoolean(udg_hash, h, $F, isultimate)
	TimerStart(t, .5, true, Trig_Moon_Wind_Periodic_Actions)
	caster = nil
	p = nil
	gheal = nil
	t = nil
	RemoveLocation(loc)
	loc = nil
end

---@return boolean
function Trig_Moon_Wind_Conditions()
	return GetSpellAbilityId() == FourCC('A0NT')
end

function InitTrig_Moon_Wind()
	local index = 0 ---@type number integer
	gg_trg_Moon_Wind = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Moon_Wind, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Moon_Wind, Condition(Trig_Moon_Wind_Conditions))
	TriggerAddAction(gg_trg_Moon_Wind, Trig_Moon_Wind_Actions)
end

function Trig_Night_Heart_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local ef = LoadEffectHandle(udg_hash, h, 2) ---@type effect
	local bonus = LoadInteger(udg_hash, h, 3) ---@type number integer
	SetHeroAgi(caster, GetHeroAgi(caster, false) - bonus, true)
	SaveBoolean(udg_hash, GetHandleId(caster), $7F, false)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	caster = nil
	DestroyEffect(ef)
	ef = nil
end

function Trig_Night_Heart_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local ef = AddSpecialEffectTarget("Effects\\StarfallCaster.mdl", caster, "origin") ---@type effect
	local bonus = $F + ($F * GetUnitAbilityLevel(caster, FourCC('A0NV'))) ---@type number integer
	local dammi = CreateUnit(GetOwningPlayer(caster), FourCC('h00H'), .0, .0, .0) ---@type unit
	local it = CreateItem(FourCC('I010'), .0, .0) ---@type item
	UnitApplyTimedLife(dammi, FourCC('BTLF'), 10.)
	UnitAddItem(dammi, it)
	UnitUseItem(dammi, GetItemOfTypeFromUnitBJ(dammi, FourCC('I010')))
	dammi = nil
	it = nil
	PlaySoundBJ(gg_snd_HuntressYesAttack4)
	SetHeroAgi(caster, GetHeroAgi(caster, false) + bonus, true)
	SaveBoolean(udg_hash, GetHandleId(caster), $7F, true)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveEffectHandle(udg_hash, h, 2, ef)
	SaveInteger(udg_hash, h, 3, bonus)
	TimerStart(t, 20., false, Trig_Night_Heart_Periodic_Actions)
	caster = nil
	t = nil
	ef = nil
end

---@return boolean
function Trig_Night_Heart_Conditions()
	return GetSpellAbilityId() == FourCC('A0NV')
end

function InitTrig_Night_Heart()
	local index = 0 ---@type number integer
	gg_trg_Night_Heart = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Night_Heart, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Night_Heart, Condition(Trig_Night_Heart_Conditions))
	TriggerAddAction(gg_trg_Night_Heart, Trig_Night_Heart_Actions)
end

function Trig_MoonWarrior_Load_Actions()
	AbilityPreload(FourCC('A0NR'), 6)
	AbilityPreload(FourCC('A0NS'), 6)
	AbilityPreload(FourCC('A0NT'), 6)
	AbilityPreload(FourCC('A0NV'), 3)
	AbilityPreload(FourCC('A0NU'), 1)
	AbilityPreload(FourCC('B04R'), 1)
	UnitPreload(FourCC('h00H'))
	UnitPreload(FourCC('I010'))
	EffectPreload("Effects\\CosmicTouch.MDX")
	EffectPreload("Effects\\BlueGlaivie.mdl")
	EffectPreload("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl")
	EffectPreload("Effects\\SoundTrauma.mdl")
	EffectPreload("Effects\\StarfallCaster.mdl")
	EffectPreload("Effects\\StarfallTarget2.mdl")
	EffectPreload("Abilities\\Spells\\NightElf\\Starfall\\StarfallCaster.mdl")
	EffectPreload("Effects\\Nebula.mdl")
	EffectPreload("Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl")
	EffectPreload("Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayDamage.mdl")
	EffectPreload("Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayTarget.mdl")
	EffectPreload("Effects\\MoonSight_Buff.mdx")
	EffectPreload("Effects\\HolyBlessing.mdl")
	EnableTrigger(gg_trg_Falling_Star)
	EnableTrigger(gg_trg_Moon_Chackram)
	EnableTrigger(gg_trg_Moon_Wind)
	EnableTrigger(gg_trg_Night_Heart)
end

function InitTrig_MoonWarrior_Load()
	gg_trg_MoonWarrior_Load = CreateTrigger()
	TriggerAddAction(gg_trg_MoonWarrior_Load, Trig_MoonWarrior_Load_Actions)
end

function Trig_Ancient_Communication_Ligtning_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 2) ---@type unit
	local l = LoadLightningHandle(udg_hash, h, 3) ---@type lightning
	local time = LoadReal(udg_hash, h, 4) ---@type number real
	local locc = GetUnitLoc(caster) ---@type location
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local loct = GetUnitLoc(target) ---@type location
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local dx = xc - xt ---@type number real
	local dy = yc - yt ---@type number real
	local dist = SquareRoot(dx * dx + dy * dy) ---@type number real
	local damage ---@type number integer
	local g ---@type group
	local Picked ---@type unit
	local g2 ---@type group
	local g3 ---@type group
	local attackspeed ---@type number integer
	local ef ---@type effect
	local hpregen ---@type number integer
	local armor ---@type number integer
	if GetUnitState(caster, UNIT_STATE_LIFE) > .405 and GetUnitState(target, UNIT_STATE_LIFE) > .0 and dist <= 725. and time > .0 then
		time = time - .04
		SaveReal(udg_hash, h, 4, time)
		MoveLightningEx(l, true, xc, yc, 50. + GetLocationZ(locc), xt, yt, 50. + GetLocationZ(loct))
	else
		if GetUnitAbilityLevel(caster, FourCC('A0OO')) > 0 then
			attackspeed = $A + $A * GetUnitAbilityLevel(caster, FourCC('A0OO'))
			ef = LoadEffectHandle(udg_hash, GetHandleId(target), $89)
			DestroyEffect(ef)
			ef = nil
			SaveEffectHandle(udg_hash, GetHandleId(target), $89, nil)
			SetAttackSpeedAbilityLevel(target, -LoadInteger(udg_hash, GetHandleId(target), $8C))
		end
		if GetUnitAbilityLevel(caster, FourCC('A0OT')) > 0 then
			armor = 3 + 3 * GetUnitAbilityLevel(caster, FourCC('A0OT'))
			hpregen = 5 + $A * GetUnitAbilityLevel(caster, FourCC('A0OT'))
			ef = LoadEffectHandle(udg_hash, GetHandleId(target), $89)
			DestroyEffect(ef)
			ef = nil
			SaveEffectHandle(udg_hash, GetHandleId(target), $89, nil)
			SetUnitLifeAndManaRegeneration(target, "life", -LoadInteger(udg_hash, GetHandleId(target), $8D))
			SetArmorAbilityLevel(target, -LoadInteger(udg_hash, GetHandleId(target), $8E))
		end
		UnitRemoveAbility(target, FourCC('B04Z'))
		g = LoadGroupHandle(udg_hash, GetHandleId(caster), $88)
		GroupRemoveUnit(g, target)
		Picked = FirstOfGroup(g)
		if Picked == nil then
			UnitRemoveAbility(caster, FourCC('B04Z'))
		end
		SaveGroupHandle(udg_hash, GetHandleId(caster), $88, g)
		damage = LoadInteger(udg_hash, h, 5)
		SetAttackAbilityLevel(caster, -damage)
		SetAttackAbilityLevel(target, -damage)
		DestroyLightning(l)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	target = nil
	l = nil
	RemoveLocation(locc)
	locc = nil
	RemoveLocation(loct)
	loct = nil
end

function Trig_Ancient_Communication_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local dammi ---@type unit
	local locc = GetUnitLoc(caster) ---@type location
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local loct = GetUnitLoc(target) ---@type location
	local xt = GetUnitX(target) ---@type number real
	local yt = GetUnitY(target) ---@type number real
	local l ---@type lightning
	local p = GetOwningPlayer(caster) ---@type player
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0OM')) ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local time = 11. + lvl ---@type number real
	local damage = 7 + (8 * lvl) ---@type number integer
	local g = LoadGroupHandle(udg_hash, GetHandleId(caster), $88) ---@type group
	local ef ---@type effect
	local attackspeed ---@type number integer
	local hpregen ---@type number integer
	local armor ---@type number integer
	if g == nil then
		g = CreateGroup()
	end
	if IsUnitInGroup(target, g) then
		SimError(GetOwningPlayer(caster), "На этого героя уже наложена Связь Предков.")
		UnitRemoveAbility(caster, FourCC('A0OM'))
		UnitAddAbility(caster, FourCC('A0OM'))
		SetUnitAbilityLevel(caster, FourCC('A0OM'), lvl)
		SetUnitState(caster, UNIT_STATE_MANA, GetUnitState(caster, UNIT_STATE_MANA) + 120. + (5. * lvl))
	else
		l = AddLightningEx("SPLK", true, xc, yc, 50. + GetLocationZ(locc), xt, yt, 50. + GetLocationZ(loct))
		GroupAddUnit(g, target)
		SaveGroupHandle(udg_hash, GetHandleId(caster), $88, g)
		SetAttackAbilityLevel(caster, damage)
		SetAttackAbilityLevel(target, damage)
		dammi = CreateUnit(p, FourCC('h00U'), xc, yc, .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.5)
		UnitAddAbility(dammi, FourCC('A0ON'))
		IssueTargetOrderById(dammi, $D0085, caster)
		dammi = nil
		dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
		UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.5)
		UnitAddAbility(dammi, FourCC('A0ON'))
		IssueTargetOrderById(dammi, $D0085, target)
		dammi = nil
		if GetUnitAbilityLevel(caster, FourCC('A0OO')) > 0 then
			attackspeed = $A + $A * GetUnitAbilityLevel(caster, FourCC('A0OO'))
			ef = AddSpecialEffectTarget("Effects\\PyroMissle.mdx", target, "chest")
			SaveEffectHandle(udg_hash, GetHandleId(target), $89, ef)
			ef = nil
			SetAttackSpeedAbilityLevel(target, attackspeed)
			SaveInteger(udg_hash, GetHandleId(target), $8C, attackspeed)
		end
		if GetUnitAbilityLevel(caster, FourCC('A0OT')) > 0 then
			armor = 3 + 3 * GetUnitAbilityLevel(caster, FourCC('A0OT'))
			hpregen = 5 + $A * GetUnitAbilityLevel(caster, FourCC('A0OT'))
			ef = AddSpecialEffectTarget("Effects\\Nebula.mdx", target, "origin")
			SaveEffectHandle(udg_hash, GetHandleId(target), $89, ef)
			ef = nil
			SetUnitLifeAndManaRegeneration(target, "life", hpregen)
			SetArmorAbilityLevel(target, armor)
			SaveInteger(udg_hash, GetHandleId(target), $8D, hpregen)
			SaveInteger(udg_hash, GetHandleId(target), $8E, armor)
		end
		SaveUnitHandle(udg_hash, h, 1, caster)
		SaveUnitHandle(udg_hash, h, 2, target)
		SaveLightningHandle(udg_hash, h, 3, l)
		SaveReal(udg_hash, h, 4, time)
		SaveInteger(udg_hash, h, 5, damage)
		TimerStart(t, .04, true, Trig_Ancient_Communication_Ligtning_Move_Actions)
		l = nil
	end
	caster = nil
	target = nil
	dammi = nil
	RemoveLocation(locc)
	locc = nil
	RemoveLocation(loct)
	loct = nil
	p = nil
	t = nil
	g = nil
end

---@return boolean
function Trig_Ancient_Communication_Conditions()
	return GetSpellAbilityId() == FourCC('A0OM')
end

function InitTrig_Ancient_Communication()
	local index = 0 ---@type number integer
	gg_trg_Ancient_Communication = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ancient_Communication, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ancient_Communication, Condition(Trig_Ancient_Communication_Conditions))
	TriggerAddAction(gg_trg_Ancient_Communication, Trig_Ancient_Communication_Actions)
end

function Trig_Learn_Power_of_Ancestors_Actions()
	local u = GetLearningUnit() ---@type unit
	local lvl = GetUnitAbilityLevel(u, FourCC('A0OP')) ---@type number integer
	if lvl == 1 then
		UnitAddAbility(u, FourCC('A0OS'))
		UnitAddAbility(u, FourCC('A0OR'))
		UnitMakeAbilityPermanent(u, true, FourCC('A0OS'))
		UnitMakeAbilityPermanent(u, true, FourCC('A0OR'))
	else
		SetUnitAbilityLevel(u, FourCC('A0OS'), lvl)
		SetUnitAbilityLevel(u, FourCC('A0OR'), lvl)
		SetUnitAbilityLevel(u, FourCC('A0OT'), lvl)
		SetUnitAbilityLevel(u, FourCC('A0OO'), lvl)
	end
	u = nil
end

---@return boolean
function Trig_Learn_Power_of_Ancestors_Conditions()
	return GetLearnedSkill() == FourCC('A0OP') and GetUnitTypeId(GetLearningUnit()) ~= FourCC('h00U')
end

function InitTrig_Learn_Power_of_Ancestors()
	local index = 0 ---@type number integer
	gg_trg_Learn_Power_of_Ancestors = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Power_of_Ancestors, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Power_of_Ancestors, Condition(Trig_Learn_Power_of_Ancestors_Conditions))
	TriggerAddAction(gg_trg_Learn_Power_of_Ancestors, Trig_Learn_Power_of_Ancestors_Actions)
end

function Trig_Switch_Power_of_Ancestors_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local nodestroy = LoadBoolean(udg_hash, h, 2) ---@type boolean
	local mana = GetUnitState(caster, UNIT_STATE_MANA) ---@type number real
	local g ---@type group
	local g2 ---@type group
	local Picked ---@type unit
	local lvl ---@type number integer
	local h2 ---@type number integer
	local mana2 ---@type number integer
	local ef ---@type effect
	if mana > 5. and GetUnitState(caster, UNIT_STATE_LIFE) > .0 and nodestroy then
	else
		if nodestroy then
			h2 = GetHandleId(caster)
			mana2 = LoadInteger(udg_hash, h2, $8A)
			g = LoadGroupHandle(udg_hash, h2, $88)
			g2 = CreateGroup()
			GroupAddUnit(g2, caster)
			GroupAddGroup(g, g2)
			while(true) do
				Picked = FirstOfGroup(g2)
				if (Picked == nil) then break end
				ef = LoadEffectHandle(udg_hash, GetHandleId(Picked), $89)
				DestroyEffect(ef)
				ef = nil
				SaveEffectHandle(udg_hash, GetHandleId(Picked), $89, nil)
				if GetUnitAbilityLevel(caster, FourCC('A0OO')) > 0 then
					SetAttackSpeedAbilityLevel(Picked, -LoadInteger(udg_hash, GetHandleId(Picked), $8C))
				end
				if GetUnitAbilityLevel(caster, FourCC('A0OT')) > 0 then
					SetUnitLifeAndManaRegeneration(Picked, "life", -LoadInteger(udg_hash, GetHandleId(Picked), $8D))
					SetArmorAbilityLevel(Picked, -LoadInteger(udg_hash, GetHandleId(Picked), $8E))
				end
				GroupRemoveUnit(g2, Picked)
			end
			if GetUnitAbilityLevel(caster, FourCC('A0OO')) > 0 then
				lvl = GetUnitAbilityLevel(caster, FourCC('A0OO'))
				SetUnitLifeAndManaRegeneration(caster, "mana", mana2)
				UnitRemoveAbility(caster, FourCC('A0OO'))
				UnitAddAbility(caster, FourCC('A0OS'))
				SetUnitAbilityLevel(caster, FourCC('A0OS'), lvl)
				UnitMakeAbilityPermanent(caster, true, FourCC('A0OS'))
			end
			if GetUnitAbilityLevel(caster, FourCC('A0OT')) > 0 then
				lvl = GetUnitAbilityLevel(caster, FourCC('A0OT'))
				SetUnitLifeAndManaRegeneration(caster, "mana", mana2)
				UnitRemoveAbility(caster, FourCC('A0OT'))
				UnitAddAbility(caster, FourCC('A0OR'))
				SetUnitAbilityLevel(caster, FourCC('A0OR'), lvl)
				UnitMakeAbilityPermanent(caster, true, FourCC('A0OR'))
			end
			DestroyGroup(g2)
			g2 = nil
			g = nil
		end
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
end

function Trig_Switch_Power_of_Ancestors_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local id = GetSpellAbilityId() ---@type number integer
	local lvl = GetUnitAbilityLevel(caster, id) ---@type number integer
	local ef ---@type effect
	local h = GetHandleId(caster) ---@type number integer
	local g = LoadGroupHandle(udg_hash, h, $88) ---@type group
	local g2 = CreateGroup() ---@type group
	local Picked ---@type unit
	local mana = LoadInteger(udg_hash, h, $8A) ---@type number integer
	local nowmana = 3 + lvl * 2 ---@type number integer
	local t ---@type timer
	local attackspeed = $A + $A * lvl ---@type number integer
	local hpregen = 5 + $A * lvl ---@type number integer
	local armor = 3 + 3 * lvl ---@type number integer
	local switch = false ---@type boolean
	local switch2 = false ---@type boolean
	GroupAddUnit(g2, caster)
	GroupAddGroup(g, g2)
	if id == FourCC('A0OS') then
		UnitRemoveAbility(caster, FourCC('A0OS'))
		UnitAddAbility(caster, FourCC('A0OO'))
		SetUnitAbilityLevel(caster, FourCC('A0OO'), lvl)
		UnitMakeAbilityPermanent(caster, true, FourCC('A0OO'))
		if GetUnitAbilityLevel(caster, FourCC('A0OT')) > 0 then
			switch2 = true
			SetUnitLifeAndManaRegeneration(caster, "mana", mana)
			UnitRemoveAbility(caster, FourCC('A0OT'))
			UnitAddAbility(caster, FourCC('A0OR'))
			SetUnitAbilityLevel(caster, FourCC('A0OR'), lvl)
			UnitMakeAbilityPermanent(caster, true, FourCC('A0OR'))
		end
		SetUnitLifeAndManaRegeneration(caster, "mana", -nowmana)
		SaveInteger(udg_hash, h, $8A, nowmana)
		t = CreateTimer()
		SaveUnitHandle(udg_hash, GetHandleId(t), 1, caster)
		SaveBoolean(udg_hash, GetHandleId(t), 2, true)
		TimerStart(t, .04, true, Trig_Switch_Power_of_Ancestors_Move_Actions)
		if LoadTimerHandle(udg_hash, h, $8B) ~= nil then
			FlushChildHashtable(udg_hash, GetHandleId(LoadTimerHandle(udg_hash, h, $8B)))
			DestroyTimer(LoadTimerHandle(udg_hash, h, $8B))
		end
		SaveTimerHandle(udg_hash, h, $8B, t)
		t = nil
		while(true) do
			Picked = FirstOfGroup(g2)
			if (Picked == nil) then break end
			ef = LoadEffectHandle(udg_hash, GetHandleId(Picked), $89)
			DestroyEffect(ef)
			ef = nil
			ef = AddSpecialEffectTarget("Effects\\PyroMissle.mdx", Picked, "chest")
			SaveEffectHandle(udg_hash, GetHandleId(Picked), $89, ef)
			ef = nil
			if switch2 then
				SetUnitLifeAndManaRegeneration(Picked, "life", -LoadInteger(udg_hash, GetHandleId(Picked), $8D))
				SetArmorAbilityLevel(Picked, -LoadInteger(udg_hash, GetHandleId(Picked), $8E))
			end
			SetAttackSpeedAbilityLevel(Picked, attackspeed)
			SaveInteger(udg_hash, GetHandleId(Picked), $8C, attackspeed)
			GroupRemoveUnit(g2, Picked)
		end
	end
	if id == FourCC('A0OO') then
		UnitRemoveAbility(caster, FourCC('A0OO'))
		UnitAddAbility(caster, FourCC('A0OS'))
		SetUnitAbilityLevel(caster, FourCC('A0OS'), lvl)
		UnitMakeAbilityPermanent(caster, true, FourCC('A0OS'))
		SetUnitLifeAndManaRegeneration(caster, "mana", mana)
		while(true) do
			Picked = FirstOfGroup(g2)
			if (Picked == nil) then break end
			ef = LoadEffectHandle(udg_hash, GetHandleId(Picked), $89)
			DestroyEffect(ef)
			ef = nil
			SaveEffectHandle(udg_hash, GetHandleId(Picked), $89, nil)
			SetAttackSpeedAbilityLevel(Picked, -LoadInteger(udg_hash, GetHandleId(Picked), $8C))
			GroupRemoveUnit(g2, Picked)
		end
	end
	if id == FourCC('A0OR') then
		UnitRemoveAbility(caster, FourCC('A0OR'))
		UnitAddAbility(caster, FourCC('A0OT'))
		SetUnitAbilityLevel(caster, FourCC('A0OT'), lvl)
		UnitMakeAbilityPermanent(caster, true, FourCC('A0OT'))
		SetUnitLifeAndManaRegeneration(caster, "mana", -nowmana)
		SaveInteger(udg_hash, h, $8A, nowmana)
		if GetUnitAbilityLevel(caster, FourCC('A0OO')) > 0 then
			switch = true
			SetUnitLifeAndManaRegeneration(caster, "mana", mana)
			UnitRemoveAbility(caster, FourCC('A0OO'))
			UnitAddAbility(caster, FourCC('A0OS'))
			SetUnitAbilityLevel(caster, FourCC('A0OS'), lvl)
			UnitMakeAbilityPermanent(caster, true, FourCC('A0OS'))
		end
		t = CreateTimer()
		SaveUnitHandle(udg_hash, GetHandleId(t), 1, caster)
		SaveBoolean(udg_hash, GetHandleId(t), 2, true)
		TimerStart(t, .04, true, Trig_Switch_Power_of_Ancestors_Move_Actions)
		if LoadTimerHandle(udg_hash, h, $8B) ~= nil then
			FlushChildHashtable(udg_hash, GetHandleId(LoadTimerHandle(udg_hash, h, $8B)))
			DestroyTimer(LoadTimerHandle(udg_hash, h, $8B))
		end
		SaveTimerHandle(udg_hash, h, $8B, t)
		t = nil
		while(true) do
			Picked = FirstOfGroup(g2)
			if (Picked == nil) then break end
			ef = LoadEffectHandle(udg_hash, GetHandleId(Picked), $89)
			DestroyEffect(ef)
			ef = nil
			if switch then
				SetAttackSpeedAbilityLevel(Picked, -LoadInteger(udg_hash, GetHandleId(Picked), $8C))
			end
			SetUnitLifeAndManaRegeneration(Picked, "life", hpregen)
			SetArmorAbilityLevel(Picked, armor)
			SaveInteger(udg_hash, GetHandleId(Picked), $8D, hpregen)
			SaveInteger(udg_hash, GetHandleId(Picked), $8E, armor)
			ef = AddSpecialEffectTarget("Effects\\Nebula.mdx", Picked, "origin")
			SaveEffectHandle(udg_hash, GetHandleId(Picked), $89, ef)
			ef = nil
			GroupRemoveUnit(g2, Picked)
		end
	end
	if id == FourCC('A0OT') then
		UnitRemoveAbility(caster, FourCC('A0OT'))
		UnitAddAbility(caster, FourCC('A0OR'))
		SetUnitAbilityLevel(caster, FourCC('A0OR'), lvl)
		UnitMakeAbilityPermanent(caster, true, FourCC('A0OR'))
		SetUnitLifeAndManaRegeneration(caster, "mana", mana)
		while(true) do
			Picked = FirstOfGroup(g2)
			if (Picked == nil) then break end
			ef = LoadEffectHandle(udg_hash, GetHandleId(Picked), $89)
			DestroyEffect(ef)
			ef = nil
			SaveEffectHandle(udg_hash, GetHandleId(Picked), $89, nil)
			SetUnitLifeAndManaRegeneration(Picked, "life", -LoadInteger(udg_hash, GetHandleId(Picked), $8D))
			SetArmorAbilityLevel(Picked, -LoadInteger(udg_hash, GetHandleId(Picked), $8E))
			GroupRemoveUnit(g2, Picked)
		end
	end
	g = nil
	DestroyGroup(g2)
	g2 = nil
	caster = nil
end

---@return boolean
function Trig_Switch_Power_of_Ancestors_Conditions()
	return GetSpellAbilityId() == FourCC('A0OR') or GetSpellAbilityId() == FourCC('A0OS') or GetSpellAbilityId() == FourCC('A0OO') or GetSpellAbilityId() == FourCC('A0OT')
end

function InitTrig_Switch_Power_of_Ancestors()
	local index = 0 ---@type number integer
	gg_trg_Switch_Power_of_Ancestors = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Switch_Power_of_Ancestors, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Switch_Power_of_Ancestors, Condition(Trig_Switch_Power_of_Ancestors_Conditions))
	TriggerAddAction(gg_trg_Switch_Power_of_Ancestors, Trig_Switch_Power_of_Ancestors_Actions)
end

function Trig_Earth_Split_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local dammi ---@type unit
	local xc = GetUnitX(caster) ---@type number real
	local yc = GetUnitY(caster) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0OQ')) ---@type number integer
	local damage = $A + (35 * lvl) ---@type number integer
	local g = LoadGroupHandle(udg_hash, GetHandleId(caster), $88) ---@type group
	local g2 = CreateGroup() ---@type group
	local g3 = CreateGroup() ---@type group
	local g4 = CreateGroup() ---@type group
	local Picked ---@type unit
	local Picked2 ---@type unit
	GroupAddUnit(g2, caster)
	GroupAddGroup(g, g2)
	while(true) do
		Picked2 = FirstOfGroup(g2)
		if (Picked2 == nil) then break end
		GroupEnumUnitsInRange(g3, GetUnitX(Picked2), GetUnitY(Picked2), 225., nil)
		while(true) do
			Picked = FirstOfGroup(g3)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				dammi = CreateUnit(p, FourCC('h00U'), GetUnitX(Picked), GetUnitY(Picked), .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0OU'))
				IssueTargetOrderById(dammi, $D006B, Picked)
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				dammi = nil
			end
			GroupRemoveUnit(g3, Picked)
		end
		DestroyEffect(AddSpecialEffect("Effects\\RedAftershock.mdl", GetUnitX(Picked2), GetUnitY(Picked2)))
		DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", GetUnitX(Picked2), GetUnitY(Picked2)))
		GroupRemoveUnit(g2, Picked2)
	end
	caster = nil
	target = nil
	dammi = nil
	p = nil
	g = nil
	DestroyGroup(g2)
	g2 = nil
	DestroyGroup(g3)
	g3 = nil
	DestroyGroup(g4)
	g4 = nil
end

---@return boolean
function Trig_Earth_Split_Conditions()
	return GetSpellAbilityId() == FourCC('A0OQ')
end

function InitTrig_Earth_Split()
	local index = 0 ---@type number integer
	gg_trg_Earth_Split = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Earth_Split, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Earth_Split, Condition(Trig_Earth_Split_Conditions))
	TriggerAddAction(gg_trg_Earth_Split, Trig_Earth_Split_Actions)
end

function Trig_Ancient_Help_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gdamage ---@type group
	local damage ---@type number real
	local heal ---@type number real
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local waitgo = LoadInteger(udg_hash, h, $D) ---@type number integer
	local face ---@type number real
	local dammi ---@type unit
	local wave ---@type unit
	local x ---@type number real
	local y ---@type number real
	local p ---@type player
	local g ---@type group
	local Picked ---@type unit
	local ef ---@type effect
	local alife = true ---@type boolean
	local scale ---@type number real
	local aoe ---@type number real
	wait = wait - 1
	SaveInteger(udg_hash, h, 5, wait)
	if wait == waitgo then
		SaveBoolean(udg_hash, h, $A, false)
		dammi = LoadUnitHandle(udg_hash, h, 7)
		face = LoadReal(udg_hash, h, 6)
		wave = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), GetUnitX(dammi), GetUnitY(dammi), GetUnitFacing(dammi))
		ef = AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Shockwave\\ShockwaveMissile.mdl", wave, "origin")
		SaveUnitHandle(udg_hash, h, 8, wave)
		scale = LoadReal(udg_hash, h, $B)
		SetUnitScale(wave, scale, scale, scale)
		SaveEffectHandle(udg_hash, h, 9, ef)
		ef = nil
		wave = nil
		RemoveUnit(dammi)
		dammi = nil
	end
	if (wait > 0) and (wait < waitgo) then
		wave = LoadUnitHandle(udg_hash, h, 8)
		face = LoadReal(udg_hash, h, 6)
		x = GetUnitX(wave) + 30. * Cos(face * bj_DEGTORAD)
		y = GetUnitY(wave) + 30. * Sin(face * bj_DEGTORAD)
		SetUnitPosition(wave, x, y)
		g = CreateGroup()
		p = GetOwningPlayer(caster)
		damage = LoadReal(udg_hash, h, 3)
		heal = LoadReal(udg_hash, h, 4)
		gdamage = LoadGroupHandle(udg_hash, h, 2)
		aoe = LoadReal(udg_hash, h, $C)
		GroupEnumUnitsInRange(g, x, y, aoe, nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(gdamage, Picked)
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Effects\\Burning Core.mdx", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Effects\\Burning Core.mdx", Picked, "origin"))
				StunUnitTimed(Picked, 2.5)
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			end
			if IsUnitAlly(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(gdamage, Picked)
				SetUnitState(Picked, UNIT_STATE_LIFE, GetUnitState(Picked, UNIT_STATE_LIFE) + heal)
				DestroyEffectWithWait(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Heal\\HealTarget.mdl", Picked, "origin"), 1.85)
			end
			GroupRemoveUnit(g, Picked)
		end
		SaveGroupHandle(udg_hash, h, 2, gdamage)
		wave = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		p = nil
		gdamage = nil
	end
	if wait <= 0 then
		wave = LoadUnitHandle(udg_hash, h, 8)
		ef = LoadEffectHandle(udg_hash, h, 9)
		KillUnit(wave)
		DestroyEffect(ef)
		gdamage = LoadGroupHandle(udg_hash, h, 2)
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	p = nil
	Picked = nil
	dammi = nil
end

function Trig_Ancient_Help_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local gdamage = CreateGroup() ---@type group
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0OV')) ---@type number integer
	local lvlup = GetUnitAbilityLevel(caster, FourCC('A0PX')) ---@type number integer
	local damage ---@type number real
	local heal ---@type number real
	local loc ---@type location
	local tx ---@type number real
	local ty ---@type number real
	local wait = 40 + 20 ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local dammi ---@type unit
	local scale ---@type number real
	local aoe ---@type number real
	local waitgo ---@type number integer
	if lvl > 0 then
		damage = (-25. + 175. * lvl) + (GetHeroInt(caster, true) * ((lvl * .75) + .25))
		heal = (200. * lvl) + (GetHeroInt(caster, true) * 1.25 * lvl)
		scale = 1.2
		aoe = 125.
		waitgo = 40
	end
	if lvlup > 0 then
		damage = (-25. + 175. * lvlup) + (GetHeroInt(caster, true) * ((lvlup * .75) + .25))
		heal = (200. * lvlup) + (GetHeroInt(caster, true) * 1.25 * lvlup)
		scale = 1.6
		wait = 80 + 20
		aoe = 200.
		waitgo = 80
	end
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	dammi = CreateUnit(Player(5), FourCC('h00L'), x - 200. * Cos(angle * bj_DEGTORAD), y - 200. * Sin(angle * bj_DEGTORAD), angle)
	SetUnitVertexColor(dammi, $F8, $9A, 0, FourCC('d'))
	SetUnitScale(dammi, 1.5, 1.5, 1.5)
	SetUnitAnimation(dammi, "Attack Slam")
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	SaveReal(udg_hash, h, 3, damage)
	SaveReal(udg_hash, h, 4, heal)
	SaveInteger(udg_hash, h, 5, wait)
	SaveReal(udg_hash, h, 6, angle)
	SaveUnitHandle(udg_hash, h, 7, dammi)
	SaveBoolean(udg_hash, h, $A, true)
	SaveReal(udg_hash, h, $B, scale)
	SaveReal(udg_hash, h, $C, aoe)
	SaveInteger(udg_hash, h, $D, waitgo)
	TimerStart(t, .03, true, Trig_Ancient_Help_Move_Actions)
	caster = nil
	target = nil
	gdamage = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	dammi = nil
end

---@return boolean
function Trig_Ancient_Help_Conditions()
	return (GetSpellAbilityId() == FourCC('A0OV') or GetSpellAbilityId() == FourCC('A0PX'))
end

function InitTrig_Ancient_Help()
	local index = 0 ---@type number integer
	gg_trg_Ancient_Help = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ancient_Help, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ancient_Help, Condition(Trig_Ancient_Help_Conditions))
	TriggerAddAction(gg_trg_Ancient_Help, Trig_Ancient_Help_Actions)
end

function Trig_SpiritBreaker_Load_Actions()
	AbilityPreload(FourCC('A0OM'), 6)
	AbilityPreload(FourCC('A0OQ'), 6)
	AbilityPreload(FourCC('A0OP'), 6)
	AbilityPreload(FourCC('A0OV'), 3)
	AbilityPreload(FourCC('A0OU'), 1)
	AbilityPreload(FourCC('B04Z'), 1)
	AbilityPreload(FourCC('B050'), 1)
	UnitPreload(FourCC('h00L'))
	EffectPreload("Abilities\\Spells\\Orc\\StasisTrap\\StasisTotemTarget.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPriest.mdl")
	EffectPreload("Effects\\Nebula.mdx")
	EffectPreload("Effects\\PyroMissle.mdx")
	EffectPreload("Effects\\RedAftershock.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
	EffectPreload("Abilities\\Spells\\Orc\\Shockwave\\ShockwaveMissile.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl")
	EffectPreload("Effects\\Burning Core.mdx")
	EnableTrigger(gg_trg_Ancient_Communication)
	EnableTrigger(gg_trg_Learn_Power_of_Ancestors)
	EnableTrigger(gg_trg_Switch_Power_of_Ancestors)
	EnableTrigger(gg_trg_Earth_Split)
	EnableTrigger(gg_trg_Ancient_Help)
end

function InitTrig_SpiritBreaker_Load()
	gg_trg_SpiritBreaker_Load = CreateTrigger()
	TriggerAddAction(gg_trg_SpiritBreaker_Load, Trig_SpiritBreaker_Load_Actions)
end

function Trig_Dash_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_Dash_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gdamage = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local lvl = LoadInteger(udg_hash, h, 4) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local face = LoadReal(udg_hash, h, 6) ---@type number real
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local angle ---@type number real
	local angle2 ---@type number real
	local dammi ---@type unit
	local alife = true ---@type boolean
	local r = Rect(x - 100., y - 100., x + 100., y + 100.) ---@type rect
	EnumDestructablesInRect(r, nil, Trig_Dash_Dest_Actions)
	if GetUnitState(caster, UNIT_STATE_LIFE) < .405 then
		alife = false
	end
	if wait > 0 and alife then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		SetUnitFacing(caster, face)
		if wait - (wait / 5) * 5 == 0 then
			SetUnitAnimationByIndex(caster, 6)
		end
		GroupEnumUnitsInRange(g, x, y, 125., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(gdamage, Picked)
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPeasant.mdl", Picked, "origin"))
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Critters\\Albatross\\CritterBloodAlbatross.mdl", Picked, "origin"))
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), .5)
				UnitAddAbility(dammi, FourCC('A0P1'))
				SetUnitAbilityLevel(dammi, FourCC('A0P1'), lvl)
				IssueTargetOrderById(dammi, $D006B, Picked)
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				dammi = nil
			end
			GroupRemoveUnit(g, Picked)
		end
		SaveGroupHandle(udg_hash, h, 2, gdamage)
	else
		SetUnitPathing(caster, true)
		SetUnitTimeScale(caster, 1.)
		SetUnitAnimation(caster, "stand")
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	gdamage = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	p = nil
	Picked = nil
	dammi = nil
	RemoveRect(r)
	r = nil
end

function Trig_Dash_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local gdamage = CreateGroup() ---@type group
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0P0')) ---@type number integer
	local damage = (10. + (30. * lvl)) + (GetHeroAgi(caster, true) * (.3 + .5 * lvl)) ---@type number real
	local loc ---@type location
	local tx ---@type number real
	local ty ---@type number real
	local dist ---@type number real
	local time ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetUnitAnimation(caster, "stand")
	SetUnitPathing(caster, false)
	SetUnitAnimationByIndex(caster, 6)
	SetUnitTimeScale(caster, 2.)
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	dist = SquareRoot((tx - x) * (tx - x) + (ty - y) * (ty - y))
	if target == caster then
		angle = GetUnitFacing(caster)
		dist = 900.
	end
	time = dist / 900.
	MoveUnit(caster, time, 900., .0, angle, .0, true)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	SaveReal(udg_hash, h, 3, damage)
	SaveInteger(udg_hash, h, 4, lvl)
	SaveInteger(udg_hash, h, 5, R2I(dist / 27))
	SaveReal(udg_hash, h, 6, angle)
	TimerStart(t, .03, true, Trig_Dash_Move_Actions)
	caster = nil
	target = nil
	gdamage = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
end

---@return boolean
function Trig_Dash_Conditions()
	return GetSpellAbilityId() == FourCC('A0P0')
end

function InitTrig_Dash()
	local index = 0 ---@type number integer
	gg_trg_Dash = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Dash, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Dash, Condition(Trig_Dash_Conditions))
	TriggerAddAction(gg_trg_Dash, Trig_Dash_Actions)
end

function Trig_Dash_Remove_Damge_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local alldamage = LoadInteger(udg_hash, h, 2) ---@type number integer
	local ef = LoadEffectHandle(udg_hash, h, 3) ---@type effect
	SetAttackAbilityLevel(caster, -alldamage)
	DestroyEffect(ef)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	ef = nil
	t = nil
	caster = nil
end

function Trig_Dagger_Throw_Dest_Actions()
	KillDestructable(GetEnumDestructable())
end

function Trig_Dagger_Throw_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gdamage = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local adddamage = LoadInteger(udg_hash, h, 4) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local angle = LoadReal(udg_hash, h, 6) ---@type number real
	local dagger = LoadUnitHandle(udg_hash, h, 7) ---@type unit
	local tuda = LoadBoolean(udg_hash, h, 8) ---@type boolean
	local alldamage = LoadInteger(udg_hash, h, 9) ---@type number integer
	local x = GetUnitX(dagger) ---@type number real
	local y = GetUnitY(dagger) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local alife = true ---@type boolean
	local dist ---@type number real
	local dest = false ---@type boolean
	local r = Rect(x - 100., y - 100., x + 100., y + 100.) ---@type rect
	local t2 ---@type timer
	local h2 ---@type number integer
	EnumDestructablesInRect(r, nil, Trig_Dagger_Throw_Dest_Actions)
	if (wait > 0) and tuda then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		SetUnitPosition(dagger, x + 24. * Cos((angle) * bj_DEGTORAD), y + 24. * Sin((angle) * bj_DEGTORAD))
	end
	if wait == 0 then
		tuda = false
		SaveBoolean(udg_hash, h, 8, tuda)
	end
	if tuda == false then
		angle = bj_RADTODEG * Atan2((GetUnitY(caster) - y), (GetUnitX(caster) - x))
		dist = SquareRoot((GetUnitX(caster) - x) * (GetUnitX(caster) - x) + (GetUnitY(caster) - y) * (GetUnitY(caster) - y))
		SetUnitPosition(dagger, x + 24. * Cos((angle) * bj_DEGTORAD), y + 24. * Sin((angle) * bj_DEGTORAD))
		if dist < 50. then
			dest = true
		end
	end
	GroupEnumUnitsInRange(g, x, y, 125., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			GroupAddUnit(gdamage, Picked)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl", Picked, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl", Picked, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl", Picked, "head"))
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPeasant.mdl", Picked, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Critters\\Albatross\\CritterBloodAlbatross.mdl", Picked, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl", Picked, "chest"))
			alldamage = alldamage + adddamage
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
		end
		GroupRemoveUnit(g, Picked)
	end
	SaveInteger(udg_hash, h, 9, alldamage)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	if dest then
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		RemoveUnit(dagger)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		if alldamage > 0 then
			SetAttackAbilityLevel(caster, alldamage)
			t2 = CreateTimer()
			h2 = GetHandleId(t2)
			SaveUnitHandle(udg_hash, h2, 1, caster)
			SaveInteger(udg_hash, h2, 2, alldamage)
			SaveEffectHandle(udg_hash, h2, 3, AddSpecialEffectTarget("Effects\\Prismatic Missile Fixed.mdx", caster, "weapon"))
			TimerStart(t2, 6., false, Trig_Dash_Remove_Damge_Actions)
			t2 = nil
		end
	end
	t = nil
	caster = nil
	gdamage = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	p = nil
	Picked = nil
	RemoveRect(r)
	r = nil
	dagger = nil
end

function Trig_Dagger_Throw_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local gdamage = CreateGroup() ---@type group
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0P2')) ---@type number integer
	local damage = (40. * lvl) ---@type number real
	local adddamage = 2 + lvl ---@type number integer
	local alldamage = 0 ---@type number integer
	local loc ---@type location
	local tx ---@type number real
	local ty ---@type number real
	local dist ---@type number real
	local dagger ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	dist = SquareRoot((tx - x) * (tx - x) + (ty - y) * (ty - y))
	if target == caster then
		angle = GetUnitFacing(caster)
		dist = 900.
	end
	dagger = CreateUnit(GetOwningPlayer(caster), FourCC('h00N'), x, y, angle)
	SetUnitX(dagger, x + 20. * Cos((angle) * bj_DEGTORAD))
	SetUnitY(dagger, y + 20. * Sin((angle) * bj_DEGTORAD))
	SetUnitTimeScale(dagger, 4.)
	SetUnitScale(dagger, 1.5, 1.5, 1.5)
	SetUnitPathing(dagger, false)
	SetUnitFlyHeight(dagger, 50., .0)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	SaveReal(udg_hash, h, 3, damage)
	SaveInteger(udg_hash, h, 4, adddamage)
	SaveInteger(udg_hash, h, 5, R2I(dist / 24))
	SaveReal(udg_hash, h, 6, angle)
	SaveUnitHandle(udg_hash, h, 7, dagger)
	SaveBoolean(udg_hash, h, 8, true)
	SaveInteger(udg_hash, h, 9, alldamage)
	TimerStart(t, .03, true, Trig_Dagger_Throw_Move_Actions)
	caster = nil
	target = nil
	gdamage = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
end

---@return boolean
function Trig_Dagger_Throw_Conditions()
	return GetSpellAbilityId() == FourCC('A0P2')
end

function InitTrig_Dagger_Throw()
	local index = 0 ---@type number integer
	gg_trg_Dagger_Throw = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Dagger_Throw, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Dagger_Throw, Condition(Trig_Dagger_Throw_Conditions))
	TriggerAddAction(gg_trg_Dagger_Throw, Trig_Dagger_Throw_Actions)
end

function Trig_Kara_Justice_perodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gdamage = LoadGroupHandle(udg_hash, h, 2) ---@type group
	local gdamage2 = LoadGroupHandle(udg_hash, h, 3) ---@type group
	local damage = LoadReal(udg_hash, h, 4) ---@type number real
	local angle = LoadReal(udg_hash, h, 5) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local Picked ---@type unit
	local target ---@type unit
	RandomUnitFromGroup(1, gdamage)
	Picked = FirstOfGroup(udg_GroupRandomUnitFromGroup)
	if Picked ~= nil then
		GroupRemoveUnit(gdamage2, Picked)
	end
	gdamage = CreateGroup()
	GroupToGroup(gdamage2, gdamage)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	SaveGroupHandle(udg_hash, h, 3, gdamage2)
	if Picked ~= nil then
		PlaySoundBJ(gg_snd_WardenAttackEffort1)
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl", Picked, "chest"))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl", Picked, "origin"))
		DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl", Picked, "head"))
		DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Critters\\Albatross\\CritterBloodAlbatross.mdl", Picked, "origin"))
		DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl", Picked, "chest"))
		SetUnitPosition(caster, GetUnitX(Picked) - 50. * Cos(angle * bj_DEGTORAD), GetUnitY(Picked) - 50. * Sin(angle * bj_DEGTORAD))
		SetUnitAnimation(caster, "stop")
		SetUnitAnimation(caster, "attack")
		if GetRandomInt(1, FourCC('d')) <= ($A + 5 * GetUnitAbilityLevel(caster, FourCC('A0P3'))) and GetUnitAbilityLevel(caster, FourCC('A0P3')) > 0 then
			UnitDamageTarget(caster, Picked, 2 * damage, false, false, ATTACK_TYPE_MELEE, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
			CreateTexttag(udg_ColorString[1] .. I2S(R2I(2 * damage)) .. "!|r", .022, $FF, GetUnitX(Picked) - 18., GetUnitY(Picked) + 15., .0, .0, .035, 3.5)
		else
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_MELEE, DAMAGE_TYPE_NORMAL, WEAPON_TYPE_WHOKNOWS)
		end
	else
		SetUnitVertexColor(caster, $FF, $FF, $FF, $FF)
		SetUnitTimeScale(caster, 1.)
		SetUnitInvulnerable(caster, false)
		SetUnitPosition(caster, LoadReal(udg_hash, h, 6), LoadReal(udg_hash, h, 7))
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		gdamage = nil
		GroupClear(gdamage2)
		DestroyGroup(gdamage2)
		gdamage2 = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	p = nil
	gdamage = nil
	gdamage2 = nil
	Picked = nil
	target = nil
end

function Trig_Kara_Justice_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0P5')) ---@type number integer
	local loc = GetSpellTargetLoc() ---@type location
	local x = GetLocationX(loc) ---@type number real
	local y = GetLocationY(loc) ---@type number real
	local damage = 75 * lvl + (.25 + (.75 * lvl)) * GetHeroAgi(caster, true) ---@type number real
	local g = CreateGroup() ---@type group
	local gdamage = CreateGroup() ---@type group
	local gdamage2 = CreateGroup() ---@type group
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local Picked ---@type unit
	local angle = bj_RADTODEG * Atan2(y - GetUnitY(caster), x - GetUnitX(caster)) ---@type number real
	GroupEnumUnitsInRange(g, x, y, 500., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			GroupAddUnit(gdamage, Picked)
			GroupAddUnit(gdamage2, Picked)
		end
		GroupRemoveUnit(g, Picked)
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	SaveGroupHandle(udg_hash, h, 3, gdamage2)
	SaveReal(udg_hash, h, 4, damage)
	SaveReal(udg_hash, h, 5, angle)
	SaveReal(udg_hash, h, 6, GetUnitX(caster))
	SaveReal(udg_hash, h, 7, GetUnitY(caster))
	SetUnitVertexColor(caster, $FF, $FF, $FF, FourCC('d'))
	SetUnitTimeScale(caster, 4.)
	SetUnitInvulnerable(caster, true)
	UnitPeriodicPostionMove(caster, .03, .2 * CountUnitsInGroup(gdamage))
	TimerStart(t, .2, true, Trig_Kara_Justice_perodic_Actions)
	caster = nil
	p = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	g = nil
	gdamage = nil
	gdamage2 = nil
end

---@return boolean
function Trig_Kara_Justice_Conditions()
	return GetSpellAbilityId() == FourCC('A0P5')
end

function InitTrig_Kara_Justice()
	local index = 0 ---@type number integer
	gg_trg_Kara_Justice = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Kara_Justice, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Kara_Justice, Condition(Trig_Kara_Justice_Conditions))
	TriggerAddAction(gg_trg_Kara_Justice, Trig_Kara_Justice_Actions)
end

function Trig_Warden_Load_Actions()
	AbilityPreload(FourCC('A0P0'), 6)
	AbilityPreload(FourCC('A0P2'), 6)
	AbilityPreload(FourCC('A0P3'), 6)
	AbilityPreload(FourCC('A0P5'), 3)
	AbilityPreload(FourCC('A0P1'), 6)
	AbilityPreload(FourCC('B051'), 1)
	EffectPreload("Effects\\CosmicTouch.MDX")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPeasant.mdl")
	EffectPreload("Effects\\Prismatic Missile Fixed.mdx")
	EffectPreload("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl")
	EffectPreload("Objects\\Spawnmodels\\Critters\\Albatross\\CritterBloodAlbatross.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\BloodElfSpellThiefBlood.mdl")
	EnableTrigger(gg_trg_Dash)
	EnableTrigger(gg_trg_Dagger_Throw)
	EnableTrigger(gg_trg_Kara_Justice)
end

function InitTrig_Warden_Load()
	gg_trg_Warden_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Warden_Load, Trig_SpiritBreaker_Load_Actions)
end

function Trig_Strength_Fist_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 7) ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local damage = LoadReal(udg_hash, h, 1) ---@type number real
	local lvl = LoadInteger(udg_hash, h, 2) ---@type number integer
	local orb = LoadUnitHandle(udg_hash, h, 3) ---@type unit
	local xt = LoadReal(udg_hash, h, 4) ---@type number real
	local yt = LoadReal(udg_hash, h, 5) ---@type number real
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	GroupEnumUnitsInRange(g, xt, yt, 250., nil)
	DestroyEffect(AddSpecialEffect("Effects\\RedAftershock.mdx", xt, yt))
	DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl", xt, yt))
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			dammi = CreateUnit(p, FourCC('h00U'), xt, yt, .0)
			UnitApplyTimedLife(dammi, FourCC('BTLF'), .5)
			UnitAddAbility(dammi, FourCC('A0P8'))
			SetUnitAbilityLevel(dammi, FourCC('A0P8'), lvl)
			IssueTargetOrderById(dammi, $D006B, Picked)
			dammi = nil
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	KillUnit(orb)
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	KillUnit(orb)
	p = nil
	DestroyTimer(t)
	caster = nil
	orb = nil
	FlushChildHashtable(udg_hash, h)
	t = nil
end

function Trig_Strength_Fist_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0P7')) ---@type number integer
	local damage = 5. + (35. * lvl) + (GetHeroStr(caster, true) * .5 * lvl) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local orb ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	orb = CreateUnit(p, FourCC('h00K'), xt, yt, 270.)
	UnitAddAbility(orb, FourCC('Amrf'))
	UnitRemoveAbility(orb, FourCC('Amrf'))
	SetUnitFlyHeight(orb, 800., .0)
	SetUnitFlyHeight(orb, 25., 1550.)
	SaveReal(udg_hash, h, 1, damage)
	SaveInteger(udg_hash, h, 2, lvl)
	SaveUnitHandle(udg_hash, h, 3, orb)
	SaveReal(udg_hash, h, 4, xt)
	SaveReal(udg_hash, h, 5, yt)
	SaveUnitHandle(udg_hash, h, 7, caster)
	TimerStart(t, .5, false, Trig_Strength_Fist_Move_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	p = nil
	orb = nil
end

---@return boolean
function Trig_Strength_Fist_Conditions()
	return GetSpellAbilityId() == FourCC('A0P7')
end

function InitTrig_Strength_Fist()
	local index = 0 ---@type number integer
	gg_trg_Strength_Fist = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Strength_Fist, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Strength_Fist, Condition(Trig_Strength_Fist_Conditions))
	TriggerAddAction(gg_trg_Strength_Fist, Trig_Strength_Fist_Actions)
end

function Trig_Fighting_Impact_14sec_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local target = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local as = LoadInteger(udg_hash, h, 2) ---@type number integer
	local addarmor = LoadInteger(udg_hash, h, 3) ---@type number integer
	local ef ---@type effect
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local p = GetOwningPlayer(target) ---@type player
	local damage = LoadReal(udg_hash, GetHandleId(target), $96) ---@type number real
	local caster = LoadUnitHandle(udg_hash, GetHandleId(target), $97) ---@type unit
	DestroyEffect(AddSpecialEffect("Effects\\LightNova.mdl", GetUnitX(target), GetUnitY(target)))
	DestroyEffect(AddSpecialEffectTarget("Effects\\DivineRage.mdx", target, "origin"))
	GroupEnumUnitsInRange(g, GetUnitX(target), GetUnitY(target), 500., nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			DestroyEffect(AddSpecialEffectTarget("Effects\\DivineRage.mdx", Picked, "origin"))
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
		end
		GroupRemoveUnit(g, Picked)
	end
	SetAttackSpeedAbilityLevel(target, -as)
	ef = LoadEffectHandle(udg_hash, h, 4)
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 5)
	DestroyEffect(ef)
	ef = nil
	ef = LoadEffectHandle(udg_hash, h, 6)
	DestroyEffect(ef)
	ef = nil
	SaveReal(udg_hash, GetHandleId(target), $93, .0)
	SaveInteger(udg_hash, GetHandleId(target), $94, 0)
	SaveTimerHandle(udg_hash, GetHandleId(target), $95, nil)
	FlushChildHashtable(udg_hash, h)
	DestroyTimer(t)
	t = nil
	ef = nil
	DestroyGroup(g)
	g = nil
	Picked = nil
	p = nil
	caster = nil
end

function Trig_Fighting_Impact_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0P6')) ---@type number integer
	local target = GetSpellTargetUnit() ---@type unit
	local as = 20 * lvl + $A ---@type number integer
	local shield = 75. * lvl ---@type number real
	local damage = 40 * lvl ---@type number real
	local ef ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local t2 ---@type timer
	local h2 ---@type number integer
	local smainstat = LoadStr(udg_hash, GetUnitTypeId(target), 70) ---@type string
	if LoadTimerHandle(udg_hash, GetHandleId(target), $95) ~= nil then
		t2 = LoadTimerHandle(udg_hash, GetHandleId(target), $95)
		h2 = GetHandleId(t2)
		ef = LoadEffectHandle(udg_hash, h2, 4)
		DestroyEffect(ef)
		ef = nil
		ef = LoadEffectHandle(udg_hash, h2, 5)
		DestroyEffect(ef)
		ef = nil
		ef = LoadEffectHandle(udg_hash, h2, 6)
		DestroyEffect(ef)
		ef = nil
		SetAttackSpeedAbilityLevel(target, -LoadInteger(udg_hash, GetHandleId(target), $94))
		FlushChildHashtable(udg_hash, h2)
		DestroyTimer(t2)
		t2 = nil
	end
	if smainstat == "str" then
		shield = shield + (.2 + .3 * lvl * GetHeroStr(target, true))
	end
	if smainstat == "agi" then
		shield = shield + (.2 + .3 * lvl * GetHeroAgi(target, true))
	end
	if smainstat == "int" then
		shield = shield + (.2 + .3 * lvl * GetHeroInt(target, true))
	end
	ef = AddSpecialEffectTarget("Effects\\LifeHigh.mdx", target, "weapon")
	SaveEffectHandle(udg_hash, h, 5, ef)
	ef = nil
	ef = AddSpecialEffectTarget("Abilities\\Spells\\Human\\DivineShield\\DivineShieldTarget.mdl", target, "origin")
	SaveEffectHandle(udg_hash, h, 6, ef)
	ef = nil
	SetAttackSpeedAbilityLevel(target, as)
	SaveReal(udg_hash, GetHandleId(target), $93, shield)
	SaveInteger(udg_hash, GetHandleId(target), $94, as)
	SaveTimerHandle(udg_hash, GetHandleId(target), $95, t)
	SaveReal(udg_hash, GetHandleId(target), $96, damage)
	SaveUnitHandle(udg_hash, GetHandleId(target), $97, caster)
	SaveUnitHandle(udg_hash, h, 1, target)
	SaveInteger(udg_hash, h, 2, as)
	TimerStart(t, 14., false, Trig_Fighting_Impact_14sec_Actions)
	caster = nil
	ef = nil
	t = nil
end

---@return boolean
function Trig_Fighting_Impact_Conditions()
	return GetSpellAbilityId() == FourCC('A0P6')
end

function InitTrig_Fighting_Impact()
	local index = 0 ---@type number integer
	gg_trg_Fighting_Impact = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fighting_Impact, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fighting_Impact, Condition(Trig_Fighting_Impact_Conditions))
	TriggerAddAction(gg_trg_Fighting_Impact, Trig_Fighting_Impact_Actions)
end

function Trig_Learn_Marshal_Armor_Actions_Timer()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local txt = LoadTextTagHandle(udg_hash, h, 2) ---@type texttag
	local x = GetUnitX(hero) ---@type number real
	local y = GetUnitY(hero) ---@type number real
	local alife = LoadBoolean(udg_hash, h, 3) ---@type boolean
	local stack ---@type number integer
	if (GetUnitState(hero, UNIT_STATE_LIFE) < .405 and alife) then
		alife = false
		SaveBoolean(udg_hash, h, 3, alife)
		SetTextTagVisibility(txt, false)
	end
	if (GetUnitState(hero, UNIT_STATE_LIFE) > .405 and alife == false) then
		alife = true
		SaveBoolean(udg_hash, h, 3, alife)
		SetTextTagVisibility(txt, true)
	end
	if (GetUnitState(hero, UNIT_STATE_LIFE) > .405 and alife) then
		stack = LoadInteger(udg_hash, GetHandleId(hero), $99)
		SetTextTagText(txt, "|cFFDCDC32" .. I2S(stack) .. "|r|cFF969696/|r|cFFDCDC32" .. I2S(5 * GetUnitAbilityLevel(hero, FourCC('A0P9'))) .. "|r", .027)
		SetTextTagPos(txt, GetUnitX(hero) - 40., GetUnitY(hero) + 50., .0)
	end
	t = nil
	hero = nil
	txt = nil
end

function Trig_Learn_Marshal_Armor_Actions()
	local lvl = GetUnitAbilityLevel(GetLearningUnit(), FourCC('A0P9')) ---@type number integer
	local t ---@type timer
	local h ---@type number integer
	local txt ---@type texttag
	local hero = GetLearningUnit() ---@type unit
	local stack = LoadInteger(udg_hash, GetHandleId(hero), $99) ---@type number integer
	if lvl == 1 then
		t = CreateTimer()
		h = GetHandleId(t)
		txt = CreateTextTag()
		SetTextTagText(txt, "|cFFDCDC32" .. I2S(stack) .. "|r|cFF969696/|r|cFFDCDC32" .. I2S(5 * GetUnitAbilityLevel(hero, FourCC('A0P9'))) .. "|r", .033)
		SetTextTagColor(txt, $FF, $FF, $FF, $FF)
		SetTextTagPos(txt, GetUnitX(hero) - 40., GetUnitY(hero) + 50., .0)
		SetTextTagPermanent(txt, true)
		SaveUnitHandle(udg_hash, h, 1, hero)
		SaveTextTagHandle(udg_hash, h, 2, txt)
		SaveBoolean(udg_hash, h, 3, true)
		TimerStart(t, .03, true, Trig_Learn_Marshal_Armor_Actions_Timer)
		t = nil
		hero = nil
		txt = nil
	end
	hero = nil
end

---@return boolean
function Trig_Learn_Marshal_Armor_Conditions()
	return GetUnitTypeId(GetLearningUnit()) ~= FourCC('h00U') and GetLearnedSkill() == FourCC('A0P9')
end

function InitTrig_Learn_Marshal_Armor()
	local index = 0 ---@type number integer
	gg_trg_Learn_Marshal_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Marshal_Armor, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Marshal_Armor, Condition(Trig_Learn_Marshal_Armor_Conditions))
	TriggerAddAction(gg_trg_Learn_Marshal_Armor, Trig_Learn_Marshal_Armor_Actions)
end

function Trig_Illusive_Army_Periodic_Damage_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local knight = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local wait = LoadReal(udg_hash, h, 2) ---@type number real
	local damage ---@type number real
	local stuntime ---@type number real
	local caster ---@type unit
	local gdamage ---@type group
	local p ---@type player
	local g ---@type group
	local Picked ---@type unit
	wait = wait - .04
	SaveReal(udg_hash, h, 2, wait)
	if wait > 0 then
		damage = LoadReal(udg_hash, h, 3)
		stuntime = LoadReal(udg_hash, h, 4)
		caster = LoadUnitHandle(udg_hash, h, 5)
		g = CreateGroup()
		p = GetOwningPlayer(caster)
		gdamage = LoadGroupHandle(udg_hash, h, 7)
		GroupEnumUnitsInRange(g, GetUnitX(knight), GetUnitY(knight), 115., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(gdamage, Picked)
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Effects\\DivineRage.mdx", Picked, "origin"))
				StunUnitTimed(Picked, stuntime)
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			end
			GroupRemoveUnit(g, Picked)
		end
		SaveGroupHandle(udg_hash, h, 7, gdamage)
		caster = nil
		DestroyGroup(g)
		g = nil
		p = nil
		gdamage = nil
		Picked = nil
	else
		DestroyEffect(AddSpecialEffect("Effects\\DivineRage.mdx", GetUnitX(knight), GetUnitY(knight)))
		RemoveUnit(knight)
		gdamage = LoadGroupHandle(udg_hash, h, 7)
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		gdamage = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	knight = nil
	t = nil
end

function Trig_Illusive_Army_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local wait = LoadInteger(udg_hash, h, 2) ---@type number integer
	local damage ---@type number real
	local x ---@type number real
	local y ---@type number real
	local angle ---@type number real
	local stuntime ---@type number real
	local p ---@type player
	local knight ---@type unit
	local xnew ---@type number real
	local ynew ---@type number real
	local dist ---@type number real
	local t2 ---@type timer
	local h2 ---@type number integer
	local perekluchatel ---@type number integer
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local orderId ---@type number integer
	orderId = $D0278
	if (orderId ~= 0) then
	else
		orderId = UnitId("channel")
		if (orderId ~= 0) then
		end
	end
	if wait > 0 and order == orderId then
		wait = wait - 1
		SaveInteger(udg_hash, h, 2, wait)
		damage = LoadReal(udg_hash, h, 3)
		x = LoadReal(udg_hash, h, 4)
		y = LoadReal(udg_hash, h, 5)
		angle = LoadReal(udg_hash, h, 8)
		stuntime = LoadReal(udg_hash, h, 9)
		p = GetOwningPlayer(caster)
		perekluchatel = LoadInteger(udg_hash, h, $A)
		if perekluchatel > 0 then
			perekluchatel = -1
			SaveInteger(udg_hash, h, $A, perekluchatel)
		else
			perekluchatel = 1
			SaveInteger(udg_hash, h, $A, perekluchatel)
		end
		dist = perekluchatel * 150. + GetRandomReal(-200., 200.)
		xnew = x - 200. * Cos(angle * bj_DEGTORAD)
		ynew = y - 200. * Sin(angle * bj_DEGTORAD)
		xnew = xnew + dist * Cos((angle + 90.) * bj_DEGTORAD)
		ynew = ynew + dist * Sin((angle + 90.) * bj_DEGTORAD)
		DestroyEffect(AddSpecialEffect("Effects\\DivineRage.mdx", xnew, ynew))
		knight = CreateUnit(p, FourCC('h00P'), xnew, ynew, angle)
		SetUnitVertexColor(knight, $FF, $FF, $E1, 75)
		SetUnitColor(knight, PLAYER_COLOR_YELLOW)
		SetUnitAnimationByIndex(knight, 0)
		MoveUnit(knight, 2., 450., .0, angle, .0, true)
		t2 = CreateTimer()
		h2 = GetHandleId(t2)
		SaveUnitHandle(udg_hash, h2, 1, knight)
		SaveReal(udg_hash, h2, 2, 2.01)
		SaveReal(udg_hash, h2, 3, damage)
		SaveReal(udg_hash, h2, 4, stuntime)
		SaveUnitHandle(udg_hash, h2, 5, caster)
		SaveGroupHandle(udg_hash, h2, 7, CreateGroup())
		TimerStart(t2, .04, true, Trig_Illusive_Army_Periodic_Damage_Actions)
	else
		RemoveUnit(LoadUnitHandle(udg_hash, GetHandleId(caster), FourCC('u')))
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
end

function Trig_Illusive_Army_Actions()
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0PA')) ---@type number integer
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local tx ---@type number real
	local ty ---@type number real
	local stuntime = 1. + .5 * lvl ---@type number real
	local damage = 75. * lvl ---@type number real
	local count = 5 + 5 * lvl ---@type number integer
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local loc ---@type location
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	AddProgressBar(caster, 195. + (20. * lvl), (1. + .15 * lvl), (count * .4), false, true, FourCC('u'), $FF, $E1, 80)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveInteger(udg_hash, h, 2, count)
	SaveReal(udg_hash, h, 3, damage)
	SaveReal(udg_hash, h, 4, x)
	SaveReal(udg_hash, h, 5, y)
	SaveReal(udg_hash, h, 8, angle)
	SaveReal(udg_hash, h, 9, stuntime)
	SaveInteger(udg_hash, h, $A, 1)
	TimerStart(t, .4, true, Trig_Illusive_Army_Periodic_Actions)
	caster = nil
	p = nil
	t = nil
end

---@return boolean
function Trig_Illusive_Army_Conditions()
	return GetSpellAbilityId() == FourCC('A0PA')
end

function InitTrig_Illusive_Army()
	local index = 0 ---@type number integer
	gg_trg_Illusive_Army = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Illusive_Army, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Illusive_Army, Condition(Trig_Illusive_Army_Conditions))
	TriggerAddAction(gg_trg_Illusive_Army, Trig_Illusive_Army_Actions)
end

function Trig_Marshal_Load_Actions()
	AbilityPreload(FourCC('A0P7'), 6)
	AbilityPreload(FourCC('A0P6'), 6)
	AbilityPreload(FourCC('A0P9'), 6)
	AbilityPreload(FourCC('A0PA'), 3)
	UnitPreload(FourCC('h00K'))
	AbilityPreload(FourCC('A0P8'), 6)
	AbilityPreload(FourCC('B052'), 1)
	EffectPreload("Effects\\RedAftershock.mdx")
	EffectPreload("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl")
	EffectPreload("Effects\\LightNova.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl")
	EffectPreload("Effects\\DivineRage.mdx")
	EffectPreload("Effects\\LifeHigh.mdx")
	EffectPreload("Abilities\\Spells\\Human\\DivineShield\\DivineShieldTarget.mdl")
	EffectPreload("Abilities\\Weapons\\SentinelMissile\\SentinelMissile.mdl")
	EnableTrigger(gg_trg_Strength_Fist)
	EnableTrigger(gg_trg_Fighting_Impact)
	EnableTrigger(gg_trg_Learn_Marshal_Armor)
	EnableTrigger(gg_trg_Illusive_Army)
end

function InitTrig_Marshal_Load()
	gg_trg_Marshal_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Marshal_Load, Trig_Marshal_Load_Actions)
end

function Trig_Remove_Lightning_From_Chain_Lightning_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local Picked = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local wait = LoadInteger(udg_hash, h, 2) ---@type number integer
	local damaged = LoadUnitHandle(udg_hash, h, 3) ---@type unit
	local l = LoadLightningHandle(udg_hash, h, 4) ---@type lightning
	local locr = GetUnitLoc(damaged) ---@type location
	local locd = GetUnitLoc(Picked) ---@type location
	wait = wait - 1
	SaveInteger(udg_hash, h, 2, wait)
	if LoadInteger(udg_hash, h, 5) == $E4 then
		MoveLightningEx(l, true, GetUnitX(damaged) + 75. * Cos(LoadReal(udg_hash, h, 6) * bj_DEGTORAD), GetUnitY(damaged) + 75. * Sin(LoadReal(udg_hash, h, 6) * bj_DEGTORAD), GetUnitFlyHeight(damaged) + 100. + GetLocationZ(locr), GetUnitX(Picked), GetUnitY(Picked), GetUnitFlyHeight(Picked) + 25. + GetLocationZ(locd))
	else
		MoveLightningEx(l, true, GetUnitX(damaged), GetUnitY(damaged), GetUnitFlyHeight(damaged) + 25. + GetLocationZ(locr), GetUnitX(Picked), GetUnitY(Picked), GetUnitFlyHeight(Picked) + 25. + GetLocationZ(locd))
	end
	if wait <= 0 then
		DestroyLightning(l)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	Picked = nil
	damaged = nil
	l = nil
	RemoveLocation(locr)
	RemoveLocation(locd)
	locr = nil
	locd = nil
end

function Trig_Chain_Lightning_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local damage = LoadReal(udg_hash, h, 2) ---@type number real
	local target = LoadUnitHandle(udg_hash, h, 8) ---@type unit
	local count = LoadInteger(udg_hash, h, 5) ---@type number integer
	local gdamage = LoadGroupHandle(udg_hash, h, $E) ---@type group
	local target2 ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local g ---@type group
	local grup ---@type group
	local Picked ---@type unit
	local t2 ---@type timer
	local h2 ---@type number integer
	local first = LoadBoolean(udg_hash, h, $F) ---@type boolean
	local destroy = false ---@type boolean
	local locr ---@type location
	local l ---@type lightning
	local locd ---@type location
	if count > 0 then
		count = count - 1
		SaveInteger(udg_hash, h, 5, count)
		g = CreateGroup()
		grup = CreateGroup()
		GroupEnumUnitsInRange(g, GetUnitX(target), GetUnitY(target), 500., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(grup, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		Picked = nil
		RandomUnitFromGroup(1, grup)
		GroupAddGroup(udg_GroupRandomUnitFromGroup, g)
		target2 = FirstOfGroup(udg_GroupRandomUnitFromGroup)
		if target2 ~= nil then
			DestroyEffect(AddSpecialEffectTarget("Effects\\EMPBomb.mdx", target2, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\LightningBolt\\LightningBoltMissile.mdl", target2, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", target2, "origin"))
			UnitDamageTarget(caster, target2, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			GroupAddUnit(gdamage, target2)
			t2 = CreateTimer()
			h2 = GetHandleId(t2)
			SaveUnitHandle(udg_hash, h2, 1, target2)
			SaveInteger(udg_hash, h2, 2, $F)
			SaveUnitHandle(udg_hash, h2, 3, target)
			locr = GetUnitLoc(target)
			locd = GetUnitLoc(target2)
			l = AddLightningEx("CLPB", true, GetUnitX(target), GetUnitY(target), GetUnitFlyHeight(target) + 25. + GetLocationZ(locr), GetUnitX(target2), GetUnitY(target2), GetUnitFlyHeight(target2) + 25. + GetLocationZ(locd))
			SaveLightningHandle(udg_hash, h2, 4, l)
			l = nil
			RemoveLocation(locr)
			locr = nil
			RemoveLocation(locd)
			locd = nil
			TimerStart(t2, .04, true, Trig_Remove_Lightning_From_Chain_Lightning_Actions)
			t2 = nil
			SaveUnitHandle(udg_hash, h, 8, target2)
		else
			destroy = true
		end
		SaveGroupHandle(udg_hash, h, $E, gdamage)
		target2 = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		GroupClear(grup)
		DestroyGroup(grup)
		grup = nil
	else
		destroy = true
	end
	if destroy then
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	gdamage = nil
	t = nil
	p = nil
	caster = nil
	target = nil
end

function Trig_Chain_Lightning_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local target = GetSpellTargetUnit() ---@type unit
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0PP')) ---@type number integer
	local damage = ($A + 40 * lvl) + (GetHeroInt(caster, true) * (.3 + .2 * lvl)) ---@type number real
	local count = 8 + (lvl * 2) - 1 ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local gdamage = CreateGroup() ---@type group
	local locr ---@type location
	local l ---@type lightning
	local locd ---@type location
	local t2 ---@type timer
	local h2 ---@type number integer
	local angle = (bj_RADTODEG * Atan2(GetUnitY(target) - GetUnitY(caster), GetUnitX(target) - GetUnitX(caster))) ---@type number real
	DestroyEffect(AddSpecialEffectTarget("Effects\\EMPBomb.mdx", target, "chest"))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\LightningBolt\\LightningBoltMissile.mdl", target, "chest"))
	DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", target, "origin"))
	UnitDamageTarget(caster, target, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
	GroupAddUnit(gdamage, target)
	t2 = CreateTimer()
	h2 = GetHandleId(t2)
	SaveUnitHandle(udg_hash, h2, 1, target)
	SaveInteger(udg_hash, h2, 2, $F)
	SaveUnitHandle(udg_hash, h2, 3, caster)
	SaveInteger(udg_hash, h2, 5, $E4)
	SaveReal(udg_hash, h2, 6, angle)
	locr = GetUnitLoc(caster)
	locd = GetUnitLoc(target)
	l = AddLightningEx("CLPB", true, GetUnitX(caster) + 75. * Cos(angle * bj_DEGTORAD), GetUnitY(caster) + 75. * Sin(angle * bj_DEGTORAD), GetUnitFlyHeight(caster) + 100. + GetLocationZ(locr), GetUnitX(target), GetUnitY(target), GetUnitFlyHeight(target) + 25. + GetLocationZ(locd))
	SaveLightningHandle(udg_hash, h2, 4, l)
	l = nil
	RemoveLocation(locr)
	locr = nil
	RemoveLocation(locd)
	locd = nil
	TimerStart(t2, .04, true, Trig_Remove_Lightning_From_Chain_Lightning_Actions)
	t2 = nil
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, damage)
	SaveInteger(udg_hash, h, 5, count)
	SaveUnitHandle(udg_hash, h, 8, target)
	SaveGroupHandle(udg_hash, h, $E, gdamage)
	SaveBoolean(udg_hash, h, $F, true)
	TimerStart(t, .3, true, Trig_Chain_Lightning_Move_Actions)
	caster = nil
	t = nil
	target = nil
	gdamage = nil
end

---@return boolean
function Trig_Chain_Lightning_Conditions()
	return GetSpellAbilityId() == FourCC('A0PP')
end

function InitTrig_Chain_Lightning()
	local index = 0 ---@type number integer
	gg_trg_Chain_Lightning = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Chain_Lightning, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Chain_Lightning, Condition(Trig_Chain_Lightning_Conditions))
	TriggerAddAction(gg_trg_Chain_Lightning, Trig_Chain_Lightning_Actions)
end

function Trig_Magic_Trap_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local x = LoadReal(udg_hash, h, 2) ---@type number real
	local y = LoadReal(udg_hash, h, 3) ---@type number real
	local lvl = LoadInteger(udg_hash, h, 4) ---@type number integer
	local gdamage = LoadGroupHandle(udg_hash, h, 6) ---@type group
	local damage = LoadReal(udg_hash, h, 7) ---@type number real
	local wait = LoadInteger(udg_hash, h, 8) ---@type number integer
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local dammi ---@type unit
	local px ---@type number real
	local py ---@type number real
	local orderId ---@type number integer
	local g = CreateGroup() ---@type group
	local p = GetOwningPlayer(caster) ---@type player
	local Picked ---@type unit
	local l ---@type lightning
	local locc ---@type location
	local loc = GetUnitLoc(caster) ---@type location
	local dist ---@type number real
	local angle ---@type number real
	local speed ---@type number real
	local orb ---@type unit
	local ef ---@type effect
	orderId = $D0278
	if (orderId ~= 0) then
	else
		orderId = UnitId("channel")
		if (orderId ~= 0) then
		end
	end
	if order == orderId and lvl > 0 then
		wait = wait + 1
		SaveInteger(udg_hash, h, 8, wait)
		GroupAddGroup(gdamage, g)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h000') then
				l = LoadLightningHandle(udg_hash, GetHandleId(Picked), $A3)
				locc = GetUnitLoc(Picked)
				MoveLightningEx(l, true, x, y, 250. + GetLocationZ(loc), GetUnitX(Picked), GetUnitY(Picked), 50. + GetLocationZ(locc))
				dist = SquareRoot((x - GetUnitX(Picked)) * (x - GetUnitX(Picked)) + (y - GetUnitY(Picked)) * (y - GetUnitY(Picked)))
				angle = bj_RADTODEG * Atan2(y - GetUnitY(Picked), x - GetUnitX(Picked))
				speed = (dist - 50) / 50
				if speed <= 0 then
					speed = .01
				end
				SetUnitPosition(Picked, GetUnitX(Picked) + speed * Cos(angle * bj_DEGTORAD), GetUnitY(Picked) + speed * Sin(angle * bj_DEGTORAD))
				l = nil
				RemoveLocation(locc)
				locc = nil
			else
				l = LoadLightningHandle(udg_hash, GetHandleId(Picked), $A3)
				DestroyLightning(l)
				l = nil
				GroupRemoveUnit(gdamage, Picked)
				SaveGroupHandle(udg_hash, h, 6, gdamage)
			end
			GroupRemoveUnit(g, Picked)
		end
	else
		DestroyEffect(AddSpecialEffect("Effects\\MagicStomp.mdx", x, y))
		while(true) do
			Picked = FirstOfGroup(gdamage)
			if (Picked == nil) then break end
			if LoadLightningHandle(udg_hash, GetHandleId(Picked), $A3) ~= nil then
				l = LoadLightningHandle(udg_hash, GetHandleId(Picked), $A3)
				DestroyLightning(l)
				l = nil
			end
			SaveLightningHandle(udg_hash, GetHandleId(Picked), $A3, nil)
			SetUnitPathing(Picked, true)
			if wait >= 66 and GetUnitState(Picked, UNIT_STATE_LIFE) > .405 then
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
				DestroyEffect(AddSpecialEffectTarget("Effects\\SoundTrauma.mdx", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\DragonHawkMissile\\DragonHawkMissile.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Effects\\Fireworksblue.mdx", Picked, "chest"))
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0PN'))
				IssueTargetOrderById(dammi, $D006B, Picked)
				dammi = nil
			end
			GroupRemoveUnit(gdamage, Picked)
		end
		orb = LoadUnitHandle(udg_hash, h, 9)
		KillUnit(orb)
		ef = LoadEffectHandle(udg_hash, h, $A)
		DestroyEffect(ef)
		ef = nil
		orb = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		RemoveUnit(LoadUnitHandle(udg_hash, GetHandleId(caster), FourCC('u')))
	end
	t = nil
	caster = nil
	DestroyGroup(g)
	g = nil
	p = nil
	Picked = nil
	RemoveLocation(loc)
	loc = nil
end

function Trig_Magic_Trap_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0PM')) ---@type number integer
	local loc = GetSpellTargetLoc() ---@type location
	local tx = GetLocationX(loc) ---@type number real
	local ty = GetLocationY(loc) ---@type number real
	local locc ---@type location
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damage = 10. + 30. * lvl ---@type number real
	local aoe = 175. + 75. * lvl ---@type number real
	local l ---@type lightning
	local g = CreateGroup() ---@type group
	local p = GetOwningPlayer(caster) ---@type player
	local Picked ---@type unit
	local gdamage = CreateGroup() ---@type group
	local wait = 0 ---@type number integer
	local orb = CreateUnit(p, FourCC('h00U'), tx, ty, 270.) ---@type unit
	local ef = AddSpecialEffectTarget("Effects\\Spirit Orb.mdl", orb, "origin") ---@type effect
	UnitAddAbility(orb, FourCC('Amrf'))
	UnitRemoveAbility(orb, FourCC('Amrf'))
	SetUnitFlyHeight(orb, 250., .0)
	SetUnitScale(orb, 2. + .5 * lvl, 2. + .5 * lvl, 2. + .5 * lvl)
	GroupEnumUnitsInRange(g, tx, ty, aoe, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if GetUnitState(Picked, UNIT_STATE_LIFE) > .405 and IsUnitEnemy(Picked, p) and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h000') then
			locc = GetUnitLoc(Picked)
			l = AddLightningEx("DRAM", true, tx, ty, 250. + GetLocationZ(loc), GetUnitX(Picked), GetUnitY(Picked), 50. + GetLocationZ(locc))
			SaveLightningHandle(udg_hash, GetHandleId(Picked), $A3, l)
			GroupAddUnit(gdamage, Picked)
			SetUnitPathing(Picked, false)
			l = nil
			RemoveLocation(locc)
			locc = nil
		end
		GroupRemoveUnit(g, Picked)
	end
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, tx)
	SaveReal(udg_hash, h, 3, ty)
	SaveInteger(udg_hash, h, 4, lvl)
	SaveGroupHandle(udg_hash, h, 6, gdamage)
	SaveReal(udg_hash, h, 7, damage)
	SaveInteger(udg_hash, h, 8, wait)
	SaveUnitHandle(udg_hash, h, 9, orb)
	SaveEffectHandle(udg_hash, h, $A, ef)
	TimerStart(t, .03, true, Trig_Magic_Trap_periodic_Actions)
	AddProgressBar(caster, 260. + (5. * lvl), (.85 + .05 * lvl), 2., false, true, FourCC('u'), 50, 50, $FF)
	DestroyGroup(g)
	g = nil
	p = nil
	Picked = nil
	caster = nil
	t = nil
	RemoveLocation(loc)
	loc = nil
	gdamage = nil
	orb = nil
	ef = nil
end

---@return boolean
function Trig_Magic_Trap_Conditions()
	return GetSpellAbilityId() == FourCC('A0PM')
end

function InitTrig_Magic_Trap()
	local index = 0 ---@type number integer
	gg_trg_Magic_Trap = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Magic_Trap, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Magic_Trap, Condition(Trig_Magic_Trap_Conditions))
	TriggerAddAction(gg_trg_Magic_Trap, Trig_Magic_Trap_Actions)
end

function Trig_Remove_Lightning_Form_Dead_Units_Actions()
	DestroyLightning(LoadLightningHandle(udg_hash, GetHandleId(GetDyingUnit()), $A3))
	SaveLightningHandle(udg_hash, GetHandleId(GetDyingUnit()), $A3, nil)
end

---@return boolean
function Trig_Remove_Lightning_Form_Dead_Units_Conditions()
	return LoadLightningHandle(udg_hash, GetHandleId(GetDyingUnit()), $A3) ~= nil
end

function InitTrig_Remove_Lightning_Form_Dead_Units()
	local index = 0 ---@type number integer
	gg_trg_Remove_Lightning_Form_Dead_Units = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Remove_Lightning_Form_Dead_Units, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Remove_Lightning_Form_Dead_Units, Condition(Trig_Remove_Lightning_Form_Dead_Units_Conditions))
	TriggerAddAction(gg_trg_Remove_Lightning_Form_Dead_Units, Trig_Remove_Lightning_Form_Dead_Units_Actions)
end

function Trig_EnergyWave_periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 20) ---@type unit
	local count = LoadInteger(udg_hash, h, 21) ---@type number integer
	local mana = LoadReal(udg_hash, h, 22) ---@type number real
	local check = LoadInteger(udg_hash, h, 23) ---@type number integer
	local lvl = LoadInteger(udg_hash, h, 26) ---@type number integer
	local gdamage = LoadGroupHandle(udg_hash, h, 25) ---@type group
	local manamax = LoadReal(udg_hash, h, 27) ---@type number real
	local time = LoadReal(udg_hash, h, 28) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local arrow ---@type unit
	local ax ---@type number real
	local ay ---@type number real
	local face ---@type number real
	local lop = 0 ---@type number integer
	local ef ---@type effect
	local angle ---@type number real
	local dammi ---@type unit
	local sef ---@type string
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	if check < 47 then
		check = check + 1
		SaveInteger(udg_hash, h, 23, check)
		while(true) do
			if (lop >= count) then break end
			arrow = LoadUnitHandle(udg_hash, h, lop)
			face = GetUnitFacing(arrow)
			ax = GetUnitX(arrow) + 17. * Cos(face * bj_DEGTORAD)
			ay = GetUnitY(arrow) + 17. * Sin(face * bj_DEGTORAD)
			if IsTerrainPathable(ax, ay, PATHING_TYPE_FLYABILITY) == false then
				SetUnitPosition(arrow, ax, ay)
				GroupEnumUnitsInRange(g, ax, ay, 100., nil)
				while(true) do
					Picked = FirstOfGroup(g)
					if (Picked == nil) then break end
					if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h000') then
						GroupAddUnit(gdamage, Picked)
						dammi = CreateUnit(p, FourCC('h00U'), ax, ay, .0)
						UnitApplyTimedLife(dammi, FourCC('BTLF'), .34)
						UnitAddAbility(dammi, FourCC('A0PK'))
						SetUnitAbilityLevel(dammi, FourCC('A0PK'), lvl)
						IssueTargetOrderById(dammi, $D02BC, Picked)
						RemoveUnitAttack(Picked, time)
						angle = bj_RADTODEG * Atan2(GetUnitY(Picked) - GetUnitY(arrow), GetUnitX(Picked) - GetUnitX(arrow))
						MoveUnit(Picked, 1.5, 200., 100., angle, .0, true)
					end
					if IsUnitAlly(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and GetUnitTypeId(Picked) ~= FourCC('h000') then
						GroupAddUnit(gdamage, Picked)
						SetUnitState(Picked, UNIT_STATE_MANA, GetUnitState(Picked, UNIT_STATE_MANA) + mana + GetUnitState(Picked, UNIT_STATE_MAX_MANA) * manamax)
						DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl", Picked, "origin"))
					end
					GroupRemoveUnit(g, Picked)
				end
				Picked = nil
			end
			arrow = nil
			lop = lop + 1
		end
	else
		while(true) do
			if (lop >= count) then break end
			arrow = LoadUnitHandle(udg_hash, h, lop)
			ef = LoadEffectHandle(udg_hash, h, $A + lop)
			KillUnit(arrow)
			DestroyEffect(ef)
			arrow = nil
			ef = nil
			lop = lop + 1
		end
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		gdamage = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		t = nil
	end
	t = nil
	caster = nil
	gdamage = nil
	p = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	Picked = nil
end

function Trig_EnergyWave_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local tx ---@type number real
	local ty ---@type number real
	local loc ---@type location
	local angle ---@type number real
	local angle1 ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0PJ')) ---@type number integer
	local count = lvl + 2 ---@type number integer
	local lop = 0 ---@type number integer
	local mana = 50 * lvl ---@type number real
	local manamax = .05 * lvl ---@type number real
	local time = 1. + .75 * lvl ---@type number real
	local arrow ---@type unit
	local check = 0 ---@type number integer
	local ef ---@type effect
	local s ---@type string
	local gdamage = CreateGroup() ---@type group
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local perekluchatelangle = false ---@type boolean
	local counterangle = 0 ---@type number integer
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	angle = (bj_RADTODEG * Atan2(ty - y, tx - x))
	if target == caster then
		angle = GetUnitFacing(caster)
	end
	if count - ((count / 2) * 2) == 0 then
		angle = angle + 6.
	end
	while(true) do
		if (lop >= count) then break end
		if perekluchatelangle then
			perekluchatelangle = false
			angle = angle - (counterangle * 12.)
		else
			perekluchatelangle = true
			angle = angle + (counterangle * 12.)
		end
		arrow = CreateUnit(p, FourCC('h00U'), x, y, angle)
		SetUnitScale(arrow, 1.2, 1.2, 1.2)
		UnitAddAbility(arrow, FourCC('Amrf'))
		UnitRemoveAbility(arrow, FourCC('Amrf'))
		SetUnitFlyHeight(arrow, 10., .0)
		ef = AddSpecialEffectTarget("Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl", arrow, "chest")
		SaveUnitHandle(udg_hash, h, lop, arrow)
		SaveEffectHandle(udg_hash, h, $A + lop, ef)
		arrow = nil
		ef = nil
		lop = lop + 1
		counterangle = counterangle + 1
	end
	SaveUnitHandle(udg_hash, h, 20, caster)
	SaveInteger(udg_hash, h, 21, count)
	SaveReal(udg_hash, h, 22, mana)
	SaveInteger(udg_hash, h, 23, check)
	SaveGroupHandle(udg_hash, h, 25, gdamage)
	SaveInteger(udg_hash, h, 26, lvl)
	SaveReal(udg_hash, h, 27, manamax)
	SaveReal(udg_hash, h, 28, time)
	TimerStart(t, .04, true, Trig_EnergyWave_periodic_Actions)
	caster = nil
	target = nil
	RemoveLocation(loc)
	loc = nil
	p = nil
	gdamage = nil
	t = nil
end

---@return boolean
function Trig_EnergyWave_Conditions()
	return GetSpellAbilityId() == FourCC('A0PJ')
end

function InitTrig_EnergyWave()
	local index = 0 ---@type number integer
	gg_trg_EnergyWave = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_EnergyWave, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_EnergyWave, Condition(Trig_EnergyWave_Conditions))
	TriggerAddAction(gg_trg_EnergyWave, Trig_EnergyWave_Actions)
end

function Trig_Magic_Epicenter_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local stuntime = LoadReal(udg_hash, h, 4) ---@type number real
	local aoe = LoadReal(udg_hash, h, 5) ---@type number real
	local caster = LoadUnitHandle(udg_hash, h, 7) ---@type unit
	local x = LoadReal(udg_hash, h, 9) ---@type number real
	local y = LoadReal(udg_hash, h, $A) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi = CreateUnit(p, FourCC('h00U'), x, y, 270.) ---@type unit
	SetUnitScale(dammi, 1.8, 1.8, 1.8)
	DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\NightElf\\NEDeathMedium\\NEDeath.mdl", dammi, "origin"))
	DestroyEffect(AddSpecialEffect("Effects\\MagicStomp.mdl", x, y))
	KillUnit(dammi)
	dammi = nil
	GroupEnumUnitsInRange(g, x, y, aoe, nil)
	while(true) do
		Picked = FirstOfGroup(g)
		if (Picked == nil) then break end
		if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
			DestroyEffect(AddSpecialEffectTarget("Effects\\EMPBomb.mdx", Picked, "chest"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\ManaFlare\\ManaFlareBoltImpact.mdl", Picked, "origin"))
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\DragonHawkMissile\\DragonHawkMissile.mdl", Picked, "chest"))
			StunUnitTimed(Picked, stuntime)
			UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
		end
		GroupRemoveUnit(g, Picked)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	p = nil
	DestroyTimer(t)
	FlushChildHashtable(udg_hash, h)
	t = nil
	caster = nil
end

function Trig_Magic_Epicenter_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0PO')) ---@type number integer
	local lvlup = GetUnitAbilityLevel(caster, FourCC('A0PW')) ---@type number integer
	local damage ---@type number real
	local stuntime ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local aoe = 300. + 50 * lvl ---@type number real
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	if lvlup <= 0 then
		damage = (-25. + (200. * lvl)) + (GetHeroInt(caster, true) * (.5 + 1. * lvl))
		stuntime = 2. + (.5 * lvl)
	end
	if lvlup > 0 then
		damage = (-25. + (200. * lvlup)) + (GetHeroInt(caster, true) * (.5 + 1.5 * lvlup))
		stuntime = 3. + (.5 * lvlup)
	end
	DestroyEffectWithWait(AddSpecialEffect("Effects\\IonCannon.mdl", xt, yt), 10.)
	SaveReal(udg_hash, h, 3, damage)
	SaveReal(udg_hash, h, 4, stuntime)
	SaveReal(udg_hash, h, 5, aoe)
	SaveUnitHandle(udg_hash, h, 7, caster)
	SaveReal(udg_hash, h, 9, xt)
	SaveReal(udg_hash, h, $A, yt)
	TimerStart(t, 6.5, false, Trig_Magic_Epicenter_Move_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	p = nil
end

---@return boolean
function Trig_Magic_Epicenter_Conditions()
	return (GetSpellAbilityId() == FourCC('A0PO') or GetSpellAbilityId() == FourCC('A0PW'))
end

function InitTrig_Magic_Epicenter()
	local index = 0 ---@type number integer
	gg_trg_Magic_Epicenter = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Magic_Epicenter, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Magic_Epicenter, Condition(Trig_Magic_Epicenter_Conditions))
	TriggerAddAction(gg_trg_Magic_Epicenter, Trig_Magic_Epicenter_Actions)
end

function Trig_Load_ArchMage_Actions()
	AbilityPreload(FourCC('A0PP'), 6)
	AbilityPreload(FourCC('A0PM'), 6)
	AbilityPreload(FourCC('A0PJ'), 6)
	AbilityPreload(FourCC('A0PO'), 3)
	AbilityPreload(FourCC('A0PK'), 6)
	AbilityPreload(FourCC('A0PN'), 1)
	AbilityPreload(FourCC('B055'), 1)
	AbilityPreload(FourCC('B054'), 1)
	EffectPreload("Effects\\EMPBomb.mdx")
	EffectPreload("Abilities\\Spells\\Orc\\LightningBolt\\LightningBoltMissile.mdl")
	EffectPreload("Effects\\Spirit Orb.mdl")
	EffectPreload("Effects\\SoundTrauma.mdx")
	EffectPreload("Effects\\Fireworksblue.mdx")
	EffectPreload("Abilities\\Weapons\\WingedSerpentMissile\\WingedSerpentMissile.mdl")
	EffectPreload("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl")
	EffectPreload("Abilities\\Spells\\Human\\ManaFlare\\ManaFlareBoltImpact.mdl")
	EffectPreload("Abilities\\Weapons\\DragonHawkMissile\\DragonHawkMissile.mdl")
	EffectPreload("Effects\\IonCannon.mdl")
	EffectPreload("Abilities\\Spells\\Other\\Silence\\SilenceTarget.mdl")
	EffectPreload("Abilities\\Spells\\Other\\Drain\\ManaDrainCaster.mdl")
	EffectPreload("Abilities\\Weapons\\Bolt\\BoltImpact.mdl")
	EffectPreload("Objects\\Spawnmodels\\NightElf\\NEDeathMedium\\NEDeath.mdl")
	EffectPreload("Effects\\MagicStomp.mdl")
	EnableTrigger(gg_trg_Chain_Lightning)
	EnableTrigger(gg_trg_Magic_Trap)
	EnableTrigger(gg_trg_Remove_Lightning_Form_Dead_Units)
	EnableTrigger(gg_trg_EnergyWave)
	EnableTrigger(gg_trg_Magic_Epicenter)
end

function InitTrig_Load_ArchMage()
	gg_trg_Load_ArchMage = CreateTrigger()
	TriggerAddAction(gg_trg_Load_ArchMage, Trig_Load_ArchMage_Actions)
end

function Trig_Toxic_Field_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local orb ---@type unit
	local ef ---@type effect
	local damage = LoadReal(udg_hash, h, 3) ---@type number real
	local armor = LoadInteger(udg_hash, h, 4) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 7) ---@type unit
	local gdamage = LoadGroupHandle(udg_hash, h, 8) ---@type group
	local x = LoadReal(udg_hash, h, 9) ---@type number real
	local y = LoadReal(udg_hash, h, $A) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local g2 = CreateGroup() ---@type group
	local g3 = CreateGroup() ---@type group
	local Picked ---@type unit
	local dammi ---@type unit
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		GroupAddGroup(gdamage, g3)
		GroupEnumUnitsInRange(g, x, y, 325., nil)
		if wait == 4 then
			orb = LoadUnitHandle(udg_hash, h, 1)
			ef = LoadEffectHandle(udg_hash, h, 2)
			KillUnit(orb)
			DestroyEffect(ef)
			ef = nil
			orb = nil
			orb = CreateUnit(p, FourCC('h00U'), x, y, GetRandomReal(.0, 360.))
			ef = AddSpecialEffectTarget("Effects\\ToxicField.mdx", orb, "origin")
			SaveUnitHandle(udg_hash, h, 1, orb)
			SaveEffectHandle(udg_hash, h, 2, ef)
			orb = nil
			ef = nil
		end
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0QE'))
				IssueTargetOrderById(dammi, $D006B, Picked)
				dammi = nil
				GroupAddUnit(g2, Picked)
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			end
			GroupRemoveUnit(g, Picked)
		end
		while(true) do
			Picked = FirstOfGroup(g3)
			if (Picked == nil) then break end
			if IsUnitInGroup(Picked, g2) == false then
				SetArmorAbilityLevel(Picked, armor)
				GroupRemoveUnit(gdamage, Picked)
			end
			GroupRemoveUnit(g3, Picked)
		end
		while(true) do
			Picked = FirstOfGroup(g2)
			if (Picked == nil) then break end
			if IsUnitInGroup(Picked, gdamage) == false then
				SetArmorAbilityLevel(Picked, -armor)
				GroupAddUnit(gdamage, Picked)
			end
			GroupRemoveUnit(g2, Picked)
		end
		SaveGroupHandle(udg_hash, h, 8, gdamage)
		TimerStart(t, 1., false, Trig_Toxic_Field_Move_Actions)
	else
		orb = LoadUnitHandle(udg_hash, h, 1)
		ef = LoadEffectHandle(udg_hash, h, 2)
		KillUnit(orb)
		DestroyEffect(ef)
		ef = nil
		orb = nil
		while(true) do
			Picked = FirstOfGroup(gdamage)
			if (Picked == nil) then break end
			SetArmorAbilityLevel(Picked, armor)
			GroupRemoveUnit(gdamage, Picked)
		end
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		gdamage = nil
		DestroyTimer(t)
		FlushChildHashtable(udg_hash, h)
	end
	Picked = nil
	GroupClear(g)
	DestroyGroup(g)
	g = nil
	GroupClear(g2)
	DestroyGroup(g2)
	g2 = nil
	GroupClear(g3)
	DestroyGroup(g3)
	g3 = nil
	p = nil
	gdamage = nil
	t = nil
	caster = nil
end

function Trig_Toxic_Field_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local loc = GetSpellTargetLoc() ---@type location
	local xt = GetLocationX(loc) ---@type number real
	local yt = GetLocationY(loc) ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0QD')) ---@type number integer
	local wait = 8 ---@type number integer
	local damage = (-20. + (60. * lvl) + GetUnitState(caster, UNIT_STATE_MAX_LIFE) * .03 * lvl) / (wait) ---@type number real
	local armor = 2 + 3 * lvl ---@type number integer
	local p = GetOwningPlayer(caster) ---@type player
	local orb = CreateUnit(p, FourCC('h00U'), xt, yt, GetRandomReal(.0, 360.)) ---@type unit
	local ef = AddSpecialEffectTarget("Effects\\ToxicField.mdx", orb, "origin") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local g = CreateGroup() ---@type group
	SaveUnitHandle(udg_hash, h, 1, orb)
	SaveEffectHandle(udg_hash, h, 2, ef)
	SaveReal(udg_hash, h, 3, damage)
	SaveInteger(udg_hash, h, 4, armor)
	SaveInteger(udg_hash, h, 5, wait)
	SaveUnitHandle(udg_hash, h, 7, caster)
	SaveGroupHandle(udg_hash, h, 8, g)
	SaveReal(udg_hash, h, 9, xt)
	SaveReal(udg_hash, h, $A, yt)
	TimerStart(t, .0, false, Trig_Toxic_Field_Move_Actions)
	caster = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
	p = nil
	orb = nil
	ef = nil
	g = nil
end

---@return boolean
function Trig_Toxic_Field_Conditions()
	return GetSpellAbilityId() == FourCC('A0QD')
end

function InitTrig_Toxic_Field()
	local index = 0 ---@type number integer
	gg_trg_Toxic_Field = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Toxic_Field, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Toxic_Field, Condition(Trig_Toxic_Field_Conditions))
	TriggerAddAction(gg_trg_Toxic_Field, Trig_Toxic_Field_Actions)
end

function Trig_Poison_Bomb_MOVE_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local target = LoadUnitHandle(udg_hash, h, 8) ---@type unit
	local xload = LoadReal(udg_hash, h, 16) ---@type number real
	local yload = LoadReal(udg_hash, h, 17) ---@type number real
	local count = LoadInteger(udg_hash, h, 5) ---@type number integer
	local orb = LoadUnitHandle(udg_hash, h, 6) ---@type unit
	local target2 ---@type unit
	local stuntime ---@type number real
	local heal ---@type number real
	local gdamage ---@type group
	local height ---@type number real
	local ef ---@type effect
	local x = GetUnitX(orb) ---@type number real
	local y = GetUnitY(orb) ---@type number real
	local xt ---@type number real
	local yt ---@type number real
	local xorb ---@type number real
	local yorb ---@type number real
	local angle ---@type number real
	local dist ---@type number real
	local p ---@type player
	local g ---@type group
	local grup ---@type group
	local Picked ---@type unit
	local tef ---@type timer
	local hef ---@type number integer
	local regen ---@type number integer
	local remove = false ---@type boolean
	local reselect = false ---@type boolean
	local orb2 ---@type unit
	local gg ---@type group
	local ef2 ---@type effect
	if GetUnitState(target, UNIT_STATE_LIFE) > .405 then
		xt = GetUnitX(target)
		yt = GetUnitY(target)
	else
		xt = xload
		yt = yload
	end
	angle = bj_RADTODEG * Atan2((yt - y), (xt - x))
	xorb = x + 17. * Cos(angle * bj_DEGTORAD)
	yorb = y + 17. * Sin(angle * bj_DEGTORAD)
	SetUnitPosition(orb, xorb, yorb)
	dist = SquareRoot((xt - xorb) * (xt - xorb) + (yt - yorb) * (yt - yorb))
	SetUnitFacing(orb, angle)
	if dist < 21. then
		SetUnitPosition(orb, xt, yt)
		p = GetOwningPlayer(caster)
		stuntime = LoadReal(udg_hash, h, 2)
		gg = CreateGroup()
		GroupEnumUnitsInRange(gg, xt, yt, 150., nil)
		while(true) do
			Picked = FirstOfGroup(gg)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(target, UNIT_STATE_LIFE) > .0 and IsUnitType(target, UNIT_TYPE_STRUCTURE) == false and IsUnitType(target, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(target) ~= FourCC('h00U') then
				StunUnitTimed(Picked, stuntime)
			end
			GroupRemoveUnit(gg, Picked)
		end
		count = count - 1
		SaveInteger(udg_hash, h, 5, count)
		reselect = true
		p = nil
	end
	if reselect then
		g = CreateGroup()
		grup = CreateGroup()
		p = GetOwningPlayer(caster)
		GroupEnumUnitsInRange(g, xt, yt, 500., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				GroupAddUnit(grup, Picked)
			end
			GroupRemoveUnit(g, Picked)
		end
		RandomUnitFromGroup(1, grup)
		GroupAddGroup(udg_GroupRandomUnitFromGroup, g)
		target2 = FirstOfGroup(udg_GroupRandomUnitFromGroup)
		if target2 ~= nil then
			DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\AcidBomb\\BottleMissile.mdl", xt, yt))
			x = GetUnitX(orb)
			y = GetUnitY(orb)
			xt = GetUnitX(target2)
			yt = GetUnitY(target2)
			dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y)))
			angle = bj_RADTODEG * Atan2((yt - y), (xt - x))
			p = GetOwningPlayer(caster)
			ef = LoadEffectHandle(udg_hash, h, 7)
			DestroyEffect(ef)
			ef = nil
			RemoveUnit(orb)
			orb2 = CreateUnit(p, FourCC('h00U'), x, y, angle)
			ef2 = AddSpecialEffectTarget("Abilities\\Spells\\Other\\AcidBomb\\BottleMissile.mdl", orb2, "chest")
			SetUnitScale(orb2, 1.5, 1.5, 1.5)
			SaveUnitHandle(udg_hash, h, 6, orb2)
			SaveEffectHandle(udg_hash, h, 7, ef2)
			SaveUnitHandle(udg_hash, h, 8, target2)
			SaveReal(udg_hash, h, 9, (dist / 3))
			SaveReal(udg_hash, h, 16, xt)
			SaveReal(udg_hash, h, 17, yt)
			p = nil
			orb2 = nil
			ef2 = nil
		else
			remove = true
		end
		target2 = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		GroupClear(grup)
		DestroyGroup(grup)
		grup = nil
		gdamage = nil
	end
	if count <= 0 then
		remove = true
	end
	if remove then
		KillUnit(orb)
		ef = LoadEffectHandle(udg_hash, h, 7)
		DestroyEffect(ef)
		ef = nil
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		DestroyTimer(t)
		Picked = nil
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	orb = nil
	target = nil
end

function Trig_Poison_Bomb_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local p = GetOwningPlayer(caster) ---@type player
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local loc ---@type location
	local xt ---@type number real
	local yt ---@type number real
	local angle ---@type number real
	local dist ---@type number real
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0QF')) ---@type number integer
	local stuntime = 4. ---@type number real
	local count = 2 + (lvl * 2) ---@type number integer
	local orb = CreateUnit(p, FourCC('h00U'), x, y, .0) ---@type unit
	local ef = AddSpecialEffectTarget("Abilities\\Spells\\Other\\AcidBomb\\BottleMissile.mdl", orb, "chest") ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetUnitScale(orb, 1.5, 1.5, 1.5)
	if target == nil then
		loc = GetSpellTargetLoc()
		xt = GetLocationX(loc)
		yt = GetLocationY(loc)
	else
		xt = GetUnitX(target)
		yt = GetUnitY(target)
	end
	angle = bj_RADTODEG * Atan2((yt - y), (xt - x))
	dist = SquareRoot(((xt - x) * (xt - x)) + ((yt - y) * (yt - y)))
	SetUnitX(orb, x + 30. * Cos((angle) * bj_DEGTORAD))
	SetUnitY(orb, y + 30. * Sin((angle) * bj_DEGTORAD))
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveReal(udg_hash, h, 2, stuntime)
	SaveInteger(udg_hash, h, 5, count)
	SaveUnitHandle(udg_hash, h, 6, orb)
	SaveEffectHandle(udg_hash, h, 7, ef)
	SaveUnitHandle(udg_hash, h, 8, target)
	SaveReal(udg_hash, h, 16, xt)
	SaveReal(udg_hash, h, 17, yt)
	TimerStart(t, .03, true, Trig_Poison_Bomb_MOVE_Actions)
	caster = nil
	t = nil
	orb = nil
	ef = nil
	p = nil
	target = nil
end

---@return boolean
function Trig_Poison_Bomb_Conditions()
	return GetSpellAbilityId() == FourCC('A0QF')
end

function InitTrig_Poison_Bomb()
	local index = 0 ---@type number integer
	gg_trg_Poison_Bomb = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Poison_Bomb, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Poison_Bomb, Condition(Trig_Poison_Bomb_Conditions))
	TriggerAddAction(gg_trg_Poison_Bomb, Trig_Poison_Bomb_Actions)
end

function Trig_Learn_Ogre_Rage_Actions_Timer()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local txt = LoadTextTagHandle(udg_hash, h, 2) ---@type texttag
	local x = GetUnitX(hero) ---@type number real
	local y = GetUnitY(hero) ---@type number real
	local alife = LoadBoolean(udg_hash, h, 3) ---@type boolean
	local hhero = GetHandleId(hero) ---@type number integer
	local hpregenold = LoadInteger(udg_hash, hhero, $AE) ---@type number integer
	local asold = LoadInteger(udg_hash, hhero, $AF) ---@type number integer
	local lvl = GetUnitAbilityLevel(hero, FourCC('A0QG')) ---@type number integer
	local hpstack = R2I((((GetUnitState(hero, UNIT_STATE_MAX_LIFE) - GetUnitState(hero, UNIT_STATE_LIFE)) / GetUnitState(hero, UNIT_STATE_MAX_LIFE)) + .1) * $A) ---@type number integer
	local hpregennew = (1 + 1 * lvl) * hpstack ---@type number integer
	local asnew = (2 + 3 * lvl) * hpstack ---@type number integer
	if (GetUnitState(hero, UNIT_STATE_LIFE) < .405 and alife) then
		alife = false
		SaveBoolean(udg_hash, h, 3, alife)
		SetTextTagVisibility(txt, false)
	end
	if (GetUnitState(hero, UNIT_STATE_LIFE) > .405 and alife == false) then
		alife = true
		SaveBoolean(udg_hash, h, 3, alife)
		SetTextTagVisibility(txt, true)
	end
	if (GetUnitState(hero, UNIT_STATE_LIFE) > .405 and alife) then
		if hpstack >= 6 and LoadBoolean(udg_hash, h, $B0) == false then
			SaveBoolean(udg_hash, h, $B0, true)
			AddUnitAnimationProperties(hero, "Alternate", true)
			PlaySoundBJ(gg_snd_AlchemistChemicalBurst1)
		end
		if hpstack < 5 and LoadBoolean(udg_hash, h, $B0) then
			SaveBoolean(udg_hash, h, $B0, false)
			AddUnitAnimationProperties(hero, "Alternate", false)
			PlaySoundBJ(gg_snd_AlchemistMorph1)
		end
		if hpregennew ~= hpregenold then
			SetUnitLifeAndManaRegeneration(hero, "life", (hpregennew - hpregenold))
			SaveInteger(udg_hash, hhero, $AE, hpregennew)
		end
		if asnew ~= asold then
			SetAttackSpeedAbilityLevel(hero, (asnew - asold))
			SaveInteger(udg_hash, hhero, $AF, asnew)
		end
		SetTextTagText(txt, "|cff006400" .. I2S(hpstack) .. "|r|cFF969696/|r|cff00640010|r", .033)
		SetTextTagPos(txt, GetUnitX(hero) - 40., GetUnitY(hero) + 50., .0)
	end
	t = nil
	hero = nil
	txt = nil
end

function Trig_Learn_Ogre_Rage_Actions()
	local lvl = GetUnitAbilityLevel(GetLearningUnit(), FourCC('A0QG')) ---@type number integer
	local t ---@type timer
	local h ---@type number integer
	local txt ---@type texttag
	local hero = GetLearningUnit() ---@type unit
	if lvl == 1 then
		t = CreateTimer()
		h = GetHandleId(t)
		txt = CreateTextTag()
		SetTextTagText(txt, "|cff006400" .. I2S(0) .. "|r|cFF969696/|r|cff00640010|r", .033)
		SetTextTagColor(txt, $FF, $FF, $FF, $FF)
		SetTextTagPos(txt, GetUnitX(hero) - 40., GetUnitY(hero) + 50., .0)
		SetTextTagPermanent(txt, true)
		SaveUnitHandle(udg_hash, h, 1, hero)
		SaveTextTagHandle(udg_hash, h, 2, txt)
		SaveBoolean(udg_hash, h, 3, true)
		TimerStart(t, .03, true, Trig_Learn_Ogre_Rage_Actions_Timer)
		t = nil
		txt = nil
	end
	hero = nil
end

---@return boolean
function Trig_Learn_Ogre_Rage_Conditions()
	return GetUnitTypeId(GetLearningUnit()) ~= FourCC('h00U') and GetLearnedSkill() == FourCC('A0QG')
end

function InitTrig_Learn_Ogre_Rage()
	local index = 0 ---@type number integer
	gg_trg_Learn_Ogre_Rage = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Ogre_Rage, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Ogre_Rage, Condition(Trig_Learn_Ogre_Rage_Conditions))
	TriggerAddAction(gg_trg_Learn_Ogre_Rage, Trig_Learn_Ogre_Rage_Actions)
end

function Trig_Potion_of_Growth_Periodic_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local str = LoadInteger(udg_hash, h, 2) ---@type number integer
	local wait = LoadInteger(udg_hash, h, 3) ---@type number integer
	local wait2 = LoadInteger(udg_hash, h, 4) ---@type number integer
	local percent ---@type number real
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 3, wait)
		if wait >= $A then
			percent = (GetUnitState(caster, UNIT_STATE_LIFE) / GetUnitState(caster, UNIT_STATE_MAX_LIFE))
			SetHeroStr(caster, GetHeroStr(caster, false) + str, true)
			SetUnitState(caster, UNIT_STATE_LIFE, GetUnitState(caster, UNIT_STATE_MAX_LIFE) * percent)
			SetUnitScale(caster, .9 + (20 - wait) * .05, .9 + (20 - wait) * .05, .9 + (20 - wait) * .05)
		end
	else
		if wait2 == 20 then
			TimerStart(t, .05, true, Trig_Potion_of_Growth_Periodic_Actions)
		end
		if wait2 > 0 then
			wait2 = wait2 - 1
			SaveInteger(udg_hash, h, 4, wait2)
			SetUnitScale(caster, 1.4 - ((20 - wait2) * .025), 1.4 - ((20 - wait2) * .025), 1.4 - ((20 - wait2) * .025))
		end
		if wait2 == 0 then
			percent = (GetUnitState(caster, UNIT_STATE_LIFE) / GetUnitState(caster, UNIT_STATE_MAX_LIFE))
			SetHeroStr(caster, GetHeroStr(caster, false) - (str * $A), true)
			SetUnitState(caster, UNIT_STATE_LIFE, GetUnitState(caster, UNIT_STATE_MAX_LIFE) * percent)
			DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\ManaBurn\\ManaBurnTarget.mdl", caster, "origin"))
			FlushChildHashtable(udg_hash, h)
			DestroyTimer(t)
		end
	end
	t = nil
	caster = nil
end

function Trig_Potion_of_Growth_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local wait = 20 ---@type number integer
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0QH')) ---@type number integer
	local str = (5 + 5 * lvl) ---@type number integer
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	PlaySoundBJ(gg_snd_HeroAlchemistYesAttack1)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveInteger(udg_hash, h, 2, str)
	SaveInteger(udg_hash, h, 3, wait)
	SaveInteger(udg_hash, h, 4, 20)
	TimerStart(t, 1., true, Trig_Potion_of_Growth_Periodic_Actions)
	caster = nil
	t = nil
end

---@return boolean
function Trig_Potion_of_Growth_Conditions()
	return GetSpellAbilityId() == FourCC('A0QH')
end

function InitTrig_Potion_of_Growth()
	local index = 0 ---@type number integer
	gg_trg_Potion_of_Growth = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Potion_of_Growth, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Potion_of_Growth, Condition(Trig_Potion_of_Growth_Conditions))
	TriggerAddAction(gg_trg_Potion_of_Growth, Trig_Potion_of_Growth_Actions)
end

function Trig_Load_Alchemist_Actions()
	AbilityPreload(FourCC('A0QD'), 6)
	AbilityPreload(FourCC('A0QF'), 6)
	AbilityPreload(FourCC('A0QG'), 6)
	AbilityPreload(FourCC('A0QH'), 3)
	AbilityPreload(FourCC('A0QE'), 1)
	AbilityPreload(FourCC('B058'), 1)
	EffectPreload("Effects\\ToxicField.mdx")
	EffectPreload("Abilities\\Spells\\Other\\AcidBomb\\BottleMissile.mdl")
	EffectPreload("Abilities\\Spells\\NightElf\\ManaBurn\\ManaBurnTarget.mdl")
	EffectPreload("Abilities\\Weapons\\PoisonSting\\PoisonStingTarget.mdl")
	EnableTrigger(gg_trg_Toxic_Field)
	EnableTrigger(gg_trg_Poison_Bomb)
	EnableTrigger(gg_trg_Learn_Ogre_Rage)
	EnableTrigger(gg_trg_Potion_of_Growth)
end

function InitTrig_Load_Alchemist()
	gg_trg_Load_Alchemist = CreateTrigger()
	TriggerAddAction(gg_trg_Load_Alchemist, Trig_Load_Alchemist_Actions)
end

function Trig_Case_Shot_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local gdamage ---@type group
	local damage ---@type number real
	local ef ---@type effect
	local wait = LoadInteger(udg_hash, h, 5) ---@type number integer
	local angle = LoadReal(udg_hash, h, 6) ---@type number real
	local dagger = LoadUnitHandle(udg_hash, h, 7) ---@type unit
	local lvl ---@type number integer
	local x = GetUnitX(dagger) + 40. * Cos((angle) * bj_DEGTORAD) ---@type number real
	local y = GetUnitY(dagger) + 40. * Sin((angle) * bj_DEGTORAD) ---@type number real
	local p = GetOwningPlayer(caster) ---@type player
	local g = CreateGroup() ---@type group
	local Picked ---@type unit
	local dist ---@type number real
	local dest = false ---@type boolean
	local explode = false ---@type boolean
	local dammi ---@type unit
	local angle2 ---@type number real
	if wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 5, wait)
		SetUnitPosition(dagger, x, y)
		GroupEnumUnitsInRange(g, x, y, 125., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				explode = true
			end
			GroupRemoveUnit(g, Picked)
		end
		GroupClear(g)
		DestroyGroup(g)
		g = nil
	else
		dest = true
	end
	if explode then
		dest = true
		gdamage = CreateGroup()
		lvl = LoadInteger(udg_hash, h, 9)
		damage = LoadReal(udg_hash, h, 3)
		GroupEnumUnitsInRange(gdamage, x, y, 300., nil)
		while(true) do
			Picked = FirstOfGroup(gdamage)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\Rifle\\RifleImpact.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\GyroCopter\\GyroCopterImpact.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPeasant.mdl", Picked, "origin"))
				dammi = CreateUnit(p, FourCC('h00U'), x, y, .0)
				UnitApplyTimedLife(dammi, FourCC('BTLF'), 1.)
				UnitAddAbility(dammi, FourCC('A0QS'))
				SetUnitAbilityLevel(dammi, FourCC('A0QS'), lvl)
				IssueTargetOrderById(dammi, $D006B, Picked)
				dammi = nil
				angle2 = bj_RADTODEG * Atan2(GetUnitY(Picked) - y, GetUnitX(Picked) - x)
				MoveUnit(Picked, 1., 600., 600., angle2, .0, false)
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			end
			GroupRemoveUnit(gdamage, Picked)
		end
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		gdamage = nil
	end
	if dest then
		ef = LoadEffectHandle(udg_hash, h, 4)
		DestroyEffect(ef)
		ef = nil
		DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\CannonTowerMissile\\CannonTowerMissile.mdl", x, y))
		KillUnit(dagger)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
	end
	t = nil
	caster = nil
	gdamage = nil
	p = nil
	Picked = nil
	dagger = nil
end

function Trig_Case_Shot_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local gdamage = CreateGroup() ---@type group
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0QR')) ---@type number integer
	local damage = (20. * lvl) + 10. ---@type number real
	local loc ---@type location
	local tx ---@type number real
	local ty ---@type number real
	local dist ---@type number real
	local dagger ---@type unit
	local ef ---@type effect
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	dist = SquareRoot((tx - x) * (tx - x) + (ty - y) * (ty - y))
	if target == caster then
		angle = GetUnitFacing(caster)
		dist = 800.
	end
	dagger = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, angle)
	ef = AddSpecialEffectTarget("Abilities\\Weapons\\CannonTowerMissile\\CannonTowerMissile.mdl", dagger, "origin")
	SetUnitX(dagger, x + 20. * Cos((angle) * bj_DEGTORAD))
	SetUnitY(dagger, y + 20. * Sin((angle) * bj_DEGTORAD))
	SetUnitTimeScale(dagger, 2.)
	SetUnitScale(dagger, 1.5, 1.5, 1.5)
	SetUnitPathing(dagger, false)
	SetUnitFlyHeight(dagger, 50., .0)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	SaveReal(udg_hash, h, 3, damage)
	SaveEffectHandle(udg_hash, h, 4, ef)
	SaveInteger(udg_hash, h, 5, R2I(900. / 40))
	SaveReal(udg_hash, h, 6, angle)
	SaveUnitHandle(udg_hash, h, 7, dagger)
	SaveInteger(udg_hash, h, 9, lvl)
	TimerStart(t, .03, true, Trig_Case_Shot_Move_Actions)
	caster = nil
	target = nil
	gdamage = nil
	dagger = nil
	ef = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
end

---@return boolean
function Trig_Case_Shot_Conditions()
	return GetSpellAbilityId() == FourCC('A0QR')
end

function InitTrig_Case_Shot()
	local index = 0 ---@type number integer
	gg_trg_Case_Shot = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Case_Shot, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Case_Shot, Condition(Trig_Case_Shot_Conditions))
	TriggerAddAction(gg_trg_Case_Shot, Trig_Case_Shot_Actions)
end

function Trig_Learn_Fire_Position_Actions_Timer()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local hero = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local time = LoadReal(udg_hash, h, 2) ---@type number real
	local x = GetUnitX(hero) ---@type number real
	local y = GetUnitY(hero) ---@type number real
	local alife = LoadBoolean(udg_hash, h, 3) ---@type boolean
	local circlego = LoadBoolean(udg_hash, h, 4) ---@type boolean
	local maximum = LoadBoolean(udg_hash, h, 9) ---@type boolean
	local xold = LoadReal(udg_hash, h, 5) ---@type number real
	local yold = LoadReal(udg_hash, h, 6) ---@type number real
	local xnew ---@type number real
	local ynew ---@type number real
	local hhero = GetHandleId(hero) ---@type number integer
	local attackold = LoadInteger(udg_hash, hhero, $B2) ---@type number integer
	local lvl = GetUnitAbilityLevel(hero, FourCC('A0QV')) ---@type number integer
	local attackstack ---@type number integer
	local attacknew ---@type number integer
	local ef ---@type effect
	local dammi ---@type unit
	if (GetUnitState(hero, UNIT_STATE_LIFE) > .405 and alife) then
		xnew = GetUnitX(hero)
		ynew = GetUnitY(hero)
		if RAbsBJ(xnew - xold) < 125. and RAbsBJ(ynew - yold) < 125. then
			if time < 10. then
				time = time + .1
				SaveReal(udg_hash, h, 2, time)
			end
			if time >= 3. then
				if circlego == false then
					circlego = true
					SaveBoolean(udg_hash, h, 4, circlego)
					dammi = CreateUnit(GetOwningPlayer(hero), FourCC('h00U'), xnew, ynew, .0)
					SetUnitScale(dammi, 3., 3., 3.)
					ef = AddSpecialEffectTarget("Effects\\CircleOutBuff.mdx", dammi, "origin")
					SaveEffectHandle(udg_hash, h, 7, ef)
					SaveUnitHandle(udg_hash, h, $A, dammi)
					ef = nil
					dammi = nil
					AddProgressBar(hero, 230., 1.1, 7., true, true, FourCC('v'), $C0, $C0, $C0)
				end
				if maximum == false and time >= 10. then
					maximum = true
					SaveBoolean(udg_hash, h, 9, maximum)
					SaveBoolean(udg_hash, GetHandleId(hero), $B3, true)
					ef = AddSpecialEffectTarget("Effects\\Fire Uber.mdx", hero, "weapon")
					SaveEffectHandle(udg_hash, h, 8, ef)
					ef = nil
				end
				attacknew = (3 + 2 * lvl) * R2I(time - 3.)
				if attackold ~= attacknew then
					SetAttackAbilityLevel(hero, attacknew - attackold)
					SetAttackSpeedAbilityLevel(hero, attacknew - attackold)
					SaveInteger(udg_hash, hhero, $B2, attacknew)
				end
			end
		else
			xold = xnew
			yold = ynew
			SaveReal(udg_hash, h, 5, xold)
			SaveReal(udg_hash, h, 6, yold)
			if time >= 3. then
				SetAttackAbilityLevel(hero, -attackold)
				SetAttackSpeedAbilityLevel(hero, -attackold)
				SaveInteger(udg_hash, hhero, $B2, 0)
				if circlego then
					circlego = false
					SaveBoolean(udg_hash, h, 4, circlego)
					dammi = LoadUnitHandle(udg_hash, h, $A)
					ef = LoadEffectHandle(udg_hash, h, 7)
					DestroyEffect(ef)
					ef = nil
					KillUnit(dammi)
					dammi = nil
					RemoveUnit(LoadUnitHandle(udg_hash, GetHandleId(hero), FourCC('v')))
				end
				if maximum then
					maximum = false
					SaveBoolean(udg_hash, h, 9, maximum)
					SaveBoolean(udg_hash, GetHandleId(hero), $B3, false)
					ef = LoadEffectHandle(udg_hash, h, 8)
					DestroyEffect(ef)
					ef = nil
				end
			end
			time = .0
			SaveReal(udg_hash, h, 2, time)
		end
	end
	t = nil
	hero = nil
end

function Trig_Learn_Fire_Position_Actions()
	local lvl = GetUnitAbilityLevel(GetLearningUnit(), FourCC('A0QV')) ---@type number integer
	local t ---@type timer
	local h ---@type number integer
	local hero = GetLearningUnit() ---@type unit
	if lvl == 1 then
		t = CreateTimer()
		h = GetHandleId(t)
		SaveUnitHandle(udg_hash, h, 1, hero)
		SaveReal(udg_hash, h, 2, .0)
		SaveBoolean(udg_hash, h, 3, true)
		SaveBoolean(udg_hash, h, 4, false)
		SaveReal(udg_hash, h, 5, GetUnitX(hero))
		SaveReal(udg_hash, h, 6, GetUnitY(hero))
		SaveBoolean(udg_hash, h, 9, false)
		TimerStart(t, .1, true, Trig_Learn_Fire_Position_Actions_Timer)
		t = nil
	end
	hero = nil
end

---@return boolean
function Trig_Learn_Fire_Position_Conditions()
	return GetUnitTypeId(GetLearningUnit()) ~= FourCC('h00U') and GetLearnedSkill() == FourCC('A0QV') and IsUnitIllusion(GetLearningUnit()) == false
end

function InitTrig_Learn_Fire_Position()
	local index = 0 ---@type number integer
	gg_trg_Learn_Fire_Position = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Fire_Position, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Fire_Position, Condition(Trig_Learn_Fire_Position_Conditions))
	TriggerAddAction(gg_trg_Learn_Fire_Position, Trig_Learn_Fire_Position_Actions)
end

function Trig_Dwarf_Cannon_Move_Actions()
	local t = GetExpiredTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	local caster = LoadUnitHandle(udg_hash, h, 1) ---@type unit
	local order = GetUnitCurrentOrder(caster) ---@type number integer
	local orderId ---@type number integer
	local wait1 = LoadInteger(udg_hash, h, 20) ---@type number integer
	local dagger ---@type unit
	local gdamage ---@type group
	local x ---@type number real
	local y ---@type number real
	local angle ---@type number real
	local ef ---@type effect
	local wait = LoadInteger(udg_hash, h, 19) ---@type number integer
	local p ---@type player
	local damage ---@type number real
	local stuntime ---@type number real
	local g ---@type group
	local Picked ---@type unit
	local dest = false ---@type boolean
	orderId = $D0278
	if (orderId ~= 0) then
	else
		orderId = UnitId("channel")
		if (orderId ~= 0) then
		end
	end
	if order == orderId and wait1 > 0 then
		wait1 = wait1 - 1
		SaveInteger(udg_hash, h, 20, wait1)
		if wait1 == 0 then
			SetUnitTimeScale(caster, 1.)
			x = LoadReal(udg_hash, h, 4)
			y = LoadReal(udg_hash, h, 5)
			angle = LoadReal(udg_hash, h, 7)
			dagger = CreateUnit(GetOwningPlayer(caster), FourCC('h00U'), x, y, angle)
			ef = AddSpecialEffectTarget("Abilities\\Weapons\\Mortar\\MortarMissile.mdl", dagger, "origin")
			SetUnitX(dagger, x + 20. * Cos((angle) * bj_DEGTORAD))
			SetUnitY(dagger, y + 20. * Sin((angle) * bj_DEGTORAD))
			SetUnitTimeScale(dagger, 2.)
			SetUnitScale(dagger, 2., 2., 2.)
			SetUnitPathing(dagger, false)
			SetUnitFlyHeight(dagger, 50., .0)
			SaveUnitHandle(udg_hash, h, $A, dagger)
			SaveEffectHandle(udg_hash, h, $B, ef)
			ef = nil
			dagger = nil
			RemoveUnit(LoadUnitHandle(udg_hash, GetHandleId(caster), FourCC('u')))
			SaveBoolean(udg_hash, h, 21, true)
		end
	end
	if order ~= orderId and wait1 > 0 and LoadBoolean(udg_hash, h, 21) == false then
		SetUnitTimeScale(caster, 1.)
		RemoveUnit(LoadUnitHandle(udg_hash, GetHandleId(caster), FourCC('u')))
		dest = true
	end
	if LoadBoolean(udg_hash, h, 21) and wait > 0 then
		wait = wait - 1
		SaveInteger(udg_hash, h, 19, wait)
		angle = LoadReal(udg_hash, h, 7)
		dagger = LoadUnitHandle(udg_hash, h, $A)
		gdamage = LoadGroupHandle(udg_hash, h, 2)
		p = GetOwningPlayer(caster)
		damage = LoadReal(udg_hash, h, 3)
		stuntime = LoadReal(udg_hash, h, 6)
		g = CreateGroup()
		SetUnitPosition(dagger, GetUnitX(dagger) + 50. * Cos((angle) * bj_DEGTORAD), GetUnitY(dagger) + 50. * Sin((angle) * bj_DEGTORAD))
		GroupEnumUnitsInRange(g, GetUnitX(dagger) + 50. * Cos((angle) * bj_DEGTORAD), GetUnitY(dagger) + 50. * Sin((angle) * bj_DEGTORAD), 200., nil)
		while(true) do
			Picked = FirstOfGroup(g)
			if (Picked == nil) then break end
			if IsUnitEnemy(Picked, p) and IsUnitInGroup(Picked, gdamage) == false and GetUnitState(Picked, UNIT_STATE_LIFE) > .0 and IsUnitType(Picked, UNIT_TYPE_STRUCTURE) == false and IsUnitType(Picked, UNIT_TYPE_MAGIC_IMMUNE) == false and GetUnitTypeId(Picked) ~= FourCC('h00U') then
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\Rifle\\RifleImpact.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Abilities\\Weapons\\GyroCopter\\GyroCopterImpact.mdl", Picked, "chest"))
				DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPeasant.mdl", Picked, "origin"))
				StunUnitTimed(Picked, stuntime)
				GroupAddUnit(gdamage, Picked)
				UnitDamageTarget(caster, Picked, damage, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNKNOWN, WEAPON_TYPE_WHOKNOWS)
			end
			GroupRemoveUnit(g, Picked)
		end
		SaveGroupHandle(udg_hash, h, 2, gdamage)
		GroupClear(g)
		DestroyGroup(g)
		g = nil
		dagger = nil
		gdamage = nil
		p = nil
	end
	if LoadBoolean(udg_hash, h, 21) and wait <= 0 then
		dest = true
	end
	if dest then
		gdamage = LoadGroupHandle(udg_hash, h, 2)
		GroupClear(gdamage)
		DestroyGroup(gdamage)
		gdamage = nil
		dagger = LoadUnitHandle(udg_hash, h, $A)
		ef = LoadEffectHandle(udg_hash, h, $B)
		DestroyEffect(ef)
		ef = nil
		DestroyEffect(AddSpecialEffect("Abilities\\Weapons\\Mortar\\MortarMissile.mdl", GetUnitX(dagger), GetUnitY(dagger)))
		KillUnit(dagger)
		FlushChildHashtable(udg_hash, h)
		DestroyTimer(t)
		dagger = nil
	end
	t = nil
	caster = nil
end

function Trig_Dwarf_Cannon_Actions()
	local caster = GetSpellAbilityUnit() ---@type unit
	local x = GetUnitX(caster) ---@type number real
	local y = GetUnitY(caster) ---@type number real
	local target = GetSpellTargetUnit() ---@type unit
	local angle ---@type number real
	local gdamage = CreateGroup() ---@type group
	local lvl = GetUnitAbilityLevel(caster, FourCC('A0QU')) ---@type number integer
	local damage = (150. * lvl) + 50. ---@type number real
	local stuntime = 1. + 1. * lvl ---@type number real
	local loc ---@type location
	local tx ---@type number real
	local ty ---@type number real
	local dist ---@type number real
	local dagger ---@type unit
	local t = CreateTimer() ---@type timer
	local h = GetHandleId(t) ---@type number integer
	SetUnitTimeScale(caster, .15)
	SetUnitAnimationByIndex(caster, 3)
	if target == nil then
		loc = GetSpellTargetLoc()
		tx = GetLocationX(loc)
		ty = GetLocationY(loc)
	else
		tx = GetUnitX(target)
		ty = GetUnitY(target)
	end
	angle = bj_RADTODEG * Atan2(ty - y, tx - x)
	AddProgressBar(caster, 200., 1., 1.5, false, true, FourCC('u'), $C0, $C0, $C0)
	SaveUnitHandle(udg_hash, h, 1, caster)
	SaveGroupHandle(udg_hash, h, 2, gdamage)
	SaveReal(udg_hash, h, 3, damage)
	SaveReal(udg_hash, h, 4, x)
	SaveReal(udg_hash, h, 5, y)
	SaveReal(udg_hash, h, 6, stuntime)
	SaveReal(udg_hash, h, 7, angle)
	SaveInteger(udg_hash, h, 9, lvl)
	SaveInteger(udg_hash, h, 19, 30)
	SaveInteger(udg_hash, h, 20, 50)
	SaveBoolean(udg_hash, h, 21, false)
	TimerStart(t, .03, true, Trig_Dwarf_Cannon_Move_Actions)
	caster = nil
	target = nil
	gdamage = nil
	RemoveLocation(loc)
	loc = nil
	t = nil
end

---@return boolean
function Trig_Dwarf_Cannon_Conditions()
	return GetSpellAbilityId() == FourCC('A0QU')
end

function InitTrig_Dwarf_Cannon()
	local index = 0 ---@type number integer
	gg_trg_Dwarf_Cannon = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Dwarf_Cannon, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Dwarf_Cannon, Condition(Trig_Dwarf_Cannon_Conditions))
	TriggerAddAction(gg_trg_Dwarf_Cannon, Trig_Dwarf_Cannon_Actions)
end

function Trig_Load_Sniper_Actions()
	AbilityPreload(FourCC('A0QR'), 6)
	AbilityPreload(FourCC('A0QV'), 6)
	AbilityPreload(FourCC('A0QT'), 6)
	AbilityPreload(FourCC('A0QU'), 3)
	AbilityPreload(FourCC('A0QS'), 6)
	AbilityPreload(FourCC('B05A'), 1)
	EffectPreload("Abilities\\Weapons\\SteamTank\\SteamTankImpact.mdl")
	EffectPreload("Abilities\\Weapons\\GyroCopter\\GyroCopterMissile.mdl")
	EffectPreload("Abilities\\Weapons\\GyroCopter\\GyroCopterImpact.mdl")
	EffectPreload("Abilities\\Weapons\\CannonTowerMissile\\CannonTowerMissile.mdl")
	EffectPreload("Abilities\\Weapons\\Rifle\\RifleImpact.mdl")
	EffectPreload("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPeasant.mdl")
	EffectPreload("Effects\\Fire Uber.mdx")
	EffectPreload("Effects\\CircleOutBuff.mdx")
	EffectPreload("Abilities\\Weapons\\Mortar\\MortarMissile.mdl")
	EnableTrigger(gg_trg_Case_Shot)
	EnableTrigger(gg_trg_Learn_Fire_Position)
	EnableTrigger(gg_trg_Dwarf_Cannon)
end

function InitTrig_Load_Sniper()
	gg_trg_Load_Sniper = CreateTrigger()
	TriggerAddAction(gg_trg_Load_Sniper, Trig_Load_Sniper_Actions)
end

function InitCustomTriggers()
	InitTrig_Players_Start_Script()
	InitTrig_InitMap()
	InitTrig_InitMapStage2()
	InitTrig_System_Spells_Load()
	InitTrig_Items_Preload()
	InitTrig_Igrok_Massiv_Save()
	InitTrig_Load_Vsiakoe()
	InitTrig_Igrok_Massiv_Liver()
	InitTrig_Messager()
	InitTrig_Create_TExttags_about_Shops()
	InitTrig_InitHashtable()
	InitTrig_Save_Sounds()
	InitTrig_HandleCounter()
	InitTrig_Set_Chlenix()
	InitTrig_Set_Energy_Walls()
	InitTrig_Nachalo_Eiti_aren()
	InitTrig_HeroDeadonEitiArena()
	InitTrig__PortalCheckTop()
	InitTrig__PortalCheckBot()
	InitTrig_LinkItemsInit()
	InitTrig_ItemPickedUp()
	InitTrig_ChargesConnecting()
	InitTrig_Remove_Dammi_Items()
	InitTrig_Save_Items_Cost()
	InitTrig_Ice_Boss()
	InitTrig_Ice_Wall()
	InitTrig_Ice_Storm()
	InitTrig_Ice_Rain()
	InitTrig_Cold_Punishment()
	InitTrig_Ice_Restoration()
	InitTrig_BossStart()
	InitTrig_FlameSpells()
	InitTrig_Fire_Circle()
	InitTrig_Fire_Meteor()
	InitTrig_Upgrade_Summons()
	InitTrig_UseBeornSpells()
	InitTrig_Start_Beorn_Den()
	InitTrig_Beorn_Push()
	InitTrig_Beorn_Stomp()
	InitTrig_HeroUnitGameSave()
	InitTrig_INIT()
	InitTrig_Pick_Hero_Upgrade()
	InitTrig_Hero_Dead()
	InitTrig_Start_Duel()
	InitTrig_Hero_Death_On_Duel()
	InitTrig_Timer_Check()
	InitTrig_go_mochiytb_portal()
	InitTrig_Start_game()
	InitTrig_StartWave()
	InitTrig_MobsAttackBase()
	InitTrig_TeleportStuckedCreeps()
	InitTrig_vhodit_v_zony()
	InitTrig_Add_Gold_System_Receiving_Gold_for_Creeps()
	InitTrig_Init_System_Receiving_Gold_for_Creeps()
	InitTrig_Init_System_Receiving_Experience_for_Creeps()
	InitTrig_Add_Experience_System_Receiving_Experience_for_Creeps()
	InitTrig_Init_Potion_System()
	InitTrig_Mob_Dead_Create_Potion()
	InitTrig_Check_Potion_Picked_Up()
	InitTrig_InitSystem()
	InitTrig_EnterUnit()
	InitTrig_AddDamage()
	InitTrig_TimeTalisman()
	InitTrig_Take_Paladin_Armor()
	InitTrig_Take_Archimagus_Staff()
	InitTrig_Lost_Charged_Staff_of_Lightning()
	InitTrig_Blood_Bow()
	InitTrig_Balance_Ring()
	InitTrig_Armageddon_Staff()
	InitTrig_Sargeras_Crown()
	InitTrig_Lost_Sargeras_Crown()
	InitTrig_Take_Sargeras_Crown()
	InitTrig_Lost_Archimagus_Armor()
	InitTrig_Take_Archimagus_Armor()
	InitTrig_Sorcerers_Talisman_Cast()
	InitTrig_Sorcerers_Talisman()
	InitTrig_Sorcerers_Talisman_Dead_Unit()
	InitTrig_Orc_Banner()
	InitTrig_Devil_Axe()
	InitTrig_Devil_Axe_Kill_Unit()
	InitTrig_Tokugawas_Katan_Kill_Unit()
	InitTrig_Tokugawas_Katan()
	InitTrig_Kings_Armor()
	InitTrig_Steel_Bib()
	InitTrig_Archimagus_Staff()
	InitTrig_Isidors_Scepter()
	InitTrig_Detached_Shield_Use()
	InitTrig_Cuirass_of_Invulnerable_Use2()
	InitTrig_Lost_Cuirass_of_Invulnerable()
	InitTrig_Take_Cuirass_of_Invulnerable()
	InitTrig_Fire_Staff()
	InitTrig_Demon_Axe()
	InitTrig_Demon_Axe_Kill_Unit()
	InitTrig_Boots_Rescue()
	InitTrig_Astral_Staff()
	InitTrig_Healer_Staff()
	InitTrig_Magic_Amulet()
	InitTrig_Blood_Dagger()
	InitTrig_Agility_Blade()
	InitTrig_Bone_Staff_Set_Summon_Ability_Level()
	InitTrig_Novice_Amulet()
	InitTrig_Glove_of_Andromat()
	InitTrig_Glove_of_Midas()
	InitTrig_Heroes_more_attacked_priority_when_guards()
	InitTrig_Player_Fast_Purchase_System()
	InitTrig_Show_hint_abount_hints()
	InitTrig_Show_Hint_Abount_Items()
	InitTrig_Hint_About_Random()
	InitTrig_Show_hint_abount_reference_panel()
	InitTrig_Show_Ability_Learn()
	InitTrig_System_Personal_Items_Buy_Item()
	InitTrig_System_Personal_Items_Pick_Up_Item()
	InitTrig_no_attack()
	InitTrig_Select_Refrence_Panel()
	InitTrig_ShopAnimation()
	InitTrig_ShopStopAnimation()
	InitTrig_RedMarkToUnit()
	InitTrig_UnSelectedDummyRedMark()
	InitTrig_SpecEffect_on_Casters()
	InitTrig_PortalSpecEffects()
	InitTrig_Gates_Start_Animation()
	InitTrig_PlayerEnterGameCommand()
	InitTrig_PlayerUseSpellGameCommand()
	InitTrig_GuardsExorcistDead()
	InitTrig_PauseUnitWhenDefeat()
	InitTrig_PauseUnitWhenWin()
	InitTrig_GameEndWin()
	InitTrig_Respawn_trees_Init()
	InitTrig_Respawn_trees()
	InitTrig_Day_Weather()
	InitTrig_Sky_Morning()
	InitTrig_Sky_Day()
	InitTrig_Night_Weather()
	InitTrig_Sky_Evening()
	InitTrig_Sky_Night()
	InitTrig_Lightnings_Weather_Effect_Rainy()
	InitTrig_Periodic_Rune_Creation()
	InitTrig_Rune_PickedUp()
	InitTrig_Initialization_MultiBoard()
	InitTrig_Hero_MultiBoard_LvlUp()
	InitTrig_Time_Check_and_Player_Gold_for_MultiBoard()
	InitTrig_Reincarnation_Skeletons()
	InitTrig_BossSkeletRaise()
	InitTrig_BossSkeletSkillActiv()
	InitTrig_Fire_Arrow()
	InitTrig_Use_UnholyFrenzy_and_Fire_Arrow()
	InitTrig_Create_Tombstone()
	InitTrig_ZombieExploadDeath()
	InitTrig_Damned_Soul()
	InitTrig_Use_PowerofHorror_and_Curse_and_Slam_and_Dumned_Soul()
	InitTrig_Throw_Meat()
	InitTrig_Earth_Clap()
	InitTrig_Ghoul_Jump()
	InitTrig_BurrowStrike()
	InitTrig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump()
	InitTrig_BeetleCorpseBurrowCast()
	InitTrig_BeetleCorpseBurrow()
	InitTrig_Cocoon_Creation()
	InitTrig_Poisonous_Spittle_Cast()
	InitTrig_Holes_Of_Grave_Diggers_Debug_Kill()
	InitTrig_Holes_Of_Grave_Diggers_Cast()
	InitTrig_Nerub_Spider()
	InitTrig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger()
	InitTrig_Damned_Ents_Reincarnation()
	InitTrig_Rage_of_Decay()
	InitTrig_Use_ThrowStone_and_TurnIntoEnt()
	InitTrig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay()
	InitTrig_Troll_Dead_Remove_Bugs()
	InitTrig_Boss_Troll_Entangle_Throw()
	InitTrig_Use_Berserk_and_BerserkBoss()
	InitTrig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle()
	InitTrig_Aspect_of_Magic_Protection()
	InitTrig_Remove_Effects_From_Bosses()
	InitTrig_Metka_Dreneev()
	InitTrig_Fast_Attack()
	InitTrig_Bash_Attack()
	InitTrig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack()
	InitTrig_Blink_Strike()
	InitTrig_Victim_Search()
	InitTrig_Black_Hole()
	InitTrig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar()
	InitTrig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH()
	InitTrig_Weakness()
	InitTrig_Astral_Dispersal()
	InitTrig_Infernal_Ram()
	InitTrig_Fiery_Blow()
	InitTrig_Bloody_Jump()
	InitTrig_Blood_Absorption()
	InitTrig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u()
	InitTrig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4()
	InitTrig_Hatred_of_fire()
	InitTrig_set_fire()
	InitTrig_set_fire_2()
	InitTrig_the_creation_of_the_image()
	InitTrig_fiery_explosions()
	InitTrig_Breathoffire()
	InitTrig_Fire_Explosions()
	InitTrig_BossStomp()
	InitTrig_Mark_of_Fire()
	InitTrig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire()
	InitTrig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp()
	InitTrig_Power_of_Skeletons()
	InitTrig_Water_Elemental_Load()
	InitTrig_Init_kreeps()
	InitTrig_spirits_of_water_dead()
	InitTrig_Skill_Gertva()
	InitTrig_Opening_Streams()
	InitTrig_Water_Explosion()
	InitTrig_Tsunami()
	InitTrig_Guardsman_Load()
	InitTrig_Protective_Stand_Switch()
	InitTrig_Learn_Fighting_Skills()
	InitTrig_Ram_Board()
	InitTrig_Warcry()
	InitTrig_Drenor_Bull_Load()
	InitTrig_Drenor_Bull_Show_Hint()
	InitTrig_Drenor_Bull_Show_Rage()
	InitTrig_Axe_Throw()
	InitTrig_Violent_Roar()
	InitTrig_upgrade_Berserk()
	InitTrig_Learn_Spell_Rage()
	InitTrig_GrogTarDead()
	InitTrig_attack_hero_Rage()
	InitTrig_kill_hero_Rage()
	InitTrig_Sniatie_Rage()
	InitTrig_Timer_Rage()
	InitTrig_Illusionist_Load()
	InitTrig_Reflection()
	InitTrig_Illusory_Attack()
	InitTrig_Summon_Illusions_with_Reflection()
	InitTrig_Illusions_with_Phantoms_Dead()
	InitTrig_BladeMaster_Load()
	InitTrig_Dissection()
	InitTrig_Whirlwind()
	InitTrig_Imboweling()
	InitTrig_Master_of_Lightnings_Load()
	InitTrig_Thundercloud()
	InitTrig_Power_of_Lightnings()
	InitTrig_Electric_Field()
	InitTrig_Storm()
	InitTrig_Respawnlol()
	InitTrig_Ranger_Load()
	InitTrig_MultiShotSwitch()
	InitTrig_Learn_Release_of_Arrows()
	InitTrig_Release_of_Arrows()
	InitTrig_Dexterity_of_the_Ranger()
	InitTrig_Healer_Load()
	InitTrig_Good_Healing()
	InitTrig_Spiritual_Communication()
	InitTrig_Curing_Light()
	InitTrig_Guardian_Angel()
	InitTrig_Paladin_Load()
	InitTrig_Spiral_of_Light()
	InitTrig_Keeper_Seal()
	InitTrig_Light_Hammer()
	InitTrig_God_Hand()
	InitTrig_Stone_Guard_Load()
	InitTrig_Boulder_Throw()
	InitTrig_Earth_Shiver()
	InitTrig_Learn_Stone_Armor()
	InitTrig_Rock_Strike()
	InitTrig_Archdruid_Load()
	InitTrig_Energy_of_Nature()
	InitTrig_Life_Chain()
	InitTrig_Ent_Creation()
	InitTrig_Nature_Wrath()
	InitTrig_Falling_Star()
	InitTrig_Moon_Chackram()
	InitTrig_Moon_Wind()
	InitTrig_Night_Heart()
	InitTrig_MoonWarrior_Load()
	InitTrig_Ancient_Communication()
	InitTrig_Learn_Power_of_Ancestors()
	InitTrig_Switch_Power_of_Ancestors()
	InitTrig_Earth_Split()
	InitTrig_Ancient_Help()
	InitTrig_SpiritBreaker_Load()
	InitTrig_Dash()
	InitTrig_Dagger_Throw()
	InitTrig_Kara_Justice()
	InitTrig_Warden_Load()
	InitTrig_Strength_Fist()
	InitTrig_Fighting_Impact()
	InitTrig_Learn_Marshal_Armor()
	InitTrig_Illusive_Army()
	InitTrig_Marshal_Load()
	InitTrig_Chain_Lightning()
	InitTrig_Magic_Trap()
	InitTrig_Remove_Lightning_Form_Dead_Units()
	InitTrig_EnergyWave()
	InitTrig_Magic_Epicenter()
	InitTrig_Load_ArchMage()
	InitTrig_Toxic_Field()
	InitTrig_Poison_Bomb()
	InitTrig_Learn_Ogre_Rage()
	InitTrig_Potion_of_Growth()
	InitTrig_Load_Alchemist()
	InitTrig_Case_Shot()
	InitTrig_Learn_Fire_Position()
	InitTrig_Dwarf_Cannon()
	InitTrig_Load_Sniper()
end

function RunInitializationTriggers()
	ConditionalTriggerExecute(gg_trg_InitHashtable)
	ConditionalTriggerExecute(gg_trg_InitSystem)
	ConditionalTriggerExecute(gg_trg_Init_kreeps)
	ConditionalTriggerExecute(gg_trg_Drenor_Bull_Load)
end

function InitCustomPlayerSlots()
	SetPlayerStartLocation(Player(0), 0)
	ForcePlayerStartLocation(Player(0), 0)
	SetPlayerColor(Player(0), ConvertPlayerColor(0))
	SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(0), false)
	SetPlayerController(Player(0), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(1), 1)
	ForcePlayerStartLocation(Player(1), 1)
	SetPlayerColor(Player(1), ConvertPlayerColor(1))
	SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(1), false)
	SetPlayerController(Player(1), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(2), 2)
	ForcePlayerStartLocation(Player(2), 2)
	SetPlayerColor(Player(2), ConvertPlayerColor(2))
	SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(2), false)
	SetPlayerController(Player(2), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(3), 3)
	ForcePlayerStartLocation(Player(3), 3)
	SetPlayerColor(Player(3), ConvertPlayerColor(3))
	SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(3), false)
	SetPlayerController(Player(3), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(4), 4)
	ForcePlayerStartLocation(Player(4), 4)
	SetPlayerColor(Player(4), ConvertPlayerColor(4))
	SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(4), false)
	SetPlayerController(Player(4), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(5), 5)
	ForcePlayerStartLocation(Player(5), 5)
	SetPlayerColor(Player(5), ConvertPlayerColor(5))
	SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(5), false)
	SetPlayerController(Player(5), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(6), 6)
	ForcePlayerStartLocation(Player(6), 6)
	SetPlayerColor(Player(6), ConvertPlayerColor(6))
	SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(6), false)
	SetPlayerController(Player(6), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(7), 7)
	ForcePlayerStartLocation(Player(7), 7)
	SetPlayerColor(Player(7), ConvertPlayerColor(7))
	SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(7), false)
	SetPlayerController(Player(7), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(8), 8)
	ForcePlayerStartLocation(Player(8), 8)
	SetPlayerColor(Player(8), ConvertPlayerColor(8))
	SetPlayerRacePreference(Player(8), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(8), false)
	SetPlayerController(Player(8), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player($B), 9)
	ForcePlayerStartLocation(Player($B), 9)
	SetPlayerColor(Player($B), ConvertPlayerColor($B))
	SetPlayerRacePreference(Player($B), RACE_PREF_UNDEAD)
	SetPlayerRaceSelectable(Player($B), false)
	SetPlayerController(Player($B), MAP_CONTROL_COMPUTER)
end

function InitCustomTeams()
	SetPlayerTeam(Player(0), 0)
	SetPlayerState(Player(0), PLAYER_STATE_ALLIED_VICTORY, 1)
	SetPlayerTeam(Player(1), 0)
	SetPlayerState(Player(1), PLAYER_STATE_ALLIED_VICTORY, 1)
	SetPlayerTeam(Player(2), 0)
	SetPlayerState(Player(2), PLAYER_STATE_ALLIED_VICTORY, 1)
	SetPlayerTeam(Player(3), 0)
	SetPlayerState(Player(3), PLAYER_STATE_ALLIED_VICTORY, 1)
	SetPlayerTeam(Player(4), 0)
	SetPlayerState(Player(4), PLAYER_STATE_ALLIED_VICTORY, 1)
	SetPlayerTeam(Player(5), 0)
	SetPlayerState(Player(5), PLAYER_STATE_ALLIED_VICTORY, 1)
	SetPlayerTeam(Player(6), 0)
	SetPlayerState(Player(6), PLAYER_STATE_ALLIED_VICTORY, 1)
	SetPlayerTeam(Player(7), 0)
	SetPlayerState(Player(7), PLAYER_STATE_ALLIED_VICTORY, 1)
	SetPlayerTeam(Player(8), 0)
	SetPlayerState(Player(8), PLAYER_STATE_ALLIED_VICTORY, 1)
	SetPlayerAllianceStateAllyBJ(Player(0), Player(1), true)
	SetPlayerAllianceStateAllyBJ(Player(0), Player(2), true)
	SetPlayerAllianceStateAllyBJ(Player(0), Player(3), true)
	SetPlayerAllianceStateAllyBJ(Player(0), Player(4), true)
	SetPlayerAllianceStateAllyBJ(Player(0), Player(5), true)
	SetPlayerAllianceStateAllyBJ(Player(0), Player(6), true)
	SetPlayerAllianceStateAllyBJ(Player(0), Player(7), true)
	SetPlayerAllianceStateAllyBJ(Player(0), Player(8), true)
	SetPlayerAllianceStateAllyBJ(Player(1), Player(0), true)
	SetPlayerAllianceStateAllyBJ(Player(1), Player(2), true)
	SetPlayerAllianceStateAllyBJ(Player(1), Player(3), true)
	SetPlayerAllianceStateAllyBJ(Player(1), Player(4), true)
	SetPlayerAllianceStateAllyBJ(Player(1), Player(5), true)
	SetPlayerAllianceStateAllyBJ(Player(1), Player(6), true)
	SetPlayerAllianceStateAllyBJ(Player(1), Player(7), true)
	SetPlayerAllianceStateAllyBJ(Player(1), Player(8), true)
	SetPlayerAllianceStateAllyBJ(Player(2), Player(0), true)
	SetPlayerAllianceStateAllyBJ(Player(2), Player(1), true)
	SetPlayerAllianceStateAllyBJ(Player(2), Player(3), true)
	SetPlayerAllianceStateAllyBJ(Player(2), Player(4), true)
	SetPlayerAllianceStateAllyBJ(Player(2), Player(5), true)
	SetPlayerAllianceStateAllyBJ(Player(2), Player(6), true)
	SetPlayerAllianceStateAllyBJ(Player(2), Player(7), true)
	SetPlayerAllianceStateAllyBJ(Player(2), Player(8), true)
	SetPlayerAllianceStateAllyBJ(Player(3), Player(0), true)
	SetPlayerAllianceStateAllyBJ(Player(3), Player(1), true)
	SetPlayerAllianceStateAllyBJ(Player(3), Player(2), true)
	SetPlayerAllianceStateAllyBJ(Player(3), Player(4), true)
	SetPlayerAllianceStateAllyBJ(Player(3), Player(5), true)
	SetPlayerAllianceStateAllyBJ(Player(3), Player(6), true)
	SetPlayerAllianceStateAllyBJ(Player(3), Player(7), true)
	SetPlayerAllianceStateAllyBJ(Player(3), Player(8), true)
	SetPlayerAllianceStateAllyBJ(Player(4), Player(0), true)
	SetPlayerAllianceStateAllyBJ(Player(4), Player(1), true)
	SetPlayerAllianceStateAllyBJ(Player(4), Player(2), true)
	SetPlayerAllianceStateAllyBJ(Player(4), Player(3), true)
	SetPlayerAllianceStateAllyBJ(Player(4), Player(5), true)
	SetPlayerAllianceStateAllyBJ(Player(4), Player(6), true)
	SetPlayerAllianceStateAllyBJ(Player(4), Player(7), true)
	SetPlayerAllianceStateAllyBJ(Player(4), Player(8), true)
	SetPlayerAllianceStateAllyBJ(Player(5), Player(0), true)
	SetPlayerAllianceStateAllyBJ(Player(5), Player(1), true)
	SetPlayerAllianceStateAllyBJ(Player(5), Player(2), true)
	SetPlayerAllianceStateAllyBJ(Player(5), Player(3), true)
	SetPlayerAllianceStateAllyBJ(Player(5), Player(4), true)
	SetPlayerAllianceStateAllyBJ(Player(5), Player(6), true)
	SetPlayerAllianceStateAllyBJ(Player(5), Player(7), true)
	SetPlayerAllianceStateAllyBJ(Player(5), Player(8), true)
	SetPlayerAllianceStateAllyBJ(Player(6), Player(0), true)
	SetPlayerAllianceStateAllyBJ(Player(6), Player(1), true)
	SetPlayerAllianceStateAllyBJ(Player(6), Player(2), true)
	SetPlayerAllianceStateAllyBJ(Player(6), Player(3), true)
	SetPlayerAllianceStateAllyBJ(Player(6), Player(4), true)
	SetPlayerAllianceStateAllyBJ(Player(6), Player(5), true)
	SetPlayerAllianceStateAllyBJ(Player(6), Player(7), true)
	SetPlayerAllianceStateAllyBJ(Player(6), Player(8), true)
	SetPlayerAllianceStateAllyBJ(Player(7), Player(0), true)
	SetPlayerAllianceStateAllyBJ(Player(7), Player(1), true)
	SetPlayerAllianceStateAllyBJ(Player(7), Player(2), true)
	SetPlayerAllianceStateAllyBJ(Player(7), Player(3), true)
	SetPlayerAllianceStateAllyBJ(Player(7), Player(4), true)
	SetPlayerAllianceStateAllyBJ(Player(7), Player(5), true)
	SetPlayerAllianceStateAllyBJ(Player(7), Player(6), true)
	SetPlayerAllianceStateAllyBJ(Player(7), Player(8), true)
	SetPlayerAllianceStateAllyBJ(Player(8), Player(0), true)
	SetPlayerAllianceStateAllyBJ(Player(8), Player(1), true)
	SetPlayerAllianceStateAllyBJ(Player(8), Player(2), true)
	SetPlayerAllianceStateAllyBJ(Player(8), Player(3), true)
	SetPlayerAllianceStateAllyBJ(Player(8), Player(4), true)
	SetPlayerAllianceStateAllyBJ(Player(8), Player(5), true)
	SetPlayerAllianceStateAllyBJ(Player(8), Player(6), true)
	SetPlayerAllianceStateAllyBJ(Player(8), Player(7), true)
	SetPlayerAllianceStateVisionBJ(Player(0), Player(1), true)
	SetPlayerAllianceStateVisionBJ(Player(0), Player(2), true)
	SetPlayerAllianceStateVisionBJ(Player(0), Player(3), true)
	SetPlayerAllianceStateVisionBJ(Player(0), Player(4), true)
	SetPlayerAllianceStateVisionBJ(Player(0), Player(5), true)
	SetPlayerAllianceStateVisionBJ(Player(0), Player(6), true)
	SetPlayerAllianceStateVisionBJ(Player(0), Player(7), true)
	SetPlayerAllianceStateVisionBJ(Player(0), Player(8), true)
	SetPlayerAllianceStateVisionBJ(Player(1), Player(0), true)
	SetPlayerAllianceStateVisionBJ(Player(1), Player(2), true)
	SetPlayerAllianceStateVisionBJ(Player(1), Player(3), true)
	SetPlayerAllianceStateVisionBJ(Player(1), Player(4), true)
	SetPlayerAllianceStateVisionBJ(Player(1), Player(5), true)
	SetPlayerAllianceStateVisionBJ(Player(1), Player(6), true)
	SetPlayerAllianceStateVisionBJ(Player(1), Player(7), true)
	SetPlayerAllianceStateVisionBJ(Player(1), Player(8), true)
	SetPlayerAllianceStateVisionBJ(Player(2), Player(0), true)
	SetPlayerAllianceStateVisionBJ(Player(2), Player(1), true)
	SetPlayerAllianceStateVisionBJ(Player(2), Player(3), true)
	SetPlayerAllianceStateVisionBJ(Player(2), Player(4), true)
	SetPlayerAllianceStateVisionBJ(Player(2), Player(5), true)
	SetPlayerAllianceStateVisionBJ(Player(2), Player(6), true)
	SetPlayerAllianceStateVisionBJ(Player(2), Player(7), true)
	SetPlayerAllianceStateVisionBJ(Player(2), Player(8), true)
	SetPlayerAllianceStateVisionBJ(Player(3), Player(0), true)
	SetPlayerAllianceStateVisionBJ(Player(3), Player(1), true)
	SetPlayerAllianceStateVisionBJ(Player(3), Player(2), true)
	SetPlayerAllianceStateVisionBJ(Player(3), Player(4), true)
	SetPlayerAllianceStateVisionBJ(Player(3), Player(5), true)
	SetPlayerAllianceStateVisionBJ(Player(3), Player(6), true)
	SetPlayerAllianceStateVisionBJ(Player(3), Player(7), true)
	SetPlayerAllianceStateVisionBJ(Player(3), Player(8), true)
	SetPlayerAllianceStateVisionBJ(Player(4), Player(0), true)
	SetPlayerAllianceStateVisionBJ(Player(4), Player(1), true)
	SetPlayerAllianceStateVisionBJ(Player(4), Player(2), true)
	SetPlayerAllianceStateVisionBJ(Player(4), Player(3), true)
	SetPlayerAllianceStateVisionBJ(Player(4), Player(5), true)
	SetPlayerAllianceStateVisionBJ(Player(4), Player(6), true)
	SetPlayerAllianceStateVisionBJ(Player(4), Player(7), true)
	SetPlayerAllianceStateVisionBJ(Player(4), Player(8), true)
	SetPlayerAllianceStateVisionBJ(Player(5), Player(0), true)
	SetPlayerAllianceStateVisionBJ(Player(5), Player(1), true)
	SetPlayerAllianceStateVisionBJ(Player(5), Player(2), true)
	SetPlayerAllianceStateVisionBJ(Player(5), Player(3), true)
	SetPlayerAllianceStateVisionBJ(Player(5), Player(4), true)
	SetPlayerAllianceStateVisionBJ(Player(5), Player(6), true)
	SetPlayerAllianceStateVisionBJ(Player(5), Player(7), true)
	SetPlayerAllianceStateVisionBJ(Player(5), Player(8), true)
	SetPlayerAllianceStateVisionBJ(Player(6), Player(0), true)
	SetPlayerAllianceStateVisionBJ(Player(6), Player(1), true)
	SetPlayerAllianceStateVisionBJ(Player(6), Player(2), true)
	SetPlayerAllianceStateVisionBJ(Player(6), Player(3), true)
	SetPlayerAllianceStateVisionBJ(Player(6), Player(4), true)
	SetPlayerAllianceStateVisionBJ(Player(6), Player(5), true)
	SetPlayerAllianceStateVisionBJ(Player(6), Player(7), true)
	SetPlayerAllianceStateVisionBJ(Player(6), Player(8), true)
	SetPlayerAllianceStateVisionBJ(Player(7), Player(0), true)
	SetPlayerAllianceStateVisionBJ(Player(7), Player(1), true)
	SetPlayerAllianceStateVisionBJ(Player(7), Player(2), true)
	SetPlayerAllianceStateVisionBJ(Player(7), Player(3), true)
	SetPlayerAllianceStateVisionBJ(Player(7), Player(4), true)
	SetPlayerAllianceStateVisionBJ(Player(7), Player(5), true)
	SetPlayerAllianceStateVisionBJ(Player(7), Player(6), true)
	SetPlayerAllianceStateVisionBJ(Player(7), Player(8), true)
	SetPlayerAllianceStateVisionBJ(Player(8), Player(0), true)
	SetPlayerAllianceStateVisionBJ(Player(8), Player(1), true)
	SetPlayerAllianceStateVisionBJ(Player(8), Player(2), true)
	SetPlayerAllianceStateVisionBJ(Player(8), Player(3), true)
	SetPlayerAllianceStateVisionBJ(Player(8), Player(4), true)
	SetPlayerAllianceStateVisionBJ(Player(8), Player(5), true)
	SetPlayerAllianceStateVisionBJ(Player(8), Player(6), true)
	SetPlayerAllianceStateVisionBJ(Player(8), Player(7), true)
	SetPlayerTeam(Player($B), 1)
	SetPlayerState(Player($B), PLAYER_STATE_ALLIED_VICTORY, 1)
end

function InitAllyPriorities()
	SetStartLocPrioCount(0, 8)
	SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 3, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 4, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(1, 8)
	SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 1, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 2, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 3, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 4, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(2, 8)
	SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 2, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 3, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 4, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(3, 8)
	SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 3, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 4, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(4, 8)
	SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 3, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 4, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(5, 8)
	SetStartLocPrio(5, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 3, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 4, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(6, 8)
	SetStartLocPrio(6, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 3, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 4, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 5, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(7, 8)
	SetStartLocPrio(7, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 3, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 4, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 5, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 6, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(8, 8)
	SetStartLocPrio(8, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 3, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 4, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 5, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 6, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 7, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(9, 3)
	SetStartLocPrio(9, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(9, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(9, 2, 2, MAP_LOC_PRIO_HIGH)
end

function main()
	local we ---@type weathereffect
	local i ---@type number integer
	local p ---@type player
	local u ---@type unit
	local unitID ---@type number integer
	local t ---@type trigger
	local life ---@type number real
	local index ---@type number integer
	local rectRegion ---@type region
	SetCameraBounds(-5760. + GetCameraMargin(CAMERA_MARGIN_LEFT), -10624. + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 5504. - GetCameraMargin(CAMERA_MARGIN_RIGHT), 4480. - GetCameraMargin(CAMERA_MARGIN_TOP), -5760. + GetCameraMargin(CAMERA_MARGIN_LEFT), 4480. - GetCameraMargin(CAMERA_MARGIN_TOP), 5504. - GetCameraMargin(CAMERA_MARGIN_RIGHT), -10624. + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
	SetDayNightModels("Environment\\DNC\\DNCDalaran\\DNCDalaranTerrain\\DNCDalaranTerrain.mdl", "Environment\\DNC\\DNCDalaran\\DNCDalaranUnit\\DNCDalaranUnit.mdl")
	SetWaterBaseColor(0, $80, 0, $FF)
	NewSoundEnvironment("Default")
	SetAmbientDaySound("FelwoodDay")
	SetAmbientNightSound("FelwoodNight")
	SetMapMusic("Music", true, 0)
	gg_snd_HeroFirelordYesAttack1 = CreateSound("Units\\Creeps\\HeroFlameLord\\HeroFirelordYesAttack1.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroFirelordYesAttack1, "HeroFireLordYesAttack")
	SetSoundDuration(gg_snd_HeroFirelordYesAttack1, $984)
	gg_snd_HeroFirelordYesAttack2 = CreateSound("Units\\Creeps\\HeroFlameLord\\HeroFirelordYesAttack2.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroFirelordYesAttack2, "HeroFireLordYesAttack")
	SetSoundDuration(gg_snd_HeroFirelordYesAttack2, $DAF)
	gg_snd_HeroFirelordYesAttack3 = CreateSound("Units\\Creeps\\HeroFlameLord\\HeroFirelordYesAttack3.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroFirelordYesAttack3, "HeroFireLordYesAttack")
	SetSoundDuration(gg_snd_HeroFirelordYesAttack3, $AD1)
	gg_snd_HeroFirelordWarcry1 = CreateSound("Units\\Creeps\\HeroFlameLord\\HeroFirelordWarcry1.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroFirelordWarcry1, "HeroFireLordWarcry")
	SetSoundDuration(gg_snd_HeroFirelordWarcry1, 5072)
	gg_snd_HeroLichReady1 = CreateSound("Units\\Undead\\HeroLich\\HeroLichReady1.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroLichReady1, "HeroLichReady")
	SetSoundDuration(gg_snd_HeroLichReady1, 4337)
	gg_snd_HeroLichYesAttack1 = CreateSound("Units\\Undead\\HeroLich\\HeroLichYesAttack1.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroLichYesAttack1, "HeroLichYesAttack")
	SetSoundDuration(gg_snd_HeroLichYesAttack1, $A4C)
	gg_snd_HeroLichYesAttack2 = CreateSound("Units\\Undead\\HeroLich\\HeroLichYesAttack2.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroLichYesAttack2, "HeroLichYesAttack")
	SetSoundDuration(gg_snd_HeroLichYesAttack2, $9D4)
	gg_snd_HeroLichYesAttack3 = CreateSound("Units\\Undead\\HeroLich\\HeroLichYesAttack3.wav", false, false, false, $A, $A, "HeroAcksEAX")
	SetSoundParamsFromLabel(gg_snd_HeroLichYesAttack3, "HeroLichYesAttack")
	SetSoundDuration(gg_snd_HeroLichYesAttack3, $872)
	gg_snd_DeathSound1 = CreateSound("Units\\Creeps\\Bandit\\BanditYesAttack1.wav", false, false, false, $A, $A, "DefaultEAXON")
	SetSoundParamsFromLabel(gg_snd_DeathSound1, "BanditYesAttack")
	SetSoundDuration(gg_snd_DeathSound1, $4EE)
	gg_snd_KnightNoGold1 = CreateSound("Sound\\Interface\\Warning\\Human\\KnightNoGold1.wav", false, false, false, $A, $A, "")
	SetSoundParamsFromLabel(gg_snd_KnightNoGold1, "NoGoldHuman")
	SetSoundDuration(gg_snd_KnightNoGold1, $57D)
	gg_snd_KnightInventoryFull1 = CreateSound("Sound\\Interface\\Warning\\Human\\KnightInventoryFull1.wav", false, false, false, $A, $A, "")
	SetSoundParamsFromLabel(gg_snd_KnightInventoryFull1, "InventoryFullHuman")
	SetSoundDuration(gg_snd_KnightInventoryFull1, $3E8)
	gg_snd_HeroStep1 = CreateSound("Sound\\Units\\Footsteps\\HeroStep1.wav", false, true, true, $A, $A, "SpellsEAX")
	SetSoundParamsFromLabel(gg_snd_HeroStep1, "HeroCinematicStep")
	SetSoundDuration(gg_snd_HeroStep1, 947)
	gg_snd_HeroStep2 = CreateSound("Sound\\Units\\Footsteps\\HeroStep2.wav", false, true, true, $A, $A, "SpellsEAX")
	SetSoundParamsFromLabel(gg_snd_HeroStep2, "HeroCinematicStep")
	SetSoundDuration(gg_snd_HeroStep2, 697)
	gg_snd_HeroStep3 = CreateSound("Sound\\Units\\Footsteps\\HeroStep3.wav", false, true, true, $A, $A, "SpellsEAX")
	SetSoundParamsFromLabel(gg_snd_HeroStep3, "HeroCinematicStep")
	SetSoundDuration(gg_snd_HeroStep3, 599)
	gg_snd_HeroStep4 = CreateSound("Sound\\Units\\Footsteps\\HeroStep4.wav", false, true, true, $A, $A, "SpellsEAX")
	SetSoundParamsFromLabel(gg_snd_HeroStep4, "HeroCinematicStep")
	SetSoundDuration(gg_snd_HeroStep4, $E5)
	gg_snd_HuntressYesAttack4 = CreateSound("Units\\NightElf\\Huntress\\HuntressYesAttack4.wav", false, false, false, FourCC('d'), $A, "DefaultEAXON")
	SetSoundParamsFromLabel(gg_snd_HuntressYesAttack4, "HuntressYesAttack")
	SetSoundDuration(gg_snd_HuntressYesAttack4, $55E)
	SetSoundChannel(gg_snd_HuntressYesAttack4, 0)
	gg_snd_WardenAttackEffort1 = CreateSound("Units\\NightElf\\HeroWarden\\WardenAttackEffort1.wav", false, true, true, $A, $A, "CombatSoundsEAX")
	SetSoundParamsFromLabel(gg_snd_WardenAttackEffort1, "WardenAttack")
	SetSoundDuration(gg_snd_WardenAttackEffort1, $54E)
	gg_snd_AlchemistChemicalBurst1 = CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\AlchemistChemicalBurst1.wav", false, false, false, $A, $A, "DefaultEAXON")
	SetSoundParamsFromLabel(gg_snd_AlchemistChemicalBurst1, "GoblinAlchemistMorph")
	SetSoundDuration(gg_snd_AlchemistChemicalBurst1, $801)
	SetSoundChannel(gg_snd_AlchemistChemicalBurst1, 0)
	gg_snd_AlchemistMorph1 = CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\AlchemistMorph1.wav", false, false, false, $A, $A, "DefaultEAXON")
	SetSoundParamsFromLabel(gg_snd_AlchemistMorph1, "GoblinAlchemistMorphAlternate")
	SetSoundDuration(gg_snd_AlchemistMorph1, $67F)
	SetSoundChannel(gg_snd_AlchemistMorph1, 0)
	gg_snd_HeroAlchemistYesAttack1 = CreateSound("Units\\Creeps\\HEROGoblinALCHEMIST\\HeroAlchemistYesAttack1.wav", false, false, false, $A, $A, "DefaultEAXON")
	SetSoundParamsFromLabel(gg_snd_HeroAlchemistYesAttack1, "HEROGoblinALCHEMISTYesAttack")
	SetSoundDuration(gg_snd_HeroAlchemistYesAttack1, $942)
	SetSoundChannel(gg_snd_HeroAlchemistYesAttack1, 0)
	gg_rct_Miners_Arena = Rect(-4128., 1952., -2496., 3904.)
	gg_rct_Duel_left = Rect(1216., 2784., 1472., 3040.)
	gg_rct_Portal_1_down_left_Start = Rect(-1920., -9536., -1536., -9184.)
	gg_rct_Base = Rect(-288., -7488., 2560., -4128.)
	gg_rct_Portal_baza = Rect(896., -6016., 1408., -5408.)
	gg_rct_Les_2 = Rect(-3616., -8160., -512., 320.)
	gg_rct_Les_1 = Rect(-320., -10656., 2432., -7904.)
	gg_rct_Pogoda_v_bolote = Rect(3936., -6944., 5280., -3296.)
	we = AddWeatherEffect(gg_rct_Pogoda_v_bolote, FourCC('FDgh'))
	EnableWeatherEffect(we, true)
	gg_rct_cast_magi = Rect(832., -6112., 1664., -5312.)
	gg_rct_Event_Bonus_Etei_arena_1 = Rect(3488., -256., 5088., 1824.)
	gg_rct_Portal_3_up_Start = Rect(1024., -1120., 1408., -736.)
	gg_rct_Portal_2_down_right_Start = Rect(3392., -9376., 3744., -8992.)
	gg_rct_Oblstb_Tavern = Rect(4352., 3360., 5504., 4448.)
	gg_rct_Hero_Arena = Rect(1152., 2048., 2944., 3968.)
	gg_rct_les_3 = Rect(2592., -7040., 3872., -1280.)
	gg_rct_Respawn_Heroes = Rect(1056., -6624., 1408., -6112.)
	gg_rct_Oblast_Teleporta_Arena_Bot = Rect(4224., -32., 4416., 160.)
	gg_rct_Oblast_Teleporta_Arena_Top = Rect(4224., 1408., 4416., 1600.)
	gg_rct_6 = Rect(-1792., 1888., 544., 3840.)
	gg_rct_BaseDopVision = Rect(672., -4160., 1664., -3680.)
	gg_rct_Center_Vision = Rect(960., -5760., 1088., -5632.)
	gg_rct_Portal_Attack_Dummy_Left = Rect(-2112., -9696., -1952., -9536.)
	gg_rct_Portal_Attack_Dummy_Right = Rect(3584., -9600., 3744., -9440.)
	gg_rct_Portal_Attack_Dummy_Top = Rect(1120., -576., 1280., -416.)
	gg_rct_Duel_right = Rect(2592., 2784., 2848., 3040.)
	gg_rct_PlayableAreaVisionDeBag = Rect(-3680., -10400., 5504., 4544.)
	gg_rct_MinusVision1 = Rect(-3712., 800., -2048., 4640.)
	gg_rct_Les1_Dop1 = Rect(2400., -9184., 2912., -8096.)
	gg_rct_Les1_Dop2 = Rect(160., -7936., 2208., -7648.)
	gg_rct_Beorn_Boss_Area = Rect(800., -10368., 1952., -9248.)
	gg_rct_Beorn_Boss_Area2 = Rect(992., -10272., 1856., -9376.)
	gg_cam_Kamera_na_taverni = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Kamera_na_taverni, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Kamera_na_taverni, 4928.7, 3881.5, .0)
	gg_cam_Kamera_glavnoi_bazi = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Kamera_glavnoi_bazi, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Kamera_glavnoi_bazi, 1240., -6378.1, .0)
	gg_cam_Camera_Eiti_Arena = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Eiti_Arena, 4255.9, 866.9, .0)
	gg_cam_Camera_Eiti_Arena_Top_Portal = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Top_Portal, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Eiti_Arena_Top_Portal, 4394.2, 1237.5, .0)
	gg_cam_Camera_Eiti_Arena_Bot_Portal = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Eiti_Arena_Bot_Portal, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Eiti_Arena_Bot_Portal, 4465.7, 342.3, .0)
	gg_cam_Camera_miners_arena = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_miners_arena, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_miners_arena, -3311.2, 2967.9, .0)
	gg_cam_Camera_BossFightStart = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_ROTATION, 180.9, .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_ANGLE_OF_ATTACK, 336.5, .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_BossFightStart, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_BossFightStart, -608.2, 2881., .0)
	gg_cam_Camera_Duel_Arena = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Duel_Arena, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Duel_Arena, 2139.4, 2853.8, .0)
	gg_cam_Kamera_cast_magi = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Kamera_cast_magi, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Kamera_cast_magi, 1268., -5714.3, .0)
	gg_cam_Camera_Beorn_Den1 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_ROTATION, 233.6, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_ANGLE_OF_ATTACK, 299.3, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_TARGET_DISTANCE, 1363.6, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den1, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den1, 1384., -9577.2, .0)
	gg_cam_Camera_Beorn_Den2 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_ROTATION, 297.9, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_ANGLE_OF_ATTACK, 300.3, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_TARGET_DISTANCE, 1363.6, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den2, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den2, 1240.7, -9620.8, .0)
	gg_cam_Camera_Beorn_Den3 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_ROTATION, 110.6, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_ANGLE_OF_ATTACK, 300.4, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_TARGET_DISTANCE, 1127., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den3, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den3, 562.8, -8241.1, .0)
	gg_cam_Camera_Beorn_Den4 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_ROTATION, 110.6, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_ANGLE_OF_ATTACK, 300.4, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_TARGET_DISTANCE, 1127., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den4, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den4, -15.3, -9035.4, .0)
	gg_cam_Camera_Beorn_Den5 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den5, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den5, 2191., -8224.1, .0)
	gg_cam_Camera_Beorn_Den6 = CreateCameraSetup()
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_ZOFFSET, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_ROTATION, 90., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_ANGLE_OF_ATTACK, 304., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_TARGET_DISTANCE, 1650., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_ROLL, .0, .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_FIELD_OF_VIEW, 70., .0)
	CameraSetupSetField(gg_cam_Camera_Beorn_Den6, CAMERA_FIELD_FARZ, 5000., .0)
	CameraSetupSetDestPosition(gg_cam_Camera_Beorn_Den6, 1474.8, -9613.2, .0)
	p = Player($F)
	u = CreateUnit(p, FourCC('h00S'), 2144., -5184., 225.)
	u = CreateUnit(p, FourCC('h002'), 2176., -5760., 270.)
	u = CreateUnit(p, FourCC('h001'), 2144., -5312., 225.)
	u = CreateUnit(p, FourCC('n004'), 5120., 4032., 270.)
	SetUnitColor(u, ConvertPlayerColor(6))
	u = CreateUnit(p, FourCC('n002'), 4736., 4032., 270.)
	SetUnitColor(u, ConvertPlayerColor(0))
	u = CreateUnit(p, FourCC('n005'), 4928., 3648., 270.)
	SetUnitColor(u, ConvertPlayerColor(1))
	u = CreateUnit(p, FourCC('h003'), 2176., -6016., 270.)
	u = CreateUnit(p, FourCC('h000'), 2176., -5504., 180.)
	u = CreateUnit(p, FourCC('h00D'), 2176., -6272., 225.)
	u = CreateUnit(p, FourCC('h00Y'), 2176., -4992., 270.)
	p = Player($F)
	u = CreateUnit(p, FourCC('h00I'), 2651.1, -8998.3, 132.101)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 2737.1, -8462., 222.901)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 2208., -7950.8, 240.89)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 1508.5, -7799.1, 271.992)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 761.9, -7825.8, 270.894)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 108.7, -7927.1, 297.652)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), -341.9, -8450.2, 346.764)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), -340.3, -9154.9, 16.661)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), -237.5, -9776.7, 2.615)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	gg_unit_o003_0027 = CreateUnit(p, FourCC('o003'), 1521.1, -5441.2, 222.91)
	gg_unit_o003_0028 = CreateUnit(p, FourCC('o003'), 1033.8, -5956.6, 42.425)
	u = CreateUnit(p, FourCC('h00I'), 1358.5, -9356.4, 270.)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	u = CreateUnit(p, FourCC('h00I'), 1357.3, -9244.8, 270.)
	SetUnitState(u, UNIT_STATE_MANA, $2710)
	gg_unit_h01K_0100 = CreateUnit(p, FourCC('h01K'), 1245.4, -5377.6, 270.73)
	gg_unit_n00Y_0101 = CreateUnit(p, FourCC('n00Y'), 1589.7, -5683.3, 173.645)
	SetUnitState(gg_unit_n00Y_0101, UNIT_STATE_MANA, 0)
	gg_unit_n00Y_0102 = CreateUnit(p, FourCC('n00Y'), 939.4, -5689.8, .69)
	SetUnitState(gg_unit_n00Y_0102, UNIT_STATE_MANA, 0)
	gg_unit_e002_0106 = CreateUnit(p, FourCC('e002'), 1007.4, -5428.7, 316.082)
	SetUnitState(gg_unit_e002_0106, UNIT_STATE_MANA, 0)
	gg_unit_e002_0108 = CreateUnit(p, FourCC('e002'), 1526.5, -5954.4, 138.892)
	SetUnitState(gg_unit_e002_0108, UNIT_STATE_MANA, 0)
	gg_unit_h01K_0109 = CreateUnit(p, FourCC('h01K'), 1268., -6027.5, 89.41)
	InitBlizzard()
	i = 0
	udg_IGRAET = CreateForce()
	udg_Multiboard = CreateMultiboard()
	udg_Liver = CreateForce()
	udg_Timer_Nomera_Volni = CreateTimer()
	i = 0
	while(true) do
		if ((i > 1)) then break end
		udg_Igraet_Igrok[i] = false
		udg_Duel_Igrok[i] = CreateForce()
		udg_Heroes_Random_Data[i] = 0
		udg_Integer_Kolvo_Giznei_EtitArena[i] = 0
		udg_ColorString[i] = ""
		udg_Temp_Real[i] = 0
		udg_Temp_Integer[i] = 0
		udg_PlayerNumberInMB[i] = 0
		udg_MutliBoardHeroIcon[i] = ""
		udg_MultiBoard_Player_Kills_Count[i] = 0
		udg_MultiBoard_Player_Deaths_Count[i] = 0
		udg_MultiBoard_Player_Assist_Count[i] = 0
		udg_Hero_Respawn_Time[i] = 0
		udg_Potion_Effect[i] = ""
		udg_Potion_Type[i] = ""
		udg_Potion_Heal_Amount[i] = 0
		udg_Potion_Size[i] = 0
		udg_HintsTimerPlayer[i] = CreateTimer()
		udg_Hero_Player_Color_String[i] = ""
		udg_Player_Taken_Damage_Current[i] = 0
		udg_Player_Taken_Damage_All[i] = 0
		udg_Player_Received_Damage_Current[i] = 0
		udg_System_ShowAbil_And_Items_Hint[i] = true
		udg_Boolean_Player_Fast_Purchase[i] = false
		udg_Integer_Creep_On_Line_Spawn[i] = 0
		udg_Group_Pickeds_Refrence_Panel[i] = CreateGroup()
		udg_Is_Player_Fast_Wave_Start[i] = false
		udg_Count_Item_Tips_Message[i] = 0
		udg_Rune_On_Base_Dummy_X[i] = 0
		udg_Rune_On_Base_Dummy_Y[i] = 0
		udg_Rune_On_Base_Effect_String[i] = ""
		udg_Bonus_Gold_ChestGold[i] = 0
		udg_Temp_Group[i] = CreateGroup()
		udg_Is_Rune_On_Position[i] = false
		udg_Rune_Position_X[i] = 0
		udg_Rune_Position_Y[i] = 0
		udg_Arrow_Pointer_Guide_X[i] = 0
		udg_Arrow_Pointer_Guide_Y[i] = 0
		udg_Arrow_Pointer_Guide_Angle[i] = 0
		udg_EnergyWallX[i] = 0
		udg_EnergyWallY[i] = 0
		udg_EnergyWallAngle[i] = 0
		udg_EnergyWallCount[i] = 0
		udg_Is_Player_Got_Randomed[i] = false
		i = i + 1
	end
	udg_Weave_group = CreateGroup()
	udg_Timer_Check_Forkreep_system = CreateTimer()
	udg_Gruppa_Igrokov_Vibor_Heroev = CreateForce()
	udg_Timer_Eiti_Areni = CreateTimer()
	udg_Gruppa_HeroUnitov_Geroev = CreateGroup()
	udg_OtriadPortalUnitsEitiArena = CreateGroup()
	udg_DamageGroup = CreateGroup()
	udg_DrenorBugaiRageTimer = CreateTimer()
	udg_GrogTarRageTimer = CreateTimer()
	udg_GroupRandomUnitFromGroup = CreateGroup()
	udg_Dialog_Select_Difficult = DialogCreate()
	udg_TimerMobsAttackBase = CreateTimer()
	udg_Players_Enemy_Group = CreateForce()
	udg_Timer_Dialog_Select = CreateTimer()
	udg_Players_Ally_Group = CreateForce()
	udg_MultiBoard = CreateMultiboard()
	udg_PlayerGroup = CreateForce()
	udg_ttt = CreateTimer()
	udg_PortalCastersMagi = CreateGroup()
	udg_InitMapTimer = CreateTimer()
	udg_Drenor_Bull_Hint_Player_Group = CreateForce()
	udg_TimerShowAndFlushAllPlayerDmg = CreateTimer()
	udg_Timer_Lightning_Strike_Weather = CreateTimer()
	udg_Timer_Hint_About_Fast_Start = CreateTimer()
	udg_Timer_Arrow_Pointer_Guide = CreateTimer()
	udg_gdamageallnew = CreateGroup()
	gg_trg_Players_Start_Script = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Players_Start_Script, 2.)
	TriggerAddAction(gg_trg_Players_Start_Script, Trig_Players_Start_Script_Actions)
	gg_trg_InitMap = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_InitMap, .0)
	TriggerAddAction(gg_trg_InitMap, Trig_InitMap_Actions)
	gg_trg_InitMapStage2 = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_InitMapStage2, udg_InitMapTimer)
	TriggerAddAction(gg_trg_InitMapStage2, Trig_InitMapStage2_Actions)
	gg_trg_System_Spells_Load = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_System_Spells_Load, 2., false)
	TriggerAddAction(gg_trg_System_Spells_Load, Trig_System_Spells_Load_Actions)
	gg_trg_Items_Preload = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Items_Preload, 17., false)
	TriggerAddAction(gg_trg_Items_Preload, Trig_Items_Preload_Actions)
	gg_trg_Igrok_Massiv_Save = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Igrok_Massiv_Save, .0)
	TriggerAddAction(gg_trg_Igrok_Massiv_Save, Trig_Igrok_Massiv_Save_Actions)
	gg_trg_Load_Vsiakoe = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Load_Vsiakoe, 2.)
	TriggerAddAction(gg_trg_Load_Vsiakoe, Trig_Load_Vsiakoe_Actions)
	gg_trg_Igrok_Massiv_Liver = CreateTrigger()
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(0))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(1))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(2))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(3))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(4))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(5))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(6))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(7))
	TriggerRegisterPlayerEventLeave(gg_trg_Igrok_Massiv_Liver, Player(8))
	TriggerAddAction(gg_trg_Igrok_Massiv_Liver, Trig_Igrok_Massiv_Liver_Actions)
	gg_trg_Messager = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Messager, 8.)
	TriggerAddAction(gg_trg_Messager, Trig_Messager_Actions)
	gg_trg_Create_TExttags_about_Shops = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Create_TExttags_about_Shops, 9.)
	TriggerAddAction(gg_trg_Create_TExttags_about_Shops, Trig_Create_TExttags_about_Shops_Actions)
	gg_trg_InitHashtable = CreateTrigger()
	TriggerAddAction(gg_trg_InitHashtable, Trig_InitHashtable_Actions)
	gg_trg_Save_Sounds = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Save_Sounds, 5., false)
	TriggerAddAction(gg_trg_Save_Sounds, Trig_Save_Sounds_Actions)
	TimerStart(CreateTimer(), 0, false, HandleCounter_Actions)
	gg_trg_Set_Chlenix = CreateTrigger()
	TriggerRegisterPlayerChatEvent(gg_trg_Set_Chlenix, Player(0), "-chlenix", false)
	TriggerAddAction(gg_trg_Set_Chlenix, Trig_Set_Chlenix_Actions)
	gg_trg_Set_Energy_Walls = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Set_Energy_Walls, 5.)
	TriggerAddAction(gg_trg_Set_Energy_Walls, Trig_Set_Energy_Walls_Actions)
	gg_trg_Nachalo_Eiti_aren = CreateTrigger()
	TriggerAddAction(gg_trg_Nachalo_Eiti_aren, Trig_Nachalo_Eiti_aren_Actions)
	index = 0
	gg_trg_HeroDeadonEitiArena = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_HeroDeadonEitiArena, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_HeroDeadonEitiArena, Condition(Trig_HeroDeadonEitiArena_Conditions))
	TriggerAddAction(gg_trg_HeroDeadonEitiArena, Trig_HeroDeadonEitiArena_Actions)
	rectRegion = CreateRegion()
	gg_trg__PortalCheckTop = CreateTrigger()
	RegionAddRect(rectRegion, gg_rct_Oblast_Teleporta_Arena_Top)
	TriggerRegisterEnterRegion(gg_trg__PortalCheckTop, rectRegion, nil)
	TriggerAddCondition(gg_trg__PortalCheckTop, Condition(Trig__PortalCheckTop_Conditions))
	TriggerAddAction(gg_trg__PortalCheckTop, Trig__PortalCheckTop_Actions)
	rectRegion = CreateRegion()
	gg_trg__PortalCheckBot = CreateTrigger()
	RegionAddRect(rectRegion, gg_rct_Oblast_Teleporta_Arena_Bot)
	TriggerRegisterEnterRegion(gg_trg__PortalCheckBot, rectRegion, nil)
	TriggerAddCondition(gg_trg__PortalCheckBot, Condition(Trig__PortalCheckBot_Conditions))
	TriggerAddAction(gg_trg__PortalCheckBot, Trig__PortalCheckBot_Actions)
	gg_trg_LinkItemsInit = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_LinkItemsInit, 6., false)
	TriggerAddAction(gg_trg_LinkItemsInit, Trig_LinkItemsInit_Actions)
	index = 0
	gg_trg_ItemPickedUp = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_ItemPickedUp, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddAction(gg_trg_ItemPickedUp, Trig_ItemPickedUp_Actions)
	gg_trg_ChargesConnecting = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_ChargesConnecting, EVENT_PLAYER_UNIT_PICKUP_ITEM)
	TriggerAddCondition(gg_trg_ChargesConnecting, Condition(Trig_ChargesConnecting_Conditions))
	TriggerAddAction(gg_trg_ChargesConnecting, Trig_ChargesConnecting_Actions)
	gg_trg_Remove_Dammi_Items = CreateTrigger()
	DisableTrigger(gg_trg_Remove_Dammi_Items)
	TriggerRegisterAnyUnitEventBJ(gg_trg_Remove_Dammi_Items, EVENT_PLAYER_UNIT_PICKUP_ITEM)
	TriggerAddCondition(gg_trg_Remove_Dammi_Items, Condition(Trig_Remove_Dammi_Items_Conditions))
	TriggerAddAction(gg_trg_Remove_Dammi_Items, Trig_Remove_Dammi_Items_Actions)
	gg_trg_Save_Items_Cost = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Save_Items_Cost, 10., false)
	TriggerAddAction(gg_trg_Save_Items_Cost, Trig_Save_Items_Cost_Actions)
	gg_trg_Ice_Boss = CreateTrigger()
	TriggerAddAction(gg_trg_Ice_Boss, Trig_IceBoss_Actions)
	index = 0
	gg_trg_Ice_Wall = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ice_Wall, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ice_Wall, Condition(Trig_Ice_Wall_Conditions))
	TriggerAddAction(gg_trg_Ice_Wall, Trig_Ice_Wall_Actions)
	index = 0
	gg_trg_Ice_Storm = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ice_Storm, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ice_Storm, Condition(Trig_Ice_Storm_Conditions))
	TriggerAddAction(gg_trg_Ice_Storm, Trig_Ice_Storm_Actions)
	index = 0
	gg_trg_Ice_Rain = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ice_Rain, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ice_Rain, Condition(Trig_Ice_Rain_Conditions))
	TriggerAddAction(gg_trg_Ice_Rain, Trig_Ice_Rain_Actions)
	index = 0
	gg_trg_Cold_Punishment = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Cold_Punishment, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Cold_Punishment, Condition(Trig_Cold_Punishment_Conditions))
	TriggerAddAction(gg_trg_Cold_Punishment, Trig_Cold_Punishment_Actions)
	index = 0
	gg_trg_Ice_Restoration = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ice_Restoration, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ice_Restoration, Condition(Trig_Ice_Restoration_Conditions))
	TriggerAddAction(gg_trg_Ice_Restoration, Trig_Ice_Restoration_Actions)
	gg_trg_BossStart = CreateTrigger()
	TriggerAddAction(gg_trg_BossStart, Trig_BossStart_Actions)
	index = 0
	gg_trg_FlameSpells = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_FlameSpells, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_FlameSpells, Condition(Trig_FlameSpells_Conditions))
	TriggerAddAction(gg_trg_FlameSpells, Trig_FlameSpells_Actions)
	index = 0
	gg_trg_Fire_Circle = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fire_Circle, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fire_Circle, Condition(Trig_Fire_Circle_Conditions))
	TriggerAddAction(gg_trg_Fire_Circle, Trig_Fire_Circle_Actions)
	index = 0
	gg_trg_Fire_Meteor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fire_Meteor, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fire_Meteor, Condition(Trig_Fire_Meteor_Conditions))
	TriggerAddAction(gg_trg_Fire_Meteor, Trig_Fire_Meteor_Actions)
	rectRegion = CreateRegion()
	gg_trg_Upgrade_Summons = CreateTrigger()
	RegionAddRect(rectRegion, gg_rct_6)
	TriggerRegisterEnterRegion(gg_trg_Upgrade_Summons, rectRegion, nil)
	TriggerAddCondition(gg_trg_Upgrade_Summons, Condition(Trig_Upgrade_Summons_Conditions))
	TriggerAddAction(gg_trg_Upgrade_Summons, Trig_Upgrade_Summons_Actions)
	gg_trg_UseBeornSpells = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_UseBeornSpells, 1., true)
	TriggerAddAction(gg_trg_UseBeornSpells, Trig_UseBeornSpells_Actions)
	gg_trg_Start_Beorn_Den = CreateTrigger()
	TriggerAddAction(gg_trg_Start_Beorn_Den, Trig_Start_Beorn_Den_Actions)
	index = 0
	gg_trg_Beorn_Push = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Beorn_Push, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Beorn_Push, Condition(Trig_Beorn_Push_Conditions))
	TriggerAddAction(gg_trg_Beorn_Push, Trig_Beorn_Push_Actions)
	index = 0
	gg_trg_Beorn_Stomp = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Beorn_Stomp, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Beorn_Stomp, Condition(Trig_Beorn_Stomp_Conditions))
	TriggerAddAction(gg_trg_Beorn_Stomp, Trig_Beorn_Stomp_Actions)
	gg_trg_HeroUnitGameSave = CreateTrigger()
	TriggerRegisterEnterRectSimple(gg_trg_HeroUnitGameSave, gg_rct_Oblstb_Tavern)
	TriggerAddAction(gg_trg_HeroUnitGameSave, Trig_HeroUnitGameSave_Actions)
	gg_trg_INIT = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_INIT, 1.)
	TriggerAddAction(gg_trg_INIT, Trig_INIT_Actions)
	index = 0
	gg_trg_Pick_Hero_Upgrade = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Pick_Hero_Upgrade, Player(index), EVENT_PLAYER_UNIT_SELL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Pick_Hero_Upgrade, Condition(Trig_Pick_Hero_Upgrade_Conditions))
	TriggerAddAction(gg_trg_Pick_Hero_Upgrade, Trig_Pick_Hero_Upgrade_Actions)
	index = 0
	gg_trg_Hero_Dead = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Hero_Dead, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Hero_Dead, Condition(Trig_Hero_Dead_Conditions))
	TriggerAddAction(gg_trg_Hero_Dead, Trig_Hero_Dead_Actions)
	gg_trg_Start_Duel = CreateTrigger()
	TriggerAddAction(gg_trg_Start_Duel, Trig_Start_Duel_Actions)
	index = 0
	gg_trg_Hero_Death_On_Duel = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Hero_Death_On_Duel, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Hero_Death_On_Duel, Condition(Trig_Hero_Death_On_Duel_Conditions))
	TriggerAddAction(gg_trg_Hero_Death_On_Duel, Trig_Hero_Death_On_Duel_Actions)
	gg_trg_Timer_Check = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_Timer_Check, udg_Timer_Check_Forkreep_system)
	TriggerAddAction(gg_trg_Timer_Check, Trig_Timer_Check_Actions)
	gg_trg_go_mochiytb_portal = CreateTrigger()
	DisableTrigger(gg_trg_go_mochiytb_portal)
	TriggerRegisterTimerEvent(gg_trg_go_mochiytb_portal, 2., true)
	TriggerAddAction(gg_trg_go_mochiytb_portal, Trig_go_mochiytb_portal_Actions)
	gg_trg_Start_game = CreateTrigger()
	TriggerAddAction(gg_trg_Start_game, Trig_Start_game_Actions)
	gg_trg_StartWave = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_StartWave, udg_Timer_Nomera_Volni)
	TriggerAddAction(gg_trg_StartWave, Trig_StartWave_Actions)
	gg_trg_MobsAttackBase = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_MobsAttackBase, udg_TimerMobsAttackBase)
	TriggerAddAction(gg_trg_MobsAttackBase, Trig_MobsAttackBase_Actions)
	gg_trg_TeleportStuckedCreeps = CreateTrigger()
	DisableTrigger(gg_trg_TeleportStuckedCreeps)
	TriggerRegisterTimerEvent(gg_trg_TeleportStuckedCreeps, 2., true)
	TriggerAddAction(gg_trg_TeleportStuckedCreeps, Trig_TeleportStuckedCreeps_Actions)
	rectRegion = CreateRegion()
	gg_trg_vhodit_v_zony = CreateTrigger()
	RegionAddRect(rectRegion, gg_rct_cast_magi)
	TriggerRegisterEnterRegion(gg_trg_vhodit_v_zony, rectRegion, nil)
	TriggerAddCondition(gg_trg_vhodit_v_zony, Condition(Trig_vhodit_v_zony_Conditions))
	TriggerAddAction(gg_trg_vhodit_v_zony, Trig_vhodit_v_zony_Actions)
	index = 0
	gg_trg_Add_Gold_System_Receiving_Gold_for_Creeps = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Add_Gold_System_Receiving_Gold_for_Creeps, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Add_Gold_System_Receiving_Gold_for_Creeps, Condition(Trig_Add_Gold_System_Receiving_Gold_for_Creeps_Conditions))
	TriggerAddAction(gg_trg_Add_Gold_System_Receiving_Gold_for_Creeps, Trig_Add_Gold_System_Receiving_Gold_for_Creeps_Actions)
	gg_trg_Init_System_Receiving_Gold_for_Creeps = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Init_System_Receiving_Gold_for_Creeps, 3., false)
	TriggerAddAction(gg_trg_Init_System_Receiving_Gold_for_Creeps, Trig_Init_System_Receiving_Gold_for_Creeps_Actions)
	gg_trg_Init_System_Receiving_Experience_for_Creeps = CreateTrigger()
	TriggerAddAction(gg_trg_Init_System_Receiving_Experience_for_Creeps, Trig_Init_System_Receiving_Experience_for_Creeps_Actions)
	index = 0
	gg_trg_Add_Experience_System_Receiving_Experience_for_Creeps = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Add_Experience_System_Receiving_Experience_for_Creeps, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Add_Experience_System_Receiving_Experience_for_Creeps, Condition(Trig_Add_Experience_System_Receiving_Experience_for_Creeps_Conditions))
	TriggerAddAction(gg_trg_Add_Experience_System_Receiving_Experience_for_Creeps, Trig_Add_Experience_System_Receiving_Experience_for_Creeps_Actions)
	gg_trg_Init_Potion_System = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Init_Potion_System, 1., false)
	TriggerAddAction(gg_trg_Init_Potion_System, Trig_Init_Potion_System_Actions)
	index = 0
	gg_trg_Mob_Dead_Create_Potion = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Mob_Dead_Create_Potion, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Mob_Dead_Create_Potion, Condition(Trig_Mob_Dead_Create_Potion_Conditions))
	TriggerAddAction(gg_trg_Mob_Dead_Create_Potion, Trig_Mob_Dead_Create_Potion_Actions)
	gg_trg_Check_Potion_Picked_Up = CreateTrigger()
	TriggerAddCondition(gg_trg_Check_Potion_Picked_Up, Condition(Trig_Check_Potion_Picked_Up_Conditions))
	TriggerAddAction(gg_trg_Check_Potion_Picked_Up, Trig_Check_Potion_Picked_Up_Actions)
	gg_trg_InitSystem = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_InitSystem, .01, false)
	TriggerAddAction(gg_trg_InitSystem, Trig_InitSystem_Actions)
	rectRegion = CreateRegion()
	gg_trg_EnterUnit = CreateTrigger()
	RegionAddRect(rectRegion, GetWorldBounds())
	TriggerRegisterEnterRegion(gg_trg_EnterUnit, rectRegion, nil)
	TriggerAddCondition(gg_trg_EnterUnit, Condition(Trig_EnterUnit_Conditions))
	TriggerAddAction(gg_trg_EnterUnit, Trig_EnterUnit_Actions)
	gg_trg_AddDamage = CreateTrigger()
	TriggerAddCondition(gg_trg_AddDamage, Condition(Trig_Del_Conditions))
	TriggerAddAction(gg_trg_AddDamage, Trig_AddDamage_Actions)
	index = 0
	gg_trg_TimeTalisman = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_TimeTalisman, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_TimeTalisman, Condition(Trig_TimeTalisman_Conditions))
	TriggerAddAction(gg_trg_TimeTalisman, Trig_TimeTalisman_Actions)
	index = 0
	gg_trg_Take_Paladin_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Take_Paladin_Armor, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Take_Paladin_Armor, Condition(Trig_Take_Paladin_Armor_Conditions))
	TriggerAddAction(gg_trg_Take_Paladin_Armor, Trig_Take_Paladin_Armor_Actions)
	index = 0
	gg_trg_Take_Archimagus_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Take_Archimagus_Staff, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Take_Archimagus_Staff, Condition(Trig_Take_Archimagus_Staff_Conditions))
	TriggerAddAction(gg_trg_Take_Archimagus_Staff, Trig_Take_Archimagus_Staff_Actions)
	index = 0
	gg_trg_Lost_Charged_Staff_of_Lightning = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Lost_Charged_Staff_of_Lightning, Player(index), EVENT_PLAYER_UNIT_DROP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Lost_Charged_Staff_of_Lightning, Condition(Trig_Lost_Charged_Staff_of_Lightning_Conditions))
	TriggerAddAction(gg_trg_Lost_Charged_Staff_of_Lightning, Trig_Lost_Charged_Staff_of_Lightning_Actions)
	index = 0
	gg_trg_Blood_Bow = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Blood_Bow, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Blood_Bow, Condition(Trig_Blood_Bow_Conditions))
	TriggerAddAction(gg_trg_Blood_Bow, Trig_Blood_Bow_Actions)
	index = 0
	gg_trg_Balance_Ring = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Balance_Ring, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Balance_Ring, Condition(Trig_Balance_Ring_Conditions))
	TriggerAddAction(gg_trg_Balance_Ring, Trig_Balance_Ring_Actions)
	index = 0
	gg_trg_Armageddon_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Armageddon_Staff, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Armageddon_Staff, Condition(Trig_Armageddon_Staff_Conditions))
	TriggerAddAction(gg_trg_Armageddon_Staff, Trig_Armageddon_Staff_Actions)
	index = 0
	gg_trg_Sargeras_Crown = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Sargeras_Crown, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Sargeras_Crown, Condition(Trig_Sargeras_Crown_Conditions))
	TriggerAddAction(gg_trg_Sargeras_Crown, Trig_Sargeras_Crown_Actions)
	index = 0
	gg_trg_Lost_Sargeras_Crown = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Lost_Sargeras_Crown, Player(index), EVENT_PLAYER_UNIT_DROP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Lost_Sargeras_Crown, Condition(Trig_Lost_Sargeras_Crown_Conditions))
	TriggerAddAction(gg_trg_Lost_Sargeras_Crown, Trig_Lost_Sargeras_Crown_Actions)
	index = 0
	gg_trg_Take_Sargeras_Crown = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Take_Sargeras_Crown, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Take_Sargeras_Crown, Condition(Trig_Take_Sargeras_Crown_Conditions))
	TriggerAddAction(gg_trg_Take_Sargeras_Crown, Trig_Take_Sargeras_Crown_Actions)
	index = 0
	gg_trg_Lost_Archimagus_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Lost_Archimagus_Armor, Player(index), EVENT_PLAYER_UNIT_DROP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Lost_Archimagus_Armor, Condition(Trig_Lost_Archimagus_Armor_Conditions))
	TriggerAddAction(gg_trg_Lost_Archimagus_Armor, Trig_Lost_Archimagus_Armor_Actions)
	index = 0
	gg_trg_Take_Archimagus_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Take_Archimagus_Armor, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Take_Archimagus_Armor, Condition(Trig_Take_Archimagus_Armor_Conditions))
	TriggerAddAction(gg_trg_Take_Archimagus_Armor, Trig_Take_Archimagus_Armor_Actions)
	index = 0
	gg_trg_Sorcerers_Talisman_Cast = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Sorcerers_Talisman_Cast, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Sorcerers_Talisman_Cast, Condition(Trig_Sorcerers_Talisman_Cast_Conditions))
	TriggerAddAction(gg_trg_Sorcerers_Talisman_Cast, Trig_Sorcerers_Talisman_Cast_Actions)
	index = 0
	gg_trg_Sorcerers_Talisman = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Sorcerers_Talisman, Player(index), EVENT_PLAYER_UNIT_USE_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Sorcerers_Talisman, Condition(Trig_Sorcerers_Talisman_Conditions))
	TriggerAddAction(gg_trg_Sorcerers_Talisman, Trig_Sorcerers_Talisman_Actions)
	index = 0
	gg_trg_Sorcerers_Talisman_Dead_Unit = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Sorcerers_Talisman_Dead_Unit, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Sorcerers_Talisman_Dead_Unit, Condition(Trig_Sorcerers_Talisman_Dead_Unit_Condition))
	TriggerAddAction(gg_trg_Sorcerers_Talisman_Dead_Unit, Trig_Sorcerers_Talisman_Dead_Unit_Actions)
	index = 0
	gg_trg_Orc_Banner = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Orc_Banner, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Orc_Banner, Condition(Trig_Orc_Banner_Conditions))
	TriggerAddAction(gg_trg_Orc_Banner, Trig_Orc_Banner_Actions)
	index = 0
	gg_trg_Devil_Axe = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Devil_Axe, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Devil_Axe, Condition(Trig_Devil_Axe_Conditions))
	TriggerAddAction(gg_trg_Devil_Axe, Trig_Devil_Axe_Actions)
	index = 0
	gg_trg_Devil_Axe_Kill_Unit = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Devil_Axe_Kill_Unit, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Devil_Axe_Kill_Unit, Condition(Trig_Devil_Axe_Kill_Unit_Conditions))
	TriggerAddAction(gg_trg_Devil_Axe_Kill_Unit, Trig_Devil_Axe_Kill_Unit_Actions)
	index = 0
	gg_trg_Tokugawas_Katan_Kill_Unit = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Tokugawas_Katan_Kill_Unit, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Tokugawas_Katan_Kill_Unit, Condition(Trig_Tokugawas_Katan_Kill_Unit_Conditions))
	TriggerAddAction(gg_trg_Tokugawas_Katan_Kill_Unit, Trig_Tokugawas_Katan_Kill_Unit_Actions)
	index = 0
	gg_trg_Tokugawas_Katan = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Tokugawas_Katan, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Tokugawas_Katan, Condition(Trig_Tokugawas_Katan_Conditions))
	TriggerAddAction(gg_trg_Tokugawas_Katan, Trig_Tokugawas_Katan_Actions)
	index = 0
	gg_trg_Kings_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Kings_Armor, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Kings_Armor, Condition(Trig_Kings_Armor_Conditions))
	TriggerAddAction(gg_trg_Kings_Armor, Trig_Kings_Armor_Actions)
	index = 0
	gg_trg_Steel_Bib = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Steel_Bib, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Steel_Bib, Condition(Trig_Steel_Bib_Conditions))
	TriggerAddAction(gg_trg_Steel_Bib, Trig_Steel_Bib_Actions)
	index = 0
	gg_trg_Archimagus_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Archimagus_Staff, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Archimagus_Staff, Condition(Trig_Archimagus_Staff_Conditions))
	TriggerAddAction(gg_trg_Archimagus_Staff, Trig_Archimagus_Staff_Actions)
	index = 0
	gg_trg_Isidors_Scepter = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Isidors_Scepter, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Isidors_Scepter, Condition(Trig_Isidors_Scepter_Conditions))
	TriggerAddAction(gg_trg_Isidors_Scepter, Trig_Isidors_Scepter_Actions)
	index = 0
	gg_trg_Detached_Shield_Use = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Detached_Shield_Use, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Detached_Shield_Use, Condition(Trig_Detached_Shield_Use_Conditions))
	TriggerAddAction(gg_trg_Detached_Shield_Use, Trig_Detached_Shield_Use_Actions)
	index = 0
	gg_trg_Cuirass_of_Invulnerable_Use2 = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Cuirass_of_Invulnerable_Use2, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Cuirass_of_Invulnerable_Use2, Condition(Trig_Cuirass_of_Invulnerable_Use2_Conditions))
	TriggerAddAction(gg_trg_Cuirass_of_Invulnerable_Use2, Trig_Cuirass_of_Invulnerable_Use2_Actions)
	index = 0
	gg_trg_Lost_Cuirass_of_Invulnerable = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Lost_Cuirass_of_Invulnerable, Player(index), EVENT_PLAYER_UNIT_DROP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Lost_Cuirass_of_Invulnerable, Condition(Trig_Lost_Cuirass_of_Invulnerable_Conditions))
	TriggerAddAction(gg_trg_Lost_Cuirass_of_Invulnerable, Trig_Lost_Cuirass_of_Invulnerable_Actions)
	index = 0
	gg_trg_Take_Cuirass_of_Invulnerable = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Take_Cuirass_of_Invulnerable, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Take_Cuirass_of_Invulnerable, Condition(Trig_Take_Cuirass_of_Invulnerable_Conditions))
	TriggerAddAction(gg_trg_Take_Cuirass_of_Invulnerable, Trig_Take_Cuirass_of_Invulnerable_Actions)
	index = 0
	gg_trg_Fire_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fire_Staff, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fire_Staff, Condition(Trig_Fire_Staff_Conditions))
	TriggerAddAction(gg_trg_Fire_Staff, Trig_Fire_Staff_Actions)
	index = 0
	gg_trg_Demon_Axe = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Demon_Axe, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Demon_Axe, Condition(Trig_Demon_Axe_Conditions))
	TriggerAddAction(gg_trg_Demon_Axe, Trig_Demon_Axe_Actions)
	index = 0
	gg_trg_Demon_Axe_Kill_Unit = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Demon_Axe_Kill_Unit, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Demon_Axe_Kill_Unit, Condition(Trig_Demon_Axe_Kill_Unit_Conditions))
	TriggerAddAction(gg_trg_Demon_Axe_Kill_Unit, Trig_Demon_Axe_Kill_Unit_Actions)
	index = 0
	gg_trg_Boots_Rescue = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Boots_Rescue, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Boots_Rescue, Condition(Trig_Boots_Rescue_Conditions))
	TriggerAddAction(gg_trg_Boots_Rescue, Trig_Boots_Rescue_Actions)
	index = 0
	gg_trg_Astral_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Astral_Staff, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Astral_Staff, Condition(Trig_Astral_Staff_Conditions))
	TriggerAddAction(gg_trg_Astral_Staff, Trig_Astral_Staff_Actions)
	index = 0
	gg_trg_Healer_Staff = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Healer_Staff, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Healer_Staff, Condition(Trig_Healer_Staff_Conditions))
	TriggerAddAction(gg_trg_Healer_Staff, Trig_Healer_Staff_Actions)
	index = 0
	gg_trg_Magic_Amulet = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Magic_Amulet, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Magic_Amulet, Condition(Trig_Magic_Amulet_Conditions))
	TriggerAddAction(gg_trg_Magic_Amulet, Trig_Magic_Amulet_Actions)
	index = 0
	gg_trg_Blood_Dagger = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Blood_Dagger, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Blood_Dagger, Condition(Trig_Blood_Dagger_Conditions))
	TriggerAddAction(gg_trg_Blood_Dagger, Trig_Blood_Dagger_Actions)
	index = 0
	gg_trg_Agility_Blade = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Agility_Blade, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Agility_Blade, Condition(Trig_Agility_Blade_Conditions))
	TriggerAddAction(gg_trg_Agility_Blade, Trig_Agility_Blade_Actions)
	gg_trg_Bone_Staff_Set_Summon_Ability_Level = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Bone_Staff_Set_Summon_Ability_Level, EVENT_PLAYER_UNIT_SUMMON)
	TriggerAddCondition(gg_trg_Bone_Staff_Set_Summon_Ability_Level, Condition(Trig_Bone_Staff_Set_Summon_Ability_Level_Conditions))
	TriggerAddAction(gg_trg_Bone_Staff_Set_Summon_Ability_Level, Trig_Bone_Staff_Set_Summon_Ability_Level_Actions)
	gg_trg_Novice_Amulet = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Novice_Amulet, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_Novice_Amulet, Condition(Trig_Novice_Amulet_Conditions))
	TriggerAddAction(gg_trg_Novice_Amulet, Trig_Novice_Amulet_Actions)
	index = 0
	gg_trg_Glove_of_Andromat = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Glove_of_Andromat, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Glove_of_Andromat, Condition(Trig_Glove_of_Andromat_Conditions))
	TriggerAddAction(gg_trg_Glove_of_Andromat, Trig_Glove_of_Andromat_Actions)
	index = 0
	gg_trg_Glove_of_Midas = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Glove_of_Midas, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Glove_of_Midas, Condition(Trig_Glove_of_Midas_Conditions))
	TriggerAddAction(gg_trg_Glove_of_Midas, Trig_Glove_of_Midas_Actions)
	index = 0
	gg_trg_Heroes_more_attacked_priority_when_guards = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Heroes_more_attacked_priority_when_guards, Player(index), EVENT_PLAYER_UNIT_ATTACKED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Heroes_more_attacked_priority_when_guards, Condition(Trig_Heroes_more_attacked_priority_when_guards_Conditions))
	TriggerAddAction(gg_trg_Heroes_more_attacked_priority_when_guards, Trig_Heroes_more_attacked_priority_when_guards_Actions)
	index = 0
	gg_trg_Player_Fast_Purchase_System = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Player_Fast_Purchase_System, Player(index), EVENT_PLAYER_UNIT_ISSUED_ORDER, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Player_Fast_Purchase_System, Condition(Trig_Player_Fast_Purchase_System_Conditions))
	TriggerAddAction(gg_trg_Player_Fast_Purchase_System, Trig_Player_Fast_Purchase_System_Actions)
	gg_trg_Show_hint_abount_hints = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Show_hint_abount_hints, 120.)
	TriggerRegisterTimerEventSingle(gg_trg_Show_hint_abount_hints, 600.)
	TriggerAddAction(gg_trg_Show_hint_abount_hints, Trig_Show_hint_abount_hints_Actions)
	gg_trg_Show_Hint_Abount_Items = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Show_Hint_Abount_Items, 600.)
	TriggerAddAction(gg_trg_Show_Hint_Abount_Items, Trig_Show_Hint_Abount_Items_Actions)
	gg_trg_Hint_About_Random = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Hint_About_Random, 13.)
	TriggerAddAction(gg_trg_Hint_About_Random, Trig_Hint_About_Random_Actions)
	gg_trg_Show_hint_abount_reference_panel = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Show_hint_abount_reference_panel, 200.)
	TriggerRegisterTimerEventSingle(gg_trg_Show_hint_abount_reference_panel, 1200.)
	TriggerAddAction(gg_trg_Show_hint_abount_reference_panel, Trig_Show_hint_abount_reference_panel_Actions)
	index = 0
	gg_trg_Show_Ability_Learn = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Show_Ability_Learn, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Show_Ability_Learn, Condition(Trig_Show_Ability_Learn_Conditions))
	TriggerAddAction(gg_trg_Show_Ability_Learn, Trig_Show_Ability_Learn_Actions)
	index = 0
	gg_trg_System_Personal_Items_Buy_Item = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_System_Personal_Items_Buy_Item, Player(index), EVENT_PLAYER_UNIT_SELL_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddAction(gg_trg_System_Personal_Items_Buy_Item, Trig_System_Personal_Items_Buy_Item_Actions)
	index = 0
	gg_trg_System_Personal_Items_Pick_Up_Item = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_System_Personal_Items_Pick_Up_Item, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddAction(gg_trg_System_Personal_Items_Pick_Up_Item, Trig_System_Personal_Items_Pick_Up_Item_Actions)
	gg_trg_no_attack = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_no_attack, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_no_attack, Condition(Trig_no_attack_Conditions))
	TriggerAddAction(gg_trg_no_attack, Trig_no_attack_Actions)
	index = 0
	gg_trg_Select_Refrence_Panel = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Select_Refrence_Panel, Player(index), EVENT_PLAYER_UNIT_SELECTED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Select_Refrence_Panel, Condition(Trig_Select_Refrence_Panel_Conditions))
	TriggerAddAction(gg_trg_Select_Refrence_Panel, Trig_Select_Refrence_Panel_Actions)
	index = 0
	gg_trg_ShopAnimation = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_ShopAnimation, Player(index), EVENT_PLAYER_UNIT_SELECTED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_ShopAnimation, Condition(Trig_ShopAnimation_Conditions))
	TriggerAddAction(gg_trg_ShopAnimation, Trig_ShopAnimation_Actions)
	index = 0
	gg_trg_ShopStopAnimation = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_ShopStopAnimation, Player(index), EVENT_PLAYER_UNIT_DESELECTED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_ShopStopAnimation, Condition(Trig_ShopStopAnimation_Conditions))
	TriggerAddAction(gg_trg_ShopStopAnimation, Trig_ShopStopAnimation_Actions)
	rectRegion = CreateRegion()
	gg_trg_RedMarkToUnit = CreateTrigger()
	RegionAddRect(rectRegion, bj_mapInitialPlayableArea)
	TriggerRegisterEnterRegion(gg_trg_RedMarkToUnit, rectRegion, nil)
	TriggerAddAction(gg_trg_RedMarkToUnit, Trig_RedMarkToUnit_Actions)
	index = 0
	gg_trg_UnSelectedDummyRedMark = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_UnSelectedDummyRedMark, Player(index), EVENT_PLAYER_UNIT_SELECTED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_UnSelectedDummyRedMark, Condition(Trig_UnSelectedDummyRedMark_Conditions))
	TriggerAddAction(gg_trg_UnSelectedDummyRedMark, Trig_UnSelectedDummyRedMark_Actions)
	gg_trg_SpecEffect_on_Casters = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_SpecEffect_on_Casters, .0, false)
	TriggerAddAction(gg_trg_SpecEffect_on_Casters, Trig_SpecEffect_on_Casters_Actions)
	gg_trg_PortalSpecEffects = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_PortalSpecEffects, 2., false)
	TriggerAddAction(gg_trg_PortalSpecEffects, Trig_PortalSpecEffects_Actions)
	gg_trg_Gates_Start_Animation = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Gates_Start_Animation, 2.)
	TriggerAddAction(gg_trg_Gates_Start_Animation, Trig_Gates_Start_Animation_Actions)
	index = 0
	gg_trg_PlayerEnterGameCommand = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerChatEvent(gg_trg_PlayerEnterGameCommand, Player(index), "-", false)
		TriggerRegisterPlayerChatEvent(gg_trg_PlayerEnterGameCommand, Player(index), "+", true)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddAction(gg_trg_PlayerEnterGameCommand, Trig_PlayerEnterGameCommand_Actions)
	index = 0
	gg_trg_PlayerUseSpellGameCommand = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_PlayerUseSpellGameCommand, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_PlayerUseSpellGameCommand, Condition(Trig_PlayerUseSpellGameCommand_Conditions))
	TriggerAddAction(gg_trg_PlayerUseSpellGameCommand, Trig_PlayerUseSpellGameCommand_Actions)
	index = 0
	gg_trg_GuardsExorcistDead = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_GuardsExorcistDead, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_GuardsExorcistDead, Condition(Trig_GuardsExorcistDead_Conditions))
	TriggerAddAction(gg_trg_GuardsExorcistDead, Trig_GuardsExorcistDead_Actions)
	gg_trg_PauseUnitWhenDefeat = CreateTrigger()
	DisableTrigger(gg_trg_PauseUnitWhenDefeat)
	TriggerRegisterTimerEventPeriodic(gg_trg_PauseUnitWhenDefeat, .05)
	TriggerAddAction(gg_trg_PauseUnitWhenDefeat, Trig_PauseUnitWhenDefeat_Actions)
	gg_trg_PauseUnitWhenWin = CreateTrigger()
	DisableTrigger(gg_trg_PauseUnitWhenWin)
	TriggerRegisterEnterRectSimple(gg_trg_PauseUnitWhenWin, bj_mapInitialPlayableArea)
	TriggerAddAction(gg_trg_PauseUnitWhenWin, Trig_PauseUnitWhenWin_Actions)
	gg_trg_GameEndWin = CreateTrigger()
	DisableTrigger(gg_trg_GameEndWin)
	TriggerAddAction(gg_trg_GameEndWin, Trig_GameEndWin_Actions)
	gg_trg_Respawn_trees_Init = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Respawn_trees_Init, 5., false)
	TriggerAddAction(gg_trg_Respawn_trees_Init, Trig_Respawn_trees_Init_Actions)
	gg_trg_Respawn_trees = CreateTrigger()
	TriggerAddAction(gg_trg_Respawn_trees, Trig_Respawn_trees_Actions)
	gg_trg_Day_Weather = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Day_Weather, EQUAL, 6.)
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Day_Weather, EQUAL, 12.)
	TriggerAddAction(gg_trg_Day_Weather, Trig_Day_Weather_Actions)
	gg_trg_Sky_Morning = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Sky_Morning, EQUAL, 6.)
	TriggerAddAction(gg_trg_Sky_Morning, Trig_Sky_Morning_Actions)
	gg_trg_Sky_Day = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Sky_Day, EQUAL, 12.)
	TriggerAddAction(gg_trg_Sky_Day, Trig_Sky_Day_Actions)
	gg_trg_Night_Weather = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Night_Weather, EQUAL, 18.)
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Night_Weather, EQUAL, .0)
	TriggerAddAction(gg_trg_Night_Weather, Trig_Night_Weather_Actions)
	gg_trg_Sky_Evening = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Sky_Evening, EQUAL, 18.)
	TriggerAddAction(gg_trg_Sky_Evening, Trig_Sky_Evening_Actions)
	gg_trg_Sky_Night = CreateTrigger()
	TriggerRegisterGameStateEventTimeOfDay(gg_trg_Sky_Night, EQUAL, .0)
	TriggerAddAction(gg_trg_Sky_Night, Trig_Sky_Night_Actions)
	gg_trg_Lightnings_Weather_Effect_Rainy = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_Lightnings_Weather_Effect_Rainy, udg_Timer_Lightning_Strike_Weather)
	TriggerAddCondition(gg_trg_Lightnings_Weather_Effect_Rainy, Condition(Trig_Lightnings_Weather_Effect_Rainy_Conditions))
	TriggerAddAction(gg_trg_Lightnings_Weather_Effect_Rainy, Trig_Lightnings_Weather_Effect_Rainy_Actions)
	gg_trg_Periodic_Rune_Creation = CreateTrigger()
	DisableTrigger(gg_trg_Periodic_Rune_Creation)
	TriggerRegisterTimerEventPeriodic(gg_trg_Periodic_Rune_Creation, 60.1)
	TriggerAddAction(gg_trg_Periodic_Rune_Creation, Trig_Periodic_Rune_Creation_Actions)
	index = 0
	gg_trg_Rune_PickedUp = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Rune_PickedUp, Player(index), EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Rune_PickedUp, Condition(Trig_Rune_PickedUp_Conditions))
	TriggerAddAction(gg_trg_Rune_PickedUp, Trig_Rune_PickedUp_Actions)
	gg_trg_Initialization_MultiBoard = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Initialization_MultiBoard, 3.)
	TriggerAddAction(gg_trg_Initialization_MultiBoard, Trig_Initialization_MultiBoard_Actions)
	gg_trg_Hero_MultiBoard_LvlUp = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Hero_MultiBoard_LvlUp, EVENT_PLAYER_HERO_LEVEL)
	TriggerAddCondition(gg_trg_Hero_MultiBoard_LvlUp, Condition(Trig_Hero_MultiBoard_LvlUp_Conditions))
	TriggerAddAction(gg_trg_Hero_MultiBoard_LvlUp, Trig_Hero_MultiBoard_LvlUp_Actions)
	gg_trg_Time_Check_and_Player_Gold_for_MultiBoard = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Time_Check_and_Player_Gold_for_MultiBoard, 1.)
	TriggerAddAction(gg_trg_Time_Check_and_Player_Gold_for_MultiBoard, Trig_Time_Check_and_Player_Gold_for_MultiBoard_Actions)
	index = 0
	gg_trg_Reincarnation_Skeletons = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Reincarnation_Skeletons, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Reincarnation_Skeletons, Condition(Trig_Reincarnation_Skeletons_Conditions))
	TriggerAddAction(gg_trg_Reincarnation_Skeletons, Trig_Reincarnation_Skeletons_Actions)
	index = 0
	gg_trg_BossSkeletRaise = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BossSkeletRaise, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BossSkeletRaise, Condition(Trig_BossSkeletRaise_Conditions))
	TriggerAddAction(gg_trg_BossSkeletRaise, Trig_BossSkeletRaise_Actions)
	index = 0
	gg_trg_BossSkeletSkillActiv = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BossSkeletSkillActiv, Player(index), EVENT_PLAYER_UNIT_ATTACKED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BossSkeletSkillActiv, Condition(Trig_BossSkeletSkillActiv_Conditions))
	TriggerAddAction(gg_trg_BossSkeletSkillActiv, Trig_BossSkeletSkillActiv_Actions)
	index = 0
	gg_trg_Fire_Arrow = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fire_Arrow, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fire_Arrow, Condition(Trig_Fire_Arrow_Conditions))
	TriggerAddAction(gg_trg_Fire_Arrow, Trig_Fire_Arrow_Actions)
	gg_trg_Use_UnholyFrenzy_and_Fire_Arrow = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Use_UnholyFrenzy_and_Fire_Arrow, 1., true)
	TriggerAddCondition(gg_trg_Use_UnholyFrenzy_and_Fire_Arrow, Condition(Trig_Use_UnholyFrenzy_and_Fire_Arrow_Conditions))
	TriggerAddAction(gg_trg_Use_UnholyFrenzy_and_Fire_Arrow, Trig_Use_UnholyFrenzy_and_Fire_Arrow_Actions)
	index = 0
	gg_trg_Create_Tombstone = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Create_Tombstone, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Create_Tombstone, Condition(Trig_Create_Tombstone_Conditions))
	TriggerAddAction(gg_trg_Create_Tombstone, Trig_Create_Tombstone_Actions)
	index = 0
	gg_trg_ZombieExploadDeath = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_ZombieExploadDeath, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_ZombieExploadDeath, Condition(Trig_ZombieExploadDeath_Conditions))
	TriggerAddAction(gg_trg_ZombieExploadDeath, Trig_ZombieExploadDeath_Actions)
	index = 0
	gg_trg_Damned_Soul = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Damned_Soul, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Damned_Soul, Condition(Trig_Damned_Soul_Conditions))
	TriggerAddAction(gg_trg_Damned_Soul, Trig_Damned_Soul_Actions)
	gg_trg_Use_PowerofHorror_and_Curse_and_Slam_and_Dumned_Soul = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Use_PowerofHorror_and_Curse_and_Slam_and_Dumned_Soul, 1., true)
	TriggerAddCondition(gg_trg_Use_PowerofHorror_and_Curse_and_Slam_and_Dumned_Soul, Condition(Trig_Use_PowerofHorror_and_Curse_and_Slam_Conditions))
	TriggerAddAction(gg_trg_Use_PowerofHorror_and_Curse_and_Slam_and_Dumned_Soul, Trig_Use_PowerofHorror_and_Curse_and_Slam_Actions)
	index = 0
	gg_trg_Throw_Meat = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Throw_Meat, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Throw_Meat, Condition(Trig_Throw_Meat_Conditions))
	TriggerAddAction(gg_trg_Throw_Meat, Trig_Throw_Meat_Actions)
	index = 0
	gg_trg_Earth_Clap = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Earth_Clap, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Earth_Clap, Condition(Trig_Earth_Clap_Conditions))
	TriggerAddAction(gg_trg_Earth_Clap, Trig_Earth_Clap_Actions)
	index = 0
	gg_trg_Ghoul_Jump = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ghoul_Jump, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ghoul_Jump, Condition(Trig_Ghoul_Jump_Conditions))
	TriggerAddAction(gg_trg_Ghoul_Jump, Trig_Ghoul_Jump_Actions)
	index = 0
	gg_trg_BurrowStrike = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BurrowStrike, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BurrowStrike, Condition(Trig_BurrowStrike_Conditions))
	TriggerAddAction(gg_trg_BurrowStrike, Trig_BurrowStrike_Actions)
	gg_trg_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump, 1., true)
	TriggerAddCondition(gg_trg_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump, Condition(Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Conditions))
	TriggerAddAction(gg_trg_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump, Trig_Use_Raise_Skeletons_and_Death_Coil_and_Trupoedi_and_Pierce_and_Ghoul_Jump_Actions)
	index = 0
	gg_trg_BeetleCorpseBurrowCast = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BeetleCorpseBurrowCast, Player(index), EVENT_PLAYER_UNIT_ATTACKED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BeetleCorpseBurrowCast, Condition(Trig_BeetleCorpseBurrowCast_Conditions))
	TriggerAddAction(gg_trg_BeetleCorpseBurrowCast, Trig_BeetleCorpseBurrowCast_Actions)
	index = 0
	gg_trg_BeetleCorpseBurrow = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BeetleCorpseBurrow, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BeetleCorpseBurrow, Condition(Trig_BeetleCorpseBurrow_Conditions))
	TriggerAddAction(gg_trg_BeetleCorpseBurrow, Trig_BeetleCorpseBurrow_Actions)
	index = 0
	gg_trg_Cocoon_Creation = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Cocoon_Creation, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Cocoon_Creation, Condition(Trig_Cocoon_Creation_Conditions))
	TriggerAddAction(gg_trg_Cocoon_Creation, Trig_Cocoon_Creation_Actions)
	index = 0
	gg_trg_Poisonous_Spittle_Cast = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Poisonous_Spittle_Cast, Player(index), EVENT_PLAYER_UNIT_ATTACKED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Poisonous_Spittle_Cast, Condition(Trig_Poisonous_Spittle_Cast_Conditions))
	TriggerAddAction(gg_trg_Poisonous_Spittle_Cast, Trig_Poisonous_Spittle_Cast_Actions)
	index = 0
	gg_trg_Holes_Of_Grave_Diggers_Debug_Kill = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Holes_Of_Grave_Diggers_Debug_Kill, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Holes_Of_Grave_Diggers_Debug_Kill, Condition(Trig_Holes_Of_Grave_Diggers_Debug_Kill_Conditions))
	TriggerAddAction(gg_trg_Holes_Of_Grave_Diggers_Debug_Kill, Trig_Holes_Of_Grave_Diggers_Debug_Kill_Actions)
	index = 0
	gg_trg_Holes_Of_Grave_Diggers_Cast = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Holes_Of_Grave_Diggers_Cast, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Holes_Of_Grave_Diggers_Cast, Condition(Trig_Holes_Of_Grave_Diggers_Cast_Conditions))
	TriggerAddAction(gg_trg_Holes_Of_Grave_Diggers_Cast, Trig_Holes_Of_Grave_Diggers_Cast_Actions)
	index = 0
	gg_trg_Nerub_Spider = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Nerub_Spider, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Nerub_Spider, Condition(Trig_Nerub_Spider_Conditions))
	TriggerAddAction(gg_trg_Nerub_Spider, Trig_Nerub_Spider_Actions)
	gg_trg_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger, 1., true)
	TriggerAddCondition(gg_trg_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger, Condition(Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Conditions))
	TriggerAddAction(gg_trg_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger, Trig_Use_Spiders_threads_and_Holes_of_Grave_And_Spider_Summon_and_PosionDagger_Actions)
	index = 0
	gg_trg_Damned_Ents_Reincarnation = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Damned_Ents_Reincarnation, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Damned_Ents_Reincarnation, Condition(Trig_Damned_Ents_Reincarnation_Conditions))
	TriggerAddAction(gg_trg_Damned_Ents_Reincarnation, Trig_Damned_Ents_Reincarnation_Actions)
	index = 0
	gg_trg_Rage_of_Decay = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Rage_of_Decay, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Rage_of_Decay, Condition(Trig_Rage_of_Decay_Conditions))
	TriggerAddAction(gg_trg_Rage_of_Decay, Trig_Rage_of_Decay_Actions)
	gg_trg_Use_ThrowStone_and_TurnIntoEnt = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Use_ThrowStone_and_TurnIntoEnt, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_Use_ThrowStone_and_TurnIntoEnt, Condition(Trig_Use_ThrowStone_and_TurnIntoEnt_Conditions))
	TriggerAddAction(gg_trg_Use_ThrowStone_and_TurnIntoEnt, Trig_Use_ThrowStone_and_TurnIntoEnt_Actions)
	gg_trg_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay, 1.)
	TriggerAddCondition(gg_trg_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay, Condition(Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Conditions))
	TriggerAddAction(gg_trg_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay, Trig_Use_RootSystem_and_Rejuvination_and_Powerlessness_and_RageOfDecay_Actions)
	index = 0
	gg_trg_Troll_Dead_Remove_Bugs = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Troll_Dead_Remove_Bugs, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Troll_Dead_Remove_Bugs, Condition(Trig_Troll_Dead_Remove_Bugs_Conditions))
	TriggerAddAction(gg_trg_Troll_Dead_Remove_Bugs, Trig_Troll_Dead_Remove_Bugs_Actions)
	index = 0
	gg_trg_Boss_Troll_Entangle_Throw = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Boss_Troll_Entangle_Throw, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Boss_Troll_Entangle_Throw, Condition(Trig_Boss_Troll_Entangle_Throw_Conditions))
	TriggerAddAction(gg_trg_Boss_Troll_Entangle_Throw, Trig_Boss_Troll_Entangle_Throw_Actions)
	gg_trg_Use_Berserk_and_BerserkBoss = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Use_Berserk_and_BerserkBoss, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_Use_Berserk_and_BerserkBoss, Condition(Trig_Use_Berserk_and_BerserkBoss_Conditions))
	TriggerAddAction(gg_trg_Use_Berserk_and_BerserkBoss, Trig_Use_Berserk_and_BerserkBoss_Actions)
	gg_trg_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle, 1.)
	TriggerAddCondition(gg_trg_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle, Condition(Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Conditions))
	TriggerAddAction(gg_trg_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle, Trig_Use_Heal_and_HealingWave_and_PowerOfCursed_and_Entangle_Actions)
	index = 0
	gg_trg_Aspect_of_Magic_Protection = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Aspect_of_Magic_Protection, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Aspect_of_Magic_Protection, Condition(Trig_Aspect_of_Magic_Protection_Conditions))
	TriggerAddAction(gg_trg_Aspect_of_Magic_Protection, Trig_Aspect_of_Magic_Protection_Actions)
	index = 0
	gg_trg_Remove_Effects_From_Bosses = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Remove_Effects_From_Bosses, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Remove_Effects_From_Bosses, Condition(Trig_Remove_Effects_From_Bosses_Conditions))
	TriggerAddAction(gg_trg_Remove_Effects_From_Bosses, Trig_Remove_Effects_From_Bosses_Actions)
	index = 0
	gg_trg_Metka_Dreneev = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Metka_Dreneev, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Metka_Dreneev, Condition(Trig_Metka_Dreneev_Conditions))
	TriggerAddAction(gg_trg_Metka_Dreneev, Trig_Metka_Dreneev_Actions)
	index = 0
	gg_trg_Fast_Attack = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fast_Attack, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fast_Attack, Condition(Trig_Fast_Attack_Conditions))
	TriggerAddAction(gg_trg_Fast_Attack, Trig_Fast_Attack_Actions)
	index = 0
	gg_trg_Bash_Attack = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Bash_Attack, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Bash_Attack, Condition(Trig_Bash_Attack_Conditions))
	TriggerAddAction(gg_trg_Bash_Attack, Trig_Bash_Attack_Actions)
	gg_trg_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack, 1., true)
	TriggerAddCondition(gg_trg_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack, Condition(Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Conditions))
	TriggerAddAction(gg_trg_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack, Trig_Use_Aspect_Critical_Attacl_Fst_Attack_Bash_Attack_Actions)
	index = 0
	gg_trg_Blink_Strike = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Blink_Strike, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Blink_Strike, Condition(Trig_Blink_Strike_Conditions))
	TriggerAddAction(gg_trg_Blink_Strike, Trig_Blink_Strike_Actions)
	index = 0
	gg_trg_Victim_Search = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Victim_Search, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Victim_Search, Condition(Trig_Victim_Search_Conditions))
	TriggerAddAction(gg_trg_Victim_Search, Trig_Victim_Search_Actions)
	index = 0
	gg_trg_Black_Hole = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Black_Hole, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Black_Hole, Condition(Trig_Black_Hole_Conditions))
	TriggerAddAction(gg_trg_Black_Hole, Trig_Black_Hole_Actions)
	gg_trg_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar, Condition(Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Conditions))
	TriggerAddAction(gg_trg_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar, Trig_Use_Magic_Fire_and_Dumned_Skull_and_Piercing_Strike_and_Infernal_Roar_Actions)
	gg_trg_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH, 1.)
	TriggerAddCondition(gg_trg_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH, Condition(Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Conditions))
	TriggerAddAction(gg_trg_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH, Trig_Use_Blink_Strike_and_Dumned_Skull_and_Weakness_of_Emptiness_and_Search_Victim_BH_Actions)
	index = 0
	gg_trg_Weakness = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Weakness, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Weakness, Condition(Trig_Weakness_Conditions))
	TriggerAddAction(gg_trg_Weakness, Trig_Weakness_Actions)
	index = 0
	gg_trg_Astral_Dispersal = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Astral_Dispersal, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Astral_Dispersal, Condition(Trig_Astral_Dispersal_Conditions))
	TriggerAddAction(gg_trg_Astral_Dispersal, Trig_Astral_Dispersal_Actions)
	index = 0
	gg_trg_Infernal_Ram = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Infernal_Ram, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Infernal_Ram, Condition(Trig_Infernal_Ram_Conditions))
	TriggerAddAction(gg_trg_Infernal_Ram, Trig_Infernal_Ram_Actions)
	index = 0
	gg_trg_Fiery_Blow = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fiery_Blow, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fiery_Blow, Condition(Trig_Fiery_Blow_Conditions))
	TriggerAddAction(gg_trg_Fiery_Blow, Trig_Fiery_Blow_Actions)
	index = 0
	gg_trg_Bloody_Jump = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Bloody_Jump, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Bloody_Jump, Condition(Trig_Bloody_Jump_Conditions))
	TriggerAddAction(gg_trg_Bloody_Jump, Trig_Bloody_Jump_Actions)
	index = 0
	gg_trg_Blood_Absorption = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Blood_Absorption, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Blood_Absorption, Condition(Trig_Blood_Absorption_Conditions))
	TriggerAddAction(gg_trg_Blood_Absorption, Trig_Blood_Absorption_Actions)
	gg_trg_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u, Condition(Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Conditions))
	TriggerAddAction(gg_trg_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u, Trig_Use_Weakness_and_Pain_Sphere_and_Fiery_Blow_and_Blood_Absorption_____________________u_Actions)
	gg_trg_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4 = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4, 1.)
	TriggerAddCondition(gg_trg_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4, Condition(Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Conditions))
	TriggerAddAction(gg_trg_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4, Trig_Use_Astral_Disperasal_and_Infernal_Ram_and_Bloody_Jump______________________4_Actions)
	gg_trg_Hatred_of_fire = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Hatred_of_fire, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_Hatred_of_fire, Condition(Trig_Hatred_of_fire_Conditions))
	TriggerAddAction(gg_trg_Hatred_of_fire, Trig_Hatred_of_fire_Actions)
	gg_trg_set_fire = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_set_fire, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_set_fire, Condition(firess))
	TriggerAddAction(gg_trg_set_fire, fires)
	gg_trg_set_fire_2 = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_set_fire_2, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_set_fire_2, Condition(firess2))
	TriggerAddAction(gg_trg_set_fire_2, fires2)
	gg_trg_the_creation_of_the_image = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_the_creation_of_the_image, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_the_creation_of_the_image, Condition(Trig_the_creation_of_the_image_Conditions))
	TriggerAddAction(gg_trg_the_creation_of_the_image, Trig_the_creation_of_the_image_Actions)
	gg_trg_fiery_explosions = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_fiery_explosions, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	TriggerAddCondition(gg_trg_fiery_explosions, Condition(Trig_fiery_explosions_Conditions))
	TriggerAddAction(gg_trg_fiery_explosions, Trig_fiery_explosions_Actions)
	index = 0
	gg_trg_Breathoffire = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Breathoffire, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Breathoffire, Condition(Trig_Breathoffire_Conditions))
	TriggerAddAction(gg_trg_Breathoffire, Trig_Breathoffire_Actions)
	index = 0
	gg_trg_Fire_Explosions = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fire_Explosions, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fire_Explosions, Condition(Trig_Fire_Explosions_Conditions))
	TriggerAddAction(gg_trg_Fire_Explosions, Trig_Fire_Explosions_Actions)
	index = 0
	gg_trg_BossStomp = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_BossStomp, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_BossStomp, Condition(Trig_BossStomp_Conditions))
	TriggerAddAction(gg_trg_BossStomp, Trig_BossStomp_Actions)
	index = 0
	gg_trg_Mark_of_Fire = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Mark_of_Fire, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Mark_of_Fire, Condition(Trig_Mark_of_Fire_Conditions))
	TriggerAddAction(gg_trg_Mark_of_Fire, Trig_Mark_of_Fire_Actions)
	gg_trg_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(gg_trg_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire, EVENT_PLAYER_UNIT_ATTACKED)
	TriggerAddCondition(gg_trg_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire, Condition(Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Conditions))
	TriggerAddAction(gg_trg_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire, Trig_Use_HatredofFire_and_BreathOfFire_and_SoulBurn_and_MarkofFire_Actions)
	gg_trg_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp = CreateTrigger()
	TriggerRegisterTimerEventPeriodic(gg_trg_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp, 1.)
	TriggerAddCondition(gg_trg_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp, Condition(Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Conditions))
	TriggerAddAction(gg_trg_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp, Trig_Use_SetFire_a_FireSummon_a_WallofFire_a_Image_a_FireExplosions_a_FE_a_BossStomp_Actions)
	index = 0
	gg_trg_Power_of_Skeletons = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Power_of_Skeletons, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Power_of_Skeletons, Condition(Trig_Power_of_Skeletons_Conditions))
	TriggerAddAction(gg_trg_Power_of_Skeletons, Trig_Power_of_Skeletons_Actions)
	gg_trg_Water_Elemental_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Water_Elemental_Load, Trig_Water_Elemental_Load_Actions)
	gg_trg_Init_kreeps = CreateTrigger()
	TriggerAddAction(gg_trg_Init_kreeps, Trig_Init_kreeps_Actions)
	index = 0
	gg_trg_spirits_of_water_dead = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_spirits_of_water_dead, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_spirits_of_water_dead, Condition(Trig_spirits_of_water_dead_Conditions))
	TriggerAddAction(gg_trg_spirits_of_water_dead, Trig_spirits_of_water_dead_Actions)
	index = 0
	gg_trg_Skill_Gertva = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Skill_Gertva, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Skill_Gertva, Condition(Trig_Skill_Gertva_Conditions))
	TriggerAddAction(gg_trg_Skill_Gertva, Trig_Skill_Gertva_Actions)
	index = 0
	gg_trg_Opening_Streams = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Opening_Streams, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Opening_Streams, Condition(Trig_Opening_Streams_Conditions))
	TriggerAddAction(gg_trg_Opening_Streams, Trig_Opening_Streams_Actions)
	index = 0
	gg_trg_Water_Explosion = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Water_Explosion, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Water_Explosion, Condition(Trig_water_explosion_Conditions))
	TriggerAddAction(gg_trg_Water_Explosion, Trig_water_explosion_Actions)
	index = 0
	gg_trg_Tsunami = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Tsunami, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Tsunami, Condition(Trig_Tsunami_Conditions))
	TriggerAddAction(gg_trg_Tsunami, Trig_Tsunami_Actions)
	gg_trg_Guardsman_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Guardsman_Load, Trig_Guardsman_Load_Actions)
	index = 0
	gg_trg_Protective_Stand_Switch = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Protective_Stand_Switch, Player(index), EVENT_PLAYER_UNIT_ISSUED_ORDER, nil)
		TriggerRegisterPlayerUnitEvent(gg_trg_Protective_Stand_Switch, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Protective_Stand_Switch, Condition(Trig_Protective_Stand_Switch_Conditions))
	TriggerAddAction(gg_trg_Protective_Stand_Switch, Trig_Protective_Stand_Switch_Actions)
	index = 0
	gg_trg_Learn_Fighting_Skills = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Fighting_Skills, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Fighting_Skills, Condition(Trig_Learn_Fighting_Skills_Conditions))
	TriggerAddAction(gg_trg_Learn_Fighting_Skills, Trig_Learn_Fighting_Skills_Actions)
	index = 0
	gg_trg_Ram_Board = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ram_Board, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ram_Board, Condition(Trig_Ram_Board_Conditions))
	TriggerAddAction(gg_trg_Ram_Board, Trig_Ram_Board_Actions)
	index = 0
	gg_trg_Warcry = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Warcry, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Warcry, Condition(Trig_Warcry_Conditions))
	TriggerAddAction(gg_trg_Warcry, Trig_Warcry_Actions)
	gg_trg_Drenor_Bull_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Drenor_Bull_Load, Trig_Drenor_Bull_Load_Actions)
	gg_trg_Drenor_Bull_Show_Hint = CreateTrigger()
	DisableTrigger(gg_trg_Drenor_Bull_Show_Hint)
	TriggerRegisterTimerEventPeriodic(gg_trg_Drenor_Bull_Show_Hint, 120.)
	TriggerAddAction(gg_trg_Drenor_Bull_Show_Hint, Trig_Drenor_Bull_Show_Hint_Actions)
	index = 0
	gg_trg_Drenor_Bull_Show_Rage = CreateTrigger()
	DisableTrigger(gg_trg_Drenor_Bull_Show_Rage)
	while(true) do
		TriggerRegisterPlayerChatEvent(gg_trg_Drenor_Bull_Show_Rage, Player(index), "-rage", true)
		TriggerRegisterPlayerChatEvent(gg_trg_Drenor_Bull_Show_Rage, Player(index), "-r", true)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Drenor_Bull_Show_Rage, Condition(Trig_Drenor_Bull_Show_Rage_Conditions))
	TriggerAddAction(gg_trg_Drenor_Bull_Show_Rage, Trig_Drenor_Bull_Show_Rage_Actions)
	index = 0
	gg_trg_Axe_Throw = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Axe_Throw, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Axe_Throw, Condition(Trig_Axe_Throw_Conditions))
	TriggerAddAction(gg_trg_Axe_Throw, Trig_Axe_Throw_Actions)
	index = 0
	gg_trg_Violent_Roar = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Violent_Roar, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Violent_Roar, Condition(Trig_Violent_Roar_Conditions))
	TriggerAddAction(gg_trg_Violent_Roar, Trig_Violent_Roar_Actions)
	index = 0
	gg_trg_upgrade_Berserk = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_upgrade_Berserk, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_upgrade_Berserk, Condition(Trig_upgrade_Berserk_Conditions))
	TriggerAddAction(gg_trg_upgrade_Berserk, Trig_upgrade_Berserk_Actions)
	index = 0
	gg_trg_Learn_Spell_Rage = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Spell_Rage, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Spell_Rage, Condition(Trig_Learn_Spell_Rage_Conditions))
	TriggerAddAction(gg_trg_Learn_Spell_Rage, Trig_Learn_Spell_Rage_Actions)
	index = 0
	gg_trg_GrogTarDead = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_GrogTarDead, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_GrogTarDead, Condition(Trig_GrogTarDead_Conditions))
	TriggerAddAction(gg_trg_GrogTarDead, Trig_GrogTarDead_Actions)
	index = 0
	gg_trg_attack_hero_Rage = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_attack_hero_Rage, Player(index), EVENT_PLAYER_UNIT_ATTACKED, nil)
		index = index + 1
		if (index == 16) then break end
	end
	DisableTrigger(gg_trg_attack_hero_Rage)
	TriggerAddCondition(gg_trg_attack_hero_Rage, Condition(Trig_attack_hero_Rage_Conditions))
	TriggerAddAction(gg_trg_attack_hero_Rage, Trig_attack_hero_Rage_Actions)
	index = 0
	gg_trg_kill_hero_Rage = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_kill_hero_Rage, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	DisableTrigger(gg_trg_kill_hero_Rage)
	TriggerAddCondition(gg_trg_kill_hero_Rage, Condition(Trig_kill_hero_Rage_Conditions))
	TriggerAddAction(gg_trg_kill_hero_Rage, Trig_kill_hero_Rage_Actions)
	gg_trg_Sniatie_Rage = CreateTrigger()
	TriggerRegisterTimerEvent(gg_trg_Sniatie_Rage, 3., true)
	TriggerAddAction(gg_trg_Sniatie_Rage, Trig_Sniatie_Rage_Action)
	DisableTrigger(gg_trg_Sniatie_Rage)
	gg_trg_Timer_Rage = CreateTrigger()
	TriggerRegisterTimerExpireEvent(gg_trg_Timer_Rage, udg_GrogTarRageTimer)
	TriggerAddAction(gg_trg_Timer_Rage, Trig_Timer_last_Actions)
	gg_trg_Illusionist_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Illusionist_Load, Trig_Illusionist_Load_Actions)
	index = 0
	gg_trg_Reflection = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Reflection, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Reflection, Condition(Trig_Reflection_Conditions))
	TriggerAddAction(gg_trg_Reflection, Trig_Reflection_Actions)
	index = 0
	gg_trg_Illusory_Attack = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Illusory_Attack, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Illusory_Attack, Condition(Trig_Illusory_Attack_Conditions))
	TriggerAddAction(gg_trg_Illusory_Attack, Trig_Illusory_Attack_Actions)
	index = 0
	gg_trg_Summon_Illusions_with_Reflection = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Summon_Illusions_with_Reflection, Player(index), EVENT_PLAYER_UNIT_SUMMON, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Summon_Illusions_with_Reflection, Condition(Trig_Summon_Illusions_with_Reflection_Conditions))
	TriggerAddAction(gg_trg_Summon_Illusions_with_Reflection, Trig_Summon_Illusions_with_Reflection_Actions)
	index = 0
	gg_trg_Illusions_with_Phantoms_Dead = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Illusions_with_Phantoms_Dead, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Illusions_with_Phantoms_Dead, Condition(Trig_Illusions_with_Phantoms_Dead_Conditions))
	TriggerAddAction(gg_trg_Illusions_with_Phantoms_Dead, Trig_Illusions_with_Phantoms_Dead_Actions)
	gg_trg_BladeMaster_Load = CreateTrigger()
	TriggerAddAction(gg_trg_BladeMaster_Load, Trig_BladeMaster_Load_Actions)
	index = 0
	gg_trg_Dissection = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Dissection, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Dissection, Condition(Trig_Dissection_Conditions))
	TriggerAddAction(gg_trg_Dissection, Trig_Dissection_Actions)
	index = 0
	gg_trg_Whirlwind = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Whirlwind, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Whirlwind, Condition(Trig_Whirlwind_Conditions))
	TriggerAddAction(gg_trg_Whirlwind, Trig_Whirlwind_Actions)
	index = 0
	gg_trg_Imboweling = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Imboweling, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Imboweling, Condition(Trig_Imboweling_Conditions))
	TriggerAddAction(gg_trg_Imboweling, Trig_Imboweling_Actions)
	gg_trg_Master_of_Lightnings_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Master_of_Lightnings_Load, Trig_Master_of_Lightnings_Load_Actions)
	index = 0
	gg_trg_Thundercloud = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Thundercloud, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Thundercloud, Condition(Trig_Thundercloud_Conditions))
	TriggerAddAction(gg_trg_Thundercloud, Trig_Thundercloud_Actions)
	index = 0
	gg_trg_Power_of_Lightnings = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Power_of_Lightnings, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Power_of_Lightnings, Condition(Trig_Power_of_Lightnings_Conditions))
	TriggerAddAction(gg_trg_Power_of_Lightnings, Trig_Power_of_Lightnings_Actions)
	index = 0
	gg_trg_Electric_Field = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Electric_Field, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Electric_Field, Condition(Trig_Learn_Skill_Electric_Field_Conditions))
	TriggerAddAction(gg_trg_Electric_Field, Trig_Learn_Skill_Electric_Field_Actions)
	index = 0
	gg_trg_Storm = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Storm, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Storm, Condition(Trig_Storm_Conditions))
	TriggerAddAction(gg_trg_Storm, Trig_Storm_Actions)
	gg_trg_Respawnlol = CreateTrigger()
	TriggerRegisterTimerEventSingle(gg_trg_Respawnlol, 5)
	TriggerAddAction(gg_trg_Respawnlol, Trig_Respawnlol_Actions)
	gg_trg_Ranger_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Ranger_Load, Trig_Ranger_Load_Actions)
	index = 0
	gg_trg_MultiShotSwitch = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_MultiShotSwitch, Player(index), EVENT_PLAYER_UNIT_ISSUED_ORDER, nil)
		TriggerRegisterPlayerUnitEvent(gg_trg_MultiShotSwitch, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_MultiShotSwitch, Condition(Trig_MultiShotSwitch_Conditions))
	TriggerAddAction(gg_trg_MultiShotSwitch, Trig_MultiShotSwitch_Actions)
	index = 0
	gg_trg_Learn_Release_of_Arrows = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Release_of_Arrows, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Release_of_Arrows, Condition(Trig_Learn_Release_of_Arrows_Conditions))
	TriggerAddAction(gg_trg_Learn_Release_of_Arrows, Trig_Learn_Release_of_Arrows_Actions)
	index = 0
	gg_trg_Release_of_Arrows = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Release_of_Arrows, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Release_of_Arrows, Condition(Trig_Release_of_Arrows_Conditions))
	TriggerAddAction(gg_trg_Release_of_Arrows, Trig_Release_of_Arrows_Actions)
	index = 0
	gg_trg_Dexterity_of_the_Ranger = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Dexterity_of_the_Ranger, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Dexterity_of_the_Ranger, Condition(Trig_Dexterity_of_the_Ranger_Conditions))
	TriggerAddAction(gg_trg_Dexterity_of_the_Ranger, Trig_Dexterity_of_the_Ranger_Actions)
	gg_trg_Healer_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Healer_Load, Trig_Healer_Load_Actions)
	index = 0
	gg_trg_Good_Healing = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Good_Healing, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Good_Healing, Condition(Trig_Good_Healing_Conditions))
	TriggerAddAction(gg_trg_Good_Healing, Trig_Good_Healing_Actions)
	index = 0
	gg_trg_Spiritual_Communication = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Spiritual_Communication, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Spiritual_Communication, Condition(Trig_Spiritual_Communication_Conditions))
	TriggerAddAction(gg_trg_Spiritual_Communication, Trig_Spiritual_Communication_Actions)
	index = 0
	gg_trg_Curing_Light = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Curing_Light, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Curing_Light, Condition(Trig_Curing_Light_Conditions))
	TriggerAddAction(gg_trg_Curing_Light, Trig_Curing_Light_Actions)
	index = 0
	gg_trg_Guardian_Angel = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Guardian_Angel, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Guardian_Angel, Condition(Trig_Guardian_Angel_Conditions))
	TriggerAddAction(gg_trg_Guardian_Angel, Trig_Guardian_Angel_Actions)
	gg_trg_Paladin_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Paladin_Load, Trig_Paladin_Load_Actions)
	index = 0
	gg_trg_Spiral_of_Light = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Spiral_of_Light, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Spiral_of_Light, Condition(Trig_Spiral_of_Light_Conditions))
	TriggerAddAction(gg_trg_Spiral_of_Light, Trig_Spiral_of_Light_Actions)
	index = 0
	gg_trg_Keeper_Seal = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Keeper_Seal, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Keeper_Seal, Condition(Trig_Keeper_Seal_Conditions))
	TriggerAddAction(gg_trg_Keeper_Seal, Trig_Keeper_Seal_Actions)
	index = 0
	gg_trg_Light_Hammer = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Light_Hammer, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Light_Hammer, Condition(Trig_Light_Hammer_Conditions))
	TriggerAddAction(gg_trg_Light_Hammer, Trig_Light_Hammer_Actions)
	index = 0
	gg_trg_God_Hand = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_God_Hand, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_God_Hand, Condition(Trig_God_Hand_Conditions))
	TriggerAddAction(gg_trg_God_Hand, Trig_God_Hand_Actions)
	gg_trg_Stone_Guard_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Stone_Guard_Load, Trig_Stone_Guard_Load_Actions)
	index = 0
	gg_trg_Boulder_Throw = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Boulder_Throw, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Boulder_Throw, Condition(Trig_Boulder_Throw_Conditions))
	TriggerAddAction(gg_trg_Boulder_Throw, Trig_Boulder_Throw_Actions)
	index = 0
	gg_trg_Earth_Shiver = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Earth_Shiver, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Earth_Shiver, Condition(Trig_Earth_Shiver_Conditions))
	TriggerAddAction(gg_trg_Earth_Shiver, Trig_Earth_Shiver_Actions)
	index = 0
	gg_trg_Learn_Stone_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Stone_Armor, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Stone_Armor, Condition(Trig_Learn_Stone_Armor_Conditions))
	TriggerAddAction(gg_trg_Learn_Stone_Armor, Trig_Learn_Stone_Armor_Actions)
	index = 0
	gg_trg_Rock_Strike = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Rock_Strike, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Rock_Strike, Condition(Trig_Rock_Strike_Conditions))
	TriggerAddAction(gg_trg_Rock_Strike, Trig_Rock_Strike_Actions)
	gg_trg_Archdruid_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Archdruid_Load, Trig_Archdruid_Load_Actions)
	index = 0
	gg_trg_Energy_of_Nature = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Energy_of_Nature, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Energy_of_Nature, Condition(Trig_Energy_of_Nature_Conditions))
	TriggerAddAction(gg_trg_Energy_of_Nature, Trig_Energy_of_Nature_Actions)
	index = 0
	gg_trg_Life_Chain = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Life_Chain, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Life_Chain, Condition(Trig_Life_Chain_Conditions))
	TriggerAddAction(gg_trg_Life_Chain, Trig_Life_Chain_Actions)
	index = 0
	gg_trg_Ent_Creation = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ent_Creation, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ent_Creation, Condition(Trig_Ent_Creation_Conditions))
	TriggerAddAction(gg_trg_Ent_Creation, Trig_Ent_Creation_Actions)
	index = 0
	gg_trg_Nature_Wrath = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Nature_Wrath, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Nature_Wrath, Condition(Trig_Nature_Wrath_Conditions))
	TriggerAddAction(gg_trg_Nature_Wrath, Trig_Nature_Wrath_Actions)
	index = 0
	gg_trg_Falling_Star = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Falling_Star, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Falling_Star, Condition(Trig_Falling_Star_Conditions))
	TriggerAddAction(gg_trg_Falling_Star, Trig_Falling_Star_Actions)
	index = 0
	gg_trg_Moon_Chackram = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Moon_Chackram, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Moon_Chackram, Condition(Trig_Moon_Chackram_Conditions))
	TriggerAddAction(gg_trg_Moon_Chackram, Trig_Moon_Chackram_Actions)
	index = 0
	gg_trg_Moon_Wind = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Moon_Wind, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Moon_Wind, Condition(Trig_Moon_Wind_Conditions))
	TriggerAddAction(gg_trg_Moon_Wind, Trig_Moon_Wind_Actions)
	index = 0
	gg_trg_Night_Heart = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Night_Heart, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Night_Heart, Condition(Trig_Night_Heart_Conditions))
	TriggerAddAction(gg_trg_Night_Heart, Trig_Night_Heart_Actions)
	gg_trg_MoonWarrior_Load = CreateTrigger()
	TriggerAddAction(gg_trg_MoonWarrior_Load, Trig_MoonWarrior_Load_Actions)
	index = 0
	gg_trg_Ancient_Communication = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ancient_Communication, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ancient_Communication, Condition(Trig_Ancient_Communication_Conditions))
	TriggerAddAction(gg_trg_Ancient_Communication, Trig_Ancient_Communication_Actions)
	index = 0
	gg_trg_Learn_Power_of_Ancestors = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Power_of_Ancestors, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Power_of_Ancestors, Condition(Trig_Learn_Power_of_Ancestors_Conditions))
	TriggerAddAction(gg_trg_Learn_Power_of_Ancestors, Trig_Learn_Power_of_Ancestors_Actions)
	index = 0
	gg_trg_Switch_Power_of_Ancestors = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Switch_Power_of_Ancestors, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Switch_Power_of_Ancestors, Condition(Trig_Switch_Power_of_Ancestors_Conditions))
	TriggerAddAction(gg_trg_Switch_Power_of_Ancestors, Trig_Switch_Power_of_Ancestors_Actions)
	index = 0
	gg_trg_Earth_Split = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Earth_Split, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Earth_Split, Condition(Trig_Earth_Split_Conditions))
	TriggerAddAction(gg_trg_Earth_Split, Trig_Earth_Split_Actions)
	index = 0
	gg_trg_Ancient_Help = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Ancient_Help, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Ancient_Help, Condition(Trig_Ancient_Help_Conditions))
	TriggerAddAction(gg_trg_Ancient_Help, Trig_Ancient_Help_Actions)
	gg_trg_SpiritBreaker_Load = CreateTrigger()
	TriggerAddAction(gg_trg_SpiritBreaker_Load, Trig_SpiritBreaker_Load_Actions)
	index = 0
	gg_trg_Dash = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Dash, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Dash, Condition(Trig_Dash_Conditions))
	TriggerAddAction(gg_trg_Dash, Trig_Dash_Actions)
	index = 0
	gg_trg_Dagger_Throw = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Dagger_Throw, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Dagger_Throw, Condition(Trig_Dagger_Throw_Conditions))
	TriggerAddAction(gg_trg_Dagger_Throw, Trig_Dagger_Throw_Actions)
	index = 0
	gg_trg_Kara_Justice = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Kara_Justice, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Kara_Justice, Condition(Trig_Kara_Justice_Conditions))
	TriggerAddAction(gg_trg_Kara_Justice, Trig_Kara_Justice_Actions)
	gg_trg_Warden_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Warden_Load, Trig_SpiritBreaker_Load_Actions)
	index = 0
	gg_trg_Strength_Fist = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Strength_Fist, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Strength_Fist, Condition(Trig_Strength_Fist_Conditions))
	TriggerAddAction(gg_trg_Strength_Fist, Trig_Strength_Fist_Actions)
	index = 0
	gg_trg_Fighting_Impact = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Fighting_Impact, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Fighting_Impact, Condition(Trig_Fighting_Impact_Conditions))
	TriggerAddAction(gg_trg_Fighting_Impact, Trig_Fighting_Impact_Actions)
	index = 0
	gg_trg_Learn_Marshal_Armor = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Marshal_Armor, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Marshal_Armor, Condition(Trig_Learn_Marshal_Armor_Conditions))
	TriggerAddAction(gg_trg_Learn_Marshal_Armor, Trig_Learn_Marshal_Armor_Actions)
	index = 0
	gg_trg_Illusive_Army = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Illusive_Army, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Illusive_Army, Condition(Trig_Illusive_Army_Conditions))
	TriggerAddAction(gg_trg_Illusive_Army, Trig_Illusive_Army_Actions)
	gg_trg_Marshal_Load = CreateTrigger()
	TriggerAddAction(gg_trg_Marshal_Load, Trig_Marshal_Load_Actions)
	index = 0
	gg_trg_Chain_Lightning = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Chain_Lightning, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Chain_Lightning, Condition(Trig_Chain_Lightning_Conditions))
	TriggerAddAction(gg_trg_Chain_Lightning, Trig_Chain_Lightning_Actions)
	index = 0
	gg_trg_Magic_Trap = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Magic_Trap, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Magic_Trap, Condition(Trig_Magic_Trap_Conditions))
	TriggerAddAction(gg_trg_Magic_Trap, Trig_Magic_Trap_Actions)
	index = 0
	gg_trg_Remove_Lightning_Form_Dead_Units = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Remove_Lightning_Form_Dead_Units, Player(index), EVENT_PLAYER_UNIT_DEATH, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Remove_Lightning_Form_Dead_Units, Condition(Trig_Remove_Lightning_Form_Dead_Units_Conditions))
	TriggerAddAction(gg_trg_Remove_Lightning_Form_Dead_Units, Trig_Remove_Lightning_Form_Dead_Units_Actions)
	index = 0
	gg_trg_EnergyWave = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_EnergyWave, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_EnergyWave, Condition(Trig_EnergyWave_Conditions))
	TriggerAddAction(gg_trg_EnergyWave, Trig_EnergyWave_Actions)
	index = 0
	gg_trg_Magic_Epicenter = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Magic_Epicenter, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Magic_Epicenter, Condition(Trig_Magic_Epicenter_Conditions))
	TriggerAddAction(gg_trg_Magic_Epicenter, Trig_Magic_Epicenter_Actions)
	gg_trg_Load_ArchMage = CreateTrigger()
	TriggerAddAction(gg_trg_Load_ArchMage, Trig_Load_ArchMage_Actions)
	index = 0
	gg_trg_Toxic_Field = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Toxic_Field, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Toxic_Field, Condition(Trig_Toxic_Field_Conditions))
	TriggerAddAction(gg_trg_Toxic_Field, Trig_Toxic_Field_Actions)
	index = 0
	gg_trg_Poison_Bomb = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Poison_Bomb, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Poison_Bomb, Condition(Trig_Poison_Bomb_Conditions))
	TriggerAddAction(gg_trg_Poison_Bomb, Trig_Poison_Bomb_Actions)
	index = 0
	gg_trg_Learn_Ogre_Rage = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Ogre_Rage, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Ogre_Rage, Condition(Trig_Learn_Ogre_Rage_Conditions))
	TriggerAddAction(gg_trg_Learn_Ogre_Rage, Trig_Learn_Ogre_Rage_Actions)
	index = 0
	gg_trg_Potion_of_Growth = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Potion_of_Growth, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Potion_of_Growth, Condition(Trig_Potion_of_Growth_Conditions))
	TriggerAddAction(gg_trg_Potion_of_Growth, Trig_Potion_of_Growth_Actions)
	gg_trg_Load_Alchemist = CreateTrigger()
	TriggerAddAction(gg_trg_Load_Alchemist, Trig_Load_Alchemist_Actions)
	index = 0
	gg_trg_Case_Shot = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Case_Shot, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Case_Shot, Condition(Trig_Case_Shot_Conditions))
	TriggerAddAction(gg_trg_Case_Shot, Trig_Case_Shot_Actions)
	index = 0
	gg_trg_Learn_Fire_Position = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Learn_Fire_Position, Player(index), EVENT_PLAYER_HERO_SKILL, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Learn_Fire_Position, Condition(Trig_Learn_Fire_Position_Conditions))
	TriggerAddAction(gg_trg_Learn_Fire_Position, Trig_Learn_Fire_Position_Actions)
	index = 0
	gg_trg_Dwarf_Cannon = CreateTrigger()
	while(true) do
		TriggerRegisterPlayerUnitEvent(gg_trg_Dwarf_Cannon, Player(index), EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
		index = index + 1
		if (index == 16) then break end
	end
	TriggerAddCondition(gg_trg_Dwarf_Cannon, Condition(Trig_Dwarf_Cannon_Conditions))
	TriggerAddAction(gg_trg_Dwarf_Cannon, Trig_Dwarf_Cannon_Actions)
	gg_trg_Load_Sniper = CreateTrigger()
	TriggerAddAction(gg_trg_Load_Sniper, Trig_Load_Sniper_Actions)
	ConditionalTriggerExecute(gg_trg_InitHashtable)
	ConditionalTriggerExecute(gg_trg_InitSystem)
	ConditionalTriggerExecute(gg_trg_Init_kreeps)
	ConditionalTriggerExecute(gg_trg_Drenor_Bull_Load)
end

function config()
	SetMapName("TRIGSTR_001")
	SetMapDescription("TRIGSTR_003")
	SetPlayers($A)
	SetTeams($A)
	SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
	DefineStartLocation(0, 4928., 3840.)
	DefineStartLocation(1, 4928., 3840.)
	DefineStartLocation(2, 4928., 3840.)
	DefineStartLocation(3, 4928., 3840.)
	DefineStartLocation(4, 4928., 3840.)
	DefineStartLocation(5, 4928., 3840.)
	DefineStartLocation(6, 4928., 3840.)
	DefineStartLocation(7, 4928., 3840.)
	DefineStartLocation(8, 4928., 3840.)
	DefineStartLocation(9, 4928., 3840.)
	SetPlayerStartLocation(Player(0), 0)
	ForcePlayerStartLocation(Player(0), 0)
	SetPlayerColor(Player(0), ConvertPlayerColor(0))
	SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(0), false)
	SetPlayerController(Player(0), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(1), 1)
	ForcePlayerStartLocation(Player(1), 1)
	SetPlayerColor(Player(1), ConvertPlayerColor(1))
	SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(1), false)
	SetPlayerController(Player(1), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(2), 2)
	ForcePlayerStartLocation(Player(2), 2)
	SetPlayerColor(Player(2), ConvertPlayerColor(2))
	SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(2), false)
	SetPlayerController(Player(2), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(3), 3)
	ForcePlayerStartLocation(Player(3), 3)
	SetPlayerColor(Player(3), ConvertPlayerColor(3))
	SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(3), false)
	SetPlayerController(Player(3), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(4), 4)
	ForcePlayerStartLocation(Player(4), 4)
	SetPlayerColor(Player(4), ConvertPlayerColor(4))
	SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(4), false)
	SetPlayerController(Player(4), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(5), 5)
	ForcePlayerStartLocation(Player(5), 5)
	SetPlayerColor(Player(5), ConvertPlayerColor(5))
	SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(5), false)
	SetPlayerController(Player(5), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(6), 6)
	ForcePlayerStartLocation(Player(6), 6)
	SetPlayerColor(Player(6), ConvertPlayerColor(6))
	SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(6), false)
	SetPlayerController(Player(6), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(7), 7)
	ForcePlayerStartLocation(Player(7), 7)
	SetPlayerColor(Player(7), ConvertPlayerColor(7))
	SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(7), false)
	SetPlayerController(Player(7), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player(8), 8)
	ForcePlayerStartLocation(Player(8), 8)
	SetPlayerColor(Player(8), ConvertPlayerColor(8))
	SetPlayerRacePreference(Player(8), RACE_PREF_HUMAN)
	SetPlayerRaceSelectable(Player(8), false)
	SetPlayerController(Player(8), MAP_CONTROL_USER)
	SetPlayerStartLocation(Player($B), 9)
	ForcePlayerStartLocation(Player($B), 9)
	SetPlayerColor(Player($B), ConvertPlayerColor($B))
	SetPlayerRacePreference(Player($B), RACE_PREF_UNDEAD)
	SetPlayerRaceSelectable(Player($B), false)
	SetPlayerController(Player($B), MAP_CONTROL_COMPUTER)
	InitCustomTeams()
	SetStartLocPrioCount(0, 8)
	SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 3, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 4, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(0, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(1, 8)
	SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 1, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 2, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 3, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 4, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(1, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(2, 8)
	SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 2, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 3, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 4, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(2, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(3, 8)
	SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 3, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 4, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(3, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(4, 8)
	SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 3, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 4, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(4, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(5, 8)
	SetStartLocPrio(5, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 3, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 4, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 5, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(5, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(6, 8)
	SetStartLocPrio(6, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 3, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 4, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 5, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 6, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(6, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(7, 8)
	SetStartLocPrio(7, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 3, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 4, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 5, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 6, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(7, 7, 8, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(8, 8)
	SetStartLocPrio(8, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 2, 2, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 3, 3, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 4, 4, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 5, 5, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 6, 6, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(8, 7, 7, MAP_LOC_PRIO_HIGH)
	SetStartLocPrioCount(9, 3)
	SetStartLocPrio(9, 0, 0, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(9, 1, 1, MAP_LOC_PRIO_HIGH)
	SetStartLocPrio(9, 2, 2, MAP_LOC_PRIO_HIGH)
end